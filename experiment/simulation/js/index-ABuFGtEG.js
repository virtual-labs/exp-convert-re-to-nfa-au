function h3(t, e) {
  for (var n = 0; n < e.length; n++) {
    const r = e[n];
    if (typeof r != "string" && !Array.isArray(r)) {
      for (const i in r)
        if (i !== "default" && !(i in t)) {
          const o = Object.getOwnPropertyDescriptor(r, i);
          o &&
            Object.defineProperty(
              t,
              i,
              o.get ? o : { enumerable: !0, get: () => r[i] }
            );
        }
    }
  }
  return Object.freeze(
    Object.defineProperty(t, Symbol.toStringTag, { value: "Module" })
  );
}
(function () {
  const e = document.createElement("link").relList;
  if (e && e.supports && e.supports("modulepreload")) return;
  for (const i of document.querySelectorAll('link[rel="modulepreload"]')) r(i);
  new MutationObserver((i) => {
    for (const o of i)
      if (o.type === "childList")
        for (const s of o.addedNodes)
          s.tagName === "LINK" && s.rel === "modulepreload" && r(s);
  }).observe(document, { childList: !0, subtree: !0 });
  function n(i) {
    const o = {};
    return (
      i.integrity && (o.integrity = i.integrity),
      i.referrerPolicy && (o.referrerPolicy = i.referrerPolicy),
      i.crossOrigin === "use-credentials"
        ? (o.credentials = "include")
        : i.crossOrigin === "anonymous"
        ? (o.credentials = "omit")
        : (o.credentials = "same-origin"),
      o
    );
  }
  function r(i) {
    if (i.ep) return;
    i.ep = !0;
    const o = n(i);
    fetch(i.href, o);
  }
})();
function cp(t) {
  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default")
    ? t.default
    : t;
}
var p3 = { exports: {} },
  N0 = {},
  m3 = { exports: {} },
  Gt = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var up = Symbol.for("react.element"),
  gz = Symbol.for("react.portal"),
  vz = Symbol.for("react.fragment"),
  yz = Symbol.for("react.strict_mode"),
  xz = Symbol.for("react.profiler"),
  _z = Symbol.for("react.provider"),
  Sz = Symbol.for("react.context"),
  wz = Symbol.for("react.forward_ref"),
  bz = Symbol.for("react.suspense"),
  Ez = Symbol.for("react.memo"),
  Mz = Symbol.for("react.lazy"),
  RC = Symbol.iterator;
function Cz(t) {
  return t === null || typeof t != "object"
    ? null
    : ((t = (RC && t[RC]) || t["@@iterator"]),
      typeof t == "function" ? t : null);
}
var g3 = {
    isMounted: function () {
      return !1;
    },
    enqueueForceUpdate: function () {},
    enqueueReplaceState: function () {},
    enqueueSetState: function () {},
  },
  v3 = Object.assign,
  y3 = {};
function Df(t, e, n) {
  (this.props = t),
    (this.context = e),
    (this.refs = y3),
    (this.updater = n || g3);
}
Df.prototype.isReactComponent = {};
Df.prototype.setState = function (t, e) {
  if (typeof t != "object" && typeof t != "function" && t != null)
    throw Error(
      "setState(...): takes an object of state variables to update or a function which returns an object of state variables."
    );
  this.updater.enqueueSetState(this, t, e, "setState");
};
Df.prototype.forceUpdate = function (t) {
  this.updater.enqueueForceUpdate(this, t, "forceUpdate");
};
function x3() {}
x3.prototype = Df.prototype;
function Lb(t, e, n) {
  (this.props = t),
    (this.context = e),
    (this.refs = y3),
    (this.updater = n || g3);
}
var Ib = (Lb.prototype = new x3());
Ib.constructor = Lb;
v3(Ib, Df.prototype);
Ib.isPureReactComponent = !0;
var PC = Array.isArray,
  _3 = Object.prototype.hasOwnProperty,
  Ob = { current: null },
  S3 = { key: !0, ref: !0, __self: !0, __source: !0 };
function w3(t, e, n) {
  var r,
    i = {},
    o = null,
    s = null;
  if (e != null)
    for (r in (e.ref !== void 0 && (s = e.ref),
    e.key !== void 0 && (o = "" + e.key),
    e))
      _3.call(e, r) && !S3.hasOwnProperty(r) && (i[r] = e[r]);
  var a = arguments.length - 2;
  if (a === 1) i.children = n;
  else if (1 < a) {
    for (var l = Array(a), c = 0; c < a; c++) l[c] = arguments[c + 2];
    i.children = l;
  }
  if (t && t.defaultProps)
    for (r in ((a = t.defaultProps), a)) i[r] === void 0 && (i[r] = a[r]);
  return {
    $$typeof: up,
    type: t,
    key: o,
    ref: s,
    props: i,
    _owner: Ob.current,
  };
}
function Tz(t, e) {
  return {
    $$typeof: up,
    type: t.type,
    key: e,
    ref: t.ref,
    props: t.props,
    _owner: t._owner,
  };
}
function Fb(t) {
  return typeof t == "object" && t !== null && t.$$typeof === up;
}
function Az(t) {
  var e = { "=": "=0", ":": "=2" };
  return (
    "$" +
    t.replace(/[=:]/g, function (n) {
      return e[n];
    })
  );
}
var LC = /\/+/g;
function Yx(t, e) {
  return typeof t == "object" && t !== null && t.key != null
    ? Az("" + t.key)
    : e.toString(36);
}
function uv(t, e, n, r, i) {
  var o = typeof t;
  (o === "undefined" || o === "boolean") && (t = null);
  var s = !1;
  if (t === null) s = !0;
  else
    switch (o) {
      case "string":
      case "number":
        s = !0;
        break;
      case "object":
        switch (t.$$typeof) {
          case up:
          case gz:
            s = !0;
        }
    }
  if (s)
    return (
      (s = t),
      (i = i(s)),
      (t = r === "" ? "." + Yx(s, 0) : r),
      PC(i)
        ? ((n = ""),
          t != null && (n = t.replace(LC, "$&/") + "/"),
          uv(i, e, n, "", function (c) {
            return c;
          }))
        : i != null &&
          (Fb(i) &&
            (i = Tz(
              i,
              n +
                (!i.key || (s && s.key === i.key)
                  ? ""
                  : ("" + i.key).replace(LC, "$&/") + "/") +
                t
            )),
          e.push(i)),
      1
    );
  if (((s = 0), (r = r === "" ? "." : r + ":"), PC(t)))
    for (var a = 0; a < t.length; a++) {
      o = t[a];
      var l = r + Yx(o, a);
      s += uv(o, e, n, l, i);
    }
  else if (((l = Cz(t)), typeof l == "function"))
    for (t = l.call(t), a = 0; !(o = t.next()).done; )
      (o = o.value), (l = r + Yx(o, a++)), (s += uv(o, e, n, l, i));
  else if (o === "object")
    throw (
      ((e = String(t)),
      Error(
        "Objects are not valid as a React child (found: " +
          (e === "[object Object]"
            ? "object with keys {" + Object.keys(t).join(", ") + "}"
            : e) +
          "). If you meant to render a collection of children, use an array instead."
      ))
    );
  return s;
}
function Am(t, e, n) {
  if (t == null) return t;
  var r = [],
    i = 0;
  return (
    uv(t, r, "", "", function (o) {
      return e.call(n, o, i++);
    }),
    r
  );
}
function Rz(t) {
  if (t._status === -1) {
    var e = t._result;
    (e = e()),
      e.then(
        function (n) {
          (t._status === 0 || t._status === -1) &&
            ((t._status = 1), (t._result = n));
        },
        function (n) {
          (t._status === 0 || t._status === -1) &&
            ((t._status = 2), (t._result = n));
        }
      ),
      t._status === -1 && ((t._status = 0), (t._result = e));
  }
  if (t._status === 1) return t._result.default;
  throw t._result;
}
var si = { current: null },
  fv = { transition: null },
  Pz = {
    ReactCurrentDispatcher: si,
    ReactCurrentBatchConfig: fv,
    ReactCurrentOwner: Ob,
  };
Gt.Children = {
  map: Am,
  forEach: function (t, e, n) {
    Am(
      t,
      function () {
        e.apply(this, arguments);
      },
      n
    );
  },
  count: function (t) {
    var e = 0;
    return (
      Am(t, function () {
        e++;
      }),
      e
    );
  },
  toArray: function (t) {
    return (
      Am(t, function (e) {
        return e;
      }) || []
    );
  },
  only: function (t) {
    if (!Fb(t))
      throw Error(
        "React.Children.only expected to receive a single React element child."
      );
    return t;
  },
};
Gt.Component = Df;
Gt.Fragment = vz;
Gt.Profiler = xz;
Gt.PureComponent = Lb;
Gt.StrictMode = yz;
Gt.Suspense = bz;
Gt.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Pz;
Gt.cloneElement = function (t, e, n) {
  if (t == null)
    throw Error(
      "React.cloneElement(...): The argument must be a React element, but you passed " +
        t +
        "."
    );
  var r = v3({}, t.props),
    i = t.key,
    o = t.ref,
    s = t._owner;
  if (e != null) {
    if (
      (e.ref !== void 0 && ((o = e.ref), (s = Ob.current)),
      e.key !== void 0 && (i = "" + e.key),
      t.type && t.type.defaultProps)
    )
      var a = t.type.defaultProps;
    for (l in e)
      _3.call(e, l) &&
        !S3.hasOwnProperty(l) &&
        (r[l] = e[l] === void 0 && a !== void 0 ? a[l] : e[l]);
  }
  var l = arguments.length - 2;
  if (l === 1) r.children = n;
  else if (1 < l) {
    a = Array(l);
    for (var c = 0; c < l; c++) a[c] = arguments[c + 2];
    r.children = a;
  }
  return { $$typeof: up, type: t.type, key: i, ref: o, props: r, _owner: s };
};
Gt.createContext = function (t) {
  return (
    (t = {
      $$typeof: Sz,
      _currentValue: t,
      _currentValue2: t,
      _threadCount: 0,
      Provider: null,
      Consumer: null,
      _defaultValue: null,
      _globalName: null,
    }),
    (t.Provider = { $$typeof: _z, _context: t }),
    (t.Consumer = t)
  );
};
Gt.createElement = w3;
Gt.createFactory = function (t) {
  var e = w3.bind(null, t);
  return (e.type = t), e;
};
Gt.createRef = function () {
  return { current: null };
};
Gt.forwardRef = function (t) {
  return { $$typeof: wz, render: t };
};
Gt.isValidElement = Fb;
Gt.lazy = function (t) {
  return { $$typeof: Mz, _payload: { _status: -1, _result: t }, _init: Rz };
};
Gt.memo = function (t, e) {
  return { $$typeof: Ez, type: t, compare: e === void 0 ? null : e };
};
Gt.startTransition = function (t) {
  var e = fv.transition;
  fv.transition = {};
  try {
    t();
  } finally {
    fv.transition = e;
  }
};
Gt.unstable_act = function () {
  throw Error("act(...) is not supported in production builds of React.");
};
Gt.useCallback = function (t, e) {
  return si.current.useCallback(t, e);
};
Gt.useContext = function (t) {
  return si.current.useContext(t);
};
Gt.useDebugValue = function () {};
Gt.useDeferredValue = function (t) {
  return si.current.useDeferredValue(t);
};
Gt.useEffect = function (t, e) {
  return si.current.useEffect(t, e);
};
Gt.useId = function () {
  return si.current.useId();
};
Gt.useImperativeHandle = function (t, e, n) {
  return si.current.useImperativeHandle(t, e, n);
};
Gt.useInsertionEffect = function (t, e) {
  return si.current.useInsertionEffect(t, e);
};
Gt.useLayoutEffect = function (t, e) {
  return si.current.useLayoutEffect(t, e);
};
Gt.useMemo = function (t, e) {
  return si.current.useMemo(t, e);
};
Gt.useReducer = function (t, e, n) {
  return si.current.useReducer(t, e, n);
};
Gt.useRef = function (t) {
  return si.current.useRef(t);
};
Gt.useState = function (t) {
  return si.current.useState(t);
};
Gt.useSyncExternalStore = function (t, e, n) {
  return si.current.useSyncExternalStore(t, e, n);
};
Gt.useTransition = function () {
  return si.current.useTransition();
};
Gt.version = "18.2.0";
m3.exports = Gt;
var z = m3.exports;
const at = cp(z),
  vf = h3({ __proto__: null, default: at }, [z]);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var Lz = z,
  Iz = Symbol.for("react.element"),
  Oz = Symbol.for("react.fragment"),
  Fz = Object.prototype.hasOwnProperty,
  Nz = Lz.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
  Dz = { key: !0, ref: !0, __self: !0, __source: !0 };
function b3(t, e, n) {
  var r,
    i = {},
    o = null,
    s = null;
  n !== void 0 && (o = "" + n),
    e.key !== void 0 && (o = "" + e.key),
    e.ref !== void 0 && (s = e.ref);
  for (r in e) Fz.call(e, r) && !Dz.hasOwnProperty(r) && (i[r] = e[r]);
  if (t && t.defaultProps)
    for (r in ((e = t.defaultProps), e)) i[r] === void 0 && (i[r] = e[r]);
  return {
    $$typeof: Iz,
    type: t,
    key: o,
    ref: s,
    props: i,
    _owner: Nz.current,
  };
}
N0.Fragment = Oz;
N0.jsx = b3;
N0.jsxs = b3;
p3.exports = N0;
var I = p3.exports,
  $_ = {},
  E3 = { exports: {} },
  Ji = {},
  M3 = { exports: {} },
  C3 = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ (function (t) {
  function e(N, V) {
    var G = N.length;
    N.push(V);
    e: for (; 0 < G; ) {
      var U = (G - 1) >>> 1,
        Z = N[U];
      if (0 < i(Z, V)) (N[U] = V), (N[G] = Z), (G = U);
      else break e;
    }
  }
  function n(N) {
    return N.length === 0 ? null : N[0];
  }
  function r(N) {
    if (N.length === 0) return null;
    var V = N[0],
      G = N.pop();
    if (G !== V) {
      N[0] = G;
      e: for (var U = 0, Z = N.length, Q = Z >>> 1; U < Q; ) {
        var te = 2 * (U + 1) - 1,
          re = N[te],
          le = te + 1,
          oe = N[le];
        if (0 > i(re, G))
          le < Z && 0 > i(oe, re)
            ? ((N[U] = oe), (N[le] = G), (U = le))
            : ((N[U] = re), (N[te] = G), (U = te));
        else if (le < Z && 0 > i(oe, G)) (N[U] = oe), (N[le] = G), (U = le);
        else break e;
      }
    }
    return V;
  }
  function i(N, V) {
    var G = N.sortIndex - V.sortIndex;
    return G !== 0 ? G : N.id - V.id;
  }
  if (typeof performance == "object" && typeof performance.now == "function") {
    var o = performance;
    t.unstable_now = function () {
      return o.now();
    };
  } else {
    var s = Date,
      a = s.now();
    t.unstable_now = function () {
      return s.now() - a;
    };
  }
  var l = [],
    c = [],
    u = 1,
    h = null,
    p = 3,
    m = !1,
    v = !1,
    S = !1,
    x = typeof setTimeout == "function" ? setTimeout : null,
    g = typeof clearTimeout == "function" ? clearTimeout : null,
    y = typeof setImmediate < "u" ? setImmediate : null;
  typeof navigator < "u" &&
    navigator.scheduling !== void 0 &&
    navigator.scheduling.isInputPending !== void 0 &&
    navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function _(N) {
    for (var V = n(c); V !== null; ) {
      if (V.callback === null) r(c);
      else if (V.startTime <= N)
        r(c), (V.sortIndex = V.expirationTime), e(l, V);
      else break;
      V = n(c);
    }
  }
  function b(N) {
    if (((S = !1), _(N), !v))
      if (n(l) !== null) (v = !0), j(T);
      else {
        var V = n(c);
        V !== null && Y(b, V.startTime - N);
      }
  }
  function T(N, V) {
    (v = !1), S && ((S = !1), g(L), (L = -1)), (m = !0);
    var G = p;
    try {
      for (
        _(V), h = n(l);
        h !== null && (!(h.expirationTime > V) || (N && !k()));

      ) {
        var U = h.callback;
        if (typeof U == "function") {
          (h.callback = null), (p = h.priorityLevel);
          var Z = U(h.expirationTime <= V);
          (V = t.unstable_now()),
            typeof Z == "function" ? (h.callback = Z) : h === n(l) && r(l),
            _(V);
        } else r(l);
        h = n(l);
      }
      if (h !== null) var Q = !0;
      else {
        var te = n(c);
        te !== null && Y(b, te.startTime - V), (Q = !1);
      }
      return Q;
    } finally {
      (h = null), (p = G), (m = !1);
    }
  }
  var M = !1,
    C = null,
    L = -1,
    A = 5,
    P = -1;
  function k() {
    return !(t.unstable_now() - P < A);
  }
  function B() {
    if (C !== null) {
      var N = t.unstable_now();
      P = N;
      var V = !0;
      try {
        V = C(!0, N);
      } finally {
        V ? $() : ((M = !1), (C = null));
      }
    } else M = !1;
  }
  var $;
  if (typeof y == "function")
    $ = function () {
      y(B);
    };
  else if (typeof MessageChannel < "u") {
    var D = new MessageChannel(),
      X = D.port2;
    (D.port1.onmessage = B),
      ($ = function () {
        X.postMessage(null);
      });
  } else
    $ = function () {
      x(B, 0);
    };
  function j(N) {
    (C = N), M || ((M = !0), $());
  }
  function Y(N, V) {
    L = x(function () {
      N(t.unstable_now());
    }, V);
  }
  (t.unstable_IdlePriority = 5),
    (t.unstable_ImmediatePriority = 1),
    (t.unstable_LowPriority = 4),
    (t.unstable_NormalPriority = 3),
    (t.unstable_Profiling = null),
    (t.unstable_UserBlockingPriority = 2),
    (t.unstable_cancelCallback = function (N) {
      N.callback = null;
    }),
    (t.unstable_continueExecution = function () {
      v || m || ((v = !0), j(T));
    }),
    (t.unstable_forceFrameRate = function (N) {
      0 > N || 125 < N
        ? console.error(
            "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"
          )
        : (A = 0 < N ? Math.floor(1e3 / N) : 5);
    }),
    (t.unstable_getCurrentPriorityLevel = function () {
      return p;
    }),
    (t.unstable_getFirstCallbackNode = function () {
      return n(l);
    }),
    (t.unstable_next = function (N) {
      switch (p) {
        case 1:
        case 2:
        case 3:
          var V = 3;
          break;
        default:
          V = p;
      }
      var G = p;
      p = V;
      try {
        return N();
      } finally {
        p = G;
      }
    }),
    (t.unstable_pauseExecution = function () {}),
    (t.unstable_requestPaint = function () {}),
    (t.unstable_runWithPriority = function (N, V) {
      switch (N) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          N = 3;
      }
      var G = p;
      p = N;
      try {
        return V();
      } finally {
        p = G;
      }
    }),
    (t.unstable_scheduleCallback = function (N, V, G) {
      var U = t.unstable_now();
      switch (
        (typeof G == "object" && G !== null
          ? ((G = G.delay), (G = typeof G == "number" && 0 < G ? U + G : U))
          : (G = U),
        N)
      ) {
        case 1:
          var Z = -1;
          break;
        case 2:
          Z = 250;
          break;
        case 5:
          Z = 1073741823;
          break;
        case 4:
          Z = 1e4;
          break;
        default:
          Z = 5e3;
      }
      return (
        (Z = G + Z),
        (N = {
          id: u++,
          callback: V,
          priorityLevel: N,
          startTime: G,
          expirationTime: Z,
          sortIndex: -1,
        }),
        G > U
          ? ((N.sortIndex = G),
            e(c, N),
            n(l) === null &&
              N === n(c) &&
              (S ? (g(L), (L = -1)) : (S = !0), Y(b, G - U)))
          : ((N.sortIndex = Z), e(l, N), v || m || ((v = !0), j(T))),
        N
      );
    }),
    (t.unstable_shouldYield = k),
    (t.unstable_wrapCallback = function (N) {
      var V = p;
      return function () {
        var G = p;
        p = V;
        try {
          return N.apply(this, arguments);
        } finally {
          p = G;
        }
      };
    });
})(C3);
M3.exports = C3;
var Uz = M3.exports;
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var T3 = z,
  Yi = Uz;
function Xe(t) {
  for (
    var e = "https://reactjs.org/docs/error-decoder.html?invariant=" + t, n = 1;
    n < arguments.length;
    n++
  )
    e += "&args[]=" + encodeURIComponent(arguments[n]);
  return (
    "Minified React error #" +
    t +
    "; visit " +
    e +
    " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
  );
}
var A3 = new Set(),
  mh = {};
function Nc(t, e) {
  yf(t, e), yf(t + "Capture", e);
}
function yf(t, e) {
  for (mh[t] = e, t = 0; t < e.length; t++) A3.add(e[t]);
}
var ia = !(
    typeof window > "u" ||
    typeof window.document > "u" ||
    typeof window.document.createElement > "u"
  ),
  X_ = Object.prototype.hasOwnProperty,
  zz =
    /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
  IC = {},
  OC = {};
function kz(t) {
  return X_.call(OC, t)
    ? !0
    : X_.call(IC, t)
    ? !1
    : zz.test(t)
    ? (OC[t] = !0)
    : ((IC[t] = !0), !1);
}
function Bz(t, e, n, r) {
  if (n !== null && n.type === 0) return !1;
  switch (typeof e) {
    case "function":
    case "symbol":
      return !0;
    case "boolean":
      return r
        ? !1
        : n !== null
        ? !n.acceptsBooleans
        : ((t = t.toLowerCase().slice(0, 5)), t !== "data-" && t !== "aria-");
    default:
      return !1;
  }
}
function Hz(t, e, n, r) {
  if (e === null || typeof e > "u" || Bz(t, e, n, r)) return !0;
  if (r) return !1;
  if (n !== null)
    switch (n.type) {
      case 3:
        return !e;
      case 4:
        return e === !1;
      case 5:
        return isNaN(e);
      case 6:
        return isNaN(e) || 1 > e;
    }
  return !1;
}
function ai(t, e, n, r, i, o, s) {
  (this.acceptsBooleans = e === 2 || e === 3 || e === 4),
    (this.attributeName = r),
    (this.attributeNamespace = i),
    (this.mustUseProperty = n),
    (this.propertyName = t),
    (this.type = e),
    (this.sanitizeURL = o),
    (this.removeEmptyString = s);
}
var Ar = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"
  .split(" ")
  .forEach(function (t) {
    Ar[t] = new ai(t, 0, !1, t, null, !1, !1);
  });
[
  ["acceptCharset", "accept-charset"],
  ["className", "class"],
  ["htmlFor", "for"],
  ["httpEquiv", "http-equiv"],
].forEach(function (t) {
  var e = t[0];
  Ar[e] = new ai(e, 1, !1, t[1], null, !1, !1);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function (t) {
  Ar[t] = new ai(t, 2, !1, t.toLowerCase(), null, !1, !1);
});
[
  "autoReverse",
  "externalResourcesRequired",
  "focusable",
  "preserveAlpha",
].forEach(function (t) {
  Ar[t] = new ai(t, 2, !1, t, null, !1, !1);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
  .split(" ")
  .forEach(function (t) {
    Ar[t] = new ai(t, 3, !1, t.toLowerCase(), null, !1, !1);
  });
["checked", "multiple", "muted", "selected"].forEach(function (t) {
  Ar[t] = new ai(t, 3, !0, t, null, !1, !1);
});
["capture", "download"].forEach(function (t) {
  Ar[t] = new ai(t, 4, !1, t, null, !1, !1);
});
["cols", "rows", "size", "span"].forEach(function (t) {
  Ar[t] = new ai(t, 6, !1, t, null, !1, !1);
});
["rowSpan", "start"].forEach(function (t) {
  Ar[t] = new ai(t, 5, !1, t.toLowerCase(), null, !1, !1);
});
var Nb = /[\-:]([a-z])/g;
function Db(t) {
  return t[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
  .split(" ")
  .forEach(function (t) {
    var e = t.replace(Nb, Db);
    Ar[e] = new ai(e, 1, !1, t, null, !1, !1);
  });
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type"
  .split(" ")
  .forEach(function (t) {
    var e = t.replace(Nb, Db);
    Ar[e] = new ai(e, 1, !1, t, "http://www.w3.org/1999/xlink", !1, !1);
  });
["xml:base", "xml:lang", "xml:space"].forEach(function (t) {
  var e = t.replace(Nb, Db);
  Ar[e] = new ai(e, 1, !1, t, "http://www.w3.org/XML/1998/namespace", !1, !1);
});
["tabIndex", "crossOrigin"].forEach(function (t) {
  Ar[t] = new ai(t, 1, !1, t.toLowerCase(), null, !1, !1);
});
Ar.xlinkHref = new ai(
  "xlinkHref",
  1,
  !1,
  "xlink:href",
  "http://www.w3.org/1999/xlink",
  !0,
  !1
);
["src", "href", "action", "formAction"].forEach(function (t) {
  Ar[t] = new ai(t, 1, !1, t.toLowerCase(), null, !0, !0);
});
function Ub(t, e, n, r) {
  var i = Ar.hasOwnProperty(e) ? Ar[e] : null;
  (i !== null
    ? i.type !== 0
    : r ||
      !(2 < e.length) ||
      (e[0] !== "o" && e[0] !== "O") ||
      (e[1] !== "n" && e[1] !== "N")) &&
    (Hz(e, n, i, r) && (n = null),
    r || i === null
      ? kz(e) && (n === null ? t.removeAttribute(e) : t.setAttribute(e, "" + n))
      : i.mustUseProperty
      ? (t[i.propertyName] = n === null ? (i.type === 3 ? !1 : "") : n)
      : ((e = i.attributeName),
        (r = i.attributeNamespace),
        n === null
          ? t.removeAttribute(e)
          : ((i = i.type),
            (n = i === 3 || (i === 4 && n === !0) ? "" : "" + n),
            r ? t.setAttributeNS(r, e, n) : t.setAttribute(e, n))));
}
var ha = T3.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
  Rm = Symbol.for("react.element"),
  ku = Symbol.for("react.portal"),
  Bu = Symbol.for("react.fragment"),
  zb = Symbol.for("react.strict_mode"),
  q_ = Symbol.for("react.profiler"),
  R3 = Symbol.for("react.provider"),
  P3 = Symbol.for("react.context"),
  kb = Symbol.for("react.forward_ref"),
  Y_ = Symbol.for("react.suspense"),
  K_ = Symbol.for("react.suspense_list"),
  Bb = Symbol.for("react.memo"),
  Fa = Symbol.for("react.lazy"),
  L3 = Symbol.for("react.offscreen"),
  FC = Symbol.iterator;
function vd(t) {
  return t === null || typeof t != "object"
    ? null
    : ((t = (FC && t[FC]) || t["@@iterator"]),
      typeof t == "function" ? t : null);
}
var Ln = Object.assign,
  Kx;
function Hd(t) {
  if (Kx === void 0)
    try {
      throw Error();
    } catch (n) {
      var e = n.stack.trim().match(/\n( *(at )?)/);
      Kx = (e && e[1]) || "";
    }
  return (
    `
` +
    Kx +
    t
  );
}
var Zx = !1;
function Qx(t, e) {
  if (!t || Zx) return "";
  Zx = !0;
  var n = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (e)
      if (
        ((e = function () {
          throw Error();
        }),
        Object.defineProperty(e.prototype, "props", {
          set: function () {
            throw Error();
          },
        }),
        typeof Reflect == "object" && Reflect.construct)
      ) {
        try {
          Reflect.construct(e, []);
        } catch (c) {
          var r = c;
        }
        Reflect.construct(t, [], e);
      } else {
        try {
          e.call();
        } catch (c) {
          r = c;
        }
        t.call(e.prototype);
      }
    else {
      try {
        throw Error();
      } catch (c) {
        r = c;
      }
      t();
    }
  } catch (c) {
    if (c && r && typeof c.stack == "string") {
      for (
        var i = c.stack.split(`
`),
          o = r.stack.split(`
`),
          s = i.length - 1,
          a = o.length - 1;
        1 <= s && 0 <= a && i[s] !== o[a];

      )
        a--;
      for (; 1 <= s && 0 <= a; s--, a--)
        if (i[s] !== o[a]) {
          if (s !== 1 || a !== 1)
            do
              if ((s--, a--, 0 > a || i[s] !== o[a])) {
                var l =
                  `
` + i[s].replace(" at new ", " at ");
                return (
                  t.displayName &&
                    l.includes("<anonymous>") &&
                    (l = l.replace("<anonymous>", t.displayName)),
                  l
                );
              }
            while (1 <= s && 0 <= a);
          break;
        }
    }
  } finally {
    (Zx = !1), (Error.prepareStackTrace = n);
  }
  return (t = t ? t.displayName || t.name : "") ? Hd(t) : "";
}
function Vz(t) {
  switch (t.tag) {
    case 5:
      return Hd(t.type);
    case 16:
      return Hd("Lazy");
    case 13:
      return Hd("Suspense");
    case 19:
      return Hd("SuspenseList");
    case 0:
    case 2:
    case 15:
      return (t = Qx(t.type, !1)), t;
    case 11:
      return (t = Qx(t.type.render, !1)), t;
    case 1:
      return (t = Qx(t.type, !0)), t;
    default:
      return "";
  }
}
function Z_(t) {
  if (t == null) return null;
  if (typeof t == "function") return t.displayName || t.name || null;
  if (typeof t == "string") return t;
  switch (t) {
    case Bu:
      return "Fragment";
    case ku:
      return "Portal";
    case q_:
      return "Profiler";
    case zb:
      return "StrictMode";
    case Y_:
      return "Suspense";
    case K_:
      return "SuspenseList";
  }
  if (typeof t == "object")
    switch (t.$$typeof) {
      case P3:
        return (t.displayName || "Context") + ".Consumer";
      case R3:
        return (t._context.displayName || "Context") + ".Provider";
      case kb:
        var e = t.render;
        return (
          (t = t.displayName),
          t ||
            ((t = e.displayName || e.name || ""),
            (t = t !== "" ? "ForwardRef(" + t + ")" : "ForwardRef")),
          t
        );
      case Bb:
        return (
          (e = t.displayName || null), e !== null ? e : Z_(t.type) || "Memo"
        );
      case Fa:
        (e = t._payload), (t = t._init);
        try {
          return Z_(t(e));
        } catch {}
    }
  return null;
}
function Gz(t) {
  var e = t.type;
  switch (t.tag) {
    case 24:
      return "Cache";
    case 9:
      return (e.displayName || "Context") + ".Consumer";
    case 10:
      return (e._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return (
        (t = e.render),
        (t = t.displayName || t.name || ""),
        e.displayName || (t !== "" ? "ForwardRef(" + t + ")" : "ForwardRef")
      );
    case 7:
      return "Fragment";
    case 5:
      return e;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return Z_(e);
    case 8:
      return e === zb ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 25:
      return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if (typeof e == "function") return e.displayName || e.name || null;
      if (typeof e == "string") return e;
  }
  return null;
}
function nl(t) {
  switch (typeof t) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return t;
    case "object":
      return t;
    default:
      return "";
  }
}
function I3(t) {
  var e = t.type;
  return (
    (t = t.nodeName) &&
    t.toLowerCase() === "input" &&
    (e === "checkbox" || e === "radio")
  );
}
function jz(t) {
  var e = I3(t) ? "checked" : "value",
    n = Object.getOwnPropertyDescriptor(t.constructor.prototype, e),
    r = "" + t[e];
  if (
    !t.hasOwnProperty(e) &&
    typeof n < "u" &&
    typeof n.get == "function" &&
    typeof n.set == "function"
  ) {
    var i = n.get,
      o = n.set;
    return (
      Object.defineProperty(t, e, {
        configurable: !0,
        get: function () {
          return i.call(this);
        },
        set: function (s) {
          (r = "" + s), o.call(this, s);
        },
      }),
      Object.defineProperty(t, e, { enumerable: n.enumerable }),
      {
        getValue: function () {
          return r;
        },
        setValue: function (s) {
          r = "" + s;
        },
        stopTracking: function () {
          (t._valueTracker = null), delete t[e];
        },
      }
    );
  }
}
function Pm(t) {
  t._valueTracker || (t._valueTracker = jz(t));
}
function O3(t) {
  if (!t) return !1;
  var e = t._valueTracker;
  if (!e) return !0;
  var n = e.getValue(),
    r = "";
  return (
    t && (r = I3(t) ? (t.checked ? "true" : "false") : t.value),
    (t = r),
    t !== n ? (e.setValue(t), !0) : !1
  );
}
function Bv(t) {
  if (((t = t || (typeof document < "u" ? document : void 0)), typeof t > "u"))
    return null;
  try {
    return t.activeElement || t.body;
  } catch {
    return t.body;
  }
}
function Q_(t, e) {
  var n = e.checked;
  return Ln({}, e, {
    defaultChecked: void 0,
    defaultValue: void 0,
    value: void 0,
    checked: n ?? t._wrapperState.initialChecked,
  });
}
function NC(t, e) {
  var n = e.defaultValue == null ? "" : e.defaultValue,
    r = e.checked != null ? e.checked : e.defaultChecked;
  (n = nl(e.value != null ? e.value : n)),
    (t._wrapperState = {
      initialChecked: r,
      initialValue: n,
      controlled:
        e.type === "checkbox" || e.type === "radio"
          ? e.checked != null
          : e.value != null,
    });
}
function F3(t, e) {
  (e = e.checked), e != null && Ub(t, "checked", e, !1);
}
function J_(t, e) {
  F3(t, e);
  var n = nl(e.value),
    r = e.type;
  if (n != null)
    r === "number"
      ? ((n === 0 && t.value === "") || t.value != n) && (t.value = "" + n)
      : t.value !== "" + n && (t.value = "" + n);
  else if (r === "submit" || r === "reset") {
    t.removeAttribute("value");
    return;
  }
  e.hasOwnProperty("value")
    ? eS(t, e.type, n)
    : e.hasOwnProperty("defaultValue") && eS(t, e.type, nl(e.defaultValue)),
    e.checked == null &&
      e.defaultChecked != null &&
      (t.defaultChecked = !!e.defaultChecked);
}
function DC(t, e, n) {
  if (e.hasOwnProperty("value") || e.hasOwnProperty("defaultValue")) {
    var r = e.type;
    if (
      !(
        (r !== "submit" && r !== "reset") ||
        (e.value !== void 0 && e.value !== null)
      )
    )
      return;
    (e = "" + t._wrapperState.initialValue),
      n || e === t.value || (t.value = e),
      (t.defaultValue = e);
  }
  (n = t.name),
    n !== "" && (t.name = ""),
    (t.defaultChecked = !!t._wrapperState.initialChecked),
    n !== "" && (t.name = n);
}
function eS(t, e, n) {
  (e !== "number" || Bv(t.ownerDocument) !== t) &&
    (n == null
      ? (t.defaultValue = "" + t._wrapperState.initialValue)
      : t.defaultValue !== "" + n && (t.defaultValue = "" + n));
}
var Vd = Array.isArray;
function lf(t, e, n, r) {
  if (((t = t.options), e)) {
    e = {};
    for (var i = 0; i < n.length; i++) e["$" + n[i]] = !0;
    for (n = 0; n < t.length; n++)
      (i = e.hasOwnProperty("$" + t[n].value)),
        t[n].selected !== i && (t[n].selected = i),
        i && r && (t[n].defaultSelected = !0);
  } else {
    for (n = "" + nl(n), e = null, i = 0; i < t.length; i++) {
      if (t[i].value === n) {
        (t[i].selected = !0), r && (t[i].defaultSelected = !0);
        return;
      }
      e !== null || t[i].disabled || (e = t[i]);
    }
    e !== null && (e.selected = !0);
  }
}
function tS(t, e) {
  if (e.dangerouslySetInnerHTML != null) throw Error(Xe(91));
  return Ln({}, e, {
    value: void 0,
    defaultValue: void 0,
    children: "" + t._wrapperState.initialValue,
  });
}
function UC(t, e) {
  var n = e.value;
  if (n == null) {
    if (((n = e.children), (e = e.defaultValue), n != null)) {
      if (e != null) throw Error(Xe(92));
      if (Vd(n)) {
        if (1 < n.length) throw Error(Xe(93));
        n = n[0];
      }
      e = n;
    }
    e == null && (e = ""), (n = e);
  }
  t._wrapperState = { initialValue: nl(n) };
}
function N3(t, e) {
  var n = nl(e.value),
    r = nl(e.defaultValue);
  n != null &&
    ((n = "" + n),
    n !== t.value && (t.value = n),
    e.defaultValue == null && t.defaultValue !== n && (t.defaultValue = n)),
    r != null && (t.defaultValue = "" + r);
}
function zC(t) {
  var e = t.textContent;
  e === t._wrapperState.initialValue && e !== "" && e !== null && (t.value = e);
}
function D3(t) {
  switch (t) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function nS(t, e) {
  return t == null || t === "http://www.w3.org/1999/xhtml"
    ? D3(e)
    : t === "http://www.w3.org/2000/svg" && e === "foreignObject"
    ? "http://www.w3.org/1999/xhtml"
    : t;
}
var Lm,
  U3 = (function (t) {
    return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction
      ? function (e, n, r, i) {
          MSApp.execUnsafeLocalFunction(function () {
            return t(e, n, r, i);
          });
        }
      : t;
  })(function (t, e) {
    if (t.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in t)
      t.innerHTML = e;
    else {
      for (
        Lm = Lm || document.createElement("div"),
          Lm.innerHTML = "<svg>" + e.valueOf().toString() + "</svg>",
          e = Lm.firstChild;
        t.firstChild;

      )
        t.removeChild(t.firstChild);
      for (; e.firstChild; ) t.appendChild(e.firstChild);
    }
  });
function gh(t, e) {
  if (e) {
    var n = t.firstChild;
    if (n && n === t.lastChild && n.nodeType === 3) {
      n.nodeValue = e;
      return;
    }
  }
  t.textContent = e;
}
var qd = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0,
  },
  Wz = ["Webkit", "ms", "Moz", "O"];
Object.keys(qd).forEach(function (t) {
  Wz.forEach(function (e) {
    (e = e + t.charAt(0).toUpperCase() + t.substring(1)), (qd[e] = qd[t]);
  });
});
function z3(t, e, n) {
  return e == null || typeof e == "boolean" || e === ""
    ? ""
    : n || typeof e != "number" || e === 0 || (qd.hasOwnProperty(t) && qd[t])
    ? ("" + e).trim()
    : e + "px";
}
function k3(t, e) {
  t = t.style;
  for (var n in e)
    if (e.hasOwnProperty(n)) {
      var r = n.indexOf("--") === 0,
        i = z3(n, e[n], r);
      n === "float" && (n = "cssFloat"), r ? t.setProperty(n, i) : (t[n] = i);
    }
}
var $z = Ln(
  { menuitem: !0 },
  {
    area: !0,
    base: !0,
    br: !0,
    col: !0,
    embed: !0,
    hr: !0,
    img: !0,
    input: !0,
    keygen: !0,
    link: !0,
    meta: !0,
    param: !0,
    source: !0,
    track: !0,
    wbr: !0,
  }
);
function rS(t, e) {
  if (e) {
    if ($z[t] && (e.children != null || e.dangerouslySetInnerHTML != null))
      throw Error(Xe(137, t));
    if (e.dangerouslySetInnerHTML != null) {
      if (e.children != null) throw Error(Xe(60));
      if (
        typeof e.dangerouslySetInnerHTML != "object" ||
        !("__html" in e.dangerouslySetInnerHTML)
      )
        throw Error(Xe(61));
    }
    if (e.style != null && typeof e.style != "object") throw Error(Xe(62));
  }
}
function iS(t, e) {
  if (t.indexOf("-") === -1) return typeof e.is == "string";
  switch (t) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return !1;
    default:
      return !0;
  }
}
var oS = null;
function Hb(t) {
  return (
    (t = t.target || t.srcElement || window),
    t.correspondingUseElement && (t = t.correspondingUseElement),
    t.nodeType === 3 ? t.parentNode : t
  );
}
var sS = null,
  cf = null,
  uf = null;
function kC(t) {
  if ((t = hp(t))) {
    if (typeof sS != "function") throw Error(Xe(280));
    var e = t.stateNode;
    e && ((e = B0(e)), sS(t.stateNode, t.type, e));
  }
}
function B3(t) {
  cf ? (uf ? uf.push(t) : (uf = [t])) : (cf = t);
}
function H3() {
  if (cf) {
    var t = cf,
      e = uf;
    if (((uf = cf = null), kC(t), e)) for (t = 0; t < e.length; t++) kC(e[t]);
  }
}
function V3(t, e) {
  return t(e);
}
function G3() {}
var Jx = !1;
function j3(t, e, n) {
  if (Jx) return t(e, n);
  Jx = !0;
  try {
    return V3(t, e, n);
  } finally {
    (Jx = !1), (cf !== null || uf !== null) && (G3(), H3());
  }
}
function vh(t, e) {
  var n = t.stateNode;
  if (n === null) return null;
  var r = B0(n);
  if (r === null) return null;
  n = r[e];
  e: switch (e) {
    case "onClick":
    case "onClickCapture":
    case "onDoubleClick":
    case "onDoubleClickCapture":
    case "onMouseDown":
    case "onMouseDownCapture":
    case "onMouseMove":
    case "onMouseMoveCapture":
    case "onMouseUp":
    case "onMouseUpCapture":
    case "onMouseEnter":
      (r = !r.disabled) ||
        ((t = t.type),
        (r = !(
          t === "button" ||
          t === "input" ||
          t === "select" ||
          t === "textarea"
        ))),
        (t = !r);
      break e;
    default:
      t = !1;
  }
  if (t) return null;
  if (n && typeof n != "function") throw Error(Xe(231, e, typeof n));
  return n;
}
var aS = !1;
if (ia)
  try {
    var yd = {};
    Object.defineProperty(yd, "passive", {
      get: function () {
        aS = !0;
      },
    }),
      window.addEventListener("test", yd, yd),
      window.removeEventListener("test", yd, yd);
  } catch {
    aS = !1;
  }
function Xz(t, e, n, r, i, o, s, a, l) {
  var c = Array.prototype.slice.call(arguments, 3);
  try {
    e.apply(n, c);
  } catch (u) {
    this.onError(u);
  }
}
var Yd = !1,
  Hv = null,
  Vv = !1,
  lS = null,
  qz = {
    onError: function (t) {
      (Yd = !0), (Hv = t);
    },
  };
function Yz(t, e, n, r, i, o, s, a, l) {
  (Yd = !1), (Hv = null), Xz.apply(qz, arguments);
}
function Kz(t, e, n, r, i, o, s, a, l) {
  if ((Yz.apply(this, arguments), Yd)) {
    if (Yd) {
      var c = Hv;
      (Yd = !1), (Hv = null);
    } else throw Error(Xe(198));
    Vv || ((Vv = !0), (lS = c));
  }
}
function Dc(t) {
  var e = t,
    n = t;
  if (t.alternate) for (; e.return; ) e = e.return;
  else {
    t = e;
    do (e = t), e.flags & 4098 && (n = e.return), (t = e.return);
    while (t);
  }
  return e.tag === 3 ? n : null;
}
function W3(t) {
  if (t.tag === 13) {
    var e = t.memoizedState;
    if (
      (e === null && ((t = t.alternate), t !== null && (e = t.memoizedState)),
      e !== null)
    )
      return e.dehydrated;
  }
  return null;
}
function BC(t) {
  if (Dc(t) !== t) throw Error(Xe(188));
}
function Zz(t) {
  var e = t.alternate;
  if (!e) {
    if (((e = Dc(t)), e === null)) throw Error(Xe(188));
    return e !== t ? null : t;
  }
  for (var n = t, r = e; ; ) {
    var i = n.return;
    if (i === null) break;
    var o = i.alternate;
    if (o === null) {
      if (((r = i.return), r !== null)) {
        n = r;
        continue;
      }
      break;
    }
    if (i.child === o.child) {
      for (o = i.child; o; ) {
        if (o === n) return BC(i), t;
        if (o === r) return BC(i), e;
        o = o.sibling;
      }
      throw Error(Xe(188));
    }
    if (n.return !== r.return) (n = i), (r = o);
    else {
      for (var s = !1, a = i.child; a; ) {
        if (a === n) {
          (s = !0), (n = i), (r = o);
          break;
        }
        if (a === r) {
          (s = !0), (r = i), (n = o);
          break;
        }
        a = a.sibling;
      }
      if (!s) {
        for (a = o.child; a; ) {
          if (a === n) {
            (s = !0), (n = o), (r = i);
            break;
          }
          if (a === r) {
            (s = !0), (r = o), (n = i);
            break;
          }
          a = a.sibling;
        }
        if (!s) throw Error(Xe(189));
      }
    }
    if (n.alternate !== r) throw Error(Xe(190));
  }
  if (n.tag !== 3) throw Error(Xe(188));
  return n.stateNode.current === n ? t : e;
}
function $3(t) {
  return (t = Zz(t)), t !== null ? X3(t) : null;
}
function X3(t) {
  if (t.tag === 5 || t.tag === 6) return t;
  for (t = t.child; t !== null; ) {
    var e = X3(t);
    if (e !== null) return e;
    t = t.sibling;
  }
  return null;
}
var q3 = Yi.unstable_scheduleCallback,
  HC = Yi.unstable_cancelCallback,
  Qz = Yi.unstable_shouldYield,
  Jz = Yi.unstable_requestPaint,
  $n = Yi.unstable_now,
  ek = Yi.unstable_getCurrentPriorityLevel,
  Vb = Yi.unstable_ImmediatePriority,
  Y3 = Yi.unstable_UserBlockingPriority,
  Gv = Yi.unstable_NormalPriority,
  tk = Yi.unstable_LowPriority,
  K3 = Yi.unstable_IdlePriority,
  D0 = null,
  gs = null;
function nk(t) {
  if (gs && typeof gs.onCommitFiberRoot == "function")
    try {
      gs.onCommitFiberRoot(D0, t, void 0, (t.current.flags & 128) === 128);
    } catch {}
}
var jo = Math.clz32 ? Math.clz32 : ok,
  rk = Math.log,
  ik = Math.LN2;
function ok(t) {
  return (t >>>= 0), t === 0 ? 32 : (31 - ((rk(t) / ik) | 0)) | 0;
}
var Im = 64,
  Om = 4194304;
function Gd(t) {
  switch (t & -t) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return t & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return t & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return t;
  }
}
function jv(t, e) {
  var n = t.pendingLanes;
  if (n === 0) return 0;
  var r = 0,
    i = t.suspendedLanes,
    o = t.pingedLanes,
    s = n & 268435455;
  if (s !== 0) {
    var a = s & ~i;
    a !== 0 ? (r = Gd(a)) : ((o &= s), o !== 0 && (r = Gd(o)));
  } else (s = n & ~i), s !== 0 ? (r = Gd(s)) : o !== 0 && (r = Gd(o));
  if (r === 0) return 0;
  if (
    e !== 0 &&
    e !== r &&
    !(e & i) &&
    ((i = r & -r), (o = e & -e), i >= o || (i === 16 && (o & 4194240) !== 0))
  )
    return e;
  if ((r & 4 && (r |= n & 16), (e = t.entangledLanes), e !== 0))
    for (t = t.entanglements, e &= r; 0 < e; )
      (n = 31 - jo(e)), (i = 1 << n), (r |= t[n]), (e &= ~i);
  return r;
}
function sk(t, e) {
  switch (t) {
    case 1:
    case 2:
    case 4:
      return e + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return e + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function ak(t, e) {
  for (
    var n = t.suspendedLanes,
      r = t.pingedLanes,
      i = t.expirationTimes,
      o = t.pendingLanes;
    0 < o;

  ) {
    var s = 31 - jo(o),
      a = 1 << s,
      l = i[s];
    l === -1
      ? (!(a & n) || a & r) && (i[s] = sk(a, e))
      : l <= e && (t.expiredLanes |= a),
      (o &= ~a);
  }
}
function cS(t) {
  return (
    (t = t.pendingLanes & -1073741825),
    t !== 0 ? t : t & 1073741824 ? 1073741824 : 0
  );
}
function Z3() {
  var t = Im;
  return (Im <<= 1), !(Im & 4194240) && (Im = 64), t;
}
function e1(t) {
  for (var e = [], n = 0; 31 > n; n++) e.push(t);
  return e;
}
function fp(t, e, n) {
  (t.pendingLanes |= e),
    e !== 536870912 && ((t.suspendedLanes = 0), (t.pingedLanes = 0)),
    (t = t.eventTimes),
    (e = 31 - jo(e)),
    (t[e] = n);
}
function lk(t, e) {
  var n = t.pendingLanes & ~e;
  (t.pendingLanes = e),
    (t.suspendedLanes = 0),
    (t.pingedLanes = 0),
    (t.expiredLanes &= e),
    (t.mutableReadLanes &= e),
    (t.entangledLanes &= e),
    (e = t.entanglements);
  var r = t.eventTimes;
  for (t = t.expirationTimes; 0 < n; ) {
    var i = 31 - jo(n),
      o = 1 << i;
    (e[i] = 0), (r[i] = -1), (t[i] = -1), (n &= ~o);
  }
}
function Gb(t, e) {
  var n = (t.entangledLanes |= e);
  for (t = t.entanglements; n; ) {
    var r = 31 - jo(n),
      i = 1 << r;
    (i & e) | (t[r] & e) && (t[r] |= e), (n &= ~i);
  }
}
var rn = 0;
function Q3(t) {
  return (t &= -t), 1 < t ? (4 < t ? (t & 268435455 ? 16 : 536870912) : 4) : 1;
}
var J3,
  jb,
  eL,
  tL,
  nL,
  uS = !1,
  Fm = [],
  ja = null,
  Wa = null,
  $a = null,
  yh = new Map(),
  xh = new Map(),
  Da = [],
  ck =
    "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(
      " "
    );
function VC(t, e) {
  switch (t) {
    case "focusin":
    case "focusout":
      ja = null;
      break;
    case "dragenter":
    case "dragleave":
      Wa = null;
      break;
    case "mouseover":
    case "mouseout":
      $a = null;
      break;
    case "pointerover":
    case "pointerout":
      yh.delete(e.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      xh.delete(e.pointerId);
  }
}
function xd(t, e, n, r, i, o) {
  return t === null || t.nativeEvent !== o
    ? ((t = {
        blockedOn: e,
        domEventName: n,
        eventSystemFlags: r,
        nativeEvent: o,
        targetContainers: [i],
      }),
      e !== null && ((e = hp(e)), e !== null && jb(e)),
      t)
    : ((t.eventSystemFlags |= r),
      (e = t.targetContainers),
      i !== null && e.indexOf(i) === -1 && e.push(i),
      t);
}
function uk(t, e, n, r, i) {
  switch (e) {
    case "focusin":
      return (ja = xd(ja, t, e, n, r, i)), !0;
    case "dragenter":
      return (Wa = xd(Wa, t, e, n, r, i)), !0;
    case "mouseover":
      return ($a = xd($a, t, e, n, r, i)), !0;
    case "pointerover":
      var o = i.pointerId;
      return yh.set(o, xd(yh.get(o) || null, t, e, n, r, i)), !0;
    case "gotpointercapture":
      return (
        (o = i.pointerId), xh.set(o, xd(xh.get(o) || null, t, e, n, r, i)), !0
      );
  }
  return !1;
}
function rL(t) {
  var e = tc(t.target);
  if (e !== null) {
    var n = Dc(e);
    if (n !== null) {
      if (((e = n.tag), e === 13)) {
        if (((e = W3(n)), e !== null)) {
          (t.blockedOn = e),
            nL(t.priority, function () {
              eL(n);
            });
          return;
        }
      } else if (e === 3 && n.stateNode.current.memoizedState.isDehydrated) {
        t.blockedOn = n.tag === 3 ? n.stateNode.containerInfo : null;
        return;
      }
    }
  }
  t.blockedOn = null;
}
function dv(t) {
  if (t.blockedOn !== null) return !1;
  for (var e = t.targetContainers; 0 < e.length; ) {
    var n = fS(t.domEventName, t.eventSystemFlags, e[0], t.nativeEvent);
    if (n === null) {
      n = t.nativeEvent;
      var r = new n.constructor(n.type, n);
      (oS = r), n.target.dispatchEvent(r), (oS = null);
    } else return (e = hp(n)), e !== null && jb(e), (t.blockedOn = n), !1;
    e.shift();
  }
  return !0;
}
function GC(t, e, n) {
  dv(t) && n.delete(e);
}
function fk() {
  (uS = !1),
    ja !== null && dv(ja) && (ja = null),
    Wa !== null && dv(Wa) && (Wa = null),
    $a !== null && dv($a) && ($a = null),
    yh.forEach(GC),
    xh.forEach(GC);
}
function _d(t, e) {
  t.blockedOn === e &&
    ((t.blockedOn = null),
    uS ||
      ((uS = !0),
      Yi.unstable_scheduleCallback(Yi.unstable_NormalPriority, fk)));
}
function _h(t) {
  function e(i) {
    return _d(i, t);
  }
  if (0 < Fm.length) {
    _d(Fm[0], t);
    for (var n = 1; n < Fm.length; n++) {
      var r = Fm[n];
      r.blockedOn === t && (r.blockedOn = null);
    }
  }
  for (
    ja !== null && _d(ja, t),
      Wa !== null && _d(Wa, t),
      $a !== null && _d($a, t),
      yh.forEach(e),
      xh.forEach(e),
      n = 0;
    n < Da.length;
    n++
  )
    (r = Da[n]), r.blockedOn === t && (r.blockedOn = null);
  for (; 0 < Da.length && ((n = Da[0]), n.blockedOn === null); )
    rL(n), n.blockedOn === null && Da.shift();
}
var ff = ha.ReactCurrentBatchConfig,
  Wv = !0;
function dk(t, e, n, r) {
  var i = rn,
    o = ff.transition;
  ff.transition = null;
  try {
    (rn = 1), Wb(t, e, n, r);
  } finally {
    (rn = i), (ff.transition = o);
  }
}
function hk(t, e, n, r) {
  var i = rn,
    o = ff.transition;
  ff.transition = null;
  try {
    (rn = 4), Wb(t, e, n, r);
  } finally {
    (rn = i), (ff.transition = o);
  }
}
function Wb(t, e, n, r) {
  if (Wv) {
    var i = fS(t, e, n, r);
    if (i === null) u1(t, e, r, $v, n), VC(t, r);
    else if (uk(i, t, e, n, r)) r.stopPropagation();
    else if ((VC(t, r), e & 4 && -1 < ck.indexOf(t))) {
      for (; i !== null; ) {
        var o = hp(i);
        if (
          (o !== null && J3(o),
          (o = fS(t, e, n, r)),
          o === null && u1(t, e, r, $v, n),
          o === i)
        )
          break;
        i = o;
      }
      i !== null && r.stopPropagation();
    } else u1(t, e, r, null, n);
  }
}
var $v = null;
function fS(t, e, n, r) {
  if ((($v = null), (t = Hb(r)), (t = tc(t)), t !== null))
    if (((e = Dc(t)), e === null)) t = null;
    else if (((n = e.tag), n === 13)) {
      if (((t = W3(e)), t !== null)) return t;
      t = null;
    } else if (n === 3) {
      if (e.stateNode.current.memoizedState.isDehydrated)
        return e.tag === 3 ? e.stateNode.containerInfo : null;
      t = null;
    } else e !== t && (t = null);
  return ($v = t), null;
}
function iL(t) {
  switch (t) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (ek()) {
        case Vb:
          return 1;
        case Y3:
          return 4;
        case Gv:
        case tk:
          return 16;
        case K3:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var ka = null,
  $b = null,
  hv = null;
function oL() {
  if (hv) return hv;
  var t,
    e = $b,
    n = e.length,
    r,
    i = "value" in ka ? ka.value : ka.textContent,
    o = i.length;
  for (t = 0; t < n && e[t] === i[t]; t++);
  var s = n - t;
  for (r = 1; r <= s && e[n - r] === i[o - r]; r++);
  return (hv = i.slice(t, 1 < r ? 1 - r : void 0));
}
function pv(t) {
  var e = t.keyCode;
  return (
    "charCode" in t
      ? ((t = t.charCode), t === 0 && e === 13 && (t = 13))
      : (t = e),
    t === 10 && (t = 13),
    32 <= t || t === 13 ? t : 0
  );
}
function Nm() {
  return !0;
}
function jC() {
  return !1;
}
function eo(t) {
  function e(n, r, i, o, s) {
    (this._reactName = n),
      (this._targetInst = i),
      (this.type = r),
      (this.nativeEvent = o),
      (this.target = s),
      (this.currentTarget = null);
    for (var a in t)
      t.hasOwnProperty(a) && ((n = t[a]), (this[a] = n ? n(o) : o[a]));
    return (
      (this.isDefaultPrevented = (
        o.defaultPrevented != null ? o.defaultPrevented : o.returnValue === !1
      )
        ? Nm
        : jC),
      (this.isPropagationStopped = jC),
      this
    );
  }
  return (
    Ln(e.prototype, {
      preventDefault: function () {
        this.defaultPrevented = !0;
        var n = this.nativeEvent;
        n &&
          (n.preventDefault
            ? n.preventDefault()
            : typeof n.returnValue != "unknown" && (n.returnValue = !1),
          (this.isDefaultPrevented = Nm));
      },
      stopPropagation: function () {
        var n = this.nativeEvent;
        n &&
          (n.stopPropagation
            ? n.stopPropagation()
            : typeof n.cancelBubble != "unknown" && (n.cancelBubble = !0),
          (this.isPropagationStopped = Nm));
      },
      persist: function () {},
      isPersistent: Nm,
    }),
    e
  );
}
var Uf = {
    eventPhase: 0,
    bubbles: 0,
    cancelable: 0,
    timeStamp: function (t) {
      return t.timeStamp || Date.now();
    },
    defaultPrevented: 0,
    isTrusted: 0,
  },
  Xb = eo(Uf),
  dp = Ln({}, Uf, { view: 0, detail: 0 }),
  pk = eo(dp),
  t1,
  n1,
  Sd,
  U0 = Ln({}, dp, {
    screenX: 0,
    screenY: 0,
    clientX: 0,
    clientY: 0,
    pageX: 0,
    pageY: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    getModifierState: qb,
    button: 0,
    buttons: 0,
    relatedTarget: function (t) {
      return t.relatedTarget === void 0
        ? t.fromElement === t.srcElement
          ? t.toElement
          : t.fromElement
        : t.relatedTarget;
    },
    movementX: function (t) {
      return "movementX" in t
        ? t.movementX
        : (t !== Sd &&
            (Sd && t.type === "mousemove"
              ? ((t1 = t.screenX - Sd.screenX), (n1 = t.screenY - Sd.screenY))
              : (n1 = t1 = 0),
            (Sd = t)),
          t1);
    },
    movementY: function (t) {
      return "movementY" in t ? t.movementY : n1;
    },
  }),
  WC = eo(U0),
  mk = Ln({}, U0, { dataTransfer: 0 }),
  gk = eo(mk),
  vk = Ln({}, dp, { relatedTarget: 0 }),
  r1 = eo(vk),
  yk = Ln({}, Uf, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }),
  xk = eo(yk),
  _k = Ln({}, Uf, {
    clipboardData: function (t) {
      return "clipboardData" in t ? t.clipboardData : window.clipboardData;
    },
  }),
  Sk = eo(_k),
  wk = Ln({}, Uf, { data: 0 }),
  $C = eo(wk),
  bk = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified",
  },
  Ek = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta",
  },
  Mk = {
    Alt: "altKey",
    Control: "ctrlKey",
    Meta: "metaKey",
    Shift: "shiftKey",
  };
function Ck(t) {
  var e = this.nativeEvent;
  return e.getModifierState ? e.getModifierState(t) : (t = Mk[t]) ? !!e[t] : !1;
}
function qb() {
  return Ck;
}
var Tk = Ln({}, dp, {
    key: function (t) {
      if (t.key) {
        var e = bk[t.key] || t.key;
        if (e !== "Unidentified") return e;
      }
      return t.type === "keypress"
        ? ((t = pv(t)), t === 13 ? "Enter" : String.fromCharCode(t))
        : t.type === "keydown" || t.type === "keyup"
        ? Ek[t.keyCode] || "Unidentified"
        : "";
    },
    code: 0,
    location: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    repeat: 0,
    locale: 0,
    getModifierState: qb,
    charCode: function (t) {
      return t.type === "keypress" ? pv(t) : 0;
    },
    keyCode: function (t) {
      return t.type === "keydown" || t.type === "keyup" ? t.keyCode : 0;
    },
    which: function (t) {
      return t.type === "keypress"
        ? pv(t)
        : t.type === "keydown" || t.type === "keyup"
        ? t.keyCode
        : 0;
    },
  }),
  Ak = eo(Tk),
  Rk = Ln({}, U0, {
    pointerId: 0,
    width: 0,
    height: 0,
    pressure: 0,
    tangentialPressure: 0,
    tiltX: 0,
    tiltY: 0,
    twist: 0,
    pointerType: 0,
    isPrimary: 0,
  }),
  XC = eo(Rk),
  Pk = Ln({}, dp, {
    touches: 0,
    targetTouches: 0,
    changedTouches: 0,
    altKey: 0,
    metaKey: 0,
    ctrlKey: 0,
    shiftKey: 0,
    getModifierState: qb,
  }),
  Lk = eo(Pk),
  Ik = Ln({}, Uf, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }),
  Ok = eo(Ik),
  Fk = Ln({}, U0, {
    deltaX: function (t) {
      return "deltaX" in t ? t.deltaX : "wheelDeltaX" in t ? -t.wheelDeltaX : 0;
    },
    deltaY: function (t) {
      return "deltaY" in t
        ? t.deltaY
        : "wheelDeltaY" in t
        ? -t.wheelDeltaY
        : "wheelDelta" in t
        ? -t.wheelDelta
        : 0;
    },
    deltaZ: 0,
    deltaMode: 0,
  }),
  Nk = eo(Fk),
  Dk = [9, 13, 27, 32],
  Yb = ia && "CompositionEvent" in window,
  Kd = null;
ia && "documentMode" in document && (Kd = document.documentMode);
var Uk = ia && "TextEvent" in window && !Kd,
  sL = ia && (!Yb || (Kd && 8 < Kd && 11 >= Kd)),
  qC = " ",
  YC = !1;
function aL(t, e) {
  switch (t) {
    case "keyup":
      return Dk.indexOf(e.keyCode) !== -1;
    case "keydown":
      return e.keyCode !== 229;
    case "keypress":
    case "mousedown":
    case "focusout":
      return !0;
    default:
      return !1;
  }
}
function lL(t) {
  return (t = t.detail), typeof t == "object" && "data" in t ? t.data : null;
}
var Hu = !1;
function zk(t, e) {
  switch (t) {
    case "compositionend":
      return lL(e);
    case "keypress":
      return e.which !== 32 ? null : ((YC = !0), qC);
    case "textInput":
      return (t = e.data), t === qC && YC ? null : t;
    default:
      return null;
  }
}
function kk(t, e) {
  if (Hu)
    return t === "compositionend" || (!Yb && aL(t, e))
      ? ((t = oL()), (hv = $b = ka = null), (Hu = !1), t)
      : null;
  switch (t) {
    case "paste":
      return null;
    case "keypress":
      if (!(e.ctrlKey || e.altKey || e.metaKey) || (e.ctrlKey && e.altKey)) {
        if (e.char && 1 < e.char.length) return e.char;
        if (e.which) return String.fromCharCode(e.which);
      }
      return null;
    case "compositionend":
      return sL && e.locale !== "ko" ? null : e.data;
    default:
      return null;
  }
}
var Bk = {
  color: !0,
  date: !0,
  datetime: !0,
  "datetime-local": !0,
  email: !0,
  month: !0,
  number: !0,
  password: !0,
  range: !0,
  search: !0,
  tel: !0,
  text: !0,
  time: !0,
  url: !0,
  week: !0,
};
function KC(t) {
  var e = t && t.nodeName && t.nodeName.toLowerCase();
  return e === "input" ? !!Bk[t.type] : e === "textarea";
}
function cL(t, e, n, r) {
  B3(r),
    (e = Xv(e, "onChange")),
    0 < e.length &&
      ((n = new Xb("onChange", "change", null, n, r)),
      t.push({ event: n, listeners: e }));
}
var Zd = null,
  Sh = null;
function Hk(t) {
  _L(t, 0);
}
function z0(t) {
  var e = ju(t);
  if (O3(e)) return t;
}
function Vk(t, e) {
  if (t === "change") return e;
}
var uL = !1;
if (ia) {
  var i1;
  if (ia) {
    var o1 = "oninput" in document;
    if (!o1) {
      var ZC = document.createElement("div");
      ZC.setAttribute("oninput", "return;"),
        (o1 = typeof ZC.oninput == "function");
    }
    i1 = o1;
  } else i1 = !1;
  uL = i1 && (!document.documentMode || 9 < document.documentMode);
}
function QC() {
  Zd && (Zd.detachEvent("onpropertychange", fL), (Sh = Zd = null));
}
function fL(t) {
  if (t.propertyName === "value" && z0(Sh)) {
    var e = [];
    cL(e, Sh, t, Hb(t)), j3(Hk, e);
  }
}
function Gk(t, e, n) {
  t === "focusin"
    ? (QC(), (Zd = e), (Sh = n), Zd.attachEvent("onpropertychange", fL))
    : t === "focusout" && QC();
}
function jk(t) {
  if (t === "selectionchange" || t === "keyup" || t === "keydown")
    return z0(Sh);
}
function Wk(t, e) {
  if (t === "click") return z0(e);
}
function $k(t, e) {
  if (t === "input" || t === "change") return z0(e);
}
function Xk(t, e) {
  return (t === e && (t !== 0 || 1 / t === 1 / e)) || (t !== t && e !== e);
}
var qo = typeof Object.is == "function" ? Object.is : Xk;
function wh(t, e) {
  if (qo(t, e)) return !0;
  if (typeof t != "object" || t === null || typeof e != "object" || e === null)
    return !1;
  var n = Object.keys(t),
    r = Object.keys(e);
  if (n.length !== r.length) return !1;
  for (r = 0; r < n.length; r++) {
    var i = n[r];
    if (!X_.call(e, i) || !qo(t[i], e[i])) return !1;
  }
  return !0;
}
function JC(t) {
  for (; t && t.firstChild; ) t = t.firstChild;
  return t;
}
function eT(t, e) {
  var n = JC(t);
  t = 0;
  for (var r; n; ) {
    if (n.nodeType === 3) {
      if (((r = t + n.textContent.length), t <= e && r >= e))
        return { node: n, offset: e - t };
      t = r;
    }
    e: {
      for (; n; ) {
        if (n.nextSibling) {
          n = n.nextSibling;
          break e;
        }
        n = n.parentNode;
      }
      n = void 0;
    }
    n = JC(n);
  }
}
function dL(t, e) {
  return t && e
    ? t === e
      ? !0
      : t && t.nodeType === 3
      ? !1
      : e && e.nodeType === 3
      ? dL(t, e.parentNode)
      : "contains" in t
      ? t.contains(e)
      : t.compareDocumentPosition
      ? !!(t.compareDocumentPosition(e) & 16)
      : !1
    : !1;
}
function hL() {
  for (var t = window, e = Bv(); e instanceof t.HTMLIFrameElement; ) {
    try {
      var n = typeof e.contentWindow.location.href == "string";
    } catch {
      n = !1;
    }
    if (n) t = e.contentWindow;
    else break;
    e = Bv(t.document);
  }
  return e;
}
function Kb(t) {
  var e = t && t.nodeName && t.nodeName.toLowerCase();
  return (
    e &&
    ((e === "input" &&
      (t.type === "text" ||
        t.type === "search" ||
        t.type === "tel" ||
        t.type === "url" ||
        t.type === "password")) ||
      e === "textarea" ||
      t.contentEditable === "true")
  );
}
function qk(t) {
  var e = hL(),
    n = t.focusedElem,
    r = t.selectionRange;
  if (
    e !== n &&
    n &&
    n.ownerDocument &&
    dL(n.ownerDocument.documentElement, n)
  ) {
    if (r !== null && Kb(n)) {
      if (
        ((e = r.start),
        (t = r.end),
        t === void 0 && (t = e),
        "selectionStart" in n)
      )
        (n.selectionStart = e), (n.selectionEnd = Math.min(t, n.value.length));
      else if (
        ((t = ((e = n.ownerDocument || document) && e.defaultView) || window),
        t.getSelection)
      ) {
        t = t.getSelection();
        var i = n.textContent.length,
          o = Math.min(r.start, i);
        (r = r.end === void 0 ? o : Math.min(r.end, i)),
          !t.extend && o > r && ((i = r), (r = o), (o = i)),
          (i = eT(n, o));
        var s = eT(n, r);
        i &&
          s &&
          (t.rangeCount !== 1 ||
            t.anchorNode !== i.node ||
            t.anchorOffset !== i.offset ||
            t.focusNode !== s.node ||
            t.focusOffset !== s.offset) &&
          ((e = e.createRange()),
          e.setStart(i.node, i.offset),
          t.removeAllRanges(),
          o > r
            ? (t.addRange(e), t.extend(s.node, s.offset))
            : (e.setEnd(s.node, s.offset), t.addRange(e)));
      }
    }
    for (e = [], t = n; (t = t.parentNode); )
      t.nodeType === 1 &&
        e.push({ element: t, left: t.scrollLeft, top: t.scrollTop });
    for (typeof n.focus == "function" && n.focus(), n = 0; n < e.length; n++)
      (t = e[n]),
        (t.element.scrollLeft = t.left),
        (t.element.scrollTop = t.top);
  }
}
var Yk = ia && "documentMode" in document && 11 >= document.documentMode,
  Vu = null,
  dS = null,
  Qd = null,
  hS = !1;
function tT(t, e, n) {
  var r = n.window === n ? n.document : n.nodeType === 9 ? n : n.ownerDocument;
  hS ||
    Vu == null ||
    Vu !== Bv(r) ||
    ((r = Vu),
    "selectionStart" in r && Kb(r)
      ? (r = { start: r.selectionStart, end: r.selectionEnd })
      : ((r = (
          (r.ownerDocument && r.ownerDocument.defaultView) ||
          window
        ).getSelection()),
        (r = {
          anchorNode: r.anchorNode,
          anchorOffset: r.anchorOffset,
          focusNode: r.focusNode,
          focusOffset: r.focusOffset,
        })),
    (Qd && wh(Qd, r)) ||
      ((Qd = r),
      (r = Xv(dS, "onSelect")),
      0 < r.length &&
        ((e = new Xb("onSelect", "select", null, e, n)),
        t.push({ event: e, listeners: r }),
        (e.target = Vu))));
}
function Dm(t, e) {
  var n = {};
  return (
    (n[t.toLowerCase()] = e.toLowerCase()),
    (n["Webkit" + t] = "webkit" + e),
    (n["Moz" + t] = "moz" + e),
    n
  );
}
var Gu = {
    animationend: Dm("Animation", "AnimationEnd"),
    animationiteration: Dm("Animation", "AnimationIteration"),
    animationstart: Dm("Animation", "AnimationStart"),
    transitionend: Dm("Transition", "TransitionEnd"),
  },
  s1 = {},
  pL = {};
ia &&
  ((pL = document.createElement("div").style),
  "AnimationEvent" in window ||
    (delete Gu.animationend.animation,
    delete Gu.animationiteration.animation,
    delete Gu.animationstart.animation),
  "TransitionEvent" in window || delete Gu.transitionend.transition);
function k0(t) {
  if (s1[t]) return s1[t];
  if (!Gu[t]) return t;
  var e = Gu[t],
    n;
  for (n in e) if (e.hasOwnProperty(n) && n in pL) return (s1[t] = e[n]);
  return t;
}
var mL = k0("animationend"),
  gL = k0("animationiteration"),
  vL = k0("animationstart"),
  yL = k0("transitionend"),
  xL = new Map(),
  nT =
    "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
      " "
    );
function fl(t, e) {
  xL.set(t, e), Nc(e, [t]);
}
for (var a1 = 0; a1 < nT.length; a1++) {
  var l1 = nT[a1],
    Kk = l1.toLowerCase(),
    Zk = l1[0].toUpperCase() + l1.slice(1);
  fl(Kk, "on" + Zk);
}
fl(mL, "onAnimationEnd");
fl(gL, "onAnimationIteration");
fl(vL, "onAnimationStart");
fl("dblclick", "onDoubleClick");
fl("focusin", "onFocus");
fl("focusout", "onBlur");
fl(yL, "onTransitionEnd");
yf("onMouseEnter", ["mouseout", "mouseover"]);
yf("onMouseLeave", ["mouseout", "mouseover"]);
yf("onPointerEnter", ["pointerout", "pointerover"]);
yf("onPointerLeave", ["pointerout", "pointerover"]);
Nc(
  "onChange",
  "change click focusin focusout input keydown keyup selectionchange".split(" ")
);
Nc(
  "onSelect",
  "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(
    " "
  )
);
Nc("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
Nc(
  "onCompositionEnd",
  "compositionend focusout keydown keypress keyup mousedown".split(" ")
);
Nc(
  "onCompositionStart",
  "compositionstart focusout keydown keypress keyup mousedown".split(" ")
);
Nc(
  "onCompositionUpdate",
  "compositionupdate focusout keydown keypress keyup mousedown".split(" ")
);
var jd =
    "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
      " "
    ),
  Qk = new Set("cancel close invalid load scroll toggle".split(" ").concat(jd));
function rT(t, e, n) {
  var r = t.type || "unknown-event";
  (t.currentTarget = n), Kz(r, e, void 0, t), (t.currentTarget = null);
}
function _L(t, e) {
  e = (e & 4) !== 0;
  for (var n = 0; n < t.length; n++) {
    var r = t[n],
      i = r.event;
    r = r.listeners;
    e: {
      var o = void 0;
      if (e)
        for (var s = r.length - 1; 0 <= s; s--) {
          var a = r[s],
            l = a.instance,
            c = a.currentTarget;
          if (((a = a.listener), l !== o && i.isPropagationStopped())) break e;
          rT(i, a, c), (o = l);
        }
      else
        for (s = 0; s < r.length; s++) {
          if (
            ((a = r[s]),
            (l = a.instance),
            (c = a.currentTarget),
            (a = a.listener),
            l !== o && i.isPropagationStopped())
          )
            break e;
          rT(i, a, c), (o = l);
        }
    }
  }
  if (Vv) throw ((t = lS), (Vv = !1), (lS = null), t);
}
function vn(t, e) {
  var n = e[yS];
  n === void 0 && (n = e[yS] = new Set());
  var r = t + "__bubble";
  n.has(r) || (SL(e, t, 2, !1), n.add(r));
}
function c1(t, e, n) {
  var r = 0;
  e && (r |= 4), SL(n, t, r, e);
}
var Um = "_reactListening" + Math.random().toString(36).slice(2);
function bh(t) {
  if (!t[Um]) {
    (t[Um] = !0),
      A3.forEach(function (n) {
        n !== "selectionchange" && (Qk.has(n) || c1(n, !1, t), c1(n, !0, t));
      });
    var e = t.nodeType === 9 ? t : t.ownerDocument;
    e === null || e[Um] || ((e[Um] = !0), c1("selectionchange", !1, e));
  }
}
function SL(t, e, n, r) {
  switch (iL(e)) {
    case 1:
      var i = dk;
      break;
    case 4:
      i = hk;
      break;
    default:
      i = Wb;
  }
  (n = i.bind(null, e, n, t)),
    (i = void 0),
    !aS ||
      (e !== "touchstart" && e !== "touchmove" && e !== "wheel") ||
      (i = !0),
    r
      ? i !== void 0
        ? t.addEventListener(e, n, { capture: !0, passive: i })
        : t.addEventListener(e, n, !0)
      : i !== void 0
      ? t.addEventListener(e, n, { passive: i })
      : t.addEventListener(e, n, !1);
}
function u1(t, e, n, r, i) {
  var o = r;
  if (!(e & 1) && !(e & 2) && r !== null)
    e: for (;;) {
      if (r === null) return;
      var s = r.tag;
      if (s === 3 || s === 4) {
        var a = r.stateNode.containerInfo;
        if (a === i || (a.nodeType === 8 && a.parentNode === i)) break;
        if (s === 4)
          for (s = r.return; s !== null; ) {
            var l = s.tag;
            if (
              (l === 3 || l === 4) &&
              ((l = s.stateNode.containerInfo),
              l === i || (l.nodeType === 8 && l.parentNode === i))
            )
              return;
            s = s.return;
          }
        for (; a !== null; ) {
          if (((s = tc(a)), s === null)) return;
          if (((l = s.tag), l === 5 || l === 6)) {
            r = o = s;
            continue e;
          }
          a = a.parentNode;
        }
      }
      r = r.return;
    }
  j3(function () {
    var c = o,
      u = Hb(n),
      h = [];
    e: {
      var p = xL.get(t);
      if (p !== void 0) {
        var m = Xb,
          v = t;
        switch (t) {
          case "keypress":
            if (pv(n) === 0) break e;
          case "keydown":
          case "keyup":
            m = Ak;
            break;
          case "focusin":
            (v = "focus"), (m = r1);
            break;
          case "focusout":
            (v = "blur"), (m = r1);
            break;
          case "beforeblur":
          case "afterblur":
            m = r1;
            break;
          case "click":
            if (n.button === 2) break e;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            m = WC;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            m = gk;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            m = Lk;
            break;
          case mL:
          case gL:
          case vL:
            m = xk;
            break;
          case yL:
            m = Ok;
            break;
          case "scroll":
            m = pk;
            break;
          case "wheel":
            m = Nk;
            break;
          case "copy":
          case "cut":
          case "paste":
            m = Sk;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            m = XC;
        }
        var S = (e & 4) !== 0,
          x = !S && t === "scroll",
          g = S ? (p !== null ? p + "Capture" : null) : p;
        S = [];
        for (var y = c, _; y !== null; ) {
          _ = y;
          var b = _.stateNode;
          if (
            (_.tag === 5 &&
              b !== null &&
              ((_ = b),
              g !== null && ((b = vh(y, g)), b != null && S.push(Eh(y, b, _)))),
            x)
          )
            break;
          y = y.return;
        }
        0 < S.length &&
          ((p = new m(p, v, null, n, u)), h.push({ event: p, listeners: S }));
      }
    }
    if (!(e & 7)) {
      e: {
        if (
          ((p = t === "mouseover" || t === "pointerover"),
          (m = t === "mouseout" || t === "pointerout"),
          p &&
            n !== oS &&
            (v = n.relatedTarget || n.fromElement) &&
            (tc(v) || v[oa]))
        )
          break e;
        if (
          (m || p) &&
          ((p =
            u.window === u
              ? u
              : (p = u.ownerDocument)
              ? p.defaultView || p.parentWindow
              : window),
          m
            ? ((v = n.relatedTarget || n.toElement),
              (m = c),
              (v = v ? tc(v) : null),
              v !== null &&
                ((x = Dc(v)), v !== x || (v.tag !== 5 && v.tag !== 6)) &&
                (v = null))
            : ((m = null), (v = c)),
          m !== v)
        ) {
          if (
            ((S = WC),
            (b = "onMouseLeave"),
            (g = "onMouseEnter"),
            (y = "mouse"),
            (t === "pointerout" || t === "pointerover") &&
              ((S = XC),
              (b = "onPointerLeave"),
              (g = "onPointerEnter"),
              (y = "pointer")),
            (x = m == null ? p : ju(m)),
            (_ = v == null ? p : ju(v)),
            (p = new S(b, y + "leave", m, n, u)),
            (p.target = x),
            (p.relatedTarget = _),
            (b = null),
            tc(u) === c &&
              ((S = new S(g, y + "enter", v, n, u)),
              (S.target = _),
              (S.relatedTarget = x),
              (b = S)),
            (x = b),
            m && v)
          )
            t: {
              for (S = m, g = v, y = 0, _ = S; _; _ = su(_)) y++;
              for (_ = 0, b = g; b; b = su(b)) _++;
              for (; 0 < y - _; ) (S = su(S)), y--;
              for (; 0 < _ - y; ) (g = su(g)), _--;
              for (; y--; ) {
                if (S === g || (g !== null && S === g.alternate)) break t;
                (S = su(S)), (g = su(g));
              }
              S = null;
            }
          else S = null;
          m !== null && iT(h, p, m, S, !1),
            v !== null && x !== null && iT(h, x, v, S, !0);
        }
      }
      e: {
        if (
          ((p = c ? ju(c) : window),
          (m = p.nodeName && p.nodeName.toLowerCase()),
          m === "select" || (m === "input" && p.type === "file"))
        )
          var T = Vk;
        else if (KC(p))
          if (uL) T = $k;
          else {
            T = jk;
            var M = Gk;
          }
        else
          (m = p.nodeName) &&
            m.toLowerCase() === "input" &&
            (p.type === "checkbox" || p.type === "radio") &&
            (T = Wk);
        if (T && (T = T(t, c))) {
          cL(h, T, n, u);
          break e;
        }
        M && M(t, p, c),
          t === "focusout" &&
            (M = p._wrapperState) &&
            M.controlled &&
            p.type === "number" &&
            eS(p, "number", p.value);
      }
      switch (((M = c ? ju(c) : window), t)) {
        case "focusin":
          (KC(M) || M.contentEditable === "true") &&
            ((Vu = M), (dS = c), (Qd = null));
          break;
        case "focusout":
          Qd = dS = Vu = null;
          break;
        case "mousedown":
          hS = !0;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          (hS = !1), tT(h, n, u);
          break;
        case "selectionchange":
          if (Yk) break;
        case "keydown":
        case "keyup":
          tT(h, n, u);
      }
      var C;
      if (Yb)
        e: {
          switch (t) {
            case "compositionstart":
              var L = "onCompositionStart";
              break e;
            case "compositionend":
              L = "onCompositionEnd";
              break e;
            case "compositionupdate":
              L = "onCompositionUpdate";
              break e;
          }
          L = void 0;
        }
      else
        Hu
          ? aL(t, n) && (L = "onCompositionEnd")
          : t === "keydown" && n.keyCode === 229 && (L = "onCompositionStart");
      L &&
        (sL &&
          n.locale !== "ko" &&
          (Hu || L !== "onCompositionStart"
            ? L === "onCompositionEnd" && Hu && (C = oL())
            : ((ka = u),
              ($b = "value" in ka ? ka.value : ka.textContent),
              (Hu = !0))),
        (M = Xv(c, L)),
        0 < M.length &&
          ((L = new $C(L, t, null, n, u)),
          h.push({ event: L, listeners: M }),
          C ? (L.data = C) : ((C = lL(n)), C !== null && (L.data = C)))),
        (C = Uk ? zk(t, n) : kk(t, n)) &&
          ((c = Xv(c, "onBeforeInput")),
          0 < c.length &&
            ((u = new $C("onBeforeInput", "beforeinput", null, n, u)),
            h.push({ event: u, listeners: c }),
            (u.data = C)));
    }
    _L(h, e);
  });
}
function Eh(t, e, n) {
  return { instance: t, listener: e, currentTarget: n };
}
function Xv(t, e) {
  for (var n = e + "Capture", r = []; t !== null; ) {
    var i = t,
      o = i.stateNode;
    i.tag === 5 &&
      o !== null &&
      ((i = o),
      (o = vh(t, n)),
      o != null && r.unshift(Eh(t, o, i)),
      (o = vh(t, e)),
      o != null && r.push(Eh(t, o, i))),
      (t = t.return);
  }
  return r;
}
function su(t) {
  if (t === null) return null;
  do t = t.return;
  while (t && t.tag !== 5);
  return t || null;
}
function iT(t, e, n, r, i) {
  for (var o = e._reactName, s = []; n !== null && n !== r; ) {
    var a = n,
      l = a.alternate,
      c = a.stateNode;
    if (l !== null && l === r) break;
    a.tag === 5 &&
      c !== null &&
      ((a = c),
      i
        ? ((l = vh(n, o)), l != null && s.unshift(Eh(n, l, a)))
        : i || ((l = vh(n, o)), l != null && s.push(Eh(n, l, a)))),
      (n = n.return);
  }
  s.length !== 0 && t.push({ event: e, listeners: s });
}
var Jk = /\r\n?/g,
  e4 = /\u0000|\uFFFD/g;
function oT(t) {
  return (typeof t == "string" ? t : "" + t)
    .replace(
      Jk,
      `
`
    )
    .replace(e4, "");
}
function zm(t, e, n) {
  if (((e = oT(e)), oT(t) !== e && n)) throw Error(Xe(425));
}
function qv() {}
var pS = null,
  mS = null;
function gS(t, e) {
  return (
    t === "textarea" ||
    t === "noscript" ||
    typeof e.children == "string" ||
    typeof e.children == "number" ||
    (typeof e.dangerouslySetInnerHTML == "object" &&
      e.dangerouslySetInnerHTML !== null &&
      e.dangerouslySetInnerHTML.__html != null)
  );
}
var vS = typeof setTimeout == "function" ? setTimeout : void 0,
  t4 = typeof clearTimeout == "function" ? clearTimeout : void 0,
  sT = typeof Promise == "function" ? Promise : void 0,
  n4 =
    typeof queueMicrotask == "function"
      ? queueMicrotask
      : typeof sT < "u"
      ? function (t) {
          return sT.resolve(null).then(t).catch(r4);
        }
      : vS;
function r4(t) {
  setTimeout(function () {
    throw t;
  });
}
function f1(t, e) {
  var n = e,
    r = 0;
  do {
    var i = n.nextSibling;
    if ((t.removeChild(n), i && i.nodeType === 8))
      if (((n = i.data), n === "/$")) {
        if (r === 0) {
          t.removeChild(i), _h(e);
          return;
        }
        r--;
      } else (n !== "$" && n !== "$?" && n !== "$!") || r++;
    n = i;
  } while (n);
  _h(e);
}
function Xa(t) {
  for (; t != null; t = t.nextSibling) {
    var e = t.nodeType;
    if (e === 1 || e === 3) break;
    if (e === 8) {
      if (((e = t.data), e === "$" || e === "$!" || e === "$?")) break;
      if (e === "/$") return null;
    }
  }
  return t;
}
function aT(t) {
  t = t.previousSibling;
  for (var e = 0; t; ) {
    if (t.nodeType === 8) {
      var n = t.data;
      if (n === "$" || n === "$!" || n === "$?") {
        if (e === 0) return t;
        e--;
      } else n === "/$" && e++;
    }
    t = t.previousSibling;
  }
  return null;
}
var zf = Math.random().toString(36).slice(2),
  hs = "__reactFiber$" + zf,
  Mh = "__reactProps$" + zf,
  oa = "__reactContainer$" + zf,
  yS = "__reactEvents$" + zf,
  i4 = "__reactListeners$" + zf,
  o4 = "__reactHandles$" + zf;
function tc(t) {
  var e = t[hs];
  if (e) return e;
  for (var n = t.parentNode; n; ) {
    if ((e = n[oa] || n[hs])) {
      if (
        ((n = e.alternate),
        e.child !== null || (n !== null && n.child !== null))
      )
        for (t = aT(t); t !== null; ) {
          if ((n = t[hs])) return n;
          t = aT(t);
        }
      return e;
    }
    (t = n), (n = t.parentNode);
  }
  return null;
}
function hp(t) {
  return (
    (t = t[hs] || t[oa]),
    !t || (t.tag !== 5 && t.tag !== 6 && t.tag !== 13 && t.tag !== 3) ? null : t
  );
}
function ju(t) {
  if (t.tag === 5 || t.tag === 6) return t.stateNode;
  throw Error(Xe(33));
}
function B0(t) {
  return t[Mh] || null;
}
var xS = [],
  Wu = -1;
function dl(t) {
  return { current: t };
}
function yn(t) {
  0 > Wu || ((t.current = xS[Wu]), (xS[Wu] = null), Wu--);
}
function hn(t, e) {
  Wu++, (xS[Wu] = t.current), (t.current = e);
}
var rl = {},
  jr = dl(rl),
  xi = dl(!1),
  wc = rl;
function xf(t, e) {
  var n = t.type.contextTypes;
  if (!n) return rl;
  var r = t.stateNode;
  if (r && r.__reactInternalMemoizedUnmaskedChildContext === e)
    return r.__reactInternalMemoizedMaskedChildContext;
  var i = {},
    o;
  for (o in n) i[o] = e[o];
  return (
    r &&
      ((t = t.stateNode),
      (t.__reactInternalMemoizedUnmaskedChildContext = e),
      (t.__reactInternalMemoizedMaskedChildContext = i)),
    i
  );
}
function _i(t) {
  return (t = t.childContextTypes), t != null;
}
function Yv() {
  yn(xi), yn(jr);
}
function lT(t, e, n) {
  if (jr.current !== rl) throw Error(Xe(168));
  hn(jr, e), hn(xi, n);
}
function wL(t, e, n) {
  var r = t.stateNode;
  if (((e = e.childContextTypes), typeof r.getChildContext != "function"))
    return n;
  r = r.getChildContext();
  for (var i in r) if (!(i in e)) throw Error(Xe(108, Gz(t) || "Unknown", i));
  return Ln({}, n, r);
}
function Kv(t) {
  return (
    (t =
      ((t = t.stateNode) && t.__reactInternalMemoizedMergedChildContext) || rl),
    (wc = jr.current),
    hn(jr, t),
    hn(xi, xi.current),
    !0
  );
}
function cT(t, e, n) {
  var r = t.stateNode;
  if (!r) throw Error(Xe(169));
  n
    ? ((t = wL(t, e, wc)),
      (r.__reactInternalMemoizedMergedChildContext = t),
      yn(xi),
      yn(jr),
      hn(jr, t))
    : yn(xi),
    hn(xi, n);
}
var Xs = null,
  H0 = !1,
  d1 = !1;
function bL(t) {
  Xs === null ? (Xs = [t]) : Xs.push(t);
}
function s4(t) {
  (H0 = !0), bL(t);
}
function hl() {
  if (!d1 && Xs !== null) {
    d1 = !0;
    var t = 0,
      e = rn;
    try {
      var n = Xs;
      for (rn = 1; t < n.length; t++) {
        var r = n[t];
        do r = r(!0);
        while (r !== null);
      }
      (Xs = null), (H0 = !1);
    } catch (i) {
      throw (Xs !== null && (Xs = Xs.slice(t + 1)), q3(Vb, hl), i);
    } finally {
      (rn = e), (d1 = !1);
    }
  }
  return null;
}
var $u = [],
  Xu = 0,
  Zv = null,
  Qv = 0,
  ho = [],
  po = 0,
  bc = null,
  Zs = 1,
  Qs = "";
function Wl(t, e) {
  ($u[Xu++] = Qv), ($u[Xu++] = Zv), (Zv = t), (Qv = e);
}
function EL(t, e, n) {
  (ho[po++] = Zs), (ho[po++] = Qs), (ho[po++] = bc), (bc = t);
  var r = Zs;
  t = Qs;
  var i = 32 - jo(r) - 1;
  (r &= ~(1 << i)), (n += 1);
  var o = 32 - jo(e) + i;
  if (30 < o) {
    var s = i - (i % 5);
    (o = (r & ((1 << s) - 1)).toString(32)),
      (r >>= s),
      (i -= s),
      (Zs = (1 << (32 - jo(e) + i)) | (n << i) | r),
      (Qs = o + t);
  } else (Zs = (1 << o) | (n << i) | r), (Qs = t);
}
function Zb(t) {
  t.return !== null && (Wl(t, 1), EL(t, 1, 0));
}
function Qb(t) {
  for (; t === Zv; )
    (Zv = $u[--Xu]), ($u[Xu] = null), (Qv = $u[--Xu]), ($u[Xu] = null);
  for (; t === bc; )
    (bc = ho[--po]),
      (ho[po] = null),
      (Qs = ho[--po]),
      (ho[po] = null),
      (Zs = ho[--po]),
      (ho[po] = null);
}
var $i = null,
  Hi = null,
  Sn = !1,
  ko = null;
function ML(t, e) {
  var n = go(5, null, null, 0);
  (n.elementType = "DELETED"),
    (n.stateNode = e),
    (n.return = t),
    (e = t.deletions),
    e === null ? ((t.deletions = [n]), (t.flags |= 16)) : e.push(n);
}
function uT(t, e) {
  switch (t.tag) {
    case 5:
      var n = t.type;
      return (
        (e =
          e.nodeType !== 1 || n.toLowerCase() !== e.nodeName.toLowerCase()
            ? null
            : e),
        e !== null
          ? ((t.stateNode = e), ($i = t), (Hi = Xa(e.firstChild)), !0)
          : !1
      );
    case 6:
      return (
        (e = t.pendingProps === "" || e.nodeType !== 3 ? null : e),
        e !== null ? ((t.stateNode = e), ($i = t), (Hi = null), !0) : !1
      );
    case 13:
      return (
        (e = e.nodeType !== 8 ? null : e),
        e !== null
          ? ((n = bc !== null ? { id: Zs, overflow: Qs } : null),
            (t.memoizedState = {
              dehydrated: e,
              treeContext: n,
              retryLane: 1073741824,
            }),
            (n = go(18, null, null, 0)),
            (n.stateNode = e),
            (n.return = t),
            (t.child = n),
            ($i = t),
            (Hi = null),
            !0)
          : !1
      );
    default:
      return !1;
  }
}
function _S(t) {
  return (t.mode & 1) !== 0 && (t.flags & 128) === 0;
}
function SS(t) {
  if (Sn) {
    var e = Hi;
    if (e) {
      var n = e;
      if (!uT(t, e)) {
        if (_S(t)) throw Error(Xe(418));
        e = Xa(n.nextSibling);
        var r = $i;
        e && uT(t, e)
          ? ML(r, n)
          : ((t.flags = (t.flags & -4097) | 2), (Sn = !1), ($i = t));
      }
    } else {
      if (_S(t)) throw Error(Xe(418));
      (t.flags = (t.flags & -4097) | 2), (Sn = !1), ($i = t);
    }
  }
}
function fT(t) {
  for (t = t.return; t !== null && t.tag !== 5 && t.tag !== 3 && t.tag !== 13; )
    t = t.return;
  $i = t;
}
function km(t) {
  if (t !== $i) return !1;
  if (!Sn) return fT(t), (Sn = !0), !1;
  var e;
  if (
    ((e = t.tag !== 3) &&
      !(e = t.tag !== 5) &&
      ((e = t.type),
      (e = e !== "head" && e !== "body" && !gS(t.type, t.memoizedProps))),
    e && (e = Hi))
  ) {
    if (_S(t)) throw (CL(), Error(Xe(418)));
    for (; e; ) ML(t, e), (e = Xa(e.nextSibling));
  }
  if ((fT(t), t.tag === 13)) {
    if (((t = t.memoizedState), (t = t !== null ? t.dehydrated : null), !t))
      throw Error(Xe(317));
    e: {
      for (t = t.nextSibling, e = 0; t; ) {
        if (t.nodeType === 8) {
          var n = t.data;
          if (n === "/$") {
            if (e === 0) {
              Hi = Xa(t.nextSibling);
              break e;
            }
            e--;
          } else (n !== "$" && n !== "$!" && n !== "$?") || e++;
        }
        t = t.nextSibling;
      }
      Hi = null;
    }
  } else Hi = $i ? Xa(t.stateNode.nextSibling) : null;
  return !0;
}
function CL() {
  for (var t = Hi; t; ) t = Xa(t.nextSibling);
}
function _f() {
  (Hi = $i = null), (Sn = !1);
}
function Jb(t) {
  ko === null ? (ko = [t]) : ko.push(t);
}
var a4 = ha.ReactCurrentBatchConfig;
function Fo(t, e) {
  if (t && t.defaultProps) {
    (e = Ln({}, e)), (t = t.defaultProps);
    for (var n in t) e[n] === void 0 && (e[n] = t[n]);
    return e;
  }
  return e;
}
var Jv = dl(null),
  e0 = null,
  qu = null,
  eE = null;
function tE() {
  eE = qu = e0 = null;
}
function nE(t) {
  var e = Jv.current;
  yn(Jv), (t._currentValue = e);
}
function wS(t, e, n) {
  for (; t !== null; ) {
    var r = t.alternate;
    if (
      ((t.childLanes & e) !== e
        ? ((t.childLanes |= e), r !== null && (r.childLanes |= e))
        : r !== null && (r.childLanes & e) !== e && (r.childLanes |= e),
      t === n)
    )
      break;
    t = t.return;
  }
}
function df(t, e) {
  (e0 = t),
    (eE = qu = null),
    (t = t.dependencies),
    t !== null &&
      t.firstContext !== null &&
      (t.lanes & e && (yi = !0), (t.firstContext = null));
}
function xo(t) {
  var e = t._currentValue;
  if (eE !== t)
    if (((t = { context: t, memoizedValue: e, next: null }), qu === null)) {
      if (e0 === null) throw Error(Xe(308));
      (qu = t), (e0.dependencies = { lanes: 0, firstContext: t });
    } else qu = qu.next = t;
  return e;
}
var nc = null;
function rE(t) {
  nc === null ? (nc = [t]) : nc.push(t);
}
function TL(t, e, n, r) {
  var i = e.interleaved;
  return (
    i === null ? ((n.next = n), rE(e)) : ((n.next = i.next), (i.next = n)),
    (e.interleaved = n),
    sa(t, r)
  );
}
function sa(t, e) {
  t.lanes |= e;
  var n = t.alternate;
  for (n !== null && (n.lanes |= e), n = t, t = t.return; t !== null; )
    (t.childLanes |= e),
      (n = t.alternate),
      n !== null && (n.childLanes |= e),
      (n = t),
      (t = t.return);
  return n.tag === 3 ? n.stateNode : null;
}
var Na = !1;
function iE(t) {
  t.updateQueue = {
    baseState: t.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: { pending: null, interleaved: null, lanes: 0 },
    effects: null,
  };
}
function AL(t, e) {
  (t = t.updateQueue),
    e.updateQueue === t &&
      (e.updateQueue = {
        baseState: t.baseState,
        firstBaseUpdate: t.firstBaseUpdate,
        lastBaseUpdate: t.lastBaseUpdate,
        shared: t.shared,
        effects: t.effects,
      });
}
function na(t, e) {
  return {
    eventTime: t,
    lane: e,
    tag: 0,
    payload: null,
    callback: null,
    next: null,
  };
}
function qa(t, e, n) {
  var r = t.updateQueue;
  if (r === null) return null;
  if (((r = r.shared), Xt & 2)) {
    var i = r.pending;
    return (
      i === null ? (e.next = e) : ((e.next = i.next), (i.next = e)),
      (r.pending = e),
      sa(t, n)
    );
  }
  return (
    (i = r.interleaved),
    i === null ? ((e.next = e), rE(r)) : ((e.next = i.next), (i.next = e)),
    (r.interleaved = e),
    sa(t, n)
  );
}
function mv(t, e, n) {
  if (
    ((e = e.updateQueue), e !== null && ((e = e.shared), (n & 4194240) !== 0))
  ) {
    var r = e.lanes;
    (r &= t.pendingLanes), (n |= r), (e.lanes = n), Gb(t, n);
  }
}
function dT(t, e) {
  var n = t.updateQueue,
    r = t.alternate;
  if (r !== null && ((r = r.updateQueue), n === r)) {
    var i = null,
      o = null;
    if (((n = n.firstBaseUpdate), n !== null)) {
      do {
        var s = {
          eventTime: n.eventTime,
          lane: n.lane,
          tag: n.tag,
          payload: n.payload,
          callback: n.callback,
          next: null,
        };
        o === null ? (i = o = s) : (o = o.next = s), (n = n.next);
      } while (n !== null);
      o === null ? (i = o = e) : (o = o.next = e);
    } else i = o = e;
    (n = {
      baseState: r.baseState,
      firstBaseUpdate: i,
      lastBaseUpdate: o,
      shared: r.shared,
      effects: r.effects,
    }),
      (t.updateQueue = n);
    return;
  }
  (t = n.lastBaseUpdate),
    t === null ? (n.firstBaseUpdate = e) : (t.next = e),
    (n.lastBaseUpdate = e);
}
function t0(t, e, n, r) {
  var i = t.updateQueue;
  Na = !1;
  var o = i.firstBaseUpdate,
    s = i.lastBaseUpdate,
    a = i.shared.pending;
  if (a !== null) {
    i.shared.pending = null;
    var l = a,
      c = l.next;
    (l.next = null), s === null ? (o = c) : (s.next = c), (s = l);
    var u = t.alternate;
    u !== null &&
      ((u = u.updateQueue),
      (a = u.lastBaseUpdate),
      a !== s &&
        (a === null ? (u.firstBaseUpdate = c) : (a.next = c),
        (u.lastBaseUpdate = l)));
  }
  if (o !== null) {
    var h = i.baseState;
    (s = 0), (u = c = l = null), (a = o);
    do {
      var p = a.lane,
        m = a.eventTime;
      if ((r & p) === p) {
        u !== null &&
          (u = u.next =
            {
              eventTime: m,
              lane: 0,
              tag: a.tag,
              payload: a.payload,
              callback: a.callback,
              next: null,
            });
        e: {
          var v = t,
            S = a;
          switch (((p = e), (m = n), S.tag)) {
            case 1:
              if (((v = S.payload), typeof v == "function")) {
                h = v.call(m, h, p);
                break e;
              }
              h = v;
              break e;
            case 3:
              v.flags = (v.flags & -65537) | 128;
            case 0:
              if (
                ((v = S.payload),
                (p = typeof v == "function" ? v.call(m, h, p) : v),
                p == null)
              )
                break e;
              h = Ln({}, h, p);
              break e;
            case 2:
              Na = !0;
          }
        }
        a.callback !== null &&
          a.lane !== 0 &&
          ((t.flags |= 64),
          (p = i.effects),
          p === null ? (i.effects = [a]) : p.push(a));
      } else
        (m = {
          eventTime: m,
          lane: p,
          tag: a.tag,
          payload: a.payload,
          callback: a.callback,
          next: null,
        }),
          u === null ? ((c = u = m), (l = h)) : (u = u.next = m),
          (s |= p);
      if (((a = a.next), a === null)) {
        if (((a = i.shared.pending), a === null)) break;
        (p = a),
          (a = p.next),
          (p.next = null),
          (i.lastBaseUpdate = p),
          (i.shared.pending = null);
      }
    } while (!0);
    if (
      (u === null && (l = h),
      (i.baseState = l),
      (i.firstBaseUpdate = c),
      (i.lastBaseUpdate = u),
      (e = i.shared.interleaved),
      e !== null)
    ) {
      i = e;
      do (s |= i.lane), (i = i.next);
      while (i !== e);
    } else o === null && (i.shared.lanes = 0);
    (Mc |= s), (t.lanes = s), (t.memoizedState = h);
  }
}
function hT(t, e, n) {
  if (((t = e.effects), (e.effects = null), t !== null))
    for (e = 0; e < t.length; e++) {
      var r = t[e],
        i = r.callback;
      if (i !== null) {
        if (((r.callback = null), (r = n), typeof i != "function"))
          throw Error(Xe(191, i));
        i.call(r);
      }
    }
}
var RL = new T3.Component().refs;
function bS(t, e, n, r) {
  (e = t.memoizedState),
    (n = n(r, e)),
    (n = n == null ? e : Ln({}, e, n)),
    (t.memoizedState = n),
    t.lanes === 0 && (t.updateQueue.baseState = n);
}
var V0 = {
  isMounted: function (t) {
    return (t = t._reactInternals) ? Dc(t) === t : !1;
  },
  enqueueSetState: function (t, e, n) {
    t = t._reactInternals;
    var r = ii(),
      i = Ka(t),
      o = na(r, i);
    (o.payload = e),
      n != null && (o.callback = n),
      (e = qa(t, o, i)),
      e !== null && (Wo(e, t, i, r), mv(e, t, i));
  },
  enqueueReplaceState: function (t, e, n) {
    t = t._reactInternals;
    var r = ii(),
      i = Ka(t),
      o = na(r, i);
    (o.tag = 1),
      (o.payload = e),
      n != null && (o.callback = n),
      (e = qa(t, o, i)),
      e !== null && (Wo(e, t, i, r), mv(e, t, i));
  },
  enqueueForceUpdate: function (t, e) {
    t = t._reactInternals;
    var n = ii(),
      r = Ka(t),
      i = na(n, r);
    (i.tag = 2),
      e != null && (i.callback = e),
      (e = qa(t, i, r)),
      e !== null && (Wo(e, t, r, n), mv(e, t, r));
  },
};
function pT(t, e, n, r, i, o, s) {
  return (
    (t = t.stateNode),
    typeof t.shouldComponentUpdate == "function"
      ? t.shouldComponentUpdate(r, o, s)
      : e.prototype && e.prototype.isPureReactComponent
      ? !wh(n, r) || !wh(i, o)
      : !0
  );
}
function PL(t, e, n) {
  var r = !1,
    i = rl,
    o = e.contextType;
  return (
    typeof o == "object" && o !== null
      ? (o = xo(o))
      : ((i = _i(e) ? wc : jr.current),
        (r = e.contextTypes),
        (o = (r = r != null) ? xf(t, i) : rl)),
    (e = new e(n, o)),
    (t.memoizedState = e.state !== null && e.state !== void 0 ? e.state : null),
    (e.updater = V0),
    (t.stateNode = e),
    (e._reactInternals = t),
    r &&
      ((t = t.stateNode),
      (t.__reactInternalMemoizedUnmaskedChildContext = i),
      (t.__reactInternalMemoizedMaskedChildContext = o)),
    e
  );
}
function mT(t, e, n, r) {
  (t = e.state),
    typeof e.componentWillReceiveProps == "function" &&
      e.componentWillReceiveProps(n, r),
    typeof e.UNSAFE_componentWillReceiveProps == "function" &&
      e.UNSAFE_componentWillReceiveProps(n, r),
    e.state !== t && V0.enqueueReplaceState(e, e.state, null);
}
function ES(t, e, n, r) {
  var i = t.stateNode;
  (i.props = n), (i.state = t.memoizedState), (i.refs = RL), iE(t);
  var o = e.contextType;
  typeof o == "object" && o !== null
    ? (i.context = xo(o))
    : ((o = _i(e) ? wc : jr.current), (i.context = xf(t, o))),
    (i.state = t.memoizedState),
    (o = e.getDerivedStateFromProps),
    typeof o == "function" && (bS(t, e, o, n), (i.state = t.memoizedState)),
    typeof e.getDerivedStateFromProps == "function" ||
      typeof i.getSnapshotBeforeUpdate == "function" ||
      (typeof i.UNSAFE_componentWillMount != "function" &&
        typeof i.componentWillMount != "function") ||
      ((e = i.state),
      typeof i.componentWillMount == "function" && i.componentWillMount(),
      typeof i.UNSAFE_componentWillMount == "function" &&
        i.UNSAFE_componentWillMount(),
      e !== i.state && V0.enqueueReplaceState(i, i.state, null),
      t0(t, n, i, r),
      (i.state = t.memoizedState)),
    typeof i.componentDidMount == "function" && (t.flags |= 4194308);
}
function wd(t, e, n) {
  if (
    ((t = n.ref), t !== null && typeof t != "function" && typeof t != "object")
  ) {
    if (n._owner) {
      if (((n = n._owner), n)) {
        if (n.tag !== 1) throw Error(Xe(309));
        var r = n.stateNode;
      }
      if (!r) throw Error(Xe(147, t));
      var i = r,
        o = "" + t;
      return e !== null &&
        e.ref !== null &&
        typeof e.ref == "function" &&
        e.ref._stringRef === o
        ? e.ref
        : ((e = function (s) {
            var a = i.refs;
            a === RL && (a = i.refs = {}),
              s === null ? delete a[o] : (a[o] = s);
          }),
          (e._stringRef = o),
          e);
    }
    if (typeof t != "string") throw Error(Xe(284));
    if (!n._owner) throw Error(Xe(290, t));
  }
  return t;
}
function Bm(t, e) {
  throw (
    ((t = Object.prototype.toString.call(e)),
    Error(
      Xe(
        31,
        t === "[object Object]"
          ? "object with keys {" + Object.keys(e).join(", ") + "}"
          : t
      )
    ))
  );
}
function gT(t) {
  var e = t._init;
  return e(t._payload);
}
function LL(t) {
  function e(g, y) {
    if (t) {
      var _ = g.deletions;
      _ === null ? ((g.deletions = [y]), (g.flags |= 16)) : _.push(y);
    }
  }
  function n(g, y) {
    if (!t) return null;
    for (; y !== null; ) e(g, y), (y = y.sibling);
    return null;
  }
  function r(g, y) {
    for (g = new Map(); y !== null; )
      y.key !== null ? g.set(y.key, y) : g.set(y.index, y), (y = y.sibling);
    return g;
  }
  function i(g, y) {
    return (g = Za(g, y)), (g.index = 0), (g.sibling = null), g;
  }
  function o(g, y, _) {
    return (
      (g.index = _),
      t
        ? ((_ = g.alternate),
          _ !== null
            ? ((_ = _.index), _ < y ? ((g.flags |= 2), y) : _)
            : ((g.flags |= 2), y))
        : ((g.flags |= 1048576), y)
    );
  }
  function s(g) {
    return t && g.alternate === null && (g.flags |= 2), g;
  }
  function a(g, y, _, b) {
    return y === null || y.tag !== 6
      ? ((y = x1(_, g.mode, b)), (y.return = g), y)
      : ((y = i(y, _)), (y.return = g), y);
  }
  function l(g, y, _, b) {
    var T = _.type;
    return T === Bu
      ? u(g, y, _.props.children, b, _.key)
      : y !== null &&
        (y.elementType === T ||
          (typeof T == "object" &&
            T !== null &&
            T.$$typeof === Fa &&
            gT(T) === y.type))
      ? ((b = i(y, _.props)), (b.ref = wd(g, y, _)), (b.return = g), b)
      : ((b = Sv(_.type, _.key, _.props, null, g.mode, b)),
        (b.ref = wd(g, y, _)),
        (b.return = g),
        b);
  }
  function c(g, y, _, b) {
    return y === null ||
      y.tag !== 4 ||
      y.stateNode.containerInfo !== _.containerInfo ||
      y.stateNode.implementation !== _.implementation
      ? ((y = _1(_, g.mode, b)), (y.return = g), y)
      : ((y = i(y, _.children || [])), (y.return = g), y);
  }
  function u(g, y, _, b, T) {
    return y === null || y.tag !== 7
      ? ((y = dc(_, g.mode, b, T)), (y.return = g), y)
      : ((y = i(y, _)), (y.return = g), y);
  }
  function h(g, y, _) {
    if ((typeof y == "string" && y !== "") || typeof y == "number")
      return (y = x1("" + y, g.mode, _)), (y.return = g), y;
    if (typeof y == "object" && y !== null) {
      switch (y.$$typeof) {
        case Rm:
          return (
            (_ = Sv(y.type, y.key, y.props, null, g.mode, _)),
            (_.ref = wd(g, null, y)),
            (_.return = g),
            _
          );
        case ku:
          return (y = _1(y, g.mode, _)), (y.return = g), y;
        case Fa:
          var b = y._init;
          return h(g, b(y._payload), _);
      }
      if (Vd(y) || vd(y))
        return (y = dc(y, g.mode, _, null)), (y.return = g), y;
      Bm(g, y);
    }
    return null;
  }
  function p(g, y, _, b) {
    var T = y !== null ? y.key : null;
    if ((typeof _ == "string" && _ !== "") || typeof _ == "number")
      return T !== null ? null : a(g, y, "" + _, b);
    if (typeof _ == "object" && _ !== null) {
      switch (_.$$typeof) {
        case Rm:
          return _.key === T ? l(g, y, _, b) : null;
        case ku:
          return _.key === T ? c(g, y, _, b) : null;
        case Fa:
          return (T = _._init), p(g, y, T(_._payload), b);
      }
      if (Vd(_) || vd(_)) return T !== null ? null : u(g, y, _, b, null);
      Bm(g, _);
    }
    return null;
  }
  function m(g, y, _, b, T) {
    if ((typeof b == "string" && b !== "") || typeof b == "number")
      return (g = g.get(_) || null), a(y, g, "" + b, T);
    if (typeof b == "object" && b !== null) {
      switch (b.$$typeof) {
        case Rm:
          return (g = g.get(b.key === null ? _ : b.key) || null), l(y, g, b, T);
        case ku:
          return (g = g.get(b.key === null ? _ : b.key) || null), c(y, g, b, T);
        case Fa:
          var M = b._init;
          return m(g, y, _, M(b._payload), T);
      }
      if (Vd(b) || vd(b)) return (g = g.get(_) || null), u(y, g, b, T, null);
      Bm(y, b);
    }
    return null;
  }
  function v(g, y, _, b) {
    for (
      var T = null, M = null, C = y, L = (y = 0), A = null;
      C !== null && L < _.length;
      L++
    ) {
      C.index > L ? ((A = C), (C = null)) : (A = C.sibling);
      var P = p(g, C, _[L], b);
      if (P === null) {
        C === null && (C = A);
        break;
      }
      t && C && P.alternate === null && e(g, C),
        (y = o(P, y, L)),
        M === null ? (T = P) : (M.sibling = P),
        (M = P),
        (C = A);
    }
    if (L === _.length) return n(g, C), Sn && Wl(g, L), T;
    if (C === null) {
      for (; L < _.length; L++)
        (C = h(g, _[L], b)),
          C !== null &&
            ((y = o(C, y, L)), M === null ? (T = C) : (M.sibling = C), (M = C));
      return Sn && Wl(g, L), T;
    }
    for (C = r(g, C); L < _.length; L++)
      (A = m(C, g, L, _[L], b)),
        A !== null &&
          (t && A.alternate !== null && C.delete(A.key === null ? L : A.key),
          (y = o(A, y, L)),
          M === null ? (T = A) : (M.sibling = A),
          (M = A));
    return (
      t &&
        C.forEach(function (k) {
          return e(g, k);
        }),
      Sn && Wl(g, L),
      T
    );
  }
  function S(g, y, _, b) {
    var T = vd(_);
    if (typeof T != "function") throw Error(Xe(150));
    if (((_ = T.call(_)), _ == null)) throw Error(Xe(151));
    for (
      var M = (T = null), C = y, L = (y = 0), A = null, P = _.next();
      C !== null && !P.done;
      L++, P = _.next()
    ) {
      C.index > L ? ((A = C), (C = null)) : (A = C.sibling);
      var k = p(g, C, P.value, b);
      if (k === null) {
        C === null && (C = A);
        break;
      }
      t && C && k.alternate === null && e(g, C),
        (y = o(k, y, L)),
        M === null ? (T = k) : (M.sibling = k),
        (M = k),
        (C = A);
    }
    if (P.done) return n(g, C), Sn && Wl(g, L), T;
    if (C === null) {
      for (; !P.done; L++, P = _.next())
        (P = h(g, P.value, b)),
          P !== null &&
            ((y = o(P, y, L)), M === null ? (T = P) : (M.sibling = P), (M = P));
      return Sn && Wl(g, L), T;
    }
    for (C = r(g, C); !P.done; L++, P = _.next())
      (P = m(C, g, L, P.value, b)),
        P !== null &&
          (t && P.alternate !== null && C.delete(P.key === null ? L : P.key),
          (y = o(P, y, L)),
          M === null ? (T = P) : (M.sibling = P),
          (M = P));
    return (
      t &&
        C.forEach(function (B) {
          return e(g, B);
        }),
      Sn && Wl(g, L),
      T
    );
  }
  function x(g, y, _, b) {
    if (
      (typeof _ == "object" &&
        _ !== null &&
        _.type === Bu &&
        _.key === null &&
        (_ = _.props.children),
      typeof _ == "object" && _ !== null)
    ) {
      switch (_.$$typeof) {
        case Rm:
          e: {
            for (var T = _.key, M = y; M !== null; ) {
              if (M.key === T) {
                if (((T = _.type), T === Bu)) {
                  if (M.tag === 7) {
                    n(g, M.sibling),
                      (y = i(M, _.props.children)),
                      (y.return = g),
                      (g = y);
                    break e;
                  }
                } else if (
                  M.elementType === T ||
                  (typeof T == "object" &&
                    T !== null &&
                    T.$$typeof === Fa &&
                    gT(T) === M.type)
                ) {
                  n(g, M.sibling),
                    (y = i(M, _.props)),
                    (y.ref = wd(g, M, _)),
                    (y.return = g),
                    (g = y);
                  break e;
                }
                n(g, M);
                break;
              } else e(g, M);
              M = M.sibling;
            }
            _.type === Bu
              ? ((y = dc(_.props.children, g.mode, b, _.key)),
                (y.return = g),
                (g = y))
              : ((b = Sv(_.type, _.key, _.props, null, g.mode, b)),
                (b.ref = wd(g, y, _)),
                (b.return = g),
                (g = b));
          }
          return s(g);
        case ku:
          e: {
            for (M = _.key; y !== null; ) {
              if (y.key === M)
                if (
                  y.tag === 4 &&
                  y.stateNode.containerInfo === _.containerInfo &&
                  y.stateNode.implementation === _.implementation
                ) {
                  n(g, y.sibling),
                    (y = i(y, _.children || [])),
                    (y.return = g),
                    (g = y);
                  break e;
                } else {
                  n(g, y);
                  break;
                }
              else e(g, y);
              y = y.sibling;
            }
            (y = _1(_, g.mode, b)), (y.return = g), (g = y);
          }
          return s(g);
        case Fa:
          return (M = _._init), x(g, y, M(_._payload), b);
      }
      if (Vd(_)) return v(g, y, _, b);
      if (vd(_)) return S(g, y, _, b);
      Bm(g, _);
    }
    return (typeof _ == "string" && _ !== "") || typeof _ == "number"
      ? ((_ = "" + _),
        y !== null && y.tag === 6
          ? (n(g, y.sibling), (y = i(y, _)), (y.return = g), (g = y))
          : (n(g, y), (y = x1(_, g.mode, b)), (y.return = g), (g = y)),
        s(g))
      : n(g, y);
  }
  return x;
}
var Sf = LL(!0),
  IL = LL(!1),
  pp = {},
  vs = dl(pp),
  Ch = dl(pp),
  Th = dl(pp);
function rc(t) {
  if (t === pp) throw Error(Xe(174));
  return t;
}
function oE(t, e) {
  switch ((hn(Th, e), hn(Ch, t), hn(vs, pp), (t = e.nodeType), t)) {
    case 9:
    case 11:
      e = (e = e.documentElement) ? e.namespaceURI : nS(null, "");
      break;
    default:
      (t = t === 8 ? e.parentNode : e),
        (e = t.namespaceURI || null),
        (t = t.tagName),
        (e = nS(e, t));
  }
  yn(vs), hn(vs, e);
}
function wf() {
  yn(vs), yn(Ch), yn(Th);
}
function OL(t) {
  rc(Th.current);
  var e = rc(vs.current),
    n = nS(e, t.type);
  e !== n && (hn(Ch, t), hn(vs, n));
}
function sE(t) {
  Ch.current === t && (yn(vs), yn(Ch));
}
var Mn = dl(0);
function n0(t) {
  for (var e = t; e !== null; ) {
    if (e.tag === 13) {
      var n = e.memoizedState;
      if (
        n !== null &&
        ((n = n.dehydrated), n === null || n.data === "$?" || n.data === "$!")
      )
        return e;
    } else if (e.tag === 19 && e.memoizedProps.revealOrder !== void 0) {
      if (e.flags & 128) return e;
    } else if (e.child !== null) {
      (e.child.return = e), (e = e.child);
      continue;
    }
    if (e === t) break;
    for (; e.sibling === null; ) {
      if (e.return === null || e.return === t) return null;
      e = e.return;
    }
    (e.sibling.return = e.return), (e = e.sibling);
  }
  return null;
}
var h1 = [];
function aE() {
  for (var t = 0; t < h1.length; t++)
    h1[t]._workInProgressVersionPrimary = null;
  h1.length = 0;
}
var gv = ha.ReactCurrentDispatcher,
  p1 = ha.ReactCurrentBatchConfig,
  Ec = 0,
  Rn = null,
  nr = null,
  gr = null,
  r0 = !1,
  Jd = !1,
  Ah = 0,
  l4 = 0;
function Fr() {
  throw Error(Xe(321));
}
function lE(t, e) {
  if (e === null) return !1;
  for (var n = 0; n < e.length && n < t.length; n++)
    if (!qo(t[n], e[n])) return !1;
  return !0;
}
function cE(t, e, n, r, i, o) {
  if (
    ((Ec = o),
    (Rn = e),
    (e.memoizedState = null),
    (e.updateQueue = null),
    (e.lanes = 0),
    (gv.current = t === null || t.memoizedState === null ? d4 : h4),
    (t = n(r, i)),
    Jd)
  ) {
    o = 0;
    do {
      if (((Jd = !1), (Ah = 0), 25 <= o)) throw Error(Xe(301));
      (o += 1),
        (gr = nr = null),
        (e.updateQueue = null),
        (gv.current = p4),
        (t = n(r, i));
    } while (Jd);
  }
  if (
    ((gv.current = i0),
    (e = nr !== null && nr.next !== null),
    (Ec = 0),
    (gr = nr = Rn = null),
    (r0 = !1),
    e)
  )
    throw Error(Xe(300));
  return t;
}
function uE() {
  var t = Ah !== 0;
  return (Ah = 0), t;
}
function fs() {
  var t = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null,
  };
  return gr === null ? (Rn.memoizedState = gr = t) : (gr = gr.next = t), gr;
}
function _o() {
  if (nr === null) {
    var t = Rn.alternate;
    t = t !== null ? t.memoizedState : null;
  } else t = nr.next;
  var e = gr === null ? Rn.memoizedState : gr.next;
  if (e !== null) (gr = e), (nr = t);
  else {
    if (t === null) throw Error(Xe(310));
    (nr = t),
      (t = {
        memoizedState: nr.memoizedState,
        baseState: nr.baseState,
        baseQueue: nr.baseQueue,
        queue: nr.queue,
        next: null,
      }),
      gr === null ? (Rn.memoizedState = gr = t) : (gr = gr.next = t);
  }
  return gr;
}
function Rh(t, e) {
  return typeof e == "function" ? e(t) : e;
}
function m1(t) {
  var e = _o(),
    n = e.queue;
  if (n === null) throw Error(Xe(311));
  n.lastRenderedReducer = t;
  var r = nr,
    i = r.baseQueue,
    o = n.pending;
  if (o !== null) {
    if (i !== null) {
      var s = i.next;
      (i.next = o.next), (o.next = s);
    }
    (r.baseQueue = i = o), (n.pending = null);
  }
  if (i !== null) {
    (o = i.next), (r = r.baseState);
    var a = (s = null),
      l = null,
      c = o;
    do {
      var u = c.lane;
      if ((Ec & u) === u)
        l !== null &&
          (l = l.next =
            {
              lane: 0,
              action: c.action,
              hasEagerState: c.hasEagerState,
              eagerState: c.eagerState,
              next: null,
            }),
          (r = c.hasEagerState ? c.eagerState : t(r, c.action));
      else {
        var h = {
          lane: u,
          action: c.action,
          hasEagerState: c.hasEagerState,
          eagerState: c.eagerState,
          next: null,
        };
        l === null ? ((a = l = h), (s = r)) : (l = l.next = h),
          (Rn.lanes |= u),
          (Mc |= u);
      }
      c = c.next;
    } while (c !== null && c !== o);
    l === null ? (s = r) : (l.next = a),
      qo(r, e.memoizedState) || (yi = !0),
      (e.memoizedState = r),
      (e.baseState = s),
      (e.baseQueue = l),
      (n.lastRenderedState = r);
  }
  if (((t = n.interleaved), t !== null)) {
    i = t;
    do (o = i.lane), (Rn.lanes |= o), (Mc |= o), (i = i.next);
    while (i !== t);
  } else i === null && (n.lanes = 0);
  return [e.memoizedState, n.dispatch];
}
function g1(t) {
  var e = _o(),
    n = e.queue;
  if (n === null) throw Error(Xe(311));
  n.lastRenderedReducer = t;
  var r = n.dispatch,
    i = n.pending,
    o = e.memoizedState;
  if (i !== null) {
    n.pending = null;
    var s = (i = i.next);
    do (o = t(o, s.action)), (s = s.next);
    while (s !== i);
    qo(o, e.memoizedState) || (yi = !0),
      (e.memoizedState = o),
      e.baseQueue === null && (e.baseState = o),
      (n.lastRenderedState = o);
  }
  return [o, r];
}
function FL() {}
function NL(t, e) {
  var n = Rn,
    r = _o(),
    i = e(),
    o = !qo(r.memoizedState, i);
  if (
    (o && ((r.memoizedState = i), (yi = !0)),
    (r = r.queue),
    fE(zL.bind(null, n, r, t), [t]),
    r.getSnapshot !== e || o || (gr !== null && gr.memoizedState.tag & 1))
  ) {
    if (
      ((n.flags |= 2048),
      Ph(9, UL.bind(null, n, r, i, e), void 0, null),
      vr === null)
    )
      throw Error(Xe(349));
    Ec & 30 || DL(n, e, i);
  }
  return i;
}
function DL(t, e, n) {
  (t.flags |= 16384),
    (t = { getSnapshot: e, value: n }),
    (e = Rn.updateQueue),
    e === null
      ? ((e = { lastEffect: null, stores: null }),
        (Rn.updateQueue = e),
        (e.stores = [t]))
      : ((n = e.stores), n === null ? (e.stores = [t]) : n.push(t));
}
function UL(t, e, n, r) {
  (e.value = n), (e.getSnapshot = r), kL(e) && BL(t);
}
function zL(t, e, n) {
  return n(function () {
    kL(e) && BL(t);
  });
}
function kL(t) {
  var e = t.getSnapshot;
  t = t.value;
  try {
    var n = e();
    return !qo(t, n);
  } catch {
    return !0;
  }
}
function BL(t) {
  var e = sa(t, 1);
  e !== null && Wo(e, t, 1, -1);
}
function vT(t) {
  var e = fs();
  return (
    typeof t == "function" && (t = t()),
    (e.memoizedState = e.baseState = t),
    (t = {
      pending: null,
      interleaved: null,
      lanes: 0,
      dispatch: null,
      lastRenderedReducer: Rh,
      lastRenderedState: t,
    }),
    (e.queue = t),
    (t = t.dispatch = f4.bind(null, Rn, t)),
    [e.memoizedState, t]
  );
}
function Ph(t, e, n, r) {
  return (
    (t = { tag: t, create: e, destroy: n, deps: r, next: null }),
    (e = Rn.updateQueue),
    e === null
      ? ((e = { lastEffect: null, stores: null }),
        (Rn.updateQueue = e),
        (e.lastEffect = t.next = t))
      : ((n = e.lastEffect),
        n === null
          ? (e.lastEffect = t.next = t)
          : ((r = n.next), (n.next = t), (t.next = r), (e.lastEffect = t))),
    t
  );
}
function HL() {
  return _o().memoizedState;
}
function vv(t, e, n, r) {
  var i = fs();
  (Rn.flags |= t),
    (i.memoizedState = Ph(1 | e, n, void 0, r === void 0 ? null : r));
}
function G0(t, e, n, r) {
  var i = _o();
  r = r === void 0 ? null : r;
  var o = void 0;
  if (nr !== null) {
    var s = nr.memoizedState;
    if (((o = s.destroy), r !== null && lE(r, s.deps))) {
      i.memoizedState = Ph(e, n, o, r);
      return;
    }
  }
  (Rn.flags |= t), (i.memoizedState = Ph(1 | e, n, o, r));
}
function yT(t, e) {
  return vv(8390656, 8, t, e);
}
function fE(t, e) {
  return G0(2048, 8, t, e);
}
function VL(t, e) {
  return G0(4, 2, t, e);
}
function GL(t, e) {
  return G0(4, 4, t, e);
}
function jL(t, e) {
  if (typeof e == "function")
    return (
      (t = t()),
      e(t),
      function () {
        e(null);
      }
    );
  if (e != null)
    return (
      (t = t()),
      (e.current = t),
      function () {
        e.current = null;
      }
    );
}
function WL(t, e, n) {
  return (
    (n = n != null ? n.concat([t]) : null), G0(4, 4, jL.bind(null, e, t), n)
  );
}
function dE() {}
function $L(t, e) {
  var n = _o();
  e = e === void 0 ? null : e;
  var r = n.memoizedState;
  return r !== null && e !== null && lE(e, r[1])
    ? r[0]
    : ((n.memoizedState = [t, e]), t);
}
function XL(t, e) {
  var n = _o();
  e = e === void 0 ? null : e;
  var r = n.memoizedState;
  return r !== null && e !== null && lE(e, r[1])
    ? r[0]
    : ((t = t()), (n.memoizedState = [t, e]), t);
}
function qL(t, e, n) {
  return Ec & 21
    ? (qo(n, e) || ((n = Z3()), (Rn.lanes |= n), (Mc |= n), (t.baseState = !0)),
      e)
    : (t.baseState && ((t.baseState = !1), (yi = !0)), (t.memoizedState = n));
}
function c4(t, e) {
  var n = rn;
  (rn = n !== 0 && 4 > n ? n : 4), t(!0);
  var r = p1.transition;
  p1.transition = {};
  try {
    t(!1), e();
  } finally {
    (rn = n), (p1.transition = r);
  }
}
function YL() {
  return _o().memoizedState;
}
function u4(t, e, n) {
  var r = Ka(t);
  if (
    ((n = {
      lane: r,
      action: n,
      hasEagerState: !1,
      eagerState: null,
      next: null,
    }),
    KL(t))
  )
    ZL(e, n);
  else if (((n = TL(t, e, n, r)), n !== null)) {
    var i = ii();
    Wo(n, t, r, i), QL(n, e, r);
  }
}
function f4(t, e, n) {
  var r = Ka(t),
    i = { lane: r, action: n, hasEagerState: !1, eagerState: null, next: null };
  if (KL(t)) ZL(e, i);
  else {
    var o = t.alternate;
    if (
      t.lanes === 0 &&
      (o === null || o.lanes === 0) &&
      ((o = e.lastRenderedReducer), o !== null)
    )
      try {
        var s = e.lastRenderedState,
          a = o(s, n);
        if (((i.hasEagerState = !0), (i.eagerState = a), qo(a, s))) {
          var l = e.interleaved;
          l === null
            ? ((i.next = i), rE(e))
            : ((i.next = l.next), (l.next = i)),
            (e.interleaved = i);
          return;
        }
      } catch {
      } finally {
      }
    (n = TL(t, e, i, r)),
      n !== null && ((i = ii()), Wo(n, t, r, i), QL(n, e, r));
  }
}
function KL(t) {
  var e = t.alternate;
  return t === Rn || (e !== null && e === Rn);
}
function ZL(t, e) {
  Jd = r0 = !0;
  var n = t.pending;
  n === null ? (e.next = e) : ((e.next = n.next), (n.next = e)),
    (t.pending = e);
}
function QL(t, e, n) {
  if (n & 4194240) {
    var r = e.lanes;
    (r &= t.pendingLanes), (n |= r), (e.lanes = n), Gb(t, n);
  }
}
var i0 = {
    readContext: xo,
    useCallback: Fr,
    useContext: Fr,
    useEffect: Fr,
    useImperativeHandle: Fr,
    useInsertionEffect: Fr,
    useLayoutEffect: Fr,
    useMemo: Fr,
    useReducer: Fr,
    useRef: Fr,
    useState: Fr,
    useDebugValue: Fr,
    useDeferredValue: Fr,
    useTransition: Fr,
    useMutableSource: Fr,
    useSyncExternalStore: Fr,
    useId: Fr,
    unstable_isNewReconciler: !1,
  },
  d4 = {
    readContext: xo,
    useCallback: function (t, e) {
      return (fs().memoizedState = [t, e === void 0 ? null : e]), t;
    },
    useContext: xo,
    useEffect: yT,
    useImperativeHandle: function (t, e, n) {
      return (
        (n = n != null ? n.concat([t]) : null),
        vv(4194308, 4, jL.bind(null, e, t), n)
      );
    },
    useLayoutEffect: function (t, e) {
      return vv(4194308, 4, t, e);
    },
    useInsertionEffect: function (t, e) {
      return vv(4, 2, t, e);
    },
    useMemo: function (t, e) {
      var n = fs();
      return (
        (e = e === void 0 ? null : e), (t = t()), (n.memoizedState = [t, e]), t
      );
    },
    useReducer: function (t, e, n) {
      var r = fs();
      return (
        (e = n !== void 0 ? n(e) : e),
        (r.memoizedState = r.baseState = e),
        (t = {
          pending: null,
          interleaved: null,
          lanes: 0,
          dispatch: null,
          lastRenderedReducer: t,
          lastRenderedState: e,
        }),
        (r.queue = t),
        (t = t.dispatch = u4.bind(null, Rn, t)),
        [r.memoizedState, t]
      );
    },
    useRef: function (t) {
      var e = fs();
      return (t = { current: t }), (e.memoizedState = t);
    },
    useState: vT,
    useDebugValue: dE,
    useDeferredValue: function (t) {
      return (fs().memoizedState = t);
    },
    useTransition: function () {
      var t = vT(!1),
        e = t[0];
      return (t = c4.bind(null, t[1])), (fs().memoizedState = t), [e, t];
    },
    useMutableSource: function () {},
    useSyncExternalStore: function (t, e, n) {
      var r = Rn,
        i = fs();
      if (Sn) {
        if (n === void 0) throw Error(Xe(407));
        n = n();
      } else {
        if (((n = e()), vr === null)) throw Error(Xe(349));
        Ec & 30 || DL(r, e, n);
      }
      i.memoizedState = n;
      var o = { value: n, getSnapshot: e };
      return (
        (i.queue = o),
        yT(zL.bind(null, r, o, t), [t]),
        (r.flags |= 2048),
        Ph(9, UL.bind(null, r, o, n, e), void 0, null),
        n
      );
    },
    useId: function () {
      var t = fs(),
        e = vr.identifierPrefix;
      if (Sn) {
        var n = Qs,
          r = Zs;
        (n = (r & ~(1 << (32 - jo(r) - 1))).toString(32) + n),
          (e = ":" + e + "R" + n),
          (n = Ah++),
          0 < n && (e += "H" + n.toString(32)),
          (e += ":");
      } else (n = l4++), (e = ":" + e + "r" + n.toString(32) + ":");
      return (t.memoizedState = e);
    },
    unstable_isNewReconciler: !1,
  },
  h4 = {
    readContext: xo,
    useCallback: $L,
    useContext: xo,
    useEffect: fE,
    useImperativeHandle: WL,
    useInsertionEffect: VL,
    useLayoutEffect: GL,
    useMemo: XL,
    useReducer: m1,
    useRef: HL,
    useState: function () {
      return m1(Rh);
    },
    useDebugValue: dE,
    useDeferredValue: function (t) {
      var e = _o();
      return qL(e, nr.memoizedState, t);
    },
    useTransition: function () {
      var t = m1(Rh)[0],
        e = _o().memoizedState;
      return [t, e];
    },
    useMutableSource: FL,
    useSyncExternalStore: NL,
    useId: YL,
    unstable_isNewReconciler: !1,
  },
  p4 = {
    readContext: xo,
    useCallback: $L,
    useContext: xo,
    useEffect: fE,
    useImperativeHandle: WL,
    useInsertionEffect: VL,
    useLayoutEffect: GL,
    useMemo: XL,
    useReducer: g1,
    useRef: HL,
    useState: function () {
      return g1(Rh);
    },
    useDebugValue: dE,
    useDeferredValue: function (t) {
      var e = _o();
      return nr === null ? (e.memoizedState = t) : qL(e, nr.memoizedState, t);
    },
    useTransition: function () {
      var t = g1(Rh)[0],
        e = _o().memoizedState;
      return [t, e];
    },
    useMutableSource: FL,
    useSyncExternalStore: NL,
    useId: YL,
    unstable_isNewReconciler: !1,
  };
function bf(t, e) {
  try {
    var n = "",
      r = e;
    do (n += Vz(r)), (r = r.return);
    while (r);
    var i = n;
  } catch (o) {
    i =
      `
Error generating stack: ` +
      o.message +
      `
` +
      o.stack;
  }
  return { value: t, source: e, stack: i, digest: null };
}
function v1(t, e, n) {
  return { value: t, source: null, stack: n ?? null, digest: e ?? null };
}
function MS(t, e) {
  try {
    console.error(e.value);
  } catch (n) {
    setTimeout(function () {
      throw n;
    });
  }
}
var m4 = typeof WeakMap == "function" ? WeakMap : Map;
function JL(t, e, n) {
  (n = na(-1, n)), (n.tag = 3), (n.payload = { element: null });
  var r = e.value;
  return (
    (n.callback = function () {
      s0 || ((s0 = !0), (NS = r)), MS(t, e);
    }),
    n
  );
}
function eI(t, e, n) {
  (n = na(-1, n)), (n.tag = 3);
  var r = t.type.getDerivedStateFromError;
  if (typeof r == "function") {
    var i = e.value;
    (n.payload = function () {
      return r(i);
    }),
      (n.callback = function () {
        MS(t, e);
      });
  }
  var o = t.stateNode;
  return (
    o !== null &&
      typeof o.componentDidCatch == "function" &&
      (n.callback = function () {
        MS(t, e),
          typeof r != "function" &&
            (Ya === null ? (Ya = new Set([this])) : Ya.add(this));
        var s = e.stack;
        this.componentDidCatch(e.value, {
          componentStack: s !== null ? s : "",
        });
      }),
    n
  );
}
function xT(t, e, n) {
  var r = t.pingCache;
  if (r === null) {
    r = t.pingCache = new m4();
    var i = new Set();
    r.set(e, i);
  } else (i = r.get(e)), i === void 0 && ((i = new Set()), r.set(e, i));
  i.has(n) || (i.add(n), (t = R4.bind(null, t, e, n)), e.then(t, t));
}
function _T(t) {
  do {
    var e;
    if (
      ((e = t.tag === 13) &&
        ((e = t.memoizedState), (e = e !== null ? e.dehydrated !== null : !0)),
      e)
    )
      return t;
    t = t.return;
  } while (t !== null);
  return null;
}
function ST(t, e, n, r, i) {
  return t.mode & 1
    ? ((t.flags |= 65536), (t.lanes = i), t)
    : (t === e
        ? (t.flags |= 65536)
        : ((t.flags |= 128),
          (n.flags |= 131072),
          (n.flags &= -52805),
          n.tag === 1 &&
            (n.alternate === null
              ? (n.tag = 17)
              : ((e = na(-1, 1)), (e.tag = 2), qa(n, e, 1))),
          (n.lanes |= 1)),
      t);
}
var g4 = ha.ReactCurrentOwner,
  yi = !1;
function ni(t, e, n, r) {
  e.child = t === null ? IL(e, null, n, r) : Sf(e, t.child, n, r);
}
function wT(t, e, n, r, i) {
  n = n.render;
  var o = e.ref;
  return (
    df(e, i),
    (r = cE(t, e, n, r, o, i)),
    (n = uE()),
    t !== null && !yi
      ? ((e.updateQueue = t.updateQueue),
        (e.flags &= -2053),
        (t.lanes &= ~i),
        aa(t, e, i))
      : (Sn && n && Zb(e), (e.flags |= 1), ni(t, e, r, i), e.child)
  );
}
function bT(t, e, n, r, i) {
  if (t === null) {
    var o = n.type;
    return typeof o == "function" &&
      !_E(o) &&
      o.defaultProps === void 0 &&
      n.compare === null &&
      n.defaultProps === void 0
      ? ((e.tag = 15), (e.type = o), tI(t, e, o, r, i))
      : ((t = Sv(n.type, null, r, e, e.mode, i)),
        (t.ref = e.ref),
        (t.return = e),
        (e.child = t));
  }
  if (((o = t.child), !(t.lanes & i))) {
    var s = o.memoizedProps;
    if (
      ((n = n.compare), (n = n !== null ? n : wh), n(s, r) && t.ref === e.ref)
    )
      return aa(t, e, i);
  }
  return (
    (e.flags |= 1),
    (t = Za(o, r)),
    (t.ref = e.ref),
    (t.return = e),
    (e.child = t)
  );
}
function tI(t, e, n, r, i) {
  if (t !== null) {
    var o = t.memoizedProps;
    if (wh(o, r) && t.ref === e.ref)
      if (((yi = !1), (e.pendingProps = r = o), (t.lanes & i) !== 0))
        t.flags & 131072 && (yi = !0);
      else return (e.lanes = t.lanes), aa(t, e, i);
  }
  return CS(t, e, n, r, i);
}
function nI(t, e, n) {
  var r = e.pendingProps,
    i = r.children,
    o = t !== null ? t.memoizedState : null;
  if (r.mode === "hidden")
    if (!(e.mode & 1))
      (e.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        hn(Ku, zi),
        (zi |= n);
    else {
      if (!(n & 1073741824))
        return (
          (t = o !== null ? o.baseLanes | n : n),
          (e.lanes = e.childLanes = 1073741824),
          (e.memoizedState = {
            baseLanes: t,
            cachePool: null,
            transitions: null,
          }),
          (e.updateQueue = null),
          hn(Ku, zi),
          (zi |= t),
          null
        );
      (e.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        (r = o !== null ? o.baseLanes : n),
        hn(Ku, zi),
        (zi |= r);
    }
  else
    o !== null ? ((r = o.baseLanes | n), (e.memoizedState = null)) : (r = n),
      hn(Ku, zi),
      (zi |= r);
  return ni(t, e, i, n), e.child;
}
function rI(t, e) {
  var n = e.ref;
  ((t === null && n !== null) || (t !== null && t.ref !== n)) &&
    ((e.flags |= 512), (e.flags |= 2097152));
}
function CS(t, e, n, r, i) {
  var o = _i(n) ? wc : jr.current;
  return (
    (o = xf(e, o)),
    df(e, i),
    (n = cE(t, e, n, r, o, i)),
    (r = uE()),
    t !== null && !yi
      ? ((e.updateQueue = t.updateQueue),
        (e.flags &= -2053),
        (t.lanes &= ~i),
        aa(t, e, i))
      : (Sn && r && Zb(e), (e.flags |= 1), ni(t, e, n, i), e.child)
  );
}
function ET(t, e, n, r, i) {
  if (_i(n)) {
    var o = !0;
    Kv(e);
  } else o = !1;
  if ((df(e, i), e.stateNode === null))
    yv(t, e), PL(e, n, r), ES(e, n, r, i), (r = !0);
  else if (t === null) {
    var s = e.stateNode,
      a = e.memoizedProps;
    s.props = a;
    var l = s.context,
      c = n.contextType;
    typeof c == "object" && c !== null
      ? (c = xo(c))
      : ((c = _i(n) ? wc : jr.current), (c = xf(e, c)));
    var u = n.getDerivedStateFromProps,
      h =
        typeof u == "function" ||
        typeof s.getSnapshotBeforeUpdate == "function";
    h ||
      (typeof s.UNSAFE_componentWillReceiveProps != "function" &&
        typeof s.componentWillReceiveProps != "function") ||
      ((a !== r || l !== c) && mT(e, s, r, c)),
      (Na = !1);
    var p = e.memoizedState;
    (s.state = p),
      t0(e, r, s, i),
      (l = e.memoizedState),
      a !== r || p !== l || xi.current || Na
        ? (typeof u == "function" && (bS(e, n, u, r), (l = e.memoizedState)),
          (a = Na || pT(e, n, a, r, p, l, c))
            ? (h ||
                (typeof s.UNSAFE_componentWillMount != "function" &&
                  typeof s.componentWillMount != "function") ||
                (typeof s.componentWillMount == "function" &&
                  s.componentWillMount(),
                typeof s.UNSAFE_componentWillMount == "function" &&
                  s.UNSAFE_componentWillMount()),
              typeof s.componentDidMount == "function" && (e.flags |= 4194308))
            : (typeof s.componentDidMount == "function" && (e.flags |= 4194308),
              (e.memoizedProps = r),
              (e.memoizedState = l)),
          (s.props = r),
          (s.state = l),
          (s.context = c),
          (r = a))
        : (typeof s.componentDidMount == "function" && (e.flags |= 4194308),
          (r = !1));
  } else {
    (s = e.stateNode),
      AL(t, e),
      (a = e.memoizedProps),
      (c = e.type === e.elementType ? a : Fo(e.type, a)),
      (s.props = c),
      (h = e.pendingProps),
      (p = s.context),
      (l = n.contextType),
      typeof l == "object" && l !== null
        ? (l = xo(l))
        : ((l = _i(n) ? wc : jr.current), (l = xf(e, l)));
    var m = n.getDerivedStateFromProps;
    (u =
      typeof m == "function" ||
      typeof s.getSnapshotBeforeUpdate == "function") ||
      (typeof s.UNSAFE_componentWillReceiveProps != "function" &&
        typeof s.componentWillReceiveProps != "function") ||
      ((a !== h || p !== l) && mT(e, s, r, l)),
      (Na = !1),
      (p = e.memoizedState),
      (s.state = p),
      t0(e, r, s, i);
    var v = e.memoizedState;
    a !== h || p !== v || xi.current || Na
      ? (typeof m == "function" && (bS(e, n, m, r), (v = e.memoizedState)),
        (c = Na || pT(e, n, c, r, p, v, l) || !1)
          ? (u ||
              (typeof s.UNSAFE_componentWillUpdate != "function" &&
                typeof s.componentWillUpdate != "function") ||
              (typeof s.componentWillUpdate == "function" &&
                s.componentWillUpdate(r, v, l),
              typeof s.UNSAFE_componentWillUpdate == "function" &&
                s.UNSAFE_componentWillUpdate(r, v, l)),
            typeof s.componentDidUpdate == "function" && (e.flags |= 4),
            typeof s.getSnapshotBeforeUpdate == "function" && (e.flags |= 1024))
          : (typeof s.componentDidUpdate != "function" ||
              (a === t.memoizedProps && p === t.memoizedState) ||
              (e.flags |= 4),
            typeof s.getSnapshotBeforeUpdate != "function" ||
              (a === t.memoizedProps && p === t.memoizedState) ||
              (e.flags |= 1024),
            (e.memoizedProps = r),
            (e.memoizedState = v)),
        (s.props = r),
        (s.state = v),
        (s.context = l),
        (r = c))
      : (typeof s.componentDidUpdate != "function" ||
          (a === t.memoizedProps && p === t.memoizedState) ||
          (e.flags |= 4),
        typeof s.getSnapshotBeforeUpdate != "function" ||
          (a === t.memoizedProps && p === t.memoizedState) ||
          (e.flags |= 1024),
        (r = !1));
  }
  return TS(t, e, n, r, o, i);
}
function TS(t, e, n, r, i, o) {
  rI(t, e);
  var s = (e.flags & 128) !== 0;
  if (!r && !s) return i && cT(e, n, !1), aa(t, e, o);
  (r = e.stateNode), (g4.current = e);
  var a =
    s && typeof n.getDerivedStateFromError != "function" ? null : r.render();
  return (
    (e.flags |= 1),
    t !== null && s
      ? ((e.child = Sf(e, t.child, null, o)), (e.child = Sf(e, null, a, o)))
      : ni(t, e, a, o),
    (e.memoizedState = r.state),
    i && cT(e, n, !0),
    e.child
  );
}
function iI(t) {
  var e = t.stateNode;
  e.pendingContext
    ? lT(t, e.pendingContext, e.pendingContext !== e.context)
    : e.context && lT(t, e.context, !1),
    oE(t, e.containerInfo);
}
function MT(t, e, n, r, i) {
  return _f(), Jb(i), (e.flags |= 256), ni(t, e, n, r), e.child;
}
var AS = { dehydrated: null, treeContext: null, retryLane: 0 };
function RS(t) {
  return { baseLanes: t, cachePool: null, transitions: null };
}
function oI(t, e, n) {
  var r = e.pendingProps,
    i = Mn.current,
    o = !1,
    s = (e.flags & 128) !== 0,
    a;
  if (
    ((a = s) ||
      (a = t !== null && t.memoizedState === null ? !1 : (i & 2) !== 0),
    a
      ? ((o = !0), (e.flags &= -129))
      : (t === null || t.memoizedState !== null) && (i |= 1),
    hn(Mn, i & 1),
    t === null)
  )
    return (
      SS(e),
      (t = e.memoizedState),
      t !== null && ((t = t.dehydrated), t !== null)
        ? (e.mode & 1
            ? t.data === "$!"
              ? (e.lanes = 8)
              : (e.lanes = 1073741824)
            : (e.lanes = 1),
          null)
        : ((s = r.children),
          (t = r.fallback),
          o
            ? ((r = e.mode),
              (o = e.child),
              (s = { mode: "hidden", children: s }),
              !(r & 1) && o !== null
                ? ((o.childLanes = 0), (o.pendingProps = s))
                : (o = $0(s, r, 0, null)),
              (t = dc(t, r, n, null)),
              (o.return = e),
              (t.return = e),
              (o.sibling = t),
              (e.child = o),
              (e.child.memoizedState = RS(n)),
              (e.memoizedState = AS),
              t)
            : hE(e, s))
    );
  if (((i = t.memoizedState), i !== null && ((a = i.dehydrated), a !== null)))
    return v4(t, e, s, r, a, i, n);
  if (o) {
    (o = r.fallback), (s = e.mode), (i = t.child), (a = i.sibling);
    var l = { mode: "hidden", children: r.children };
    return (
      !(s & 1) && e.child !== i
        ? ((r = e.child),
          (r.childLanes = 0),
          (r.pendingProps = l),
          (e.deletions = null))
        : ((r = Za(i, l)), (r.subtreeFlags = i.subtreeFlags & 14680064)),
      a !== null ? (o = Za(a, o)) : ((o = dc(o, s, n, null)), (o.flags |= 2)),
      (o.return = e),
      (r.return = e),
      (r.sibling = o),
      (e.child = r),
      (r = o),
      (o = e.child),
      (s = t.child.memoizedState),
      (s =
        s === null
          ? RS(n)
          : {
              baseLanes: s.baseLanes | n,
              cachePool: null,
              transitions: s.transitions,
            }),
      (o.memoizedState = s),
      (o.childLanes = t.childLanes & ~n),
      (e.memoizedState = AS),
      r
    );
  }
  return (
    (o = t.child),
    (t = o.sibling),
    (r = Za(o, { mode: "visible", children: r.children })),
    !(e.mode & 1) && (r.lanes = n),
    (r.return = e),
    (r.sibling = null),
    t !== null &&
      ((n = e.deletions),
      n === null ? ((e.deletions = [t]), (e.flags |= 16)) : n.push(t)),
    (e.child = r),
    (e.memoizedState = null),
    r
  );
}
function hE(t, e) {
  return (
    (e = $0({ mode: "visible", children: e }, t.mode, 0, null)),
    (e.return = t),
    (t.child = e)
  );
}
function Hm(t, e, n, r) {
  return (
    r !== null && Jb(r),
    Sf(e, t.child, null, n),
    (t = hE(e, e.pendingProps.children)),
    (t.flags |= 2),
    (e.memoizedState = null),
    t
  );
}
function v4(t, e, n, r, i, o, s) {
  if (n)
    return e.flags & 256
      ? ((e.flags &= -257), (r = v1(Error(Xe(422)))), Hm(t, e, s, r))
      : e.memoizedState !== null
      ? ((e.child = t.child), (e.flags |= 128), null)
      : ((o = r.fallback),
        (i = e.mode),
        (r = $0({ mode: "visible", children: r.children }, i, 0, null)),
        (o = dc(o, i, s, null)),
        (o.flags |= 2),
        (r.return = e),
        (o.return = e),
        (r.sibling = o),
        (e.child = r),
        e.mode & 1 && Sf(e, t.child, null, s),
        (e.child.memoizedState = RS(s)),
        (e.memoizedState = AS),
        o);
  if (!(e.mode & 1)) return Hm(t, e, s, null);
  if (i.data === "$!") {
    if (((r = i.nextSibling && i.nextSibling.dataset), r)) var a = r.dgst;
    return (
      (r = a), (o = Error(Xe(419))), (r = v1(o, r, void 0)), Hm(t, e, s, r)
    );
  }
  if (((a = (s & t.childLanes) !== 0), yi || a)) {
    if (((r = vr), r !== null)) {
      switch (s & -s) {
        case 4:
          i = 2;
          break;
        case 16:
          i = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          i = 32;
          break;
        case 536870912:
          i = 268435456;
          break;
        default:
          i = 0;
      }
      (i = i & (r.suspendedLanes | s) ? 0 : i),
        i !== 0 &&
          i !== o.retryLane &&
          ((o.retryLane = i), sa(t, i), Wo(r, t, i, -1));
    }
    return xE(), (r = v1(Error(Xe(421)))), Hm(t, e, s, r);
  }
  return i.data === "$?"
    ? ((e.flags |= 128),
      (e.child = t.child),
      (e = P4.bind(null, t)),
      (i._reactRetry = e),
      null)
    : ((t = o.treeContext),
      (Hi = Xa(i.nextSibling)),
      ($i = e),
      (Sn = !0),
      (ko = null),
      t !== null &&
        ((ho[po++] = Zs),
        (ho[po++] = Qs),
        (ho[po++] = bc),
        (Zs = t.id),
        (Qs = t.overflow),
        (bc = e)),
      (e = hE(e, r.children)),
      (e.flags |= 4096),
      e);
}
function CT(t, e, n) {
  t.lanes |= e;
  var r = t.alternate;
  r !== null && (r.lanes |= e), wS(t.return, e, n);
}
function y1(t, e, n, r, i) {
  var o = t.memoizedState;
  o === null
    ? (t.memoizedState = {
        isBackwards: e,
        rendering: null,
        renderingStartTime: 0,
        last: r,
        tail: n,
        tailMode: i,
      })
    : ((o.isBackwards = e),
      (o.rendering = null),
      (o.renderingStartTime = 0),
      (o.last = r),
      (o.tail = n),
      (o.tailMode = i));
}
function sI(t, e, n) {
  var r = e.pendingProps,
    i = r.revealOrder,
    o = r.tail;
  if ((ni(t, e, r.children, n), (r = Mn.current), r & 2))
    (r = (r & 1) | 2), (e.flags |= 128);
  else {
    if (t !== null && t.flags & 128)
      e: for (t = e.child; t !== null; ) {
        if (t.tag === 13) t.memoizedState !== null && CT(t, n, e);
        else if (t.tag === 19) CT(t, n, e);
        else if (t.child !== null) {
          (t.child.return = t), (t = t.child);
          continue;
        }
        if (t === e) break e;
        for (; t.sibling === null; ) {
          if (t.return === null || t.return === e) break e;
          t = t.return;
        }
        (t.sibling.return = t.return), (t = t.sibling);
      }
    r &= 1;
  }
  if ((hn(Mn, r), !(e.mode & 1))) e.memoizedState = null;
  else
    switch (i) {
      case "forwards":
        for (n = e.child, i = null; n !== null; )
          (t = n.alternate),
            t !== null && n0(t) === null && (i = n),
            (n = n.sibling);
        (n = i),
          n === null
            ? ((i = e.child), (e.child = null))
            : ((i = n.sibling), (n.sibling = null)),
          y1(e, !1, i, n, o);
        break;
      case "backwards":
        for (n = null, i = e.child, e.child = null; i !== null; ) {
          if (((t = i.alternate), t !== null && n0(t) === null)) {
            e.child = i;
            break;
          }
          (t = i.sibling), (i.sibling = n), (n = i), (i = t);
        }
        y1(e, !0, n, null, o);
        break;
      case "together":
        y1(e, !1, null, null, void 0);
        break;
      default:
        e.memoizedState = null;
    }
  return e.child;
}
function yv(t, e) {
  !(e.mode & 1) &&
    t !== null &&
    ((t.alternate = null), (e.alternate = null), (e.flags |= 2));
}
function aa(t, e, n) {
  if (
    (t !== null && (e.dependencies = t.dependencies),
    (Mc |= e.lanes),
    !(n & e.childLanes))
  )
    return null;
  if (t !== null && e.child !== t.child) throw Error(Xe(153));
  if (e.child !== null) {
    for (
      t = e.child, n = Za(t, t.pendingProps), e.child = n, n.return = e;
      t.sibling !== null;

    )
      (t = t.sibling), (n = n.sibling = Za(t, t.pendingProps)), (n.return = e);
    n.sibling = null;
  }
  return e.child;
}
function y4(t, e, n) {
  switch (e.tag) {
    case 3:
      iI(e), _f();
      break;
    case 5:
      OL(e);
      break;
    case 1:
      _i(e.type) && Kv(e);
      break;
    case 4:
      oE(e, e.stateNode.containerInfo);
      break;
    case 10:
      var r = e.type._context,
        i = e.memoizedProps.value;
      hn(Jv, r._currentValue), (r._currentValue = i);
      break;
    case 13:
      if (((r = e.memoizedState), r !== null))
        return r.dehydrated !== null
          ? (hn(Mn, Mn.current & 1), (e.flags |= 128), null)
          : n & e.child.childLanes
          ? oI(t, e, n)
          : (hn(Mn, Mn.current & 1),
            (t = aa(t, e, n)),
            t !== null ? t.sibling : null);
      hn(Mn, Mn.current & 1);
      break;
    case 19:
      if (((r = (n & e.childLanes) !== 0), t.flags & 128)) {
        if (r) return sI(t, e, n);
        e.flags |= 128;
      }
      if (
        ((i = e.memoizedState),
        i !== null &&
          ((i.rendering = null), (i.tail = null), (i.lastEffect = null)),
        hn(Mn, Mn.current),
        r)
      )
        break;
      return null;
    case 22:
    case 23:
      return (e.lanes = 0), nI(t, e, n);
  }
  return aa(t, e, n);
}
var aI, PS, lI, cI;
aI = function (t, e) {
  for (var n = e.child; n !== null; ) {
    if (n.tag === 5 || n.tag === 6) t.appendChild(n.stateNode);
    else if (n.tag !== 4 && n.child !== null) {
      (n.child.return = n), (n = n.child);
      continue;
    }
    if (n === e) break;
    for (; n.sibling === null; ) {
      if (n.return === null || n.return === e) return;
      n = n.return;
    }
    (n.sibling.return = n.return), (n = n.sibling);
  }
};
PS = function () {};
lI = function (t, e, n, r) {
  var i = t.memoizedProps;
  if (i !== r) {
    (t = e.stateNode), rc(vs.current);
    var o = null;
    switch (n) {
      case "input":
        (i = Q_(t, i)), (r = Q_(t, r)), (o = []);
        break;
      case "select":
        (i = Ln({}, i, { value: void 0 })),
          (r = Ln({}, r, { value: void 0 })),
          (o = []);
        break;
      case "textarea":
        (i = tS(t, i)), (r = tS(t, r)), (o = []);
        break;
      default:
        typeof i.onClick != "function" &&
          typeof r.onClick == "function" &&
          (t.onclick = qv);
    }
    rS(n, r);
    var s;
    n = null;
    for (c in i)
      if (!r.hasOwnProperty(c) && i.hasOwnProperty(c) && i[c] != null)
        if (c === "style") {
          var a = i[c];
          for (s in a) a.hasOwnProperty(s) && (n || (n = {}), (n[s] = ""));
        } else
          c !== "dangerouslySetInnerHTML" &&
            c !== "children" &&
            c !== "suppressContentEditableWarning" &&
            c !== "suppressHydrationWarning" &&
            c !== "autoFocus" &&
            (mh.hasOwnProperty(c)
              ? o || (o = [])
              : (o = o || []).push(c, null));
    for (c in r) {
      var l = r[c];
      if (
        ((a = i != null ? i[c] : void 0),
        r.hasOwnProperty(c) && l !== a && (l != null || a != null))
      )
        if (c === "style")
          if (a) {
            for (s in a)
              !a.hasOwnProperty(s) ||
                (l && l.hasOwnProperty(s)) ||
                (n || (n = {}), (n[s] = ""));
            for (s in l)
              l.hasOwnProperty(s) &&
                a[s] !== l[s] &&
                (n || (n = {}), (n[s] = l[s]));
          } else n || (o || (o = []), o.push(c, n)), (n = l);
        else
          c === "dangerouslySetInnerHTML"
            ? ((l = l ? l.__html : void 0),
              (a = a ? a.__html : void 0),
              l != null && a !== l && (o = o || []).push(c, l))
            : c === "children"
            ? (typeof l != "string" && typeof l != "number") ||
              (o = o || []).push(c, "" + l)
            : c !== "suppressContentEditableWarning" &&
              c !== "suppressHydrationWarning" &&
              (mh.hasOwnProperty(c)
                ? (l != null && c === "onScroll" && vn("scroll", t),
                  o || a === l || (o = []))
                : (o = o || []).push(c, l));
    }
    n && (o = o || []).push("style", n);
    var c = o;
    (e.updateQueue = c) && (e.flags |= 4);
  }
};
cI = function (t, e, n, r) {
  n !== r && (e.flags |= 4);
};
function bd(t, e) {
  if (!Sn)
    switch (t.tailMode) {
      case "hidden":
        e = t.tail;
        for (var n = null; e !== null; )
          e.alternate !== null && (n = e), (e = e.sibling);
        n === null ? (t.tail = null) : (n.sibling = null);
        break;
      case "collapsed":
        n = t.tail;
        for (var r = null; n !== null; )
          n.alternate !== null && (r = n), (n = n.sibling);
        r === null
          ? e || t.tail === null
            ? (t.tail = null)
            : (t.tail.sibling = null)
          : (r.sibling = null);
    }
}
function Nr(t) {
  var e = t.alternate !== null && t.alternate.child === t.child,
    n = 0,
    r = 0;
  if (e)
    for (var i = t.child; i !== null; )
      (n |= i.lanes | i.childLanes),
        (r |= i.subtreeFlags & 14680064),
        (r |= i.flags & 14680064),
        (i.return = t),
        (i = i.sibling);
  else
    for (i = t.child; i !== null; )
      (n |= i.lanes | i.childLanes),
        (r |= i.subtreeFlags),
        (r |= i.flags),
        (i.return = t),
        (i = i.sibling);
  return (t.subtreeFlags |= r), (t.childLanes = n), e;
}
function x4(t, e, n) {
  var r = e.pendingProps;
  switch ((Qb(e), e.tag)) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return Nr(e), null;
    case 1:
      return _i(e.type) && Yv(), Nr(e), null;
    case 3:
      return (
        (r = e.stateNode),
        wf(),
        yn(xi),
        yn(jr),
        aE(),
        r.pendingContext &&
          ((r.context = r.pendingContext), (r.pendingContext = null)),
        (t === null || t.child === null) &&
          (km(e)
            ? (e.flags |= 4)
            : t === null ||
              (t.memoizedState.isDehydrated && !(e.flags & 256)) ||
              ((e.flags |= 1024), ko !== null && (zS(ko), (ko = null)))),
        PS(t, e),
        Nr(e),
        null
      );
    case 5:
      sE(e);
      var i = rc(Th.current);
      if (((n = e.type), t !== null && e.stateNode != null))
        lI(t, e, n, r, i),
          t.ref !== e.ref && ((e.flags |= 512), (e.flags |= 2097152));
      else {
        if (!r) {
          if (e.stateNode === null) throw Error(Xe(166));
          return Nr(e), null;
        }
        if (((t = rc(vs.current)), km(e))) {
          (r = e.stateNode), (n = e.type);
          var o = e.memoizedProps;
          switch (((r[hs] = e), (r[Mh] = o), (t = (e.mode & 1) !== 0), n)) {
            case "dialog":
              vn("cancel", r), vn("close", r);
              break;
            case "iframe":
            case "object":
            case "embed":
              vn("load", r);
              break;
            case "video":
            case "audio":
              for (i = 0; i < jd.length; i++) vn(jd[i], r);
              break;
            case "source":
              vn("error", r);
              break;
            case "img":
            case "image":
            case "link":
              vn("error", r), vn("load", r);
              break;
            case "details":
              vn("toggle", r);
              break;
            case "input":
              NC(r, o), vn("invalid", r);
              break;
            case "select":
              (r._wrapperState = { wasMultiple: !!o.multiple }),
                vn("invalid", r);
              break;
            case "textarea":
              UC(r, o), vn("invalid", r);
          }
          rS(n, o), (i = null);
          for (var s in o)
            if (o.hasOwnProperty(s)) {
              var a = o[s];
              s === "children"
                ? typeof a == "string"
                  ? r.textContent !== a &&
                    (o.suppressHydrationWarning !== !0 &&
                      zm(r.textContent, a, t),
                    (i = ["children", a]))
                  : typeof a == "number" &&
                    r.textContent !== "" + a &&
                    (o.suppressHydrationWarning !== !0 &&
                      zm(r.textContent, a, t),
                    (i = ["children", "" + a]))
                : mh.hasOwnProperty(s) &&
                  a != null &&
                  s === "onScroll" &&
                  vn("scroll", r);
            }
          switch (n) {
            case "input":
              Pm(r), DC(r, o, !0);
              break;
            case "textarea":
              Pm(r), zC(r);
              break;
            case "select":
            case "option":
              break;
            default:
              typeof o.onClick == "function" && (r.onclick = qv);
          }
          (r = i), (e.updateQueue = r), r !== null && (e.flags |= 4);
        } else {
          (s = i.nodeType === 9 ? i : i.ownerDocument),
            t === "http://www.w3.org/1999/xhtml" && (t = D3(n)),
            t === "http://www.w3.org/1999/xhtml"
              ? n === "script"
                ? ((t = s.createElement("div")),
                  (t.innerHTML = "<script></script>"),
                  (t = t.removeChild(t.firstChild)))
                : typeof r.is == "string"
                ? (t = s.createElement(n, { is: r.is }))
                : ((t = s.createElement(n)),
                  n === "select" &&
                    ((s = t),
                    r.multiple
                      ? (s.multiple = !0)
                      : r.size && (s.size = r.size)))
              : (t = s.createElementNS(t, n)),
            (t[hs] = e),
            (t[Mh] = r),
            aI(t, e, !1, !1),
            (e.stateNode = t);
          e: {
            switch (((s = iS(n, r)), n)) {
              case "dialog":
                vn("cancel", t), vn("close", t), (i = r);
                break;
              case "iframe":
              case "object":
              case "embed":
                vn("load", t), (i = r);
                break;
              case "video":
              case "audio":
                for (i = 0; i < jd.length; i++) vn(jd[i], t);
                i = r;
                break;
              case "source":
                vn("error", t), (i = r);
                break;
              case "img":
              case "image":
              case "link":
                vn("error", t), vn("load", t), (i = r);
                break;
              case "details":
                vn("toggle", t), (i = r);
                break;
              case "input":
                NC(t, r), (i = Q_(t, r)), vn("invalid", t);
                break;
              case "option":
                i = r;
                break;
              case "select":
                (t._wrapperState = { wasMultiple: !!r.multiple }),
                  (i = Ln({}, r, { value: void 0 })),
                  vn("invalid", t);
                break;
              case "textarea":
                UC(t, r), (i = tS(t, r)), vn("invalid", t);
                break;
              default:
                i = r;
            }
            rS(n, i), (a = i);
            for (o in a)
              if (a.hasOwnProperty(o)) {
                var l = a[o];
                o === "style"
                  ? k3(t, l)
                  : o === "dangerouslySetInnerHTML"
                  ? ((l = l ? l.__html : void 0), l != null && U3(t, l))
                  : o === "children"
                  ? typeof l == "string"
                    ? (n !== "textarea" || l !== "") && gh(t, l)
                    : typeof l == "number" && gh(t, "" + l)
                  : o !== "suppressContentEditableWarning" &&
                    o !== "suppressHydrationWarning" &&
                    o !== "autoFocus" &&
                    (mh.hasOwnProperty(o)
                      ? l != null && o === "onScroll" && vn("scroll", t)
                      : l != null && Ub(t, o, l, s));
              }
            switch (n) {
              case "input":
                Pm(t), DC(t, r, !1);
                break;
              case "textarea":
                Pm(t), zC(t);
                break;
              case "option":
                r.value != null && t.setAttribute("value", "" + nl(r.value));
                break;
              case "select":
                (t.multiple = !!r.multiple),
                  (o = r.value),
                  o != null
                    ? lf(t, !!r.multiple, o, !1)
                    : r.defaultValue != null &&
                      lf(t, !!r.multiple, r.defaultValue, !0);
                break;
              default:
                typeof i.onClick == "function" && (t.onclick = qv);
            }
            switch (n) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                r = !!r.autoFocus;
                break e;
              case "img":
                r = !0;
                break e;
              default:
                r = !1;
            }
          }
          r && (e.flags |= 4);
        }
        e.ref !== null && ((e.flags |= 512), (e.flags |= 2097152));
      }
      return Nr(e), null;
    case 6:
      if (t && e.stateNode != null) cI(t, e, t.memoizedProps, r);
      else {
        if (typeof r != "string" && e.stateNode === null) throw Error(Xe(166));
        if (((n = rc(Th.current)), rc(vs.current), km(e))) {
          if (
            ((r = e.stateNode),
            (n = e.memoizedProps),
            (r[hs] = e),
            (o = r.nodeValue !== n) && ((t = $i), t !== null))
          )
            switch (t.tag) {
              case 3:
                zm(r.nodeValue, n, (t.mode & 1) !== 0);
                break;
              case 5:
                t.memoizedProps.suppressHydrationWarning !== !0 &&
                  zm(r.nodeValue, n, (t.mode & 1) !== 0);
            }
          o && (e.flags |= 4);
        } else
          (r = (n.nodeType === 9 ? n : n.ownerDocument).createTextNode(r)),
            (r[hs] = e),
            (e.stateNode = r);
      }
      return Nr(e), null;
    case 13:
      if (
        (yn(Mn),
        (r = e.memoizedState),
        t === null ||
          (t.memoizedState !== null && t.memoizedState.dehydrated !== null))
      ) {
        if (Sn && Hi !== null && e.mode & 1 && !(e.flags & 128))
          CL(), _f(), (e.flags |= 98560), (o = !1);
        else if (((o = km(e)), r !== null && r.dehydrated !== null)) {
          if (t === null) {
            if (!o) throw Error(Xe(318));
            if (
              ((o = e.memoizedState),
              (o = o !== null ? o.dehydrated : null),
              !o)
            )
              throw Error(Xe(317));
            o[hs] = e;
          } else
            _f(), !(e.flags & 128) && (e.memoizedState = null), (e.flags |= 4);
          Nr(e), (o = !1);
        } else ko !== null && (zS(ko), (ko = null)), (o = !0);
        if (!o) return e.flags & 65536 ? e : null;
      }
      return e.flags & 128
        ? ((e.lanes = n), e)
        : ((r = r !== null),
          r !== (t !== null && t.memoizedState !== null) &&
            r &&
            ((e.child.flags |= 8192),
            e.mode & 1 &&
              (t === null || Mn.current & 1 ? ir === 0 && (ir = 3) : xE())),
          e.updateQueue !== null && (e.flags |= 4),
          Nr(e),
          null);
    case 4:
      return (
        wf(), PS(t, e), t === null && bh(e.stateNode.containerInfo), Nr(e), null
      );
    case 10:
      return nE(e.type._context), Nr(e), null;
    case 17:
      return _i(e.type) && Yv(), Nr(e), null;
    case 19:
      if ((yn(Mn), (o = e.memoizedState), o === null)) return Nr(e), null;
      if (((r = (e.flags & 128) !== 0), (s = o.rendering), s === null))
        if (r) bd(o, !1);
        else {
          if (ir !== 0 || (t !== null && t.flags & 128))
            for (t = e.child; t !== null; ) {
              if (((s = n0(t)), s !== null)) {
                for (
                  e.flags |= 128,
                    bd(o, !1),
                    r = s.updateQueue,
                    r !== null && ((e.updateQueue = r), (e.flags |= 4)),
                    e.subtreeFlags = 0,
                    r = n,
                    n = e.child;
                  n !== null;

                )
                  (o = n),
                    (t = r),
                    (o.flags &= 14680066),
                    (s = o.alternate),
                    s === null
                      ? ((o.childLanes = 0),
                        (o.lanes = t),
                        (o.child = null),
                        (o.subtreeFlags = 0),
                        (o.memoizedProps = null),
                        (o.memoizedState = null),
                        (o.updateQueue = null),
                        (o.dependencies = null),
                        (o.stateNode = null))
                      : ((o.childLanes = s.childLanes),
                        (o.lanes = s.lanes),
                        (o.child = s.child),
                        (o.subtreeFlags = 0),
                        (o.deletions = null),
                        (o.memoizedProps = s.memoizedProps),
                        (o.memoizedState = s.memoizedState),
                        (o.updateQueue = s.updateQueue),
                        (o.type = s.type),
                        (t = s.dependencies),
                        (o.dependencies =
                          t === null
                            ? null
                            : {
                                lanes: t.lanes,
                                firstContext: t.firstContext,
                              })),
                    (n = n.sibling);
                return hn(Mn, (Mn.current & 1) | 2), e.child;
              }
              t = t.sibling;
            }
          o.tail !== null &&
            $n() > Ef &&
            ((e.flags |= 128), (r = !0), bd(o, !1), (e.lanes = 4194304));
        }
      else {
        if (!r)
          if (((t = n0(s)), t !== null)) {
            if (
              ((e.flags |= 128),
              (r = !0),
              (n = t.updateQueue),
              n !== null && ((e.updateQueue = n), (e.flags |= 4)),
              bd(o, !0),
              o.tail === null && o.tailMode === "hidden" && !s.alternate && !Sn)
            )
              return Nr(e), null;
          } else
            2 * $n() - o.renderingStartTime > Ef &&
              n !== 1073741824 &&
              ((e.flags |= 128), (r = !0), bd(o, !1), (e.lanes = 4194304));
        o.isBackwards
          ? ((s.sibling = e.child), (e.child = s))
          : ((n = o.last),
            n !== null ? (n.sibling = s) : (e.child = s),
            (o.last = s));
      }
      return o.tail !== null
        ? ((e = o.tail),
          (o.rendering = e),
          (o.tail = e.sibling),
          (o.renderingStartTime = $n()),
          (e.sibling = null),
          (n = Mn.current),
          hn(Mn, r ? (n & 1) | 2 : n & 1),
          e)
        : (Nr(e), null);
    case 22:
    case 23:
      return (
        yE(),
        (r = e.memoizedState !== null),
        t !== null && (t.memoizedState !== null) !== r && (e.flags |= 8192),
        r && e.mode & 1
          ? zi & 1073741824 && (Nr(e), e.subtreeFlags & 6 && (e.flags |= 8192))
          : Nr(e),
        null
      );
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(Xe(156, e.tag));
}
function _4(t, e) {
  switch ((Qb(e), e.tag)) {
    case 1:
      return (
        _i(e.type) && Yv(),
        (t = e.flags),
        t & 65536 ? ((e.flags = (t & -65537) | 128), e) : null
      );
    case 3:
      return (
        wf(),
        yn(xi),
        yn(jr),
        aE(),
        (t = e.flags),
        t & 65536 && !(t & 128) ? ((e.flags = (t & -65537) | 128), e) : null
      );
    case 5:
      return sE(e), null;
    case 13:
      if (
        (yn(Mn), (t = e.memoizedState), t !== null && t.dehydrated !== null)
      ) {
        if (e.alternate === null) throw Error(Xe(340));
        _f();
      }
      return (
        (t = e.flags), t & 65536 ? ((e.flags = (t & -65537) | 128), e) : null
      );
    case 19:
      return yn(Mn), null;
    case 4:
      return wf(), null;
    case 10:
      return nE(e.type._context), null;
    case 22:
    case 23:
      return yE(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var Vm = !1,
  Br = !1,
  S4 = typeof WeakSet == "function" ? WeakSet : Set,
  lt = null;
function Yu(t, e) {
  var n = t.ref;
  if (n !== null)
    if (typeof n == "function")
      try {
        n(null);
      } catch (r) {
        Nn(t, e, r);
      }
    else n.current = null;
}
function LS(t, e, n) {
  try {
    n();
  } catch (r) {
    Nn(t, e, r);
  }
}
var TT = !1;
function w4(t, e) {
  if (((pS = Wv), (t = hL()), Kb(t))) {
    if ("selectionStart" in t)
      var n = { start: t.selectionStart, end: t.selectionEnd };
    else
      e: {
        n = ((n = t.ownerDocument) && n.defaultView) || window;
        var r = n.getSelection && n.getSelection();
        if (r && r.rangeCount !== 0) {
          n = r.anchorNode;
          var i = r.anchorOffset,
            o = r.focusNode;
          r = r.focusOffset;
          try {
            n.nodeType, o.nodeType;
          } catch {
            n = null;
            break e;
          }
          var s = 0,
            a = -1,
            l = -1,
            c = 0,
            u = 0,
            h = t,
            p = null;
          t: for (;;) {
            for (
              var m;
              h !== n || (i !== 0 && h.nodeType !== 3) || (a = s + i),
                h !== o || (r !== 0 && h.nodeType !== 3) || (l = s + r),
                h.nodeType === 3 && (s += h.nodeValue.length),
                (m = h.firstChild) !== null;

            )
              (p = h), (h = m);
            for (;;) {
              if (h === t) break t;
              if (
                (p === n && ++c === i && (a = s),
                p === o && ++u === r && (l = s),
                (m = h.nextSibling) !== null)
              )
                break;
              (h = p), (p = h.parentNode);
            }
            h = m;
          }
          n = a === -1 || l === -1 ? null : { start: a, end: l };
        } else n = null;
      }
    n = n || { start: 0, end: 0 };
  } else n = null;
  for (
    mS = { focusedElem: t, selectionRange: n }, Wv = !1, lt = e;
    lt !== null;

  )
    if (((e = lt), (t = e.child), (e.subtreeFlags & 1028) !== 0 && t !== null))
      (t.return = e), (lt = t);
    else
      for (; lt !== null; ) {
        e = lt;
        try {
          var v = e.alternate;
          if (e.flags & 1024)
            switch (e.tag) {
              case 0:
              case 11:
              case 15:
                break;
              case 1:
                if (v !== null) {
                  var S = v.memoizedProps,
                    x = v.memoizedState,
                    g = e.stateNode,
                    y = g.getSnapshotBeforeUpdate(
                      e.elementType === e.type ? S : Fo(e.type, S),
                      x
                    );
                  g.__reactInternalSnapshotBeforeUpdate = y;
                }
                break;
              case 3:
                var _ = e.stateNode.containerInfo;
                _.nodeType === 1
                  ? (_.textContent = "")
                  : _.nodeType === 9 &&
                    _.documentElement &&
                    _.removeChild(_.documentElement);
                break;
              case 5:
              case 6:
              case 4:
              case 17:
                break;
              default:
                throw Error(Xe(163));
            }
        } catch (b) {
          Nn(e, e.return, b);
        }
        if (((t = e.sibling), t !== null)) {
          (t.return = e.return), (lt = t);
          break;
        }
        lt = e.return;
      }
  return (v = TT), (TT = !1), v;
}
function eh(t, e, n) {
  var r = e.updateQueue;
  if (((r = r !== null ? r.lastEffect : null), r !== null)) {
    var i = (r = r.next);
    do {
      if ((i.tag & t) === t) {
        var o = i.destroy;
        (i.destroy = void 0), o !== void 0 && LS(e, n, o);
      }
      i = i.next;
    } while (i !== r);
  }
}
function j0(t, e) {
  if (
    ((e = e.updateQueue), (e = e !== null ? e.lastEffect : null), e !== null)
  ) {
    var n = (e = e.next);
    do {
      if ((n.tag & t) === t) {
        var r = n.create;
        n.destroy = r();
      }
      n = n.next;
    } while (n !== e);
  }
}
function IS(t) {
  var e = t.ref;
  if (e !== null) {
    var n = t.stateNode;
    switch (t.tag) {
      case 5:
        t = n;
        break;
      default:
        t = n;
    }
    typeof e == "function" ? e(t) : (e.current = t);
  }
}
function uI(t) {
  var e = t.alternate;
  e !== null && ((t.alternate = null), uI(e)),
    (t.child = null),
    (t.deletions = null),
    (t.sibling = null),
    t.tag === 5 &&
      ((e = t.stateNode),
      e !== null &&
        (delete e[hs], delete e[Mh], delete e[yS], delete e[i4], delete e[o4])),
    (t.stateNode = null),
    (t.return = null),
    (t.dependencies = null),
    (t.memoizedProps = null),
    (t.memoizedState = null),
    (t.pendingProps = null),
    (t.stateNode = null),
    (t.updateQueue = null);
}
function fI(t) {
  return t.tag === 5 || t.tag === 3 || t.tag === 4;
}
function AT(t) {
  e: for (;;) {
    for (; t.sibling === null; ) {
      if (t.return === null || fI(t.return)) return null;
      t = t.return;
    }
    for (
      t.sibling.return = t.return, t = t.sibling;
      t.tag !== 5 && t.tag !== 6 && t.tag !== 18;

    ) {
      if (t.flags & 2 || t.child === null || t.tag === 4) continue e;
      (t.child.return = t), (t = t.child);
    }
    if (!(t.flags & 2)) return t.stateNode;
  }
}
function OS(t, e, n) {
  var r = t.tag;
  if (r === 5 || r === 6)
    (t = t.stateNode),
      e
        ? n.nodeType === 8
          ? n.parentNode.insertBefore(t, e)
          : n.insertBefore(t, e)
        : (n.nodeType === 8
            ? ((e = n.parentNode), e.insertBefore(t, n))
            : ((e = n), e.appendChild(t)),
          (n = n._reactRootContainer),
          n != null || e.onclick !== null || (e.onclick = qv));
  else if (r !== 4 && ((t = t.child), t !== null))
    for (OS(t, e, n), t = t.sibling; t !== null; ) OS(t, e, n), (t = t.sibling);
}
function FS(t, e, n) {
  var r = t.tag;
  if (r === 5 || r === 6)
    (t = t.stateNode), e ? n.insertBefore(t, e) : n.appendChild(t);
  else if (r !== 4 && ((t = t.child), t !== null))
    for (FS(t, e, n), t = t.sibling; t !== null; ) FS(t, e, n), (t = t.sibling);
}
var Mr = null,
  Do = !1;
function Ma(t, e, n) {
  for (n = n.child; n !== null; ) dI(t, e, n), (n = n.sibling);
}
function dI(t, e, n) {
  if (gs && typeof gs.onCommitFiberUnmount == "function")
    try {
      gs.onCommitFiberUnmount(D0, n);
    } catch {}
  switch (n.tag) {
    case 5:
      Br || Yu(n, e);
    case 6:
      var r = Mr,
        i = Do;
      (Mr = null),
        Ma(t, e, n),
        (Mr = r),
        (Do = i),
        Mr !== null &&
          (Do
            ? ((t = Mr),
              (n = n.stateNode),
              t.nodeType === 8 ? t.parentNode.removeChild(n) : t.removeChild(n))
            : Mr.removeChild(n.stateNode));
      break;
    case 18:
      Mr !== null &&
        (Do
          ? ((t = Mr),
            (n = n.stateNode),
            t.nodeType === 8
              ? f1(t.parentNode, n)
              : t.nodeType === 1 && f1(t, n),
            _h(t))
          : f1(Mr, n.stateNode));
      break;
    case 4:
      (r = Mr),
        (i = Do),
        (Mr = n.stateNode.containerInfo),
        (Do = !0),
        Ma(t, e, n),
        (Mr = r),
        (Do = i);
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (
        !Br &&
        ((r = n.updateQueue), r !== null && ((r = r.lastEffect), r !== null))
      ) {
        i = r = r.next;
        do {
          var o = i,
            s = o.destroy;
          (o = o.tag),
            s !== void 0 && (o & 2 || o & 4) && LS(n, e, s),
            (i = i.next);
        } while (i !== r);
      }
      Ma(t, e, n);
      break;
    case 1:
      if (
        !Br &&
        (Yu(n, e),
        (r = n.stateNode),
        typeof r.componentWillUnmount == "function")
      )
        try {
          (r.props = n.memoizedProps),
            (r.state = n.memoizedState),
            r.componentWillUnmount();
        } catch (a) {
          Nn(n, e, a);
        }
      Ma(t, e, n);
      break;
    case 21:
      Ma(t, e, n);
      break;
    case 22:
      n.mode & 1
        ? ((Br = (r = Br) || n.memoizedState !== null), Ma(t, e, n), (Br = r))
        : Ma(t, e, n);
      break;
    default:
      Ma(t, e, n);
  }
}
function RT(t) {
  var e = t.updateQueue;
  if (e !== null) {
    t.updateQueue = null;
    var n = t.stateNode;
    n === null && (n = t.stateNode = new S4()),
      e.forEach(function (r) {
        var i = L4.bind(null, t, r);
        n.has(r) || (n.add(r), r.then(i, i));
      });
  }
}
function Ao(t, e) {
  var n = e.deletions;
  if (n !== null)
    for (var r = 0; r < n.length; r++) {
      var i = n[r];
      try {
        var o = t,
          s = e,
          a = s;
        e: for (; a !== null; ) {
          switch (a.tag) {
            case 5:
              (Mr = a.stateNode), (Do = !1);
              break e;
            case 3:
              (Mr = a.stateNode.containerInfo), (Do = !0);
              break e;
            case 4:
              (Mr = a.stateNode.containerInfo), (Do = !0);
              break e;
          }
          a = a.return;
        }
        if (Mr === null) throw Error(Xe(160));
        dI(o, s, i), (Mr = null), (Do = !1);
        var l = i.alternate;
        l !== null && (l.return = null), (i.return = null);
      } catch (c) {
        Nn(i, e, c);
      }
    }
  if (e.subtreeFlags & 12854)
    for (e = e.child; e !== null; ) hI(e, t), (e = e.sibling);
}
function hI(t, e) {
  var n = t.alternate,
    r = t.flags;
  switch (t.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      if ((Ao(e, t), as(t), r & 4)) {
        try {
          eh(3, t, t.return), j0(3, t);
        } catch (S) {
          Nn(t, t.return, S);
        }
        try {
          eh(5, t, t.return);
        } catch (S) {
          Nn(t, t.return, S);
        }
      }
      break;
    case 1:
      Ao(e, t), as(t), r & 512 && n !== null && Yu(n, n.return);
      break;
    case 5:
      if (
        (Ao(e, t),
        as(t),
        r & 512 && n !== null && Yu(n, n.return),
        t.flags & 32)
      ) {
        var i = t.stateNode;
        try {
          gh(i, "");
        } catch (S) {
          Nn(t, t.return, S);
        }
      }
      if (r & 4 && ((i = t.stateNode), i != null)) {
        var o = t.memoizedProps,
          s = n !== null ? n.memoizedProps : o,
          a = t.type,
          l = t.updateQueue;
        if (((t.updateQueue = null), l !== null))
          try {
            a === "input" && o.type === "radio" && o.name != null && F3(i, o),
              iS(a, s);
            var c = iS(a, o);
            for (s = 0; s < l.length; s += 2) {
              var u = l[s],
                h = l[s + 1];
              u === "style"
                ? k3(i, h)
                : u === "dangerouslySetInnerHTML"
                ? U3(i, h)
                : u === "children"
                ? gh(i, h)
                : Ub(i, u, h, c);
            }
            switch (a) {
              case "input":
                J_(i, o);
                break;
              case "textarea":
                N3(i, o);
                break;
              case "select":
                var p = i._wrapperState.wasMultiple;
                i._wrapperState.wasMultiple = !!o.multiple;
                var m = o.value;
                m != null
                  ? lf(i, !!o.multiple, m, !1)
                  : p !== !!o.multiple &&
                    (o.defaultValue != null
                      ? lf(i, !!o.multiple, o.defaultValue, !0)
                      : lf(i, !!o.multiple, o.multiple ? [] : "", !1));
            }
            i[Mh] = o;
          } catch (S) {
            Nn(t, t.return, S);
          }
      }
      break;
    case 6:
      if ((Ao(e, t), as(t), r & 4)) {
        if (t.stateNode === null) throw Error(Xe(162));
        (i = t.stateNode), (o = t.memoizedProps);
        try {
          i.nodeValue = o;
        } catch (S) {
          Nn(t, t.return, S);
        }
      }
      break;
    case 3:
      if (
        (Ao(e, t), as(t), r & 4 && n !== null && n.memoizedState.isDehydrated)
      )
        try {
          _h(e.containerInfo);
        } catch (S) {
          Nn(t, t.return, S);
        }
      break;
    case 4:
      Ao(e, t), as(t);
      break;
    case 13:
      Ao(e, t),
        as(t),
        (i = t.child),
        i.flags & 8192 &&
          ((o = i.memoizedState !== null),
          (i.stateNode.isHidden = o),
          !o ||
            (i.alternate !== null && i.alternate.memoizedState !== null) ||
            (gE = $n())),
        r & 4 && RT(t);
      break;
    case 22:
      if (
        ((u = n !== null && n.memoizedState !== null),
        t.mode & 1 ? ((Br = (c = Br) || u), Ao(e, t), (Br = c)) : Ao(e, t),
        as(t),
        r & 8192)
      ) {
        if (
          ((c = t.memoizedState !== null),
          (t.stateNode.isHidden = c) && !u && t.mode & 1)
        )
          for (lt = t, u = t.child; u !== null; ) {
            for (h = lt = u; lt !== null; ) {
              switch (((p = lt), (m = p.child), p.tag)) {
                case 0:
                case 11:
                case 14:
                case 15:
                  eh(4, p, p.return);
                  break;
                case 1:
                  Yu(p, p.return);
                  var v = p.stateNode;
                  if (typeof v.componentWillUnmount == "function") {
                    (r = p), (n = p.return);
                    try {
                      (e = r),
                        (v.props = e.memoizedProps),
                        (v.state = e.memoizedState),
                        v.componentWillUnmount();
                    } catch (S) {
                      Nn(r, n, S);
                    }
                  }
                  break;
                case 5:
                  Yu(p, p.return);
                  break;
                case 22:
                  if (p.memoizedState !== null) {
                    LT(h);
                    continue;
                  }
              }
              m !== null ? ((m.return = p), (lt = m)) : LT(h);
            }
            u = u.sibling;
          }
        e: for (u = null, h = t; ; ) {
          if (h.tag === 5) {
            if (u === null) {
              u = h;
              try {
                (i = h.stateNode),
                  c
                    ? ((o = i.style),
                      typeof o.setProperty == "function"
                        ? o.setProperty("display", "none", "important")
                        : (o.display = "none"))
                    : ((a = h.stateNode),
                      (l = h.memoizedProps.style),
                      (s =
                        l != null && l.hasOwnProperty("display")
                          ? l.display
                          : null),
                      (a.style.display = z3("display", s)));
              } catch (S) {
                Nn(t, t.return, S);
              }
            }
          } else if (h.tag === 6) {
            if (u === null)
              try {
                h.stateNode.nodeValue = c ? "" : h.memoizedProps;
              } catch (S) {
                Nn(t, t.return, S);
              }
          } else if (
            ((h.tag !== 22 && h.tag !== 23) ||
              h.memoizedState === null ||
              h === t) &&
            h.child !== null
          ) {
            (h.child.return = h), (h = h.child);
            continue;
          }
          if (h === t) break e;
          for (; h.sibling === null; ) {
            if (h.return === null || h.return === t) break e;
            u === h && (u = null), (h = h.return);
          }
          u === h && (u = null), (h.sibling.return = h.return), (h = h.sibling);
        }
      }
      break;
    case 19:
      Ao(e, t), as(t), r & 4 && RT(t);
      break;
    case 21:
      break;
    default:
      Ao(e, t), as(t);
  }
}
function as(t) {
  var e = t.flags;
  if (e & 2) {
    try {
      e: {
        for (var n = t.return; n !== null; ) {
          if (fI(n)) {
            var r = n;
            break e;
          }
          n = n.return;
        }
        throw Error(Xe(160));
      }
      switch (r.tag) {
        case 5:
          var i = r.stateNode;
          r.flags & 32 && (gh(i, ""), (r.flags &= -33));
          var o = AT(t);
          FS(t, o, i);
          break;
        case 3:
        case 4:
          var s = r.stateNode.containerInfo,
            a = AT(t);
          OS(t, a, s);
          break;
        default:
          throw Error(Xe(161));
      }
    } catch (l) {
      Nn(t, t.return, l);
    }
    t.flags &= -3;
  }
  e & 4096 && (t.flags &= -4097);
}
function b4(t, e, n) {
  (lt = t), pI(t);
}
function pI(t, e, n) {
  for (var r = (t.mode & 1) !== 0; lt !== null; ) {
    var i = lt,
      o = i.child;
    if (i.tag === 22 && r) {
      var s = i.memoizedState !== null || Vm;
      if (!s) {
        var a = i.alternate,
          l = (a !== null && a.memoizedState !== null) || Br;
        a = Vm;
        var c = Br;
        if (((Vm = s), (Br = l) && !c))
          for (lt = i; lt !== null; )
            (s = lt),
              (l = s.child),
              s.tag === 22 && s.memoizedState !== null
                ? IT(i)
                : l !== null
                ? ((l.return = s), (lt = l))
                : IT(i);
        for (; o !== null; ) (lt = o), pI(o), (o = o.sibling);
        (lt = i), (Vm = a), (Br = c);
      }
      PT(t);
    } else
      i.subtreeFlags & 8772 && o !== null ? ((o.return = i), (lt = o)) : PT(t);
  }
}
function PT(t) {
  for (; lt !== null; ) {
    var e = lt;
    if (e.flags & 8772) {
      var n = e.alternate;
      try {
        if (e.flags & 8772)
          switch (e.tag) {
            case 0:
            case 11:
            case 15:
              Br || j0(5, e);
              break;
            case 1:
              var r = e.stateNode;
              if (e.flags & 4 && !Br)
                if (n === null) r.componentDidMount();
                else {
                  var i =
                    e.elementType === e.type
                      ? n.memoizedProps
                      : Fo(e.type, n.memoizedProps);
                  r.componentDidUpdate(
                    i,
                    n.memoizedState,
                    r.__reactInternalSnapshotBeforeUpdate
                  );
                }
              var o = e.updateQueue;
              o !== null && hT(e, o, r);
              break;
            case 3:
              var s = e.updateQueue;
              if (s !== null) {
                if (((n = null), e.child !== null))
                  switch (e.child.tag) {
                    case 5:
                      n = e.child.stateNode;
                      break;
                    case 1:
                      n = e.child.stateNode;
                  }
                hT(e, s, n);
              }
              break;
            case 5:
              var a = e.stateNode;
              if (n === null && e.flags & 4) {
                n = a;
                var l = e.memoizedProps;
                switch (e.type) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    l.autoFocus && n.focus();
                    break;
                  case "img":
                    l.src && (n.src = l.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (e.memoizedState === null) {
                var c = e.alternate;
                if (c !== null) {
                  var u = c.memoizedState;
                  if (u !== null) {
                    var h = u.dehydrated;
                    h !== null && _h(h);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(Xe(163));
          }
        Br || (e.flags & 512 && IS(e));
      } catch (p) {
        Nn(e, e.return, p);
      }
    }
    if (e === t) {
      lt = null;
      break;
    }
    if (((n = e.sibling), n !== null)) {
      (n.return = e.return), (lt = n);
      break;
    }
    lt = e.return;
  }
}
function LT(t) {
  for (; lt !== null; ) {
    var e = lt;
    if (e === t) {
      lt = null;
      break;
    }
    var n = e.sibling;
    if (n !== null) {
      (n.return = e.return), (lt = n);
      break;
    }
    lt = e.return;
  }
}
function IT(t) {
  for (; lt !== null; ) {
    var e = lt;
    try {
      switch (e.tag) {
        case 0:
        case 11:
        case 15:
          var n = e.return;
          try {
            j0(4, e);
          } catch (l) {
            Nn(e, n, l);
          }
          break;
        case 1:
          var r = e.stateNode;
          if (typeof r.componentDidMount == "function") {
            var i = e.return;
            try {
              r.componentDidMount();
            } catch (l) {
              Nn(e, i, l);
            }
          }
          var o = e.return;
          try {
            IS(e);
          } catch (l) {
            Nn(e, o, l);
          }
          break;
        case 5:
          var s = e.return;
          try {
            IS(e);
          } catch (l) {
            Nn(e, s, l);
          }
      }
    } catch (l) {
      Nn(e, e.return, l);
    }
    if (e === t) {
      lt = null;
      break;
    }
    var a = e.sibling;
    if (a !== null) {
      (a.return = e.return), (lt = a);
      break;
    }
    lt = e.return;
  }
}
var E4 = Math.ceil,
  o0 = ha.ReactCurrentDispatcher,
  pE = ha.ReactCurrentOwner,
  yo = ha.ReactCurrentBatchConfig,
  Xt = 0,
  vr = null,
  er = null,
  Cr = 0,
  zi = 0,
  Ku = dl(0),
  ir = 0,
  Lh = null,
  Mc = 0,
  W0 = 0,
  mE = 0,
  th = null,
  mi = null,
  gE = 0,
  Ef = 1 / 0,
  $s = null,
  s0 = !1,
  NS = null,
  Ya = null,
  Gm = !1,
  Ba = null,
  a0 = 0,
  nh = 0,
  DS = null,
  xv = -1,
  _v = 0;
function ii() {
  return Xt & 6 ? $n() : xv !== -1 ? xv : (xv = $n());
}
function Ka(t) {
  return t.mode & 1
    ? Xt & 2 && Cr !== 0
      ? Cr & -Cr
      : a4.transition !== null
      ? (_v === 0 && (_v = Z3()), _v)
      : ((t = rn),
        t !== 0 || ((t = window.event), (t = t === void 0 ? 16 : iL(t.type))),
        t)
    : 1;
}
function Wo(t, e, n, r) {
  if (50 < nh) throw ((nh = 0), (DS = null), Error(Xe(185)));
  fp(t, n, r),
    (!(Xt & 2) || t !== vr) &&
      (t === vr && (!(Xt & 2) && (W0 |= n), ir === 4 && Ua(t, Cr)),
      Si(t, r),
      n === 1 && Xt === 0 && !(e.mode & 1) && ((Ef = $n() + 500), H0 && hl()));
}
function Si(t, e) {
  var n = t.callbackNode;
  ak(t, e);
  var r = jv(t, t === vr ? Cr : 0);
  if (r === 0)
    n !== null && HC(n), (t.callbackNode = null), (t.callbackPriority = 0);
  else if (((e = r & -r), t.callbackPriority !== e)) {
    if ((n != null && HC(n), e === 1))
      t.tag === 0 ? s4(OT.bind(null, t)) : bL(OT.bind(null, t)),
        n4(function () {
          !(Xt & 6) && hl();
        }),
        (n = null);
    else {
      switch (Q3(r)) {
        case 1:
          n = Vb;
          break;
        case 4:
          n = Y3;
          break;
        case 16:
          n = Gv;
          break;
        case 536870912:
          n = K3;
          break;
        default:
          n = Gv;
      }
      n = wI(n, mI.bind(null, t));
    }
    (t.callbackPriority = e), (t.callbackNode = n);
  }
}
function mI(t, e) {
  if (((xv = -1), (_v = 0), Xt & 6)) throw Error(Xe(327));
  var n = t.callbackNode;
  if (hf() && t.callbackNode !== n) return null;
  var r = jv(t, t === vr ? Cr : 0);
  if (r === 0) return null;
  if (r & 30 || r & t.expiredLanes || e) e = l0(t, r);
  else {
    e = r;
    var i = Xt;
    Xt |= 2;
    var o = vI();
    (vr !== t || Cr !== e) && (($s = null), (Ef = $n() + 500), fc(t, e));
    do
      try {
        T4();
        break;
      } catch (a) {
        gI(t, a);
      }
    while (!0);
    tE(),
      (o0.current = o),
      (Xt = i),
      er !== null ? (e = 0) : ((vr = null), (Cr = 0), (e = ir));
  }
  if (e !== 0) {
    if (
      (e === 2 && ((i = cS(t)), i !== 0 && ((r = i), (e = US(t, i)))), e === 1)
    )
      throw ((n = Lh), fc(t, 0), Ua(t, r), Si(t, $n()), n);
    if (e === 6) Ua(t, r);
    else {
      if (
        ((i = t.current.alternate),
        !(r & 30) &&
          !M4(i) &&
          ((e = l0(t, r)),
          e === 2 && ((o = cS(t)), o !== 0 && ((r = o), (e = US(t, o)))),
          e === 1))
      )
        throw ((n = Lh), fc(t, 0), Ua(t, r), Si(t, $n()), n);
      switch (((t.finishedWork = i), (t.finishedLanes = r), e)) {
        case 0:
        case 1:
          throw Error(Xe(345));
        case 2:
          $l(t, mi, $s);
          break;
        case 3:
          if (
            (Ua(t, r), (r & 130023424) === r && ((e = gE + 500 - $n()), 10 < e))
          ) {
            if (jv(t, 0) !== 0) break;
            if (((i = t.suspendedLanes), (i & r) !== r)) {
              ii(), (t.pingedLanes |= t.suspendedLanes & i);
              break;
            }
            t.timeoutHandle = vS($l.bind(null, t, mi, $s), e);
            break;
          }
          $l(t, mi, $s);
          break;
        case 4:
          if ((Ua(t, r), (r & 4194240) === r)) break;
          for (e = t.eventTimes, i = -1; 0 < r; ) {
            var s = 31 - jo(r);
            (o = 1 << s), (s = e[s]), s > i && (i = s), (r &= ~o);
          }
          if (
            ((r = i),
            (r = $n() - r),
            (r =
              (120 > r
                ? 120
                : 480 > r
                ? 480
                : 1080 > r
                ? 1080
                : 1920 > r
                ? 1920
                : 3e3 > r
                ? 3e3
                : 4320 > r
                ? 4320
                : 1960 * E4(r / 1960)) - r),
            10 < r)
          ) {
            t.timeoutHandle = vS($l.bind(null, t, mi, $s), r);
            break;
          }
          $l(t, mi, $s);
          break;
        case 5:
          $l(t, mi, $s);
          break;
        default:
          throw Error(Xe(329));
      }
    }
  }
  return Si(t, $n()), t.callbackNode === n ? mI.bind(null, t) : null;
}
function US(t, e) {
  var n = th;
  return (
    t.current.memoizedState.isDehydrated && (fc(t, e).flags |= 256),
    (t = l0(t, e)),
    t !== 2 && ((e = mi), (mi = n), e !== null && zS(e)),
    t
  );
}
function zS(t) {
  mi === null ? (mi = t) : mi.push.apply(mi, t);
}
function M4(t) {
  for (var e = t; ; ) {
    if (e.flags & 16384) {
      var n = e.updateQueue;
      if (n !== null && ((n = n.stores), n !== null))
        for (var r = 0; r < n.length; r++) {
          var i = n[r],
            o = i.getSnapshot;
          i = i.value;
          try {
            if (!qo(o(), i)) return !1;
          } catch {
            return !1;
          }
        }
    }
    if (((n = e.child), e.subtreeFlags & 16384 && n !== null))
      (n.return = e), (e = n);
    else {
      if (e === t) break;
      for (; e.sibling === null; ) {
        if (e.return === null || e.return === t) return !0;
        e = e.return;
      }
      (e.sibling.return = e.return), (e = e.sibling);
    }
  }
  return !0;
}
function Ua(t, e) {
  for (
    e &= ~mE,
      e &= ~W0,
      t.suspendedLanes |= e,
      t.pingedLanes &= ~e,
      t = t.expirationTimes;
    0 < e;

  ) {
    var n = 31 - jo(e),
      r = 1 << n;
    (t[n] = -1), (e &= ~r);
  }
}
function OT(t) {
  if (Xt & 6) throw Error(Xe(327));
  hf();
  var e = jv(t, 0);
  if (!(e & 1)) return Si(t, $n()), null;
  var n = l0(t, e);
  if (t.tag !== 0 && n === 2) {
    var r = cS(t);
    r !== 0 && ((e = r), (n = US(t, r)));
  }
  if (n === 1) throw ((n = Lh), fc(t, 0), Ua(t, e), Si(t, $n()), n);
  if (n === 6) throw Error(Xe(345));
  return (
    (t.finishedWork = t.current.alternate),
    (t.finishedLanes = e),
    $l(t, mi, $s),
    Si(t, $n()),
    null
  );
}
function vE(t, e) {
  var n = Xt;
  Xt |= 1;
  try {
    return t(e);
  } finally {
    (Xt = n), Xt === 0 && ((Ef = $n() + 500), H0 && hl());
  }
}
function Cc(t) {
  Ba !== null && Ba.tag === 0 && !(Xt & 6) && hf();
  var e = Xt;
  Xt |= 1;
  var n = yo.transition,
    r = rn;
  try {
    if (((yo.transition = null), (rn = 1), t)) return t();
  } finally {
    (rn = r), (yo.transition = n), (Xt = e), !(Xt & 6) && hl();
  }
}
function yE() {
  (zi = Ku.current), yn(Ku);
}
function fc(t, e) {
  (t.finishedWork = null), (t.finishedLanes = 0);
  var n = t.timeoutHandle;
  if ((n !== -1 && ((t.timeoutHandle = -1), t4(n)), er !== null))
    for (n = er.return; n !== null; ) {
      var r = n;
      switch ((Qb(r), r.tag)) {
        case 1:
          (r = r.type.childContextTypes), r != null && Yv();
          break;
        case 3:
          wf(), yn(xi), yn(jr), aE();
          break;
        case 5:
          sE(r);
          break;
        case 4:
          wf();
          break;
        case 13:
          yn(Mn);
          break;
        case 19:
          yn(Mn);
          break;
        case 10:
          nE(r.type._context);
          break;
        case 22:
        case 23:
          yE();
      }
      n = n.return;
    }
  if (
    ((vr = t),
    (er = t = Za(t.current, null)),
    (Cr = zi = e),
    (ir = 0),
    (Lh = null),
    (mE = W0 = Mc = 0),
    (mi = th = null),
    nc !== null)
  ) {
    for (e = 0; e < nc.length; e++)
      if (((n = nc[e]), (r = n.interleaved), r !== null)) {
        n.interleaved = null;
        var i = r.next,
          o = n.pending;
        if (o !== null) {
          var s = o.next;
          (o.next = i), (r.next = s);
        }
        n.pending = r;
      }
    nc = null;
  }
  return t;
}
function gI(t, e) {
  do {
    var n = er;
    try {
      if ((tE(), (gv.current = i0), r0)) {
        for (var r = Rn.memoizedState; r !== null; ) {
          var i = r.queue;
          i !== null && (i.pending = null), (r = r.next);
        }
        r0 = !1;
      }
      if (
        ((Ec = 0),
        (gr = nr = Rn = null),
        (Jd = !1),
        (Ah = 0),
        (pE.current = null),
        n === null || n.return === null)
      ) {
        (ir = 1), (Lh = e), (er = null);
        break;
      }
      e: {
        var o = t,
          s = n.return,
          a = n,
          l = e;
        if (
          ((e = Cr),
          (a.flags |= 32768),
          l !== null && typeof l == "object" && typeof l.then == "function")
        ) {
          var c = l,
            u = a,
            h = u.tag;
          if (!(u.mode & 1) && (h === 0 || h === 11 || h === 15)) {
            var p = u.alternate;
            p
              ? ((u.updateQueue = p.updateQueue),
                (u.memoizedState = p.memoizedState),
                (u.lanes = p.lanes))
              : ((u.updateQueue = null), (u.memoizedState = null));
          }
          var m = _T(s);
          if (m !== null) {
            (m.flags &= -257),
              ST(m, s, a, o, e),
              m.mode & 1 && xT(o, c, e),
              (e = m),
              (l = c);
            var v = e.updateQueue;
            if (v === null) {
              var S = new Set();
              S.add(l), (e.updateQueue = S);
            } else v.add(l);
            break e;
          } else {
            if (!(e & 1)) {
              xT(o, c, e), xE();
              break e;
            }
            l = Error(Xe(426));
          }
        } else if (Sn && a.mode & 1) {
          var x = _T(s);
          if (x !== null) {
            !(x.flags & 65536) && (x.flags |= 256),
              ST(x, s, a, o, e),
              Jb(bf(l, a));
            break e;
          }
        }
        (o = l = bf(l, a)),
          ir !== 4 && (ir = 2),
          th === null ? (th = [o]) : th.push(o),
          (o = s);
        do {
          switch (o.tag) {
            case 3:
              (o.flags |= 65536), (e &= -e), (o.lanes |= e);
              var g = JL(o, l, e);
              dT(o, g);
              break e;
            case 1:
              a = l;
              var y = o.type,
                _ = o.stateNode;
              if (
                !(o.flags & 128) &&
                (typeof y.getDerivedStateFromError == "function" ||
                  (_ !== null &&
                    typeof _.componentDidCatch == "function" &&
                    (Ya === null || !Ya.has(_))))
              ) {
                (o.flags |= 65536), (e &= -e), (o.lanes |= e);
                var b = eI(o, a, e);
                dT(o, b);
                break e;
              }
          }
          o = o.return;
        } while (o !== null);
      }
      xI(n);
    } catch (T) {
      (e = T), er === n && n !== null && (er = n = n.return);
      continue;
    }
    break;
  } while (!0);
}
function vI() {
  var t = o0.current;
  return (o0.current = i0), t === null ? i0 : t;
}
function xE() {
  (ir === 0 || ir === 3 || ir === 2) && (ir = 4),
    vr === null || (!(Mc & 268435455) && !(W0 & 268435455)) || Ua(vr, Cr);
}
function l0(t, e) {
  var n = Xt;
  Xt |= 2;
  var r = vI();
  (vr !== t || Cr !== e) && (($s = null), fc(t, e));
  do
    try {
      C4();
      break;
    } catch (i) {
      gI(t, i);
    }
  while (!0);
  if ((tE(), (Xt = n), (o0.current = r), er !== null)) throw Error(Xe(261));
  return (vr = null), (Cr = 0), ir;
}
function C4() {
  for (; er !== null; ) yI(er);
}
function T4() {
  for (; er !== null && !Qz(); ) yI(er);
}
function yI(t) {
  var e = SI(t.alternate, t, zi);
  (t.memoizedProps = t.pendingProps),
    e === null ? xI(t) : (er = e),
    (pE.current = null);
}
function xI(t) {
  var e = t;
  do {
    var n = e.alternate;
    if (((t = e.return), e.flags & 32768)) {
      if (((n = _4(n, e)), n !== null)) {
        (n.flags &= 32767), (er = n);
        return;
      }
      if (t !== null)
        (t.flags |= 32768), (t.subtreeFlags = 0), (t.deletions = null);
      else {
        (ir = 6), (er = null);
        return;
      }
    } else if (((n = x4(n, e, zi)), n !== null)) {
      er = n;
      return;
    }
    if (((e = e.sibling), e !== null)) {
      er = e;
      return;
    }
    er = e = t;
  } while (e !== null);
  ir === 0 && (ir = 5);
}
function $l(t, e, n) {
  var r = rn,
    i = yo.transition;
  try {
    (yo.transition = null), (rn = 1), A4(t, e, n, r);
  } finally {
    (yo.transition = i), (rn = r);
  }
  return null;
}
function A4(t, e, n, r) {
  do hf();
  while (Ba !== null);
  if (Xt & 6) throw Error(Xe(327));
  n = t.finishedWork;
  var i = t.finishedLanes;
  if (n === null) return null;
  if (((t.finishedWork = null), (t.finishedLanes = 0), n === t.current))
    throw Error(Xe(177));
  (t.callbackNode = null), (t.callbackPriority = 0);
  var o = n.lanes | n.childLanes;
  if (
    (lk(t, o),
    t === vr && ((er = vr = null), (Cr = 0)),
    (!(n.subtreeFlags & 2064) && !(n.flags & 2064)) ||
      Gm ||
      ((Gm = !0),
      wI(Gv, function () {
        return hf(), null;
      })),
    (o = (n.flags & 15990) !== 0),
    n.subtreeFlags & 15990 || o)
  ) {
    (o = yo.transition), (yo.transition = null);
    var s = rn;
    rn = 1;
    var a = Xt;
    (Xt |= 4),
      (pE.current = null),
      w4(t, n),
      hI(n, t),
      qk(mS),
      (Wv = !!pS),
      (mS = pS = null),
      (t.current = n),
      b4(n),
      Jz(),
      (Xt = a),
      (rn = s),
      (yo.transition = o);
  } else t.current = n;
  if (
    (Gm && ((Gm = !1), (Ba = t), (a0 = i)),
    (o = t.pendingLanes),
    o === 0 && (Ya = null),
    nk(n.stateNode),
    Si(t, $n()),
    e !== null)
  )
    for (r = t.onRecoverableError, n = 0; n < e.length; n++)
      (i = e[n]), r(i.value, { componentStack: i.stack, digest: i.digest });
  if (s0) throw ((s0 = !1), (t = NS), (NS = null), t);
  return (
    a0 & 1 && t.tag !== 0 && hf(),
    (o = t.pendingLanes),
    o & 1 ? (t === DS ? nh++ : ((nh = 0), (DS = t))) : (nh = 0),
    hl(),
    null
  );
}
function hf() {
  if (Ba !== null) {
    var t = Q3(a0),
      e = yo.transition,
      n = rn;
    try {
      if (((yo.transition = null), (rn = 16 > t ? 16 : t), Ba === null))
        var r = !1;
      else {
        if (((t = Ba), (Ba = null), (a0 = 0), Xt & 6)) throw Error(Xe(331));
        var i = Xt;
        for (Xt |= 4, lt = t.current; lt !== null; ) {
          var o = lt,
            s = o.child;
          if (lt.flags & 16) {
            var a = o.deletions;
            if (a !== null) {
              for (var l = 0; l < a.length; l++) {
                var c = a[l];
                for (lt = c; lt !== null; ) {
                  var u = lt;
                  switch (u.tag) {
                    case 0:
                    case 11:
                    case 15:
                      eh(8, u, o);
                  }
                  var h = u.child;
                  if (h !== null) (h.return = u), (lt = h);
                  else
                    for (; lt !== null; ) {
                      u = lt;
                      var p = u.sibling,
                        m = u.return;
                      if ((uI(u), u === c)) {
                        lt = null;
                        break;
                      }
                      if (p !== null) {
                        (p.return = m), (lt = p);
                        break;
                      }
                      lt = m;
                    }
                }
              }
              var v = o.alternate;
              if (v !== null) {
                var S = v.child;
                if (S !== null) {
                  v.child = null;
                  do {
                    var x = S.sibling;
                    (S.sibling = null), (S = x);
                  } while (S !== null);
                }
              }
              lt = o;
            }
          }
          if (o.subtreeFlags & 2064 && s !== null) (s.return = o), (lt = s);
          else
            e: for (; lt !== null; ) {
              if (((o = lt), o.flags & 2048))
                switch (o.tag) {
                  case 0:
                  case 11:
                  case 15:
                    eh(9, o, o.return);
                }
              var g = o.sibling;
              if (g !== null) {
                (g.return = o.return), (lt = g);
                break e;
              }
              lt = o.return;
            }
        }
        var y = t.current;
        for (lt = y; lt !== null; ) {
          s = lt;
          var _ = s.child;
          if (s.subtreeFlags & 2064 && _ !== null) (_.return = s), (lt = _);
          else
            e: for (s = y; lt !== null; ) {
              if (((a = lt), a.flags & 2048))
                try {
                  switch (a.tag) {
                    case 0:
                    case 11:
                    case 15:
                      j0(9, a);
                  }
                } catch (T) {
                  Nn(a, a.return, T);
                }
              if (a === s) {
                lt = null;
                break e;
              }
              var b = a.sibling;
              if (b !== null) {
                (b.return = a.return), (lt = b);
                break e;
              }
              lt = a.return;
            }
        }
        if (
          ((Xt = i), hl(), gs && typeof gs.onPostCommitFiberRoot == "function")
        )
          try {
            gs.onPostCommitFiberRoot(D0, t);
          } catch {}
        r = !0;
      }
      return r;
    } finally {
      (rn = n), (yo.transition = e);
    }
  }
  return !1;
}
function FT(t, e, n) {
  (e = bf(n, e)),
    (e = JL(t, e, 1)),
    (t = qa(t, e, 1)),
    (e = ii()),
    t !== null && (fp(t, 1, e), Si(t, e));
}
function Nn(t, e, n) {
  if (t.tag === 3) FT(t, t, n);
  else
    for (; e !== null; ) {
      if (e.tag === 3) {
        FT(e, t, n);
        break;
      } else if (e.tag === 1) {
        var r = e.stateNode;
        if (
          typeof e.type.getDerivedStateFromError == "function" ||
          (typeof r.componentDidCatch == "function" &&
            (Ya === null || !Ya.has(r)))
        ) {
          (t = bf(n, t)),
            (t = eI(e, t, 1)),
            (e = qa(e, t, 1)),
            (t = ii()),
            e !== null && (fp(e, 1, t), Si(e, t));
          break;
        }
      }
      e = e.return;
    }
}
function R4(t, e, n) {
  var r = t.pingCache;
  r !== null && r.delete(e),
    (e = ii()),
    (t.pingedLanes |= t.suspendedLanes & n),
    vr === t &&
      (Cr & n) === n &&
      (ir === 4 || (ir === 3 && (Cr & 130023424) === Cr && 500 > $n() - gE)
        ? fc(t, 0)
        : (mE |= n)),
    Si(t, e);
}
function _I(t, e) {
  e === 0 &&
    (t.mode & 1
      ? ((e = Om), (Om <<= 1), !(Om & 130023424) && (Om = 4194304))
      : (e = 1));
  var n = ii();
  (t = sa(t, e)), t !== null && (fp(t, e, n), Si(t, n));
}
function P4(t) {
  var e = t.memoizedState,
    n = 0;
  e !== null && (n = e.retryLane), _I(t, n);
}
function L4(t, e) {
  var n = 0;
  switch (t.tag) {
    case 13:
      var r = t.stateNode,
        i = t.memoizedState;
      i !== null && (n = i.retryLane);
      break;
    case 19:
      r = t.stateNode;
      break;
    default:
      throw Error(Xe(314));
  }
  r !== null && r.delete(e), _I(t, n);
}
var SI;
SI = function (t, e, n) {
  if (t !== null)
    if (t.memoizedProps !== e.pendingProps || xi.current) yi = !0;
    else {
      if (!(t.lanes & n) && !(e.flags & 128)) return (yi = !1), y4(t, e, n);
      yi = !!(t.flags & 131072);
    }
  else (yi = !1), Sn && e.flags & 1048576 && EL(e, Qv, e.index);
  switch (((e.lanes = 0), e.tag)) {
    case 2:
      var r = e.type;
      yv(t, e), (t = e.pendingProps);
      var i = xf(e, jr.current);
      df(e, n), (i = cE(null, e, r, t, i, n));
      var o = uE();
      return (
        (e.flags |= 1),
        typeof i == "object" &&
        i !== null &&
        typeof i.render == "function" &&
        i.$$typeof === void 0
          ? ((e.tag = 1),
            (e.memoizedState = null),
            (e.updateQueue = null),
            _i(r) ? ((o = !0), Kv(e)) : (o = !1),
            (e.memoizedState =
              i.state !== null && i.state !== void 0 ? i.state : null),
            iE(e),
            (i.updater = V0),
            (e.stateNode = i),
            (i._reactInternals = e),
            ES(e, r, t, n),
            (e = TS(null, e, r, !0, o, n)))
          : ((e.tag = 0), Sn && o && Zb(e), ni(null, e, i, n), (e = e.child)),
        e
      );
    case 16:
      r = e.elementType;
      e: {
        switch (
          (yv(t, e),
          (t = e.pendingProps),
          (i = r._init),
          (r = i(r._payload)),
          (e.type = r),
          (i = e.tag = O4(r)),
          (t = Fo(r, t)),
          i)
        ) {
          case 0:
            e = CS(null, e, r, t, n);
            break e;
          case 1:
            e = ET(null, e, r, t, n);
            break e;
          case 11:
            e = wT(null, e, r, t, n);
            break e;
          case 14:
            e = bT(null, e, r, Fo(r.type, t), n);
            break e;
        }
        throw Error(Xe(306, r, ""));
      }
      return e;
    case 0:
      return (
        (r = e.type),
        (i = e.pendingProps),
        (i = e.elementType === r ? i : Fo(r, i)),
        CS(t, e, r, i, n)
      );
    case 1:
      return (
        (r = e.type),
        (i = e.pendingProps),
        (i = e.elementType === r ? i : Fo(r, i)),
        ET(t, e, r, i, n)
      );
    case 3:
      e: {
        if ((iI(e), t === null)) throw Error(Xe(387));
        (r = e.pendingProps),
          (o = e.memoizedState),
          (i = o.element),
          AL(t, e),
          t0(e, r, null, n);
        var s = e.memoizedState;
        if (((r = s.element), o.isDehydrated))
          if (
            ((o = {
              element: r,
              isDehydrated: !1,
              cache: s.cache,
              pendingSuspenseBoundaries: s.pendingSuspenseBoundaries,
              transitions: s.transitions,
            }),
            (e.updateQueue.baseState = o),
            (e.memoizedState = o),
            e.flags & 256)
          ) {
            (i = bf(Error(Xe(423)), e)), (e = MT(t, e, r, n, i));
            break e;
          } else if (r !== i) {
            (i = bf(Error(Xe(424)), e)), (e = MT(t, e, r, n, i));
            break e;
          } else
            for (
              Hi = Xa(e.stateNode.containerInfo.firstChild),
                $i = e,
                Sn = !0,
                ko = null,
                n = IL(e, null, r, n),
                e.child = n;
              n;

            )
              (n.flags = (n.flags & -3) | 4096), (n = n.sibling);
        else {
          if ((_f(), r === i)) {
            e = aa(t, e, n);
            break e;
          }
          ni(t, e, r, n);
        }
        e = e.child;
      }
      return e;
    case 5:
      return (
        OL(e),
        t === null && SS(e),
        (r = e.type),
        (i = e.pendingProps),
        (o = t !== null ? t.memoizedProps : null),
        (s = i.children),
        gS(r, i) ? (s = null) : o !== null && gS(r, o) && (e.flags |= 32),
        rI(t, e),
        ni(t, e, s, n),
        e.child
      );
    case 6:
      return t === null && SS(e), null;
    case 13:
      return oI(t, e, n);
    case 4:
      return (
        oE(e, e.stateNode.containerInfo),
        (r = e.pendingProps),
        t === null ? (e.child = Sf(e, null, r, n)) : ni(t, e, r, n),
        e.child
      );
    case 11:
      return (
        (r = e.type),
        (i = e.pendingProps),
        (i = e.elementType === r ? i : Fo(r, i)),
        wT(t, e, r, i, n)
      );
    case 7:
      return ni(t, e, e.pendingProps, n), e.child;
    case 8:
      return ni(t, e, e.pendingProps.children, n), e.child;
    case 12:
      return ni(t, e, e.pendingProps.children, n), e.child;
    case 10:
      e: {
        if (
          ((r = e.type._context),
          (i = e.pendingProps),
          (o = e.memoizedProps),
          (s = i.value),
          hn(Jv, r._currentValue),
          (r._currentValue = s),
          o !== null)
        )
          if (qo(o.value, s)) {
            if (o.children === i.children && !xi.current) {
              e = aa(t, e, n);
              break e;
            }
          } else
            for (o = e.child, o !== null && (o.return = e); o !== null; ) {
              var a = o.dependencies;
              if (a !== null) {
                s = o.child;
                for (var l = a.firstContext; l !== null; ) {
                  if (l.context === r) {
                    if (o.tag === 1) {
                      (l = na(-1, n & -n)), (l.tag = 2);
                      var c = o.updateQueue;
                      if (c !== null) {
                        c = c.shared;
                        var u = c.pending;
                        u === null
                          ? (l.next = l)
                          : ((l.next = u.next), (u.next = l)),
                          (c.pending = l);
                      }
                    }
                    (o.lanes |= n),
                      (l = o.alternate),
                      l !== null && (l.lanes |= n),
                      wS(o.return, n, e),
                      (a.lanes |= n);
                    break;
                  }
                  l = l.next;
                }
              } else if (o.tag === 10) s = o.type === e.type ? null : o.child;
              else if (o.tag === 18) {
                if (((s = o.return), s === null)) throw Error(Xe(341));
                (s.lanes |= n),
                  (a = s.alternate),
                  a !== null && (a.lanes |= n),
                  wS(s, n, e),
                  (s = o.sibling);
              } else s = o.child;
              if (s !== null) s.return = o;
              else
                for (s = o; s !== null; ) {
                  if (s === e) {
                    s = null;
                    break;
                  }
                  if (((o = s.sibling), o !== null)) {
                    (o.return = s.return), (s = o);
                    break;
                  }
                  s = s.return;
                }
              o = s;
            }
        ni(t, e, i.children, n), (e = e.child);
      }
      return e;
    case 9:
      return (
        (i = e.type),
        (r = e.pendingProps.children),
        df(e, n),
        (i = xo(i)),
        (r = r(i)),
        (e.flags |= 1),
        ni(t, e, r, n),
        e.child
      );
    case 14:
      return (
        (r = e.type),
        (i = Fo(r, e.pendingProps)),
        (i = Fo(r.type, i)),
        bT(t, e, r, i, n)
      );
    case 15:
      return tI(t, e, e.type, e.pendingProps, n);
    case 17:
      return (
        (r = e.type),
        (i = e.pendingProps),
        (i = e.elementType === r ? i : Fo(r, i)),
        yv(t, e),
        (e.tag = 1),
        _i(r) ? ((t = !0), Kv(e)) : (t = !1),
        df(e, n),
        PL(e, r, i),
        ES(e, r, i, n),
        TS(null, e, r, !0, t, n)
      );
    case 19:
      return sI(t, e, n);
    case 22:
      return nI(t, e, n);
  }
  throw Error(Xe(156, e.tag));
};
function wI(t, e) {
  return q3(t, e);
}
function I4(t, e, n, r) {
  (this.tag = t),
    (this.key = n),
    (this.sibling =
      this.child =
      this.return =
      this.stateNode =
      this.type =
      this.elementType =
        null),
    (this.index = 0),
    (this.ref = null),
    (this.pendingProps = e),
    (this.dependencies =
      this.memoizedState =
      this.updateQueue =
      this.memoizedProps =
        null),
    (this.mode = r),
    (this.subtreeFlags = this.flags = 0),
    (this.deletions = null),
    (this.childLanes = this.lanes = 0),
    (this.alternate = null);
}
function go(t, e, n, r) {
  return new I4(t, e, n, r);
}
function _E(t) {
  return (t = t.prototype), !(!t || !t.isReactComponent);
}
function O4(t) {
  if (typeof t == "function") return _E(t) ? 1 : 0;
  if (t != null) {
    if (((t = t.$$typeof), t === kb)) return 11;
    if (t === Bb) return 14;
  }
  return 2;
}
function Za(t, e) {
  var n = t.alternate;
  return (
    n === null
      ? ((n = go(t.tag, e, t.key, t.mode)),
        (n.elementType = t.elementType),
        (n.type = t.type),
        (n.stateNode = t.stateNode),
        (n.alternate = t),
        (t.alternate = n))
      : ((n.pendingProps = e),
        (n.type = t.type),
        (n.flags = 0),
        (n.subtreeFlags = 0),
        (n.deletions = null)),
    (n.flags = t.flags & 14680064),
    (n.childLanes = t.childLanes),
    (n.lanes = t.lanes),
    (n.child = t.child),
    (n.memoizedProps = t.memoizedProps),
    (n.memoizedState = t.memoizedState),
    (n.updateQueue = t.updateQueue),
    (e = t.dependencies),
    (n.dependencies =
      e === null ? null : { lanes: e.lanes, firstContext: e.firstContext }),
    (n.sibling = t.sibling),
    (n.index = t.index),
    (n.ref = t.ref),
    n
  );
}
function Sv(t, e, n, r, i, o) {
  var s = 2;
  if (((r = t), typeof t == "function")) _E(t) && (s = 1);
  else if (typeof t == "string") s = 5;
  else
    e: switch (t) {
      case Bu:
        return dc(n.children, i, o, e);
      case zb:
        (s = 8), (i |= 8);
        break;
      case q_:
        return (
          (t = go(12, n, e, i | 2)), (t.elementType = q_), (t.lanes = o), t
        );
      case Y_:
        return (t = go(13, n, e, i)), (t.elementType = Y_), (t.lanes = o), t;
      case K_:
        return (t = go(19, n, e, i)), (t.elementType = K_), (t.lanes = o), t;
      case L3:
        return $0(n, i, o, e);
      default:
        if (typeof t == "object" && t !== null)
          switch (t.$$typeof) {
            case R3:
              s = 10;
              break e;
            case P3:
              s = 9;
              break e;
            case kb:
              s = 11;
              break e;
            case Bb:
              s = 14;
              break e;
            case Fa:
              (s = 16), (r = null);
              break e;
          }
        throw Error(Xe(130, t == null ? t : typeof t, ""));
    }
  return (
    (e = go(s, n, e, i)), (e.elementType = t), (e.type = r), (e.lanes = o), e
  );
}
function dc(t, e, n, r) {
  return (t = go(7, t, r, e)), (t.lanes = n), t;
}
function $0(t, e, n, r) {
  return (
    (t = go(22, t, r, e)),
    (t.elementType = L3),
    (t.lanes = n),
    (t.stateNode = { isHidden: !1 }),
    t
  );
}
function x1(t, e, n) {
  return (t = go(6, t, null, e)), (t.lanes = n), t;
}
function _1(t, e, n) {
  return (
    (e = go(4, t.children !== null ? t.children : [], t.key, e)),
    (e.lanes = n),
    (e.stateNode = {
      containerInfo: t.containerInfo,
      pendingChildren: null,
      implementation: t.implementation,
    }),
    e
  );
}
function F4(t, e, n, r, i) {
  (this.tag = e),
    (this.containerInfo = t),
    (this.finishedWork =
      this.pingCache =
      this.current =
      this.pendingChildren =
        null),
    (this.timeoutHandle = -1),
    (this.callbackNode = this.pendingContext = this.context = null),
    (this.callbackPriority = 0),
    (this.eventTimes = e1(0)),
    (this.expirationTimes = e1(-1)),
    (this.entangledLanes =
      this.finishedLanes =
      this.mutableReadLanes =
      this.expiredLanes =
      this.pingedLanes =
      this.suspendedLanes =
      this.pendingLanes =
        0),
    (this.entanglements = e1(0)),
    (this.identifierPrefix = r),
    (this.onRecoverableError = i),
    (this.mutableSourceEagerHydrationData = null);
}
function SE(t, e, n, r, i, o, s, a, l) {
  return (
    (t = new F4(t, e, n, a, l)),
    e === 1 ? ((e = 1), o === !0 && (e |= 8)) : (e = 0),
    (o = go(3, null, null, e)),
    (t.current = o),
    (o.stateNode = t),
    (o.memoizedState = {
      element: r,
      isDehydrated: n,
      cache: null,
      transitions: null,
      pendingSuspenseBoundaries: null,
    }),
    iE(o),
    t
  );
}
function N4(t, e, n) {
  var r = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
  return {
    $$typeof: ku,
    key: r == null ? null : "" + r,
    children: t,
    containerInfo: e,
    implementation: n,
  };
}
function bI(t) {
  if (!t) return rl;
  t = t._reactInternals;
  e: {
    if (Dc(t) !== t || t.tag !== 1) throw Error(Xe(170));
    var e = t;
    do {
      switch (e.tag) {
        case 3:
          e = e.stateNode.context;
          break e;
        case 1:
          if (_i(e.type)) {
            e = e.stateNode.__reactInternalMemoizedMergedChildContext;
            break e;
          }
      }
      e = e.return;
    } while (e !== null);
    throw Error(Xe(171));
  }
  if (t.tag === 1) {
    var n = t.type;
    if (_i(n)) return wL(t, n, e);
  }
  return e;
}
function EI(t, e, n, r, i, o, s, a, l) {
  return (
    (t = SE(n, r, !0, t, i, o, s, a, l)),
    (t.context = bI(null)),
    (n = t.current),
    (r = ii()),
    (i = Ka(n)),
    (o = na(r, i)),
    (o.callback = e ?? null),
    qa(n, o, i),
    (t.current.lanes = i),
    fp(t, i, r),
    Si(t, r),
    t
  );
}
function X0(t, e, n, r) {
  var i = e.current,
    o = ii(),
    s = Ka(i);
  return (
    (n = bI(n)),
    e.context === null ? (e.context = n) : (e.pendingContext = n),
    (e = na(o, s)),
    (e.payload = { element: t }),
    (r = r === void 0 ? null : r),
    r !== null && (e.callback = r),
    (t = qa(i, e, s)),
    t !== null && (Wo(t, i, s, o), mv(t, i, s)),
    s
  );
}
function c0(t) {
  if (((t = t.current), !t.child)) return null;
  switch (t.child.tag) {
    case 5:
      return t.child.stateNode;
    default:
      return t.child.stateNode;
  }
}
function NT(t, e) {
  if (((t = t.memoizedState), t !== null && t.dehydrated !== null)) {
    var n = t.retryLane;
    t.retryLane = n !== 0 && n < e ? n : e;
  }
}
function wE(t, e) {
  NT(t, e), (t = t.alternate) && NT(t, e);
}
function D4() {
  return null;
}
var MI =
  typeof reportError == "function"
    ? reportError
    : function (t) {
        console.error(t);
      };
function bE(t) {
  this._internalRoot = t;
}
q0.prototype.render = bE.prototype.render = function (t) {
  var e = this._internalRoot;
  if (e === null) throw Error(Xe(409));
  X0(t, e, null, null);
};
q0.prototype.unmount = bE.prototype.unmount = function () {
  var t = this._internalRoot;
  if (t !== null) {
    this._internalRoot = null;
    var e = t.containerInfo;
    Cc(function () {
      X0(null, t, null, null);
    }),
      (e[oa] = null);
  }
};
function q0(t) {
  this._internalRoot = t;
}
q0.prototype.unstable_scheduleHydration = function (t) {
  if (t) {
    var e = tL();
    t = { blockedOn: null, target: t, priority: e };
    for (var n = 0; n < Da.length && e !== 0 && e < Da[n].priority; n++);
    Da.splice(n, 0, t), n === 0 && rL(t);
  }
};
function EE(t) {
  return !(!t || (t.nodeType !== 1 && t.nodeType !== 9 && t.nodeType !== 11));
}
function Y0(t) {
  return !(
    !t ||
    (t.nodeType !== 1 &&
      t.nodeType !== 9 &&
      t.nodeType !== 11 &&
      (t.nodeType !== 8 || t.nodeValue !== " react-mount-point-unstable "))
  );
}
function DT() {}
function U4(t, e, n, r, i) {
  if (i) {
    if (typeof r == "function") {
      var o = r;
      r = function () {
        var c = c0(s);
        o.call(c);
      };
    }
    var s = EI(e, r, t, 0, null, !1, !1, "", DT);
    return (
      (t._reactRootContainer = s),
      (t[oa] = s.current),
      bh(t.nodeType === 8 ? t.parentNode : t),
      Cc(),
      s
    );
  }
  for (; (i = t.lastChild); ) t.removeChild(i);
  if (typeof r == "function") {
    var a = r;
    r = function () {
      var c = c0(l);
      a.call(c);
    };
  }
  var l = SE(t, 0, !1, null, null, !1, !1, "", DT);
  return (
    (t._reactRootContainer = l),
    (t[oa] = l.current),
    bh(t.nodeType === 8 ? t.parentNode : t),
    Cc(function () {
      X0(e, l, n, r);
    }),
    l
  );
}
function K0(t, e, n, r, i) {
  var o = n._reactRootContainer;
  if (o) {
    var s = o;
    if (typeof i == "function") {
      var a = i;
      i = function () {
        var l = c0(s);
        a.call(l);
      };
    }
    X0(e, s, t, i);
  } else s = U4(n, e, t, i, r);
  return c0(s);
}
J3 = function (t) {
  switch (t.tag) {
    case 3:
      var e = t.stateNode;
      if (e.current.memoizedState.isDehydrated) {
        var n = Gd(e.pendingLanes);
        n !== 0 &&
          (Gb(e, n | 1), Si(e, $n()), !(Xt & 6) && ((Ef = $n() + 500), hl()));
      }
      break;
    case 13:
      Cc(function () {
        var r = sa(t, 1);
        if (r !== null) {
          var i = ii();
          Wo(r, t, 1, i);
        }
      }),
        wE(t, 1);
  }
};
jb = function (t) {
  if (t.tag === 13) {
    var e = sa(t, 134217728);
    if (e !== null) {
      var n = ii();
      Wo(e, t, 134217728, n);
    }
    wE(t, 134217728);
  }
};
eL = function (t) {
  if (t.tag === 13) {
    var e = Ka(t),
      n = sa(t, e);
    if (n !== null) {
      var r = ii();
      Wo(n, t, e, r);
    }
    wE(t, e);
  }
};
tL = function () {
  return rn;
};
nL = function (t, e) {
  var n = rn;
  try {
    return (rn = t), e();
  } finally {
    rn = n;
  }
};
sS = function (t, e, n) {
  switch (e) {
    case "input":
      if ((J_(t, n), (e = n.name), n.type === "radio" && e != null)) {
        for (n = t; n.parentNode; ) n = n.parentNode;
        for (
          n = n.querySelectorAll(
            "input[name=" + JSON.stringify("" + e) + '][type="radio"]'
          ),
            e = 0;
          e < n.length;
          e++
        ) {
          var r = n[e];
          if (r !== t && r.form === t.form) {
            var i = B0(r);
            if (!i) throw Error(Xe(90));
            O3(r), J_(r, i);
          }
        }
      }
      break;
    case "textarea":
      N3(t, n);
      break;
    case "select":
      (e = n.value), e != null && lf(t, !!n.multiple, e, !1);
  }
};
V3 = vE;
G3 = Cc;
var z4 = { usingClientEntryPoint: !1, Events: [hp, ju, B0, B3, H3, vE] },
  Ed = {
    findFiberByHostInstance: tc,
    bundleType: 0,
    version: "18.2.0",
    rendererPackageName: "react-dom",
  },
  k4 = {
    bundleType: Ed.bundleType,
    version: Ed.version,
    rendererPackageName: Ed.rendererPackageName,
    rendererConfig: Ed.rendererConfig,
    overrideHookState: null,
    overrideHookStateDeletePath: null,
    overrideHookStateRenamePath: null,
    overrideProps: null,
    overridePropsDeletePath: null,
    overridePropsRenamePath: null,
    setErrorHandler: null,
    setSuspenseHandler: null,
    scheduleUpdate: null,
    currentDispatcherRef: ha.ReactCurrentDispatcher,
    findHostInstanceByFiber: function (t) {
      return (t = $3(t)), t === null ? null : t.stateNode;
    },
    findFiberByHostInstance: Ed.findFiberByHostInstance || D4,
    findHostInstancesForRefresh: null,
    scheduleRefresh: null,
    scheduleRoot: null,
    setRefreshHandler: null,
    getCurrentFiber: null,
    reconcilerVersion: "18.2.0-next-9e3b772b8-20220608",
  };
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
  var jm = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!jm.isDisabled && jm.supportsFiber)
    try {
      (D0 = jm.inject(k4)), (gs = jm);
    } catch {}
}
Ji.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = z4;
Ji.createPortal = function (t, e) {
  var n = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
  if (!EE(e)) throw Error(Xe(200));
  return N4(t, e, null, n);
};
Ji.createRoot = function (t, e) {
  if (!EE(t)) throw Error(Xe(299));
  var n = !1,
    r = "",
    i = MI;
  return (
    e != null &&
      (e.unstable_strictMode === !0 && (n = !0),
      e.identifierPrefix !== void 0 && (r = e.identifierPrefix),
      e.onRecoverableError !== void 0 && (i = e.onRecoverableError)),
    (e = SE(t, 1, !1, null, null, n, !1, r, i)),
    (t[oa] = e.current),
    bh(t.nodeType === 8 ? t.parentNode : t),
    new bE(e)
  );
};
Ji.findDOMNode = function (t) {
  if (t == null) return null;
  if (t.nodeType === 1) return t;
  var e = t._reactInternals;
  if (e === void 0)
    throw typeof t.render == "function"
      ? Error(Xe(188))
      : ((t = Object.keys(t).join(",")), Error(Xe(268, t)));
  return (t = $3(e)), (t = t === null ? null : t.stateNode), t;
};
Ji.flushSync = function (t) {
  return Cc(t);
};
Ji.hydrate = function (t, e, n) {
  if (!Y0(e)) throw Error(Xe(200));
  return K0(null, t, e, !0, n);
};
Ji.hydrateRoot = function (t, e, n) {
  if (!EE(t)) throw Error(Xe(405));
  var r = (n != null && n.hydratedSources) || null,
    i = !1,
    o = "",
    s = MI;
  if (
    (n != null &&
      (n.unstable_strictMode === !0 && (i = !0),
      n.identifierPrefix !== void 0 && (o = n.identifierPrefix),
      n.onRecoverableError !== void 0 && (s = n.onRecoverableError)),
    (e = EI(e, null, t, 1, n ?? null, i, !1, o, s)),
    (t[oa] = e.current),
    bh(t),
    r)
  )
    for (t = 0; t < r.length; t++)
      (n = r[t]),
        (i = n._getVersion),
        (i = i(n._source)),
        e.mutableSourceEagerHydrationData == null
          ? (e.mutableSourceEagerHydrationData = [n, i])
          : e.mutableSourceEagerHydrationData.push(n, i);
  return new q0(e);
};
Ji.render = function (t, e, n) {
  if (!Y0(e)) throw Error(Xe(200));
  return K0(null, t, e, !1, n);
};
Ji.unmountComponentAtNode = function (t) {
  if (!Y0(t)) throw Error(Xe(40));
  return t._reactRootContainer
    ? (Cc(function () {
        K0(null, null, t, !1, function () {
          (t._reactRootContainer = null), (t[oa] = null);
        });
      }),
      !0)
    : !1;
};
Ji.unstable_batchedUpdates = vE;
Ji.unstable_renderSubtreeIntoContainer = function (t, e, n, r) {
  if (!Y0(n)) throw Error(Xe(200));
  if (t == null || t._reactInternals === void 0) throw Error(Xe(38));
  return K0(t, e, n, !1, r);
};
Ji.version = "18.2.0-next-9e3b772b8-20220608";
function CI() {
  if (
    !(
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" ||
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function"
    )
  )
    try {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(CI);
    } catch (t) {
      console.error(t);
    }
}
CI(), (E3.exports = Ji);
var ME = E3.exports;
const TI = cp(ME),
  B4 = h3({ __proto__: null, default: TI }, [ME]);
var UT = ME;
($_.createRoot = UT.createRoot), ($_.hydrateRoot = UT.hydrateRoot);
/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */ const mp = "160",
  Xl = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 },
  ql = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 },
  AI = 0,
  kS = 1,
  RI = 2,
  H4 = 3,
  PI = 0,
  Z0 = 1,
  rh = 2,
  No = 3,
  Ss = 0,
  Vr = 1,
  mo = 2,
  V4 = 2,
  ra = 0,
  hc = 1,
  BS = 2,
  HS = 3,
  VS = 4,
  LI = 5,
  za = 100,
  II = 101,
  OI = 102,
  GS = 103,
  jS = 104,
  FI = 200,
  NI = 201,
  DI = 202,
  UI = 203,
  u0 = 204,
  f0 = 205,
  zI = 206,
  kI = 207,
  BI = 208,
  HI = 209,
  VI = 210,
  GI = 211,
  jI = 212,
  WI = 213,
  $I = 214,
  XI = 0,
  qI = 1,
  YI = 2,
  Ih = 3,
  KI = 4,
  ZI = 5,
  QI = 6,
  JI = 7,
  gp = 0,
  eO = 1,
  tO = 2,
  ys = 0,
  nO = 1,
  rO = 2,
  iO = 3,
  CE = 4,
  oO = 5,
  sO = 6,
  WS = "attached",
  aO = "detached",
  Q0 = 300,
  la = 301,
  il = 302,
  Oh = 303,
  Fh = 304,
  kf = 306,
  Nh = 1e3,
  Hr = 1001,
  Dh = 1002,
  Wn = 1003,
  d0 = 1004,
  G4 = 1004,
  ih = 1005,
  j4 = 1005,
  Cn = 1006,
  TE = 1007,
  W4 = 1007,
  ol = 1008,
  $4 = 1008,
  xs = 1009,
  lO = 1010,
  cO = 1011,
  J0 = 1012,
  AE = 1013,
  Js = 1014,
  Vo = 1015,
  Mf = 1016,
  RE = 1017,
  PE = 1018,
  Qa = 1020,
  uO = 1021,
  ri = 1023,
  fO = 1024,
  dO = 1025,
  Ja = 1026,
  Tc = 1027,
  hO = 1028,
  LE = 1029,
  pO = 1030,
  IE = 1031,
  OE = 1033,
  wv = 33776,
  bv = 33777,
  Ev = 33778,
  Mv = 33779,
  $S = 35840,
  XS = 35841,
  qS = 35842,
  YS = 35843,
  FE = 36196,
  KS = 37492,
  ZS = 37496,
  QS = 37808,
  JS = 37809,
  ew = 37810,
  tw = 37811,
  nw = 37812,
  rw = 37813,
  iw = 37814,
  ow = 37815,
  sw = 37816,
  aw = 37817,
  lw = 37818,
  cw = 37819,
  uw = 37820,
  fw = 37821,
  Cv = 36492,
  dw = 36494,
  hw = 36495,
  mO = 36283,
  pw = 36284,
  mw = 36285,
  gw = 36286,
  gO = 2200,
  vO = 2201,
  yO = 2202,
  Uh = 2300,
  zh = 2301,
  Tv = 2302,
  ic = 2400,
  oc = 2401,
  kh = 2402,
  ey = 2500,
  NE = 2501,
  X4 = 0,
  q4 = 1,
  Y4 = 2,
  DE = 3e3,
  el = 3001,
  xO = 3200,
  UE = 3201,
  pl = 0,
  _O = 1,
  Bi = "",
  rr = "srgb",
  ws = "srgb-linear",
  ty = "display-p3",
  vp = "display-p3-linear",
  Bh = "linear",
  dn = "srgb",
  Hh = "rec709",
  Vh = "p3",
  K4 = 0,
  Yl = 7680,
  Z4 = 7681,
  Q4 = 7682,
  J4 = 7683,
  eB = 34055,
  tB = 34056,
  nB = 5386,
  rB = 512,
  iB = 513,
  oB = 514,
  sB = 515,
  aB = 516,
  lB = 517,
  cB = 518,
  vw = 519,
  SO = 512,
  wO = 513,
  bO = 514,
  zE = 515,
  EO = 516,
  MO = 517,
  CO = 518,
  TO = 519,
  Gh = 35044,
  uB = 35048,
  fB = 35040,
  dB = 35045,
  hB = 35049,
  pB = 35041,
  mB = 35046,
  gB = 35050,
  vB = 35042,
  yB = "100",
  yw = "300 es",
  h0 = 1035,
  Go = 2e3,
  Cf = 2001;
class bs {
  addEventListener(e, n) {
    this._listeners === void 0 && (this._listeners = {});
    const r = this._listeners;
    r[e] === void 0 && (r[e] = []), r[e].indexOf(n) === -1 && r[e].push(n);
  }
  hasEventListener(e, n) {
    if (this._listeners === void 0) return !1;
    const r = this._listeners;
    return r[e] !== void 0 && r[e].indexOf(n) !== -1;
  }
  removeEventListener(e, n) {
    if (this._listeners === void 0) return;
    const i = this._listeners[e];
    if (i !== void 0) {
      const o = i.indexOf(n);
      o !== -1 && i.splice(o, 1);
    }
  }
  dispatchEvent(e) {
    if (this._listeners === void 0) return;
    const r = this._listeners[e.type];
    if (r !== void 0) {
      e.target = this;
      const i = r.slice(0);
      for (let o = 0, s = i.length; o < s; o++) i[o].call(this, e);
      e.target = null;
    }
  }
}
const Dr = [
  "00",
  "01",
  "02",
  "03",
  "04",
  "05",
  "06",
  "07",
  "08",
  "09",
  "0a",
  "0b",
  "0c",
  "0d",
  "0e",
  "0f",
  "10",
  "11",
  "12",
  "13",
  "14",
  "15",
  "16",
  "17",
  "18",
  "19",
  "1a",
  "1b",
  "1c",
  "1d",
  "1e",
  "1f",
  "20",
  "21",
  "22",
  "23",
  "24",
  "25",
  "26",
  "27",
  "28",
  "29",
  "2a",
  "2b",
  "2c",
  "2d",
  "2e",
  "2f",
  "30",
  "31",
  "32",
  "33",
  "34",
  "35",
  "36",
  "37",
  "38",
  "39",
  "3a",
  "3b",
  "3c",
  "3d",
  "3e",
  "3f",
  "40",
  "41",
  "42",
  "43",
  "44",
  "45",
  "46",
  "47",
  "48",
  "49",
  "4a",
  "4b",
  "4c",
  "4d",
  "4e",
  "4f",
  "50",
  "51",
  "52",
  "53",
  "54",
  "55",
  "56",
  "57",
  "58",
  "59",
  "5a",
  "5b",
  "5c",
  "5d",
  "5e",
  "5f",
  "60",
  "61",
  "62",
  "63",
  "64",
  "65",
  "66",
  "67",
  "68",
  "69",
  "6a",
  "6b",
  "6c",
  "6d",
  "6e",
  "6f",
  "70",
  "71",
  "72",
  "73",
  "74",
  "75",
  "76",
  "77",
  "78",
  "79",
  "7a",
  "7b",
  "7c",
  "7d",
  "7e",
  "7f",
  "80",
  "81",
  "82",
  "83",
  "84",
  "85",
  "86",
  "87",
  "88",
  "89",
  "8a",
  "8b",
  "8c",
  "8d",
  "8e",
  "8f",
  "90",
  "91",
  "92",
  "93",
  "94",
  "95",
  "96",
  "97",
  "98",
  "99",
  "9a",
  "9b",
  "9c",
  "9d",
  "9e",
  "9f",
  "a0",
  "a1",
  "a2",
  "a3",
  "a4",
  "a5",
  "a6",
  "a7",
  "a8",
  "a9",
  "aa",
  "ab",
  "ac",
  "ad",
  "ae",
  "af",
  "b0",
  "b1",
  "b2",
  "b3",
  "b4",
  "b5",
  "b6",
  "b7",
  "b8",
  "b9",
  "ba",
  "bb",
  "bc",
  "bd",
  "be",
  "bf",
  "c0",
  "c1",
  "c2",
  "c3",
  "c4",
  "c5",
  "c6",
  "c7",
  "c8",
  "c9",
  "ca",
  "cb",
  "cc",
  "cd",
  "ce",
  "cf",
  "d0",
  "d1",
  "d2",
  "d3",
  "d4",
  "d5",
  "d6",
  "d7",
  "d8",
  "d9",
  "da",
  "db",
  "dc",
  "dd",
  "de",
  "df",
  "e0",
  "e1",
  "e2",
  "e3",
  "e4",
  "e5",
  "e6",
  "e7",
  "e8",
  "e9",
  "ea",
  "eb",
  "ec",
  "ed",
  "ee",
  "ef",
  "f0",
  "f1",
  "f2",
  "f3",
  "f4",
  "f5",
  "f6",
  "f7",
  "f8",
  "f9",
  "fa",
  "fb",
  "fc",
  "fd",
  "fe",
  "ff",
];
let zT = 1234567;
const pc = Math.PI / 180,
  Tf = 180 / Math.PI;
function Xi() {
  const t = (Math.random() * 4294967295) | 0,
    e = (Math.random() * 4294967295) | 0,
    n = (Math.random() * 4294967295) | 0,
    r = (Math.random() * 4294967295) | 0;
  return (
    Dr[t & 255] +
    Dr[(t >> 8) & 255] +
    Dr[(t >> 16) & 255] +
    Dr[(t >> 24) & 255] +
    "-" +
    Dr[e & 255] +
    Dr[(e >> 8) & 255] +
    "-" +
    Dr[((e >> 16) & 15) | 64] +
    Dr[(e >> 24) & 255] +
    "-" +
    Dr[(n & 63) | 128] +
    Dr[(n >> 8) & 255] +
    "-" +
    Dr[(n >> 16) & 255] +
    Dr[(n >> 24) & 255] +
    Dr[r & 255] +
    Dr[(r >> 8) & 255] +
    Dr[(r >> 16) & 255] +
    Dr[(r >> 24) & 255]
  ).toLowerCase();
}
function Dn(t, e, n) {
  return Math.max(e, Math.min(n, t));
}
function kE(t, e) {
  return ((t % e) + e) % e;
}
function xB(t, e, n, r, i) {
  return r + ((t - e) * (i - r)) / (n - e);
}
function _B(t, e, n) {
  return t !== e ? (n - t) / (e - t) : 0;
}
function oh(t, e, n) {
  return (1 - n) * t + n * e;
}
function SB(t, e, n, r) {
  return oh(t, e, 1 - Math.exp(-n * r));
}
function wB(t, e = 1) {
  return e - Math.abs(kE(t, e * 2) - e);
}
function bB(t, e, n) {
  return t <= e
    ? 0
    : t >= n
    ? 1
    : ((t = (t - e) / (n - e)), t * t * (3 - 2 * t));
}
function EB(t, e, n) {
  return t <= e
    ? 0
    : t >= n
    ? 1
    : ((t = (t - e) / (n - e)), t * t * t * (t * (t * 6 - 15) + 10));
}
function MB(t, e) {
  return t + Math.floor(Math.random() * (e - t + 1));
}
function CB(t, e) {
  return t + Math.random() * (e - t);
}
function TB(t) {
  return t * (0.5 - Math.random());
}
function AB(t) {
  t !== void 0 && (zT = t);
  let e = (zT += 1831565813);
  return (
    (e = Math.imul(e ^ (e >>> 15), e | 1)),
    (e ^= e + Math.imul(e ^ (e >>> 7), e | 61)),
    ((e ^ (e >>> 14)) >>> 0) / 4294967296
  );
}
function RB(t) {
  return t * pc;
}
function PB(t) {
  return t * Tf;
}
function xw(t) {
  return (t & (t - 1)) === 0 && t !== 0;
}
function LB(t) {
  return Math.pow(2, Math.ceil(Math.log(t) / Math.LN2));
}
function p0(t) {
  return Math.pow(2, Math.floor(Math.log(t) / Math.LN2));
}
function IB(t, e, n, r, i) {
  const o = Math.cos,
    s = Math.sin,
    a = o(n / 2),
    l = s(n / 2),
    c = o((e + r) / 2),
    u = s((e + r) / 2),
    h = o((e - r) / 2),
    p = s((e - r) / 2),
    m = o((r - e) / 2),
    v = s((r - e) / 2);
  switch (i) {
    case "XYX":
      t.set(a * u, l * h, l * p, a * c);
      break;
    case "YZY":
      t.set(l * p, a * u, l * h, a * c);
      break;
    case "ZXZ":
      t.set(l * h, l * p, a * u, a * c);
      break;
    case "XZX":
      t.set(a * u, l * v, l * m, a * c);
      break;
    case "YXY":
      t.set(l * m, a * u, l * v, a * c);
      break;
    case "ZYZ":
      t.set(l * v, l * m, a * u, a * c);
      break;
    default:
      console.warn(
        "THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " +
          i
      );
  }
}
function vi(t, e) {
  switch (e.constructor) {
    case Float32Array:
      return t;
    case Uint32Array:
      return t / 4294967295;
    case Uint16Array:
      return t / 65535;
    case Uint8Array:
      return t / 255;
    case Int32Array:
      return Math.max(t / 2147483647, -1);
    case Int16Array:
      return Math.max(t / 32767, -1);
    case Int8Array:
      return Math.max(t / 127, -1);
    default:
      throw new Error("Invalid component type.");
  }
}
function Ft(t, e) {
  switch (e.constructor) {
    case Float32Array:
      return t;
    case Uint32Array:
      return Math.round(t * 4294967295);
    case Uint16Array:
      return Math.round(t * 65535);
    case Uint8Array:
      return Math.round(t * 255);
    case Int32Array:
      return Math.round(t * 2147483647);
    case Int16Array:
      return Math.round(t * 32767);
    case Int8Array:
      return Math.round(t * 127);
    default:
      throw new Error("Invalid component type.");
  }
}
const AO = {
  DEG2RAD: pc,
  RAD2DEG: Tf,
  generateUUID: Xi,
  clamp: Dn,
  euclideanModulo: kE,
  mapLinear: xB,
  inverseLerp: _B,
  lerp: oh,
  damp: SB,
  pingpong: wB,
  smoothstep: bB,
  smootherstep: EB,
  randInt: MB,
  randFloat: CB,
  randFloatSpread: TB,
  seededRandom: AB,
  degToRad: RB,
  radToDeg: PB,
  isPowerOfTwo: xw,
  ceilPowerOfTwo: LB,
  floorPowerOfTwo: p0,
  setQuaternionFromProperEuler: IB,
  normalize: Ft,
  denormalize: vi,
};
class Fe {
  constructor(e = 0, n = 0) {
    (Fe.prototype.isVector2 = !0), (this.x = e), (this.y = n);
  }
  get width() {
    return this.x;
  }
  set width(e) {
    this.x = e;
  }
  get height() {
    return this.y;
  }
  set height(e) {
    this.y = e;
  }
  set(e, n) {
    return (this.x = e), (this.y = n), this;
  }
  setScalar(e) {
    return (this.x = e), (this.y = e), this;
  }
  setX(e) {
    return (this.x = e), this;
  }
  setY(e) {
    return (this.y = e), this;
  }
  setComponent(e, n) {
    switch (e) {
      case 0:
        this.x = n;
        break;
      case 1:
        this.y = n;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }
  getComponent(e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      default:
        throw new Error("index is out of range: " + e);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y);
  }
  copy(e) {
    return (this.x = e.x), (this.y = e.y), this;
  }
  add(e) {
    return (this.x += e.x), (this.y += e.y), this;
  }
  addScalar(e) {
    return (this.x += e), (this.y += e), this;
  }
  addVectors(e, n) {
    return (this.x = e.x + n.x), (this.y = e.y + n.y), this;
  }
  addScaledVector(e, n) {
    return (this.x += e.x * n), (this.y += e.y * n), this;
  }
  sub(e) {
    return (this.x -= e.x), (this.y -= e.y), this;
  }
  subScalar(e) {
    return (this.x -= e), (this.y -= e), this;
  }
  subVectors(e, n) {
    return (this.x = e.x - n.x), (this.y = e.y - n.y), this;
  }
  multiply(e) {
    return (this.x *= e.x), (this.y *= e.y), this;
  }
  multiplyScalar(e) {
    return (this.x *= e), (this.y *= e), this;
  }
  divide(e) {
    return (this.x /= e.x), (this.y /= e.y), this;
  }
  divideScalar(e) {
    return this.multiplyScalar(1 / e);
  }
  applyMatrix3(e) {
    const n = this.x,
      r = this.y,
      i = e.elements;
    return (
      (this.x = i[0] * n + i[3] * r + i[6]),
      (this.y = i[1] * n + i[4] * r + i[7]),
      this
    );
  }
  min(e) {
    return (
      (this.x = Math.min(this.x, e.x)), (this.y = Math.min(this.y, e.y)), this
    );
  }
  max(e) {
    return (
      (this.x = Math.max(this.x, e.x)), (this.y = Math.max(this.y, e.y)), this
    );
  }
  clamp(e, n) {
    return (
      (this.x = Math.max(e.x, Math.min(n.x, this.x))),
      (this.y = Math.max(e.y, Math.min(n.y, this.y))),
      this
    );
  }
  clampScalar(e, n) {
    return (
      (this.x = Math.max(e, Math.min(n, this.x))),
      (this.y = Math.max(e, Math.min(n, this.y))),
      this
    );
  }
  clampLength(e, n) {
    const r = this.length();
    return this.divideScalar(r || 1).multiplyScalar(
      Math.max(e, Math.min(n, r))
    );
  }
  floor() {
    return (this.x = Math.floor(this.x)), (this.y = Math.floor(this.y)), this;
  }
  ceil() {
    return (this.x = Math.ceil(this.x)), (this.y = Math.ceil(this.y)), this;
  }
  round() {
    return (this.x = Math.round(this.x)), (this.y = Math.round(this.y)), this;
  }
  roundToZero() {
    return (this.x = Math.trunc(this.x)), (this.y = Math.trunc(this.y)), this;
  }
  negate() {
    return (this.x = -this.x), (this.y = -this.y), this;
  }
  dot(e) {
    return this.x * e.x + this.y * e.y;
  }
  cross(e) {
    return this.x * e.y - this.y * e.x;
  }
  lengthSq() {
    return this.x * this.x + this.y * this.y;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  angle() {
    return Math.atan2(-this.y, -this.x) + Math.PI;
  }
  angleTo(e) {
    const n = Math.sqrt(this.lengthSq() * e.lengthSq());
    if (n === 0) return Math.PI / 2;
    const r = this.dot(e) / n;
    return Math.acos(Dn(r, -1, 1));
  }
  distanceTo(e) {
    return Math.sqrt(this.distanceToSquared(e));
  }
  distanceToSquared(e) {
    const n = this.x - e.x,
      r = this.y - e.y;
    return n * n + r * r;
  }
  manhattanDistanceTo(e) {
    return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
  }
  setLength(e) {
    return this.normalize().multiplyScalar(e);
  }
  lerp(e, n) {
    return (this.x += (e.x - this.x) * n), (this.y += (e.y - this.y) * n), this;
  }
  lerpVectors(e, n, r) {
    return (
      (this.x = e.x + (n.x - e.x) * r), (this.y = e.y + (n.y - e.y) * r), this
    );
  }
  equals(e) {
    return e.x === this.x && e.y === this.y;
  }
  fromArray(e, n = 0) {
    return (this.x = e[n]), (this.y = e[n + 1]), this;
  }
  toArray(e = [], n = 0) {
    return (e[n] = this.x), (e[n + 1] = this.y), e;
  }
  fromBufferAttribute(e, n) {
    return (this.x = e.getX(n)), (this.y = e.getY(n)), this;
  }
  rotateAround(e, n) {
    const r = Math.cos(n),
      i = Math.sin(n),
      o = this.x - e.x,
      s = this.y - e.y;
    return (this.x = o * r - s * i + e.x), (this.y = o * i + s * r + e.y), this;
  }
  random() {
    return (this.x = Math.random()), (this.y = Math.random()), this;
  }
  *[Symbol.iterator]() {
    yield this.x, yield this.y;
  }
}
class Ot {
  constructor(e, n, r, i, o, s, a, l, c) {
    (Ot.prototype.isMatrix3 = !0),
      (this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1]),
      e !== void 0 && this.set(e, n, r, i, o, s, a, l, c);
  }
  set(e, n, r, i, o, s, a, l, c) {
    const u = this.elements;
    return (
      (u[0] = e),
      (u[1] = i),
      (u[2] = a),
      (u[3] = n),
      (u[4] = o),
      (u[5] = l),
      (u[6] = r),
      (u[7] = s),
      (u[8] = c),
      this
    );
  }
  identity() {
    return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
  }
  copy(e) {
    const n = this.elements,
      r = e.elements;
    return (
      (n[0] = r[0]),
      (n[1] = r[1]),
      (n[2] = r[2]),
      (n[3] = r[3]),
      (n[4] = r[4]),
      (n[5] = r[5]),
      (n[6] = r[6]),
      (n[7] = r[7]),
      (n[8] = r[8]),
      this
    );
  }
  extractBasis(e, n, r) {
    return (
      e.setFromMatrix3Column(this, 0),
      n.setFromMatrix3Column(this, 1),
      r.setFromMatrix3Column(this, 2),
      this
    );
  }
  setFromMatrix4(e) {
    const n = e.elements;
    return (
      this.set(n[0], n[4], n[8], n[1], n[5], n[9], n[2], n[6], n[10]), this
    );
  }
  multiply(e) {
    return this.multiplyMatrices(this, e);
  }
  premultiply(e) {
    return this.multiplyMatrices(e, this);
  }
  multiplyMatrices(e, n) {
    const r = e.elements,
      i = n.elements,
      o = this.elements,
      s = r[0],
      a = r[3],
      l = r[6],
      c = r[1],
      u = r[4],
      h = r[7],
      p = r[2],
      m = r[5],
      v = r[8],
      S = i[0],
      x = i[3],
      g = i[6],
      y = i[1],
      _ = i[4],
      b = i[7],
      T = i[2],
      M = i[5],
      C = i[8];
    return (
      (o[0] = s * S + a * y + l * T),
      (o[3] = s * x + a * _ + l * M),
      (o[6] = s * g + a * b + l * C),
      (o[1] = c * S + u * y + h * T),
      (o[4] = c * x + u * _ + h * M),
      (o[7] = c * g + u * b + h * C),
      (o[2] = p * S + m * y + v * T),
      (o[5] = p * x + m * _ + v * M),
      (o[8] = p * g + m * b + v * C),
      this
    );
  }
  multiplyScalar(e) {
    const n = this.elements;
    return (
      (n[0] *= e),
      (n[3] *= e),
      (n[6] *= e),
      (n[1] *= e),
      (n[4] *= e),
      (n[7] *= e),
      (n[2] *= e),
      (n[5] *= e),
      (n[8] *= e),
      this
    );
  }
  determinant() {
    const e = this.elements,
      n = e[0],
      r = e[1],
      i = e[2],
      o = e[3],
      s = e[4],
      a = e[5],
      l = e[6],
      c = e[7],
      u = e[8];
    return (
      n * s * u - n * a * c - r * o * u + r * a * l + i * o * c - i * s * l
    );
  }
  invert() {
    const e = this.elements,
      n = e[0],
      r = e[1],
      i = e[2],
      o = e[3],
      s = e[4],
      a = e[5],
      l = e[6],
      c = e[7],
      u = e[8],
      h = u * s - a * c,
      p = a * l - u * o,
      m = c * o - s * l,
      v = n * h + r * p + i * m;
    if (v === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
    const S = 1 / v;
    return (
      (e[0] = h * S),
      (e[1] = (i * c - u * r) * S),
      (e[2] = (a * r - i * s) * S),
      (e[3] = p * S),
      (e[4] = (u * n - i * l) * S),
      (e[5] = (i * o - a * n) * S),
      (e[6] = m * S),
      (e[7] = (r * l - c * n) * S),
      (e[8] = (s * n - r * o) * S),
      this
    );
  }
  transpose() {
    let e;
    const n = this.elements;
    return (
      (e = n[1]),
      (n[1] = n[3]),
      (n[3] = e),
      (e = n[2]),
      (n[2] = n[6]),
      (n[6] = e),
      (e = n[5]),
      (n[5] = n[7]),
      (n[7] = e),
      this
    );
  }
  getNormalMatrix(e) {
    return this.setFromMatrix4(e).invert().transpose();
  }
  transposeIntoArray(e) {
    const n = this.elements;
    return (
      (e[0] = n[0]),
      (e[1] = n[3]),
      (e[2] = n[6]),
      (e[3] = n[1]),
      (e[4] = n[4]),
      (e[5] = n[7]),
      (e[6] = n[2]),
      (e[7] = n[5]),
      (e[8] = n[8]),
      this
    );
  }
  setUvTransform(e, n, r, i, o, s, a) {
    const l = Math.cos(o),
      c = Math.sin(o);
    return (
      this.set(
        r * l,
        r * c,
        -r * (l * s + c * a) + s + e,
        -i * c,
        i * l,
        -i * (-c * s + l * a) + a + n,
        0,
        0,
        1
      ),
      this
    );
  }
  scale(e, n) {
    return this.premultiply(S1.makeScale(e, n)), this;
  }
  rotate(e) {
    return this.premultiply(S1.makeRotation(-e)), this;
  }
  translate(e, n) {
    return this.premultiply(S1.makeTranslation(e, n)), this;
  }
  makeTranslation(e, n) {
    return (
      e.isVector2
        ? this.set(1, 0, e.x, 0, 1, e.y, 0, 0, 1)
        : this.set(1, 0, e, 0, 1, n, 0, 0, 1),
      this
    );
  }
  makeRotation(e) {
    const n = Math.cos(e),
      r = Math.sin(e);
    return this.set(n, -r, 0, r, n, 0, 0, 0, 1), this;
  }
  makeScale(e, n) {
    return this.set(e, 0, 0, 0, n, 0, 0, 0, 1), this;
  }
  equals(e) {
    const n = this.elements,
      r = e.elements;
    for (let i = 0; i < 9; i++) if (n[i] !== r[i]) return !1;
    return !0;
  }
  fromArray(e, n = 0) {
    for (let r = 0; r < 9; r++) this.elements[r] = e[r + n];
    return this;
  }
  toArray(e = [], n = 0) {
    const r = this.elements;
    return (
      (e[n] = r[0]),
      (e[n + 1] = r[1]),
      (e[n + 2] = r[2]),
      (e[n + 3] = r[3]),
      (e[n + 4] = r[4]),
      (e[n + 5] = r[5]),
      (e[n + 6] = r[6]),
      (e[n + 7] = r[7]),
      (e[n + 8] = r[8]),
      e
    );
  }
  clone() {
    return new this.constructor().fromArray(this.elements);
  }
}
const S1 = new Ot();
function RO(t) {
  for (let e = t.length - 1; e >= 0; --e) if (t[e] >= 65535) return !0;
  return !1;
}
const OB = {
  Int8Array,
  Uint8Array,
  Uint8ClampedArray,
  Int16Array,
  Uint16Array,
  Int32Array,
  Uint32Array,
  Float32Array,
  Float64Array,
};
function Zu(t, e) {
  return new OB[t](e);
}
function jh(t) {
  return document.createElementNS("http://www.w3.org/1999/xhtml", t);
}
function PO() {
  const t = jh("canvas");
  return (t.style.display = "block"), t;
}
const kT = {};
function sh(t) {
  t in kT || ((kT[t] = !0), console.warn(t));
}
const BT = new Ot().set(
    0.8224621,
    0.177538,
    0,
    0.0331941,
    0.9668058,
    0,
    0.0170827,
    0.0723974,
    0.9105199
  ),
  HT = new Ot().set(
    1.2249401,
    -0.2249404,
    0,
    -0.0420569,
    1.0420571,
    0,
    -0.0196376,
    -0.0786361,
    1.0982735
  ),
  Wm = {
    [ws]: {
      transfer: Bh,
      primaries: Hh,
      toReference: (t) => t,
      fromReference: (t) => t,
    },
    [rr]: {
      transfer: dn,
      primaries: Hh,
      toReference: (t) => t.convertSRGBToLinear(),
      fromReference: (t) => t.convertLinearToSRGB(),
    },
    [vp]: {
      transfer: Bh,
      primaries: Vh,
      toReference: (t) => t.applyMatrix3(HT),
      fromReference: (t) => t.applyMatrix3(BT),
    },
    [ty]: {
      transfer: dn,
      primaries: Vh,
      toReference: (t) => t.convertSRGBToLinear().applyMatrix3(HT),
      fromReference: (t) => t.applyMatrix3(BT).convertLinearToSRGB(),
    },
  },
  FB = new Set([ws, vp]),
  nn = {
    enabled: !0,
    _workingColorSpace: ws,
    get workingColorSpace() {
      return this._workingColorSpace;
    },
    set workingColorSpace(t) {
      if (!FB.has(t))
        throw new Error(`Unsupported working color space, "${t}".`);
      this._workingColorSpace = t;
    },
    convert: function (t, e, n) {
      if (this.enabled === !1 || e === n || !e || !n) return t;
      const r = Wm[e].toReference,
        i = Wm[n].fromReference;
      return i(r(t));
    },
    fromWorkingColorSpace: function (t, e) {
      return this.convert(t, this._workingColorSpace, e);
    },
    toWorkingColorSpace: function (t, e) {
      return this.convert(t, e, this._workingColorSpace);
    },
    getPrimaries: function (t) {
      return Wm[t].primaries;
    },
    getTransfer: function (t) {
      return t === Bi ? Bh : Wm[t].transfer;
    },
  };
function pf(t) {
  return t < 0.04045
    ? t * 0.0773993808
    : Math.pow(t * 0.9478672986 + 0.0521327014, 2.4);
}
function w1(t) {
  return t < 0.0031308 ? t * 12.92 : 1.055 * Math.pow(t, 0.41666) - 0.055;
}
let au;
class BE {
  static getDataURL(e) {
    if (/^data:/i.test(e.src) || typeof HTMLCanvasElement > "u") return e.src;
    let n;
    if (e instanceof HTMLCanvasElement) n = e;
    else {
      au === void 0 && (au = jh("canvas")),
        (au.width = e.width),
        (au.height = e.height);
      const r = au.getContext("2d");
      e instanceof ImageData
        ? r.putImageData(e, 0, 0)
        : r.drawImage(e, 0, 0, e.width, e.height),
        (n = au);
    }
    return n.width > 2048 || n.height > 2048
      ? (console.warn(
          "THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",
          e
        ),
        n.toDataURL("image/jpeg", 0.6))
      : n.toDataURL("image/png");
  }
  static sRGBToLinear(e) {
    if (
      (typeof HTMLImageElement < "u" && e instanceof HTMLImageElement) ||
      (typeof HTMLCanvasElement < "u" && e instanceof HTMLCanvasElement) ||
      (typeof ImageBitmap < "u" && e instanceof ImageBitmap)
    ) {
      const n = jh("canvas");
      (n.width = e.width), (n.height = e.height);
      const r = n.getContext("2d");
      r.drawImage(e, 0, 0, e.width, e.height);
      const i = r.getImageData(0, 0, e.width, e.height),
        o = i.data;
      for (let s = 0; s < o.length; s++) o[s] = pf(o[s] / 255) * 255;
      return r.putImageData(i, 0, 0), n;
    } else if (e.data) {
      const n = e.data.slice(0);
      for (let r = 0; r < n.length; r++)
        n instanceof Uint8Array || n instanceof Uint8ClampedArray
          ? (n[r] = Math.floor(pf(n[r] / 255) * 255))
          : (n[r] = pf(n[r]));
      return { data: n, width: e.width, height: e.height };
    } else
      return (
        console.warn(
          "THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."
        ),
        e
      );
  }
}
let NB = 0;
class sc {
  constructor(e = null) {
    (this.isSource = !0),
      Object.defineProperty(this, "id", { value: NB++ }),
      (this.uuid = Xi()),
      (this.data = e),
      (this.version = 0);
  }
  set needsUpdate(e) {
    e === !0 && this.version++;
  }
  toJSON(e) {
    const n = e === void 0 || typeof e == "string";
    if (!n && e.images[this.uuid] !== void 0) return e.images[this.uuid];
    const r = { uuid: this.uuid, url: "" },
      i = this.data;
    if (i !== null) {
      let o;
      if (Array.isArray(i)) {
        o = [];
        for (let s = 0, a = i.length; s < a; s++)
          i[s].isDataTexture ? o.push(b1(i[s].image)) : o.push(b1(i[s]));
      } else o = b1(i);
      r.url = o;
    }
    return n || (e.images[this.uuid] = r), r;
  }
}
function b1(t) {
  return (typeof HTMLImageElement < "u" && t instanceof HTMLImageElement) ||
    (typeof HTMLCanvasElement < "u" && t instanceof HTMLCanvasElement) ||
    (typeof ImageBitmap < "u" && t instanceof ImageBitmap)
    ? BE.getDataURL(t)
    : t.data
    ? {
        data: Array.from(t.data),
        width: t.width,
        height: t.height,
        type: t.data.constructor.name,
      }
    : (console.warn("THREE.Texture: Unable to serialize Texture."), {});
}
let DB = 0;
class Pn extends bs {
  constructor(
    e = Pn.DEFAULT_IMAGE,
    n = Pn.DEFAULT_MAPPING,
    r = Hr,
    i = Hr,
    o = Cn,
    s = ol,
    a = ri,
    l = xs,
    c = Pn.DEFAULT_ANISOTROPY,
    u = Bi
  ) {
    super(),
      (this.isTexture = !0),
      Object.defineProperty(this, "id", { value: DB++ }),
      (this.uuid = Xi()),
      (this.name = ""),
      (this.source = new sc(e)),
      (this.mipmaps = []),
      (this.mapping = n),
      (this.channel = 0),
      (this.wrapS = r),
      (this.wrapT = i),
      (this.magFilter = o),
      (this.minFilter = s),
      (this.anisotropy = c),
      (this.format = a),
      (this.internalFormat = null),
      (this.type = l),
      (this.offset = new Fe(0, 0)),
      (this.repeat = new Fe(1, 1)),
      (this.center = new Fe(0, 0)),
      (this.rotation = 0),
      (this.matrixAutoUpdate = !0),
      (this.matrix = new Ot()),
      (this.generateMipmaps = !0),
      (this.premultiplyAlpha = !1),
      (this.flipY = !0),
      (this.unpackAlignment = 4),
      typeof u == "string"
        ? (this.colorSpace = u)
        : (sh(
            "THREE.Texture: Property .encoding has been replaced by .colorSpace."
          ),
          (this.colorSpace = u === el ? rr : Bi)),
      (this.userData = {}),
      (this.version = 0),
      (this.onUpdate = null),
      (this.isRenderTargetTexture = !1),
      (this.needsPMREMUpdate = !1);
  }
  get image() {
    return this.source.data;
  }
  set image(e = null) {
    this.source.data = e;
  }
  updateMatrix() {
    this.matrix.setUvTransform(
      this.offset.x,
      this.offset.y,
      this.repeat.x,
      this.repeat.y,
      this.rotation,
      this.center.x,
      this.center.y
    );
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return (
      (this.name = e.name),
      (this.source = e.source),
      (this.mipmaps = e.mipmaps.slice(0)),
      (this.mapping = e.mapping),
      (this.channel = e.channel),
      (this.wrapS = e.wrapS),
      (this.wrapT = e.wrapT),
      (this.magFilter = e.magFilter),
      (this.minFilter = e.minFilter),
      (this.anisotropy = e.anisotropy),
      (this.format = e.format),
      (this.internalFormat = e.internalFormat),
      (this.type = e.type),
      this.offset.copy(e.offset),
      this.repeat.copy(e.repeat),
      this.center.copy(e.center),
      (this.rotation = e.rotation),
      (this.matrixAutoUpdate = e.matrixAutoUpdate),
      this.matrix.copy(e.matrix),
      (this.generateMipmaps = e.generateMipmaps),
      (this.premultiplyAlpha = e.premultiplyAlpha),
      (this.flipY = e.flipY),
      (this.unpackAlignment = e.unpackAlignment),
      (this.colorSpace = e.colorSpace),
      (this.userData = JSON.parse(JSON.stringify(e.userData))),
      (this.needsUpdate = !0),
      this
    );
  }
  toJSON(e) {
    const n = e === void 0 || typeof e == "string";
    if (!n && e.textures[this.uuid] !== void 0) return e.textures[this.uuid];
    const r = {
      metadata: { version: 4.6, type: "Texture", generator: "Texture.toJSON" },
      uuid: this.uuid,
      name: this.name,
      image: this.source.toJSON(e).uuid,
      mapping: this.mapping,
      channel: this.channel,
      repeat: [this.repeat.x, this.repeat.y],
      offset: [this.offset.x, this.offset.y],
      center: [this.center.x, this.center.y],
      rotation: this.rotation,
      wrap: [this.wrapS, this.wrapT],
      format: this.format,
      internalFormat: this.internalFormat,
      type: this.type,
      colorSpace: this.colorSpace,
      minFilter: this.minFilter,
      magFilter: this.magFilter,
      anisotropy: this.anisotropy,
      flipY: this.flipY,
      generateMipmaps: this.generateMipmaps,
      premultiplyAlpha: this.premultiplyAlpha,
      unpackAlignment: this.unpackAlignment,
    };
    return (
      Object.keys(this.userData).length > 0 && (r.userData = this.userData),
      n || (e.textures[this.uuid] = r),
      r
    );
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
  transformUv(e) {
    if (this.mapping !== Q0) return e;
    if ((e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1))
      switch (this.wrapS) {
        case Nh:
          e.x = e.x - Math.floor(e.x);
          break;
        case Hr:
          e.x = e.x < 0 ? 0 : 1;
          break;
        case Dh:
          Math.abs(Math.floor(e.x) % 2) === 1
            ? (e.x = Math.ceil(e.x) - e.x)
            : (e.x = e.x - Math.floor(e.x));
          break;
      }
    if (e.y < 0 || e.y > 1)
      switch (this.wrapT) {
        case Nh:
          e.y = e.y - Math.floor(e.y);
          break;
        case Hr:
          e.y = e.y < 0 ? 0 : 1;
          break;
        case Dh:
          Math.abs(Math.floor(e.y) % 2) === 1
            ? (e.y = Math.ceil(e.y) - e.y)
            : (e.y = e.y - Math.floor(e.y));
          break;
      }
    return this.flipY && (e.y = 1 - e.y), e;
  }
  set needsUpdate(e) {
    e === !0 && (this.version++, (this.source.needsUpdate = !0));
  }
  get encoding() {
    return (
      sh("THREE.Texture: Property .encoding has been replaced by .colorSpace."),
      this.colorSpace === rr ? el : DE
    );
  }
  set encoding(e) {
    sh("THREE.Texture: Property .encoding has been replaced by .colorSpace."),
      (this.colorSpace = e === el ? rr : Bi);
  }
}
Pn.DEFAULT_IMAGE = null;
Pn.DEFAULT_MAPPING = Q0;
Pn.DEFAULT_ANISOTROPY = 1;
class Ht {
  constructor(e = 0, n = 0, r = 0, i = 1) {
    (Ht.prototype.isVector4 = !0),
      (this.x = e),
      (this.y = n),
      (this.z = r),
      (this.w = i);
  }
  get width() {
    return this.z;
  }
  set width(e) {
    this.z = e;
  }
  get height() {
    return this.w;
  }
  set height(e) {
    this.w = e;
  }
  set(e, n, r, i) {
    return (this.x = e), (this.y = n), (this.z = r), (this.w = i), this;
  }
  setScalar(e) {
    return (this.x = e), (this.y = e), (this.z = e), (this.w = e), this;
  }
  setX(e) {
    return (this.x = e), this;
  }
  setY(e) {
    return (this.y = e), this;
  }
  setZ(e) {
    return (this.z = e), this;
  }
  setW(e) {
    return (this.w = e), this;
  }
  setComponent(e, n) {
    switch (e) {
      case 0:
        this.x = n;
        break;
      case 1:
        this.y = n;
        break;
      case 2:
        this.z = n;
        break;
      case 3:
        this.w = n;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }
  getComponent(e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      case 2:
        return this.z;
      case 3:
        return this.w;
      default:
        throw new Error("index is out of range: " + e);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y, this.z, this.w);
  }
  copy(e) {
    return (
      (this.x = e.x),
      (this.y = e.y),
      (this.z = e.z),
      (this.w = e.w !== void 0 ? e.w : 1),
      this
    );
  }
  add(e) {
    return (
      (this.x += e.x), (this.y += e.y), (this.z += e.z), (this.w += e.w), this
    );
  }
  addScalar(e) {
    return (this.x += e), (this.y += e), (this.z += e), (this.w += e), this;
  }
  addVectors(e, n) {
    return (
      (this.x = e.x + n.x),
      (this.y = e.y + n.y),
      (this.z = e.z + n.z),
      (this.w = e.w + n.w),
      this
    );
  }
  addScaledVector(e, n) {
    return (
      (this.x += e.x * n),
      (this.y += e.y * n),
      (this.z += e.z * n),
      (this.w += e.w * n),
      this
    );
  }
  sub(e) {
    return (
      (this.x -= e.x), (this.y -= e.y), (this.z -= e.z), (this.w -= e.w), this
    );
  }
  subScalar(e) {
    return (this.x -= e), (this.y -= e), (this.z -= e), (this.w -= e), this;
  }
  subVectors(e, n) {
    return (
      (this.x = e.x - n.x),
      (this.y = e.y - n.y),
      (this.z = e.z - n.z),
      (this.w = e.w - n.w),
      this
    );
  }
  multiply(e) {
    return (
      (this.x *= e.x), (this.y *= e.y), (this.z *= e.z), (this.w *= e.w), this
    );
  }
  multiplyScalar(e) {
    return (this.x *= e), (this.y *= e), (this.z *= e), (this.w *= e), this;
  }
  applyMatrix4(e) {
    const n = this.x,
      r = this.y,
      i = this.z,
      o = this.w,
      s = e.elements;
    return (
      (this.x = s[0] * n + s[4] * r + s[8] * i + s[12] * o),
      (this.y = s[1] * n + s[5] * r + s[9] * i + s[13] * o),
      (this.z = s[2] * n + s[6] * r + s[10] * i + s[14] * o),
      (this.w = s[3] * n + s[7] * r + s[11] * i + s[15] * o),
      this
    );
  }
  divideScalar(e) {
    return this.multiplyScalar(1 / e);
  }
  setAxisAngleFromQuaternion(e) {
    this.w = 2 * Math.acos(e.w);
    const n = Math.sqrt(1 - e.w * e.w);
    return (
      n < 1e-4
        ? ((this.x = 1), (this.y = 0), (this.z = 0))
        : ((this.x = e.x / n), (this.y = e.y / n), (this.z = e.z / n)),
      this
    );
  }
  setAxisAngleFromRotationMatrix(e) {
    let n, r, i, o;
    const l = e.elements,
      c = l[0],
      u = l[4],
      h = l[8],
      p = l[1],
      m = l[5],
      v = l[9],
      S = l[2],
      x = l[6],
      g = l[10];
    if (
      Math.abs(u - p) < 0.01 &&
      Math.abs(h - S) < 0.01 &&
      Math.abs(v - x) < 0.01
    ) {
      if (
        Math.abs(u + p) < 0.1 &&
        Math.abs(h + S) < 0.1 &&
        Math.abs(v + x) < 0.1 &&
        Math.abs(c + m + g - 3) < 0.1
      )
        return this.set(1, 0, 0, 0), this;
      n = Math.PI;
      const _ = (c + 1) / 2,
        b = (m + 1) / 2,
        T = (g + 1) / 2,
        M = (u + p) / 4,
        C = (h + S) / 4,
        L = (v + x) / 4;
      return (
        _ > b && _ > T
          ? _ < 0.01
            ? ((r = 0), (i = 0.707106781), (o = 0.707106781))
            : ((r = Math.sqrt(_)), (i = M / r), (o = C / r))
          : b > T
          ? b < 0.01
            ? ((r = 0.707106781), (i = 0), (o = 0.707106781))
            : ((i = Math.sqrt(b)), (r = M / i), (o = L / i))
          : T < 0.01
          ? ((r = 0.707106781), (i = 0.707106781), (o = 0))
          : ((o = Math.sqrt(T)), (r = C / o), (i = L / o)),
        this.set(r, i, o, n),
        this
      );
    }
    let y = Math.sqrt(
      (x - v) * (x - v) + (h - S) * (h - S) + (p - u) * (p - u)
    );
    return (
      Math.abs(y) < 0.001 && (y = 1),
      (this.x = (x - v) / y),
      (this.y = (h - S) / y),
      (this.z = (p - u) / y),
      (this.w = Math.acos((c + m + g - 1) / 2)),
      this
    );
  }
  min(e) {
    return (
      (this.x = Math.min(this.x, e.x)),
      (this.y = Math.min(this.y, e.y)),
      (this.z = Math.min(this.z, e.z)),
      (this.w = Math.min(this.w, e.w)),
      this
    );
  }
  max(e) {
    return (
      (this.x = Math.max(this.x, e.x)),
      (this.y = Math.max(this.y, e.y)),
      (this.z = Math.max(this.z, e.z)),
      (this.w = Math.max(this.w, e.w)),
      this
    );
  }
  clamp(e, n) {
    return (
      (this.x = Math.max(e.x, Math.min(n.x, this.x))),
      (this.y = Math.max(e.y, Math.min(n.y, this.y))),
      (this.z = Math.max(e.z, Math.min(n.z, this.z))),
      (this.w = Math.max(e.w, Math.min(n.w, this.w))),
      this
    );
  }
  clampScalar(e, n) {
    return (
      (this.x = Math.max(e, Math.min(n, this.x))),
      (this.y = Math.max(e, Math.min(n, this.y))),
      (this.z = Math.max(e, Math.min(n, this.z))),
      (this.w = Math.max(e, Math.min(n, this.w))),
      this
    );
  }
  clampLength(e, n) {
    const r = this.length();
    return this.divideScalar(r || 1).multiplyScalar(
      Math.max(e, Math.min(n, r))
    );
  }
  floor() {
    return (
      (this.x = Math.floor(this.x)),
      (this.y = Math.floor(this.y)),
      (this.z = Math.floor(this.z)),
      (this.w = Math.floor(this.w)),
      this
    );
  }
  ceil() {
    return (
      (this.x = Math.ceil(this.x)),
      (this.y = Math.ceil(this.y)),
      (this.z = Math.ceil(this.z)),
      (this.w = Math.ceil(this.w)),
      this
    );
  }
  round() {
    return (
      (this.x = Math.round(this.x)),
      (this.y = Math.round(this.y)),
      (this.z = Math.round(this.z)),
      (this.w = Math.round(this.w)),
      this
    );
  }
  roundToZero() {
    return (
      (this.x = Math.trunc(this.x)),
      (this.y = Math.trunc(this.y)),
      (this.z = Math.trunc(this.z)),
      (this.w = Math.trunc(this.w)),
      this
    );
  }
  negate() {
    return (
      (this.x = -this.x),
      (this.y = -this.y),
      (this.z = -this.z),
      (this.w = -this.w),
      this
    );
  }
  dot(e) {
    return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
  }
  lengthSq() {
    return (
      this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
    );
  }
  length() {
    return Math.sqrt(
      this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
    );
  }
  manhattanLength() {
    return (
      Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
    );
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  setLength(e) {
    return this.normalize().multiplyScalar(e);
  }
  lerp(e, n) {
    return (
      (this.x += (e.x - this.x) * n),
      (this.y += (e.y - this.y) * n),
      (this.z += (e.z - this.z) * n),
      (this.w += (e.w - this.w) * n),
      this
    );
  }
  lerpVectors(e, n, r) {
    return (
      (this.x = e.x + (n.x - e.x) * r),
      (this.y = e.y + (n.y - e.y) * r),
      (this.z = e.z + (n.z - e.z) * r),
      (this.w = e.w + (n.w - e.w) * r),
      this
    );
  }
  equals(e) {
    return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w;
  }
  fromArray(e, n = 0) {
    return (
      (this.x = e[n]),
      (this.y = e[n + 1]),
      (this.z = e[n + 2]),
      (this.w = e[n + 3]),
      this
    );
  }
  toArray(e = [], n = 0) {
    return (
      (e[n] = this.x),
      (e[n + 1] = this.y),
      (e[n + 2] = this.z),
      (e[n + 3] = this.w),
      e
    );
  }
  fromBufferAttribute(e, n) {
    return (
      (this.x = e.getX(n)),
      (this.y = e.getY(n)),
      (this.z = e.getZ(n)),
      (this.w = e.getW(n)),
      this
    );
  }
  random() {
    return (
      (this.x = Math.random()),
      (this.y = Math.random()),
      (this.z = Math.random()),
      (this.w = Math.random()),
      this
    );
  }
  *[Symbol.iterator]() {
    yield this.x, yield this.y, yield this.z, yield this.w;
  }
}
class LO extends bs {
  constructor(e = 1, n = 1, r = {}) {
    super(),
      (this.isRenderTarget = !0),
      (this.width = e),
      (this.height = n),
      (this.depth = 1),
      (this.scissor = new Ht(0, 0, e, n)),
      (this.scissorTest = !1),
      (this.viewport = new Ht(0, 0, e, n));
    const i = { width: e, height: n, depth: 1 };
    r.encoding !== void 0 &&
      (sh(
        "THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."
      ),
      (r.colorSpace = r.encoding === el ? rr : Bi)),
      (r = Object.assign(
        {
          generateMipmaps: !1,
          internalFormat: null,
          minFilter: Cn,
          depthBuffer: !0,
          stencilBuffer: !1,
          depthTexture: null,
          samples: 0,
        },
        r
      )),
      (this.texture = new Pn(
        i,
        r.mapping,
        r.wrapS,
        r.wrapT,
        r.magFilter,
        r.minFilter,
        r.format,
        r.type,
        r.anisotropy,
        r.colorSpace
      )),
      (this.texture.isRenderTargetTexture = !0),
      (this.texture.flipY = !1),
      (this.texture.generateMipmaps = r.generateMipmaps),
      (this.texture.internalFormat = r.internalFormat),
      (this.depthBuffer = r.depthBuffer),
      (this.stencilBuffer = r.stencilBuffer),
      (this.depthTexture = r.depthTexture),
      (this.samples = r.samples);
  }
  setSize(e, n, r = 1) {
    (this.width !== e || this.height !== n || this.depth !== r) &&
      ((this.width = e),
      (this.height = n),
      (this.depth = r),
      (this.texture.image.width = e),
      (this.texture.image.height = n),
      (this.texture.image.depth = r),
      this.dispose()),
      this.viewport.set(0, 0, e, n),
      this.scissor.set(0, 0, e, n);
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    (this.width = e.width),
      (this.height = e.height),
      (this.depth = e.depth),
      this.scissor.copy(e.scissor),
      (this.scissorTest = e.scissorTest),
      this.viewport.copy(e.viewport),
      (this.texture = e.texture.clone()),
      (this.texture.isRenderTargetTexture = !0);
    const n = Object.assign({}, e.texture.image);
    return (
      (this.texture.source = new sc(n)),
      (this.depthBuffer = e.depthBuffer),
      (this.stencilBuffer = e.stencilBuffer),
      e.depthTexture !== null && (this.depthTexture = e.depthTexture.clone()),
      (this.samples = e.samples),
      this
    );
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
}
class Yo extends LO {
  constructor(e = 1, n = 1, r = {}) {
    super(e, n, r), (this.isWebGLRenderTarget = !0);
  }
}
class ny extends Pn {
  constructor(e = null, n = 1, r = 1, i = 1) {
    super(null),
      (this.isDataArrayTexture = !0),
      (this.image = { data: e, width: n, height: r, depth: i }),
      (this.magFilter = Wn),
      (this.minFilter = Wn),
      (this.wrapR = Hr),
      (this.generateMipmaps = !1),
      (this.flipY = !1),
      (this.unpackAlignment = 1);
  }
}
class UB extends Yo {
  constructor(e = 1, n = 1, r = 1, i = {}) {
    super(e, n, i),
      (this.isWebGLArrayRenderTarget = !0),
      (this.depth = r),
      (this.texture = new ny(null, e, n, r)),
      (this.texture.isRenderTargetTexture = !0);
  }
}
class HE extends Pn {
  constructor(e = null, n = 1, r = 1, i = 1) {
    super(null),
      (this.isData3DTexture = !0),
      (this.image = { data: e, width: n, height: r, depth: i }),
      (this.magFilter = Wn),
      (this.minFilter = Wn),
      (this.wrapR = Hr),
      (this.generateMipmaps = !1),
      (this.flipY = !1),
      (this.unpackAlignment = 1);
  }
}
class zB extends Yo {
  constructor(e = 1, n = 1, r = 1, i = {}) {
    super(e, n, i),
      (this.isWebGL3DRenderTarget = !0),
      (this.depth = r),
      (this.texture = new HE(null, e, n, r)),
      (this.texture.isRenderTargetTexture = !0);
  }
}
class kB extends Yo {
  constructor(e = 1, n = 1, r = 1, i = {}) {
    super(e, n, i), (this.isWebGLMultipleRenderTargets = !0);
    const o = this.texture;
    this.texture = [];
    for (let s = 0; s < r; s++)
      (this.texture[s] = o.clone()),
        (this.texture[s].isRenderTargetTexture = !0);
  }
  setSize(e, n, r = 1) {
    if (this.width !== e || this.height !== n || this.depth !== r) {
      (this.width = e), (this.height = n), (this.depth = r);
      for (let i = 0, o = this.texture.length; i < o; i++)
        (this.texture[i].image.width = e),
          (this.texture[i].image.height = n),
          (this.texture[i].image.depth = r);
      this.dispose();
    }
    this.viewport.set(0, 0, e, n), this.scissor.set(0, 0, e, n);
  }
  copy(e) {
    this.dispose(),
      (this.width = e.width),
      (this.height = e.height),
      (this.depth = e.depth),
      this.scissor.copy(e.scissor),
      (this.scissorTest = e.scissorTest),
      this.viewport.copy(e.viewport),
      (this.depthBuffer = e.depthBuffer),
      (this.stencilBuffer = e.stencilBuffer),
      e.depthTexture !== null && (this.depthTexture = e.depthTexture.clone()),
      (this.texture.length = 0);
    for (let n = 0, r = e.texture.length; n < r; n++)
      (this.texture[n] = e.texture[n].clone()),
        (this.texture[n].isRenderTargetTexture = !0);
    return this;
  }
}
class Gr {
  constructor(e = 0, n = 0, r = 0, i = 1) {
    (this.isQuaternion = !0),
      (this._x = e),
      (this._y = n),
      (this._z = r),
      (this._w = i);
  }
  static slerpFlat(e, n, r, i, o, s, a) {
    let l = r[i + 0],
      c = r[i + 1],
      u = r[i + 2],
      h = r[i + 3];
    const p = o[s + 0],
      m = o[s + 1],
      v = o[s + 2],
      S = o[s + 3];
    if (a === 0) {
      (e[n + 0] = l), (e[n + 1] = c), (e[n + 2] = u), (e[n + 3] = h);
      return;
    }
    if (a === 1) {
      (e[n + 0] = p), (e[n + 1] = m), (e[n + 2] = v), (e[n + 3] = S);
      return;
    }
    if (h !== S || l !== p || c !== m || u !== v) {
      let x = 1 - a;
      const g = l * p + c * m + u * v + h * S,
        y = g >= 0 ? 1 : -1,
        _ = 1 - g * g;
      if (_ > Number.EPSILON) {
        const T = Math.sqrt(_),
          M = Math.atan2(T, g * y);
        (x = Math.sin(x * M) / T), (a = Math.sin(a * M) / T);
      }
      const b = a * y;
      if (
        ((l = l * x + p * b),
        (c = c * x + m * b),
        (u = u * x + v * b),
        (h = h * x + S * b),
        x === 1 - a)
      ) {
        const T = 1 / Math.sqrt(l * l + c * c + u * u + h * h);
        (l *= T), (c *= T), (u *= T), (h *= T);
      }
    }
    (e[n] = l), (e[n + 1] = c), (e[n + 2] = u), (e[n + 3] = h);
  }
  static multiplyQuaternionsFlat(e, n, r, i, o, s) {
    const a = r[i],
      l = r[i + 1],
      c = r[i + 2],
      u = r[i + 3],
      h = o[s],
      p = o[s + 1],
      m = o[s + 2],
      v = o[s + 3];
    return (
      (e[n] = a * v + u * h + l * m - c * p),
      (e[n + 1] = l * v + u * p + c * h - a * m),
      (e[n + 2] = c * v + u * m + a * p - l * h),
      (e[n + 3] = u * v - a * h - l * p - c * m),
      e
    );
  }
  get x() {
    return this._x;
  }
  set x(e) {
    (this._x = e), this._onChangeCallback();
  }
  get y() {
    return this._y;
  }
  set y(e) {
    (this._y = e), this._onChangeCallback();
  }
  get z() {
    return this._z;
  }
  set z(e) {
    (this._z = e), this._onChangeCallback();
  }
  get w() {
    return this._w;
  }
  set w(e) {
    (this._w = e), this._onChangeCallback();
  }
  set(e, n, r, i) {
    return (
      (this._x = e),
      (this._y = n),
      (this._z = r),
      (this._w = i),
      this._onChangeCallback(),
      this
    );
  }
  clone() {
    return new this.constructor(this._x, this._y, this._z, this._w);
  }
  copy(e) {
    return (
      (this._x = e.x),
      (this._y = e.y),
      (this._z = e.z),
      (this._w = e.w),
      this._onChangeCallback(),
      this
    );
  }
  setFromEuler(e, n = !0) {
    const r = e._x,
      i = e._y,
      o = e._z,
      s = e._order,
      a = Math.cos,
      l = Math.sin,
      c = a(r / 2),
      u = a(i / 2),
      h = a(o / 2),
      p = l(r / 2),
      m = l(i / 2),
      v = l(o / 2);
    switch (s) {
      case "XYZ":
        (this._x = p * u * h + c * m * v),
          (this._y = c * m * h - p * u * v),
          (this._z = c * u * v + p * m * h),
          (this._w = c * u * h - p * m * v);
        break;
      case "YXZ":
        (this._x = p * u * h + c * m * v),
          (this._y = c * m * h - p * u * v),
          (this._z = c * u * v - p * m * h),
          (this._w = c * u * h + p * m * v);
        break;
      case "ZXY":
        (this._x = p * u * h - c * m * v),
          (this._y = c * m * h + p * u * v),
          (this._z = c * u * v + p * m * h),
          (this._w = c * u * h - p * m * v);
        break;
      case "ZYX":
        (this._x = p * u * h - c * m * v),
          (this._y = c * m * h + p * u * v),
          (this._z = c * u * v - p * m * h),
          (this._w = c * u * h + p * m * v);
        break;
      case "YZX":
        (this._x = p * u * h + c * m * v),
          (this._y = c * m * h + p * u * v),
          (this._z = c * u * v - p * m * h),
          (this._w = c * u * h - p * m * v);
        break;
      case "XZY":
        (this._x = p * u * h - c * m * v),
          (this._y = c * m * h - p * u * v),
          (this._z = c * u * v + p * m * h),
          (this._w = c * u * h + p * m * v);
        break;
      default:
        console.warn(
          "THREE.Quaternion: .setFromEuler() encountered an unknown order: " + s
        );
    }
    return n === !0 && this._onChangeCallback(), this;
  }
  setFromAxisAngle(e, n) {
    const r = n / 2,
      i = Math.sin(r);
    return (
      (this._x = e.x * i),
      (this._y = e.y * i),
      (this._z = e.z * i),
      (this._w = Math.cos(r)),
      this._onChangeCallback(),
      this
    );
  }
  setFromRotationMatrix(e) {
    const n = e.elements,
      r = n[0],
      i = n[4],
      o = n[8],
      s = n[1],
      a = n[5],
      l = n[9],
      c = n[2],
      u = n[6],
      h = n[10],
      p = r + a + h;
    if (p > 0) {
      const m = 0.5 / Math.sqrt(p + 1);
      (this._w = 0.25 / m),
        (this._x = (u - l) * m),
        (this._y = (o - c) * m),
        (this._z = (s - i) * m);
    } else if (r > a && r > h) {
      const m = 2 * Math.sqrt(1 + r - a - h);
      (this._w = (u - l) / m),
        (this._x = 0.25 * m),
        (this._y = (i + s) / m),
        (this._z = (o + c) / m);
    } else if (a > h) {
      const m = 2 * Math.sqrt(1 + a - r - h);
      (this._w = (o - c) / m),
        (this._x = (i + s) / m),
        (this._y = 0.25 * m),
        (this._z = (l + u) / m);
    } else {
      const m = 2 * Math.sqrt(1 + h - r - a);
      (this._w = (s - i) / m),
        (this._x = (o + c) / m),
        (this._y = (l + u) / m),
        (this._z = 0.25 * m);
    }
    return this._onChangeCallback(), this;
  }
  setFromUnitVectors(e, n) {
    let r = e.dot(n) + 1;
    return (
      r < Number.EPSILON
        ? ((r = 0),
          Math.abs(e.x) > Math.abs(e.z)
            ? ((this._x = -e.y), (this._y = e.x), (this._z = 0), (this._w = r))
            : ((this._x = 0), (this._y = -e.z), (this._z = e.y), (this._w = r)))
        : ((this._x = e.y * n.z - e.z * n.y),
          (this._y = e.z * n.x - e.x * n.z),
          (this._z = e.x * n.y - e.y * n.x),
          (this._w = r)),
      this.normalize()
    );
  }
  angleTo(e) {
    return 2 * Math.acos(Math.abs(Dn(this.dot(e), -1, 1)));
  }
  rotateTowards(e, n) {
    const r = this.angleTo(e);
    if (r === 0) return this;
    const i = Math.min(1, n / r);
    return this.slerp(e, i), this;
  }
  identity() {
    return this.set(0, 0, 0, 1);
  }
  invert() {
    return this.conjugate();
  }
  conjugate() {
    return (
      (this._x *= -1),
      (this._y *= -1),
      (this._z *= -1),
      this._onChangeCallback(),
      this
    );
  }
  dot(e) {
    return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w;
  }
  lengthSq() {
    return (
      this._x * this._x +
      this._y * this._y +
      this._z * this._z +
      this._w * this._w
    );
  }
  length() {
    return Math.sqrt(
      this._x * this._x +
        this._y * this._y +
        this._z * this._z +
        this._w * this._w
    );
  }
  normalize() {
    let e = this.length();
    return (
      e === 0
        ? ((this._x = 0), (this._y = 0), (this._z = 0), (this._w = 1))
        : ((e = 1 / e),
          (this._x = this._x * e),
          (this._y = this._y * e),
          (this._z = this._z * e),
          (this._w = this._w * e)),
      this._onChangeCallback(),
      this
    );
  }
  multiply(e) {
    return this.multiplyQuaternions(this, e);
  }
  premultiply(e) {
    return this.multiplyQuaternions(e, this);
  }
  multiplyQuaternions(e, n) {
    const r = e._x,
      i = e._y,
      o = e._z,
      s = e._w,
      a = n._x,
      l = n._y,
      c = n._z,
      u = n._w;
    return (
      (this._x = r * u + s * a + i * c - o * l),
      (this._y = i * u + s * l + o * a - r * c),
      (this._z = o * u + s * c + r * l - i * a),
      (this._w = s * u - r * a - i * l - o * c),
      this._onChangeCallback(),
      this
    );
  }
  slerp(e, n) {
    if (n === 0) return this;
    if (n === 1) return this.copy(e);
    const r = this._x,
      i = this._y,
      o = this._z,
      s = this._w;
    let a = s * e._w + r * e._x + i * e._y + o * e._z;
    if (
      (a < 0
        ? ((this._w = -e._w),
          (this._x = -e._x),
          (this._y = -e._y),
          (this._z = -e._z),
          (a = -a))
        : this.copy(e),
      a >= 1)
    )
      return (this._w = s), (this._x = r), (this._y = i), (this._z = o), this;
    const l = 1 - a * a;
    if (l <= Number.EPSILON) {
      const m = 1 - n;
      return (
        (this._w = m * s + n * this._w),
        (this._x = m * r + n * this._x),
        (this._y = m * i + n * this._y),
        (this._z = m * o + n * this._z),
        this.normalize(),
        this
      );
    }
    const c = Math.sqrt(l),
      u = Math.atan2(c, a),
      h = Math.sin((1 - n) * u) / c,
      p = Math.sin(n * u) / c;
    return (
      (this._w = s * h + this._w * p),
      (this._x = r * h + this._x * p),
      (this._y = i * h + this._y * p),
      (this._z = o * h + this._z * p),
      this._onChangeCallback(),
      this
    );
  }
  slerpQuaternions(e, n, r) {
    return this.copy(e).slerp(n, r);
  }
  random() {
    const e = Math.random(),
      n = Math.sqrt(1 - e),
      r = Math.sqrt(e),
      i = 2 * Math.PI * Math.random(),
      o = 2 * Math.PI * Math.random();
    return this.set(
      n * Math.cos(i),
      r * Math.sin(o),
      r * Math.cos(o),
      n * Math.sin(i)
    );
  }
  equals(e) {
    return (
      e._x === this._x &&
      e._y === this._y &&
      e._z === this._z &&
      e._w === this._w
    );
  }
  fromArray(e, n = 0) {
    return (
      (this._x = e[n]),
      (this._y = e[n + 1]),
      (this._z = e[n + 2]),
      (this._w = e[n + 3]),
      this._onChangeCallback(),
      this
    );
  }
  toArray(e = [], n = 0) {
    return (
      (e[n] = this._x),
      (e[n + 1] = this._y),
      (e[n + 2] = this._z),
      (e[n + 3] = this._w),
      e
    );
  }
  fromBufferAttribute(e, n) {
    return (
      (this._x = e.getX(n)),
      (this._y = e.getY(n)),
      (this._z = e.getZ(n)),
      (this._w = e.getW(n)),
      this._onChangeCallback(),
      this
    );
  }
  toJSON() {
    return this.toArray();
  }
  _onChange(e) {
    return (this._onChangeCallback = e), this;
  }
  _onChangeCallback() {}
  *[Symbol.iterator]() {
    yield this._x, yield this._y, yield this._z, yield this._w;
  }
}
class W {
  constructor(e = 0, n = 0, r = 0) {
    (W.prototype.isVector3 = !0), (this.x = e), (this.y = n), (this.z = r);
  }
  set(e, n, r) {
    return (
      r === void 0 && (r = this.z),
      (this.x = e),
      (this.y = n),
      (this.z = r),
      this
    );
  }
  setScalar(e) {
    return (this.x = e), (this.y = e), (this.z = e), this;
  }
  setX(e) {
    return (this.x = e), this;
  }
  setY(e) {
    return (this.y = e), this;
  }
  setZ(e) {
    return (this.z = e), this;
  }
  setComponent(e, n) {
    switch (e) {
      case 0:
        this.x = n;
        break;
      case 1:
        this.y = n;
        break;
      case 2:
        this.z = n;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }
  getComponent(e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      case 2:
        return this.z;
      default:
        throw new Error("index is out of range: " + e);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y, this.z);
  }
  copy(e) {
    return (this.x = e.x), (this.y = e.y), (this.z = e.z), this;
  }
  add(e) {
    return (this.x += e.x), (this.y += e.y), (this.z += e.z), this;
  }
  addScalar(e) {
    return (this.x += e), (this.y += e), (this.z += e), this;
  }
  addVectors(e, n) {
    return (
      (this.x = e.x + n.x), (this.y = e.y + n.y), (this.z = e.z + n.z), this
    );
  }
  addScaledVector(e, n) {
    return (this.x += e.x * n), (this.y += e.y * n), (this.z += e.z * n), this;
  }
  sub(e) {
    return (this.x -= e.x), (this.y -= e.y), (this.z -= e.z), this;
  }
  subScalar(e) {
    return (this.x -= e), (this.y -= e), (this.z -= e), this;
  }
  subVectors(e, n) {
    return (
      (this.x = e.x - n.x), (this.y = e.y - n.y), (this.z = e.z - n.z), this
    );
  }
  multiply(e) {
    return (this.x *= e.x), (this.y *= e.y), (this.z *= e.z), this;
  }
  multiplyScalar(e) {
    return (this.x *= e), (this.y *= e), (this.z *= e), this;
  }
  multiplyVectors(e, n) {
    return (
      (this.x = e.x * n.x), (this.y = e.y * n.y), (this.z = e.z * n.z), this
    );
  }
  applyEuler(e) {
    return this.applyQuaternion(VT.setFromEuler(e));
  }
  applyAxisAngle(e, n) {
    return this.applyQuaternion(VT.setFromAxisAngle(e, n));
  }
  applyMatrix3(e) {
    const n = this.x,
      r = this.y,
      i = this.z,
      o = e.elements;
    return (
      (this.x = o[0] * n + o[3] * r + o[6] * i),
      (this.y = o[1] * n + o[4] * r + o[7] * i),
      (this.z = o[2] * n + o[5] * r + o[8] * i),
      this
    );
  }
  applyNormalMatrix(e) {
    return this.applyMatrix3(e).normalize();
  }
  applyMatrix4(e) {
    const n = this.x,
      r = this.y,
      i = this.z,
      o = e.elements,
      s = 1 / (o[3] * n + o[7] * r + o[11] * i + o[15]);
    return (
      (this.x = (o[0] * n + o[4] * r + o[8] * i + o[12]) * s),
      (this.y = (o[1] * n + o[5] * r + o[9] * i + o[13]) * s),
      (this.z = (o[2] * n + o[6] * r + o[10] * i + o[14]) * s),
      this
    );
  }
  applyQuaternion(e) {
    const n = this.x,
      r = this.y,
      i = this.z,
      o = e.x,
      s = e.y,
      a = e.z,
      l = e.w,
      c = 2 * (s * i - a * r),
      u = 2 * (a * n - o * i),
      h = 2 * (o * r - s * n);
    return (
      (this.x = n + l * c + s * h - a * u),
      (this.y = r + l * u + a * c - o * h),
      (this.z = i + l * h + o * u - s * c),
      this
    );
  }
  project(e) {
    return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(
      e.projectionMatrix
    );
  }
  unproject(e) {
    return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(
      e.matrixWorld
    );
  }
  transformDirection(e) {
    const n = this.x,
      r = this.y,
      i = this.z,
      o = e.elements;
    return (
      (this.x = o[0] * n + o[4] * r + o[8] * i),
      (this.y = o[1] * n + o[5] * r + o[9] * i),
      (this.z = o[2] * n + o[6] * r + o[10] * i),
      this.normalize()
    );
  }
  divide(e) {
    return (this.x /= e.x), (this.y /= e.y), (this.z /= e.z), this;
  }
  divideScalar(e) {
    return this.multiplyScalar(1 / e);
  }
  min(e) {
    return (
      (this.x = Math.min(this.x, e.x)),
      (this.y = Math.min(this.y, e.y)),
      (this.z = Math.min(this.z, e.z)),
      this
    );
  }
  max(e) {
    return (
      (this.x = Math.max(this.x, e.x)),
      (this.y = Math.max(this.y, e.y)),
      (this.z = Math.max(this.z, e.z)),
      this
    );
  }
  clamp(e, n) {
    return (
      (this.x = Math.max(e.x, Math.min(n.x, this.x))),
      (this.y = Math.max(e.y, Math.min(n.y, this.y))),
      (this.z = Math.max(e.z, Math.min(n.z, this.z))),
      this
    );
  }
  clampScalar(e, n) {
    return (
      (this.x = Math.max(e, Math.min(n, this.x))),
      (this.y = Math.max(e, Math.min(n, this.y))),
      (this.z = Math.max(e, Math.min(n, this.z))),
      this
    );
  }
  clampLength(e, n) {
    const r = this.length();
    return this.divideScalar(r || 1).multiplyScalar(
      Math.max(e, Math.min(n, r))
    );
  }
  floor() {
    return (
      (this.x = Math.floor(this.x)),
      (this.y = Math.floor(this.y)),
      (this.z = Math.floor(this.z)),
      this
    );
  }
  ceil() {
    return (
      (this.x = Math.ceil(this.x)),
      (this.y = Math.ceil(this.y)),
      (this.z = Math.ceil(this.z)),
      this
    );
  }
  round() {
    return (
      (this.x = Math.round(this.x)),
      (this.y = Math.round(this.y)),
      (this.z = Math.round(this.z)),
      this
    );
  }
  roundToZero() {
    return (
      (this.x = Math.trunc(this.x)),
      (this.y = Math.trunc(this.y)),
      (this.z = Math.trunc(this.z)),
      this
    );
  }
  negate() {
    return (this.x = -this.x), (this.y = -this.y), (this.z = -this.z), this;
  }
  dot(e) {
    return this.x * e.x + this.y * e.y + this.z * e.z;
  }
  lengthSq() {
    return this.x * this.x + this.y * this.y + this.z * this.z;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  setLength(e) {
    return this.normalize().multiplyScalar(e);
  }
  lerp(e, n) {
    return (
      (this.x += (e.x - this.x) * n),
      (this.y += (e.y - this.y) * n),
      (this.z += (e.z - this.z) * n),
      this
    );
  }
  lerpVectors(e, n, r) {
    return (
      (this.x = e.x + (n.x - e.x) * r),
      (this.y = e.y + (n.y - e.y) * r),
      (this.z = e.z + (n.z - e.z) * r),
      this
    );
  }
  cross(e) {
    return this.crossVectors(this, e);
  }
  crossVectors(e, n) {
    const r = e.x,
      i = e.y,
      o = e.z,
      s = n.x,
      a = n.y,
      l = n.z;
    return (
      (this.x = i * l - o * a),
      (this.y = o * s - r * l),
      (this.z = r * a - i * s),
      this
    );
  }
  projectOnVector(e) {
    const n = e.lengthSq();
    if (n === 0) return this.set(0, 0, 0);
    const r = e.dot(this) / n;
    return this.copy(e).multiplyScalar(r);
  }
  projectOnPlane(e) {
    return E1.copy(this).projectOnVector(e), this.sub(E1);
  }
  reflect(e) {
    return this.sub(E1.copy(e).multiplyScalar(2 * this.dot(e)));
  }
  angleTo(e) {
    const n = Math.sqrt(this.lengthSq() * e.lengthSq());
    if (n === 0) return Math.PI / 2;
    const r = this.dot(e) / n;
    return Math.acos(Dn(r, -1, 1));
  }
  distanceTo(e) {
    return Math.sqrt(this.distanceToSquared(e));
  }
  distanceToSquared(e) {
    const n = this.x - e.x,
      r = this.y - e.y,
      i = this.z - e.z;
    return n * n + r * r + i * i;
  }
  manhattanDistanceTo(e) {
    return (
      Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z)
    );
  }
  setFromSpherical(e) {
    return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
  }
  setFromSphericalCoords(e, n, r) {
    const i = Math.sin(n) * e;
    return (
      (this.x = i * Math.sin(r)),
      (this.y = Math.cos(n) * e),
      (this.z = i * Math.cos(r)),
      this
    );
  }
  setFromCylindrical(e) {
    return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
  }
  setFromCylindricalCoords(e, n, r) {
    return (
      (this.x = e * Math.sin(n)), (this.y = r), (this.z = e * Math.cos(n)), this
    );
  }
  setFromMatrixPosition(e) {
    const n = e.elements;
    return (this.x = n[12]), (this.y = n[13]), (this.z = n[14]), this;
  }
  setFromMatrixScale(e) {
    const n = this.setFromMatrixColumn(e, 0).length(),
      r = this.setFromMatrixColumn(e, 1).length(),
      i = this.setFromMatrixColumn(e, 2).length();
    return (this.x = n), (this.y = r), (this.z = i), this;
  }
  setFromMatrixColumn(e, n) {
    return this.fromArray(e.elements, n * 4);
  }
  setFromMatrix3Column(e, n) {
    return this.fromArray(e.elements, n * 3);
  }
  setFromEuler(e) {
    return (this.x = e._x), (this.y = e._y), (this.z = e._z), this;
  }
  setFromColor(e) {
    return (this.x = e.r), (this.y = e.g), (this.z = e.b), this;
  }
  equals(e) {
    return e.x === this.x && e.y === this.y && e.z === this.z;
  }
  fromArray(e, n = 0) {
    return (this.x = e[n]), (this.y = e[n + 1]), (this.z = e[n + 2]), this;
  }
  toArray(e = [], n = 0) {
    return (e[n] = this.x), (e[n + 1] = this.y), (e[n + 2] = this.z), e;
  }
  fromBufferAttribute(e, n) {
    return (
      (this.x = e.getX(n)), (this.y = e.getY(n)), (this.z = e.getZ(n)), this
    );
  }
  random() {
    return (
      (this.x = Math.random()),
      (this.y = Math.random()),
      (this.z = Math.random()),
      this
    );
  }
  randomDirection() {
    const e = (Math.random() - 0.5) * 2,
      n = Math.random() * Math.PI * 2,
      r = Math.sqrt(1 - e ** 2);
    return (
      (this.x = r * Math.cos(n)), (this.y = r * Math.sin(n)), (this.z = e), this
    );
  }
  *[Symbol.iterator]() {
    yield this.x, yield this.y, yield this.z;
  }
}
const E1 = new W(),
  VT = new Gr();
class or {
  constructor(
    e = new W(1 / 0, 1 / 0, 1 / 0),
    n = new W(-1 / 0, -1 / 0, -1 / 0)
  ) {
    (this.isBox3 = !0), (this.min = e), (this.max = n);
  }
  set(e, n) {
    return this.min.copy(e), this.max.copy(n), this;
  }
  setFromArray(e) {
    this.makeEmpty();
    for (let n = 0, r = e.length; n < r; n += 3)
      this.expandByPoint(Ro.fromArray(e, n));
    return this;
  }
  setFromBufferAttribute(e) {
    this.makeEmpty();
    for (let n = 0, r = e.count; n < r; n++)
      this.expandByPoint(Ro.fromBufferAttribute(e, n));
    return this;
  }
  setFromPoints(e) {
    this.makeEmpty();
    for (let n = 0, r = e.length; n < r; n++) this.expandByPoint(e[n]);
    return this;
  }
  setFromCenterAndSize(e, n) {
    const r = Ro.copy(n).multiplyScalar(0.5);
    return this.min.copy(e).sub(r), this.max.copy(e).add(r), this;
  }
  setFromObject(e, n = !1) {
    return this.makeEmpty(), this.expandByObject(e, n);
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return this.min.copy(e.min), this.max.copy(e.max), this;
  }
  makeEmpty() {
    return (
      (this.min.x = this.min.y = this.min.z = 1 / 0),
      (this.max.x = this.max.y = this.max.z = -1 / 0),
      this
    );
  }
  isEmpty() {
    return (
      this.max.x < this.min.x ||
      this.max.y < this.min.y ||
      this.max.z < this.min.z
    );
  }
  getCenter(e) {
    return this.isEmpty()
      ? e.set(0, 0, 0)
      : e.addVectors(this.min, this.max).multiplyScalar(0.5);
  }
  getSize(e) {
    return this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min);
  }
  expandByPoint(e) {
    return this.min.min(e), this.max.max(e), this;
  }
  expandByVector(e) {
    return this.min.sub(e), this.max.add(e), this;
  }
  expandByScalar(e) {
    return this.min.addScalar(-e), this.max.addScalar(e), this;
  }
  expandByObject(e, n = !1) {
    e.updateWorldMatrix(!1, !1);
    const r = e.geometry;
    if (r !== void 0) {
      const o = r.getAttribute("position");
      if (n === !0 && o !== void 0 && e.isInstancedMesh !== !0)
        for (let s = 0, a = o.count; s < a; s++)
          e.isMesh === !0
            ? e.getVertexPosition(s, Ro)
            : Ro.fromBufferAttribute(o, s),
            Ro.applyMatrix4(e.matrixWorld),
            this.expandByPoint(Ro);
      else
        e.boundingBox !== void 0
          ? (e.boundingBox === null && e.computeBoundingBox(),
            $m.copy(e.boundingBox))
          : (r.boundingBox === null && r.computeBoundingBox(),
            $m.copy(r.boundingBox)),
          $m.applyMatrix4(e.matrixWorld),
          this.union($m);
    }
    const i = e.children;
    for (let o = 0, s = i.length; o < s; o++) this.expandByObject(i[o], n);
    return this;
  }
  containsPoint(e) {
    return !(
      e.x < this.min.x ||
      e.x > this.max.x ||
      e.y < this.min.y ||
      e.y > this.max.y ||
      e.z < this.min.z ||
      e.z > this.max.z
    );
  }
  containsBox(e) {
    return (
      this.min.x <= e.min.x &&
      e.max.x <= this.max.x &&
      this.min.y <= e.min.y &&
      e.max.y <= this.max.y &&
      this.min.z <= e.min.z &&
      e.max.z <= this.max.z
    );
  }
  getParameter(e, n) {
    return n.set(
      (e.x - this.min.x) / (this.max.x - this.min.x),
      (e.y - this.min.y) / (this.max.y - this.min.y),
      (e.z - this.min.z) / (this.max.z - this.min.z)
    );
  }
  intersectsBox(e) {
    return !(
      e.max.x < this.min.x ||
      e.min.x > this.max.x ||
      e.max.y < this.min.y ||
      e.min.y > this.max.y ||
      e.max.z < this.min.z ||
      e.min.z > this.max.z
    );
  }
  intersectsSphere(e) {
    return (
      this.clampPoint(e.center, Ro),
      Ro.distanceToSquared(e.center) <= e.radius * e.radius
    );
  }
  intersectsPlane(e) {
    let n, r;
    return (
      e.normal.x > 0
        ? ((n = e.normal.x * this.min.x), (r = e.normal.x * this.max.x))
        : ((n = e.normal.x * this.max.x), (r = e.normal.x * this.min.x)),
      e.normal.y > 0
        ? ((n += e.normal.y * this.min.y), (r += e.normal.y * this.max.y))
        : ((n += e.normal.y * this.max.y), (r += e.normal.y * this.min.y)),
      e.normal.z > 0
        ? ((n += e.normal.z * this.min.z), (r += e.normal.z * this.max.z))
        : ((n += e.normal.z * this.max.z), (r += e.normal.z * this.min.z)),
      n <= -e.constant && r >= -e.constant
    );
  }
  intersectsTriangle(e) {
    if (this.isEmpty()) return !1;
    this.getCenter(Md),
      Xm.subVectors(this.max, Md),
      lu.subVectors(e.a, Md),
      cu.subVectors(e.b, Md),
      uu.subVectors(e.c, Md),
      Ca.subVectors(cu, lu),
      Ta.subVectors(uu, cu),
      Fl.subVectors(lu, uu);
    let n = [
      0,
      -Ca.z,
      Ca.y,
      0,
      -Ta.z,
      Ta.y,
      0,
      -Fl.z,
      Fl.y,
      Ca.z,
      0,
      -Ca.x,
      Ta.z,
      0,
      -Ta.x,
      Fl.z,
      0,
      -Fl.x,
      -Ca.y,
      Ca.x,
      0,
      -Ta.y,
      Ta.x,
      0,
      -Fl.y,
      Fl.x,
      0,
    ];
    return !M1(n, lu, cu, uu, Xm) ||
      ((n = [1, 0, 0, 0, 1, 0, 0, 0, 1]), !M1(n, lu, cu, uu, Xm))
      ? !1
      : (qm.crossVectors(Ca, Ta),
        (n = [qm.x, qm.y, qm.z]),
        M1(n, lu, cu, uu, Xm));
  }
  clampPoint(e, n) {
    return n.copy(e).clamp(this.min, this.max);
  }
  distanceToPoint(e) {
    return this.clampPoint(e, Ro).distanceTo(e);
  }
  getBoundingSphere(e) {
    return (
      this.isEmpty()
        ? e.makeEmpty()
        : (this.getCenter(e.center),
          (e.radius = this.getSize(Ro).length() * 0.5)),
      e
    );
  }
  intersect(e) {
    return (
      this.min.max(e.min),
      this.max.min(e.max),
      this.isEmpty() && this.makeEmpty(),
      this
    );
  }
  union(e) {
    return this.min.min(e.min), this.max.max(e.max), this;
  }
  applyMatrix4(e) {
    return this.isEmpty()
      ? this
      : (zs[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e),
        zs[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e),
        zs[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e),
        zs[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e),
        zs[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e),
        zs[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e),
        zs[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e),
        zs[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e),
        this.setFromPoints(zs),
        this);
  }
  translate(e) {
    return this.min.add(e), this.max.add(e), this;
  }
  equals(e) {
    return e.min.equals(this.min) && e.max.equals(this.max);
  }
}
const zs = [
    new W(),
    new W(),
    new W(),
    new W(),
    new W(),
    new W(),
    new W(),
    new W(),
  ],
  Ro = new W(),
  $m = new or(),
  lu = new W(),
  cu = new W(),
  uu = new W(),
  Ca = new W(),
  Ta = new W(),
  Fl = new W(),
  Md = new W(),
  Xm = new W(),
  qm = new W(),
  Nl = new W();
function M1(t, e, n, r, i) {
  for (let o = 0, s = t.length - 3; o <= s; o += 3) {
    Nl.fromArray(t, o);
    const a =
        i.x * Math.abs(Nl.x) + i.y * Math.abs(Nl.y) + i.z * Math.abs(Nl.z),
      l = e.dot(Nl),
      c = n.dot(Nl),
      u = r.dot(Nl);
    if (Math.max(-Math.max(l, c, u), Math.min(l, c, u)) > a) return !1;
  }
  return !0;
}
const BB = new or(),
  Cd = new W(),
  C1 = new W();
class sr {
  constructor(e = new W(), n = -1) {
    (this.isSphere = !0), (this.center = e), (this.radius = n);
  }
  set(e, n) {
    return this.center.copy(e), (this.radius = n), this;
  }
  setFromPoints(e, n) {
    const r = this.center;
    n !== void 0 ? r.copy(n) : BB.setFromPoints(e).getCenter(r);
    let i = 0;
    for (let o = 0, s = e.length; o < s; o++)
      i = Math.max(i, r.distanceToSquared(e[o]));
    return (this.radius = Math.sqrt(i)), this;
  }
  copy(e) {
    return this.center.copy(e.center), (this.radius = e.radius), this;
  }
  isEmpty() {
    return this.radius < 0;
  }
  makeEmpty() {
    return this.center.set(0, 0, 0), (this.radius = -1), this;
  }
  containsPoint(e) {
    return e.distanceToSquared(this.center) <= this.radius * this.radius;
  }
  distanceToPoint(e) {
    return e.distanceTo(this.center) - this.radius;
  }
  intersectsSphere(e) {
    const n = this.radius + e.radius;
    return e.center.distanceToSquared(this.center) <= n * n;
  }
  intersectsBox(e) {
    return e.intersectsSphere(this);
  }
  intersectsPlane(e) {
    return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
  }
  clampPoint(e, n) {
    const r = this.center.distanceToSquared(e);
    return (
      n.copy(e),
      r > this.radius * this.radius &&
        (n.sub(this.center).normalize(),
        n.multiplyScalar(this.radius).add(this.center)),
      n
    );
  }
  getBoundingBox(e) {
    return this.isEmpty()
      ? (e.makeEmpty(), e)
      : (e.set(this.center, this.center), e.expandByScalar(this.radius), e);
  }
  applyMatrix4(e) {
    return (
      this.center.applyMatrix4(e),
      (this.radius = this.radius * e.getMaxScaleOnAxis()),
      this
    );
  }
  translate(e) {
    return this.center.add(e), this;
  }
  expandByPoint(e) {
    if (this.isEmpty()) return this.center.copy(e), (this.radius = 0), this;
    Cd.subVectors(e, this.center);
    const n = Cd.lengthSq();
    if (n > this.radius * this.radius) {
      const r = Math.sqrt(n),
        i = (r - this.radius) * 0.5;
      this.center.addScaledVector(Cd, i / r), (this.radius += i);
    }
    return this;
  }
  union(e) {
    return e.isEmpty()
      ? this
      : this.isEmpty()
      ? (this.copy(e), this)
      : (this.center.equals(e.center) === !0
          ? (this.radius = Math.max(this.radius, e.radius))
          : (C1.subVectors(e.center, this.center).setLength(e.radius),
            this.expandByPoint(Cd.copy(e.center).add(C1)),
            this.expandByPoint(Cd.copy(e.center).sub(C1))),
        this);
  }
  equals(e) {
    return e.center.equals(this.center) && e.radius === this.radius;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
const ks = new W(),
  T1 = new W(),
  Ym = new W(),
  Aa = new W(),
  A1 = new W(),
  Km = new W(),
  R1 = new W();
class Uc {
  constructor(e = new W(), n = new W(0, 0, -1)) {
    (this.origin = e), (this.direction = n);
  }
  set(e, n) {
    return this.origin.copy(e), this.direction.copy(n), this;
  }
  copy(e) {
    return this.origin.copy(e.origin), this.direction.copy(e.direction), this;
  }
  at(e, n) {
    return n.copy(this.origin).addScaledVector(this.direction, e);
  }
  lookAt(e) {
    return this.direction.copy(e).sub(this.origin).normalize(), this;
  }
  recast(e) {
    return this.origin.copy(this.at(e, ks)), this;
  }
  closestPointToPoint(e, n) {
    n.subVectors(e, this.origin);
    const r = n.dot(this.direction);
    return r < 0
      ? n.copy(this.origin)
      : n.copy(this.origin).addScaledVector(this.direction, r);
  }
  distanceToPoint(e) {
    return Math.sqrt(this.distanceSqToPoint(e));
  }
  distanceSqToPoint(e) {
    const n = ks.subVectors(e, this.origin).dot(this.direction);
    return n < 0
      ? this.origin.distanceToSquared(e)
      : (ks.copy(this.origin).addScaledVector(this.direction, n),
        ks.distanceToSquared(e));
  }
  distanceSqToSegment(e, n, r, i) {
    T1.copy(e).add(n).multiplyScalar(0.5),
      Ym.copy(n).sub(e).normalize(),
      Aa.copy(this.origin).sub(T1);
    const o = e.distanceTo(n) * 0.5,
      s = -this.direction.dot(Ym),
      a = Aa.dot(this.direction),
      l = -Aa.dot(Ym),
      c = Aa.lengthSq(),
      u = Math.abs(1 - s * s);
    let h, p, m, v;
    if (u > 0)
      if (((h = s * l - a), (p = s * a - l), (v = o * u), h >= 0))
        if (p >= -v)
          if (p <= v) {
            const S = 1 / u;
            (h *= S),
              (p *= S),
              (m = h * (h + s * p + 2 * a) + p * (s * h + p + 2 * l) + c);
          } else
            (p = o),
              (h = Math.max(0, -(s * p + a))),
              (m = -h * h + p * (p + 2 * l) + c);
        else
          (p = -o),
            (h = Math.max(0, -(s * p + a))),
            (m = -h * h + p * (p + 2 * l) + c);
      else
        p <= -v
          ? ((h = Math.max(0, -(-s * o + a))),
            (p = h > 0 ? -o : Math.min(Math.max(-o, -l), o)),
            (m = -h * h + p * (p + 2 * l) + c))
          : p <= v
          ? ((h = 0),
            (p = Math.min(Math.max(-o, -l), o)),
            (m = p * (p + 2 * l) + c))
          : ((h = Math.max(0, -(s * o + a))),
            (p = h > 0 ? o : Math.min(Math.max(-o, -l), o)),
            (m = -h * h + p * (p + 2 * l) + c));
    else
      (p = s > 0 ? -o : o),
        (h = Math.max(0, -(s * p + a))),
        (m = -h * h + p * (p + 2 * l) + c);
    return (
      r && r.copy(this.origin).addScaledVector(this.direction, h),
      i && i.copy(T1).addScaledVector(Ym, p),
      m
    );
  }
  intersectSphere(e, n) {
    ks.subVectors(e.center, this.origin);
    const r = ks.dot(this.direction),
      i = ks.dot(ks) - r * r,
      o = e.radius * e.radius;
    if (i > o) return null;
    const s = Math.sqrt(o - i),
      a = r - s,
      l = r + s;
    return l < 0 ? null : a < 0 ? this.at(l, n) : this.at(a, n);
  }
  intersectsSphere(e) {
    return this.distanceSqToPoint(e.center) <= e.radius * e.radius;
  }
  distanceToPlane(e) {
    const n = e.normal.dot(this.direction);
    if (n === 0) return e.distanceToPoint(this.origin) === 0 ? 0 : null;
    const r = -(this.origin.dot(e.normal) + e.constant) / n;
    return r >= 0 ? r : null;
  }
  intersectPlane(e, n) {
    const r = this.distanceToPlane(e);
    return r === null ? null : this.at(r, n);
  }
  intersectsPlane(e) {
    const n = e.distanceToPoint(this.origin);
    return n === 0 || e.normal.dot(this.direction) * n < 0;
  }
  intersectBox(e, n) {
    let r, i, o, s, a, l;
    const c = 1 / this.direction.x,
      u = 1 / this.direction.y,
      h = 1 / this.direction.z,
      p = this.origin;
    return (
      c >= 0
        ? ((r = (e.min.x - p.x) * c), (i = (e.max.x - p.x) * c))
        : ((r = (e.max.x - p.x) * c), (i = (e.min.x - p.x) * c)),
      u >= 0
        ? ((o = (e.min.y - p.y) * u), (s = (e.max.y - p.y) * u))
        : ((o = (e.max.y - p.y) * u), (s = (e.min.y - p.y) * u)),
      r > s ||
      o > i ||
      ((o > r || isNaN(r)) && (r = o),
      (s < i || isNaN(i)) && (i = s),
      h >= 0
        ? ((a = (e.min.z - p.z) * h), (l = (e.max.z - p.z) * h))
        : ((a = (e.max.z - p.z) * h), (l = (e.min.z - p.z) * h)),
      r > l || a > i) ||
      ((a > r || r !== r) && (r = a), (l < i || i !== i) && (i = l), i < 0)
        ? null
        : this.at(r >= 0 ? r : i, n)
    );
  }
  intersectsBox(e) {
    return this.intersectBox(e, ks) !== null;
  }
  intersectTriangle(e, n, r, i, o) {
    A1.subVectors(n, e), Km.subVectors(r, e), R1.crossVectors(A1, Km);
    let s = this.direction.dot(R1),
      a;
    if (s > 0) {
      if (i) return null;
      a = 1;
    } else if (s < 0) (a = -1), (s = -s);
    else return null;
    Aa.subVectors(this.origin, e);
    const l = a * this.direction.dot(Km.crossVectors(Aa, Km));
    if (l < 0) return null;
    const c = a * this.direction.dot(A1.cross(Aa));
    if (c < 0 || l + c > s) return null;
    const u = -a * Aa.dot(R1);
    return u < 0 ? null : this.at(u / s, o);
  }
  applyMatrix4(e) {
    return (
      this.origin.applyMatrix4(e), this.direction.transformDirection(e), this
    );
  }
  equals(e) {
    return e.origin.equals(this.origin) && e.direction.equals(this.direction);
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
class bt {
  constructor(e, n, r, i, o, s, a, l, c, u, h, p, m, v, S, x) {
    (bt.prototype.isMatrix4 = !0),
      (this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
      e !== void 0 && this.set(e, n, r, i, o, s, a, l, c, u, h, p, m, v, S, x);
  }
  set(e, n, r, i, o, s, a, l, c, u, h, p, m, v, S, x) {
    const g = this.elements;
    return (
      (g[0] = e),
      (g[4] = n),
      (g[8] = r),
      (g[12] = i),
      (g[1] = o),
      (g[5] = s),
      (g[9] = a),
      (g[13] = l),
      (g[2] = c),
      (g[6] = u),
      (g[10] = h),
      (g[14] = p),
      (g[3] = m),
      (g[7] = v),
      (g[11] = S),
      (g[15] = x),
      this
    );
  }
  identity() {
    return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
  }
  clone() {
    return new bt().fromArray(this.elements);
  }
  copy(e) {
    const n = this.elements,
      r = e.elements;
    return (
      (n[0] = r[0]),
      (n[1] = r[1]),
      (n[2] = r[2]),
      (n[3] = r[3]),
      (n[4] = r[4]),
      (n[5] = r[5]),
      (n[6] = r[6]),
      (n[7] = r[7]),
      (n[8] = r[8]),
      (n[9] = r[9]),
      (n[10] = r[10]),
      (n[11] = r[11]),
      (n[12] = r[12]),
      (n[13] = r[13]),
      (n[14] = r[14]),
      (n[15] = r[15]),
      this
    );
  }
  copyPosition(e) {
    const n = this.elements,
      r = e.elements;
    return (n[12] = r[12]), (n[13] = r[13]), (n[14] = r[14]), this;
  }
  setFromMatrix3(e) {
    const n = e.elements;
    return (
      this.set(
        n[0],
        n[3],
        n[6],
        0,
        n[1],
        n[4],
        n[7],
        0,
        n[2],
        n[5],
        n[8],
        0,
        0,
        0,
        0,
        1
      ),
      this
    );
  }
  extractBasis(e, n, r) {
    return (
      e.setFromMatrixColumn(this, 0),
      n.setFromMatrixColumn(this, 1),
      r.setFromMatrixColumn(this, 2),
      this
    );
  }
  makeBasis(e, n, r) {
    return (
      this.set(
        e.x,
        n.x,
        r.x,
        0,
        e.y,
        n.y,
        r.y,
        0,
        e.z,
        n.z,
        r.z,
        0,
        0,
        0,
        0,
        1
      ),
      this
    );
  }
  extractRotation(e) {
    const n = this.elements,
      r = e.elements,
      i = 1 / fu.setFromMatrixColumn(e, 0).length(),
      o = 1 / fu.setFromMatrixColumn(e, 1).length(),
      s = 1 / fu.setFromMatrixColumn(e, 2).length();
    return (
      (n[0] = r[0] * i),
      (n[1] = r[1] * i),
      (n[2] = r[2] * i),
      (n[3] = 0),
      (n[4] = r[4] * o),
      (n[5] = r[5] * o),
      (n[6] = r[6] * o),
      (n[7] = 0),
      (n[8] = r[8] * s),
      (n[9] = r[9] * s),
      (n[10] = r[10] * s),
      (n[11] = 0),
      (n[12] = 0),
      (n[13] = 0),
      (n[14] = 0),
      (n[15] = 1),
      this
    );
  }
  makeRotationFromEuler(e) {
    const n = this.elements,
      r = e.x,
      i = e.y,
      o = e.z,
      s = Math.cos(r),
      a = Math.sin(r),
      l = Math.cos(i),
      c = Math.sin(i),
      u = Math.cos(o),
      h = Math.sin(o);
    if (e.order === "XYZ") {
      const p = s * u,
        m = s * h,
        v = a * u,
        S = a * h;
      (n[0] = l * u),
        (n[4] = -l * h),
        (n[8] = c),
        (n[1] = m + v * c),
        (n[5] = p - S * c),
        (n[9] = -a * l),
        (n[2] = S - p * c),
        (n[6] = v + m * c),
        (n[10] = s * l);
    } else if (e.order === "YXZ") {
      const p = l * u,
        m = l * h,
        v = c * u,
        S = c * h;
      (n[0] = p + S * a),
        (n[4] = v * a - m),
        (n[8] = s * c),
        (n[1] = s * h),
        (n[5] = s * u),
        (n[9] = -a),
        (n[2] = m * a - v),
        (n[6] = S + p * a),
        (n[10] = s * l);
    } else if (e.order === "ZXY") {
      const p = l * u,
        m = l * h,
        v = c * u,
        S = c * h;
      (n[0] = p - S * a),
        (n[4] = -s * h),
        (n[8] = v + m * a),
        (n[1] = m + v * a),
        (n[5] = s * u),
        (n[9] = S - p * a),
        (n[2] = -s * c),
        (n[6] = a),
        (n[10] = s * l);
    } else if (e.order === "ZYX") {
      const p = s * u,
        m = s * h,
        v = a * u,
        S = a * h;
      (n[0] = l * u),
        (n[4] = v * c - m),
        (n[8] = p * c + S),
        (n[1] = l * h),
        (n[5] = S * c + p),
        (n[9] = m * c - v),
        (n[2] = -c),
        (n[6] = a * l),
        (n[10] = s * l);
    } else if (e.order === "YZX") {
      const p = s * l,
        m = s * c,
        v = a * l,
        S = a * c;
      (n[0] = l * u),
        (n[4] = S - p * h),
        (n[8] = v * h + m),
        (n[1] = h),
        (n[5] = s * u),
        (n[9] = -a * u),
        (n[2] = -c * u),
        (n[6] = m * h + v),
        (n[10] = p - S * h);
    } else if (e.order === "XZY") {
      const p = s * l,
        m = s * c,
        v = a * l,
        S = a * c;
      (n[0] = l * u),
        (n[4] = -h),
        (n[8] = c * u),
        (n[1] = p * h + S),
        (n[5] = s * u),
        (n[9] = m * h - v),
        (n[2] = v * h - m),
        (n[6] = a * u),
        (n[10] = S * h + p);
    }
    return (
      (n[3] = 0),
      (n[7] = 0),
      (n[11] = 0),
      (n[12] = 0),
      (n[13] = 0),
      (n[14] = 0),
      (n[15] = 1),
      this
    );
  }
  makeRotationFromQuaternion(e) {
    return this.compose(HB, e, VB);
  }
  lookAt(e, n, r) {
    const i = this.elements;
    return (
      Oi.subVectors(e, n),
      Oi.lengthSq() === 0 && (Oi.z = 1),
      Oi.normalize(),
      Ra.crossVectors(r, Oi),
      Ra.lengthSq() === 0 &&
        (Math.abs(r.z) === 1 ? (Oi.x += 1e-4) : (Oi.z += 1e-4),
        Oi.normalize(),
        Ra.crossVectors(r, Oi)),
      Ra.normalize(),
      Zm.crossVectors(Oi, Ra),
      (i[0] = Ra.x),
      (i[4] = Zm.x),
      (i[8] = Oi.x),
      (i[1] = Ra.y),
      (i[5] = Zm.y),
      (i[9] = Oi.y),
      (i[2] = Ra.z),
      (i[6] = Zm.z),
      (i[10] = Oi.z),
      this
    );
  }
  multiply(e) {
    return this.multiplyMatrices(this, e);
  }
  premultiply(e) {
    return this.multiplyMatrices(e, this);
  }
  multiplyMatrices(e, n) {
    const r = e.elements,
      i = n.elements,
      o = this.elements,
      s = r[0],
      a = r[4],
      l = r[8],
      c = r[12],
      u = r[1],
      h = r[5],
      p = r[9],
      m = r[13],
      v = r[2],
      S = r[6],
      x = r[10],
      g = r[14],
      y = r[3],
      _ = r[7],
      b = r[11],
      T = r[15],
      M = i[0],
      C = i[4],
      L = i[8],
      A = i[12],
      P = i[1],
      k = i[5],
      B = i[9],
      $ = i[13],
      D = i[2],
      X = i[6],
      j = i[10],
      Y = i[14],
      N = i[3],
      V = i[7],
      G = i[11],
      U = i[15];
    return (
      (o[0] = s * M + a * P + l * D + c * N),
      (o[4] = s * C + a * k + l * X + c * V),
      (o[8] = s * L + a * B + l * j + c * G),
      (o[12] = s * A + a * $ + l * Y + c * U),
      (o[1] = u * M + h * P + p * D + m * N),
      (o[5] = u * C + h * k + p * X + m * V),
      (o[9] = u * L + h * B + p * j + m * G),
      (o[13] = u * A + h * $ + p * Y + m * U),
      (o[2] = v * M + S * P + x * D + g * N),
      (o[6] = v * C + S * k + x * X + g * V),
      (o[10] = v * L + S * B + x * j + g * G),
      (o[14] = v * A + S * $ + x * Y + g * U),
      (o[3] = y * M + _ * P + b * D + T * N),
      (o[7] = y * C + _ * k + b * X + T * V),
      (o[11] = y * L + _ * B + b * j + T * G),
      (o[15] = y * A + _ * $ + b * Y + T * U),
      this
    );
  }
  multiplyScalar(e) {
    const n = this.elements;
    return (
      (n[0] *= e),
      (n[4] *= e),
      (n[8] *= e),
      (n[12] *= e),
      (n[1] *= e),
      (n[5] *= e),
      (n[9] *= e),
      (n[13] *= e),
      (n[2] *= e),
      (n[6] *= e),
      (n[10] *= e),
      (n[14] *= e),
      (n[3] *= e),
      (n[7] *= e),
      (n[11] *= e),
      (n[15] *= e),
      this
    );
  }
  determinant() {
    const e = this.elements,
      n = e[0],
      r = e[4],
      i = e[8],
      o = e[12],
      s = e[1],
      a = e[5],
      l = e[9],
      c = e[13],
      u = e[2],
      h = e[6],
      p = e[10],
      m = e[14],
      v = e[3],
      S = e[7],
      x = e[11],
      g = e[15];
    return (
      v *
        (+o * l * h -
          i * c * h -
          o * a * p +
          r * c * p +
          i * a * m -
          r * l * m) +
      S *
        (+n * l * m -
          n * c * p +
          o * s * p -
          i * s * m +
          i * c * u -
          o * l * u) +
      x *
        (+n * c * h -
          n * a * m -
          o * s * h +
          r * s * m +
          o * a * u -
          r * c * u) +
      g *
        (-i * a * u - n * l * h + n * a * p + i * s * h - r * s * p + r * l * u)
    );
  }
  transpose() {
    const e = this.elements;
    let n;
    return (
      (n = e[1]),
      (e[1] = e[4]),
      (e[4] = n),
      (n = e[2]),
      (e[2] = e[8]),
      (e[8] = n),
      (n = e[6]),
      (e[6] = e[9]),
      (e[9] = n),
      (n = e[3]),
      (e[3] = e[12]),
      (e[12] = n),
      (n = e[7]),
      (e[7] = e[13]),
      (e[13] = n),
      (n = e[11]),
      (e[11] = e[14]),
      (e[14] = n),
      this
    );
  }
  setPosition(e, n, r) {
    const i = this.elements;
    return (
      e.isVector3
        ? ((i[12] = e.x), (i[13] = e.y), (i[14] = e.z))
        : ((i[12] = e), (i[13] = n), (i[14] = r)),
      this
    );
  }
  invert() {
    const e = this.elements,
      n = e[0],
      r = e[1],
      i = e[2],
      o = e[3],
      s = e[4],
      a = e[5],
      l = e[6],
      c = e[7],
      u = e[8],
      h = e[9],
      p = e[10],
      m = e[11],
      v = e[12],
      S = e[13],
      x = e[14],
      g = e[15],
      y = h * x * c - S * p * c + S * l * m - a * x * m - h * l * g + a * p * g,
      _ = v * p * c - u * x * c - v * l * m + s * x * m + u * l * g - s * p * g,
      b = u * S * c - v * h * c + v * a * m - s * S * m - u * a * g + s * h * g,
      T = v * h * l - u * S * l - v * a * p + s * S * p + u * a * x - s * h * x,
      M = n * y + r * _ + i * b + o * T;
    if (M === 0)
      return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    const C = 1 / M;
    return (
      (e[0] = y * C),
      (e[1] =
        (S * p * o -
          h * x * o -
          S * i * m +
          r * x * m +
          h * i * g -
          r * p * g) *
        C),
      (e[2] =
        (a * x * o -
          S * l * o +
          S * i * c -
          r * x * c -
          a * i * g +
          r * l * g) *
        C),
      (e[3] =
        (h * l * o -
          a * p * o -
          h * i * c +
          r * p * c +
          a * i * m -
          r * l * m) *
        C),
      (e[4] = _ * C),
      (e[5] =
        (u * x * o -
          v * p * o +
          v * i * m -
          n * x * m -
          u * i * g +
          n * p * g) *
        C),
      (e[6] =
        (v * l * o -
          s * x * o -
          v * i * c +
          n * x * c +
          s * i * g -
          n * l * g) *
        C),
      (e[7] =
        (s * p * o -
          u * l * o +
          u * i * c -
          n * p * c -
          s * i * m +
          n * l * m) *
        C),
      (e[8] = b * C),
      (e[9] =
        (v * h * o -
          u * S * o -
          v * r * m +
          n * S * m +
          u * r * g -
          n * h * g) *
        C),
      (e[10] =
        (s * S * o -
          v * a * o +
          v * r * c -
          n * S * c -
          s * r * g +
          n * a * g) *
        C),
      (e[11] =
        (u * a * o -
          s * h * o -
          u * r * c +
          n * h * c +
          s * r * m -
          n * a * m) *
        C),
      (e[12] = T * C),
      (e[13] =
        (u * S * i -
          v * h * i +
          v * r * p -
          n * S * p -
          u * r * x +
          n * h * x) *
        C),
      (e[14] =
        (v * a * i -
          s * S * i -
          v * r * l +
          n * S * l +
          s * r * x -
          n * a * x) *
        C),
      (e[15] =
        (s * h * i -
          u * a * i +
          u * r * l -
          n * h * l -
          s * r * p +
          n * a * p) *
        C),
      this
    );
  }
  scale(e) {
    const n = this.elements,
      r = e.x,
      i = e.y,
      o = e.z;
    return (
      (n[0] *= r),
      (n[4] *= i),
      (n[8] *= o),
      (n[1] *= r),
      (n[5] *= i),
      (n[9] *= o),
      (n[2] *= r),
      (n[6] *= i),
      (n[10] *= o),
      (n[3] *= r),
      (n[7] *= i),
      (n[11] *= o),
      this
    );
  }
  getMaxScaleOnAxis() {
    const e = this.elements,
      n = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
      r = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],
      i = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
    return Math.sqrt(Math.max(n, r, i));
  }
  makeTranslation(e, n, r) {
    return (
      e.isVector3
        ? this.set(1, 0, 0, e.x, 0, 1, 0, e.y, 0, 0, 1, e.z, 0, 0, 0, 1)
        : this.set(1, 0, 0, e, 0, 1, 0, n, 0, 0, 1, r, 0, 0, 0, 1),
      this
    );
  }
  makeRotationX(e) {
    const n = Math.cos(e),
      r = Math.sin(e);
    return this.set(1, 0, 0, 0, 0, n, -r, 0, 0, r, n, 0, 0, 0, 0, 1), this;
  }
  makeRotationY(e) {
    const n = Math.cos(e),
      r = Math.sin(e);
    return this.set(n, 0, r, 0, 0, 1, 0, 0, -r, 0, n, 0, 0, 0, 0, 1), this;
  }
  makeRotationZ(e) {
    const n = Math.cos(e),
      r = Math.sin(e);
    return this.set(n, -r, 0, 0, r, n, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
  }
  makeRotationAxis(e, n) {
    const r = Math.cos(n),
      i = Math.sin(n),
      o = 1 - r,
      s = e.x,
      a = e.y,
      l = e.z,
      c = o * s,
      u = o * a;
    return (
      this.set(
        c * s + r,
        c * a - i * l,
        c * l + i * a,
        0,
        c * a + i * l,
        u * a + r,
        u * l - i * s,
        0,
        c * l - i * a,
        u * l + i * s,
        o * l * l + r,
        0,
        0,
        0,
        0,
        1
      ),
      this
    );
  }
  makeScale(e, n, r) {
    return this.set(e, 0, 0, 0, 0, n, 0, 0, 0, 0, r, 0, 0, 0, 0, 1), this;
  }
  makeShear(e, n, r, i, o, s) {
    return this.set(1, r, o, 0, e, 1, s, 0, n, i, 1, 0, 0, 0, 0, 1), this;
  }
  compose(e, n, r) {
    const i = this.elements,
      o = n._x,
      s = n._y,
      a = n._z,
      l = n._w,
      c = o + o,
      u = s + s,
      h = a + a,
      p = o * c,
      m = o * u,
      v = o * h,
      S = s * u,
      x = s * h,
      g = a * h,
      y = l * c,
      _ = l * u,
      b = l * h,
      T = r.x,
      M = r.y,
      C = r.z;
    return (
      (i[0] = (1 - (S + g)) * T),
      (i[1] = (m + b) * T),
      (i[2] = (v - _) * T),
      (i[3] = 0),
      (i[4] = (m - b) * M),
      (i[5] = (1 - (p + g)) * M),
      (i[6] = (x + y) * M),
      (i[7] = 0),
      (i[8] = (v + _) * C),
      (i[9] = (x - y) * C),
      (i[10] = (1 - (p + S)) * C),
      (i[11] = 0),
      (i[12] = e.x),
      (i[13] = e.y),
      (i[14] = e.z),
      (i[15] = 1),
      this
    );
  }
  decompose(e, n, r) {
    const i = this.elements;
    let o = fu.set(i[0], i[1], i[2]).length();
    const s = fu.set(i[4], i[5], i[6]).length(),
      a = fu.set(i[8], i[9], i[10]).length();
    this.determinant() < 0 && (o = -o),
      (e.x = i[12]),
      (e.y = i[13]),
      (e.z = i[14]),
      Po.copy(this);
    const c = 1 / o,
      u = 1 / s,
      h = 1 / a;
    return (
      (Po.elements[0] *= c),
      (Po.elements[1] *= c),
      (Po.elements[2] *= c),
      (Po.elements[4] *= u),
      (Po.elements[5] *= u),
      (Po.elements[6] *= u),
      (Po.elements[8] *= h),
      (Po.elements[9] *= h),
      (Po.elements[10] *= h),
      n.setFromRotationMatrix(Po),
      (r.x = o),
      (r.y = s),
      (r.z = a),
      this
    );
  }
  makePerspective(e, n, r, i, o, s, a = Go) {
    const l = this.elements,
      c = (2 * o) / (n - e),
      u = (2 * o) / (r - i),
      h = (n + e) / (n - e),
      p = (r + i) / (r - i);
    let m, v;
    if (a === Go) (m = -(s + o) / (s - o)), (v = (-2 * s * o) / (s - o));
    else if (a === Cf) (m = -s / (s - o)), (v = (-s * o) / (s - o));
    else
      throw new Error(
        "THREE.Matrix4.makePerspective(): Invalid coordinate system: " + a
      );
    return (
      (l[0] = c),
      (l[4] = 0),
      (l[8] = h),
      (l[12] = 0),
      (l[1] = 0),
      (l[5] = u),
      (l[9] = p),
      (l[13] = 0),
      (l[2] = 0),
      (l[6] = 0),
      (l[10] = m),
      (l[14] = v),
      (l[3] = 0),
      (l[7] = 0),
      (l[11] = -1),
      (l[15] = 0),
      this
    );
  }
  makeOrthographic(e, n, r, i, o, s, a = Go) {
    const l = this.elements,
      c = 1 / (n - e),
      u = 1 / (r - i),
      h = 1 / (s - o),
      p = (n + e) * c,
      m = (r + i) * u;
    let v, S;
    if (a === Go) (v = (s + o) * h), (S = -2 * h);
    else if (a === Cf) (v = o * h), (S = -1 * h);
    else
      throw new Error(
        "THREE.Matrix4.makeOrthographic(): Invalid coordinate system: " + a
      );
    return (
      (l[0] = 2 * c),
      (l[4] = 0),
      (l[8] = 0),
      (l[12] = -p),
      (l[1] = 0),
      (l[5] = 2 * u),
      (l[9] = 0),
      (l[13] = -m),
      (l[2] = 0),
      (l[6] = 0),
      (l[10] = S),
      (l[14] = -v),
      (l[3] = 0),
      (l[7] = 0),
      (l[11] = 0),
      (l[15] = 1),
      this
    );
  }
  equals(e) {
    const n = this.elements,
      r = e.elements;
    for (let i = 0; i < 16; i++) if (n[i] !== r[i]) return !1;
    return !0;
  }
  fromArray(e, n = 0) {
    for (let r = 0; r < 16; r++) this.elements[r] = e[r + n];
    return this;
  }
  toArray(e = [], n = 0) {
    const r = this.elements;
    return (
      (e[n] = r[0]),
      (e[n + 1] = r[1]),
      (e[n + 2] = r[2]),
      (e[n + 3] = r[3]),
      (e[n + 4] = r[4]),
      (e[n + 5] = r[5]),
      (e[n + 6] = r[6]),
      (e[n + 7] = r[7]),
      (e[n + 8] = r[8]),
      (e[n + 9] = r[9]),
      (e[n + 10] = r[10]),
      (e[n + 11] = r[11]),
      (e[n + 12] = r[12]),
      (e[n + 13] = r[13]),
      (e[n + 14] = r[14]),
      (e[n + 15] = r[15]),
      e
    );
  }
}
const fu = new W(),
  Po = new bt(),
  HB = new W(0, 0, 0),
  VB = new W(1, 1, 1),
  Ra = new W(),
  Zm = new W(),
  Oi = new W(),
  GT = new bt(),
  jT = new Gr();
class yp {
  constructor(e = 0, n = 0, r = 0, i = yp.DEFAULT_ORDER) {
    (this.isEuler = !0),
      (this._x = e),
      (this._y = n),
      (this._z = r),
      (this._order = i);
  }
  get x() {
    return this._x;
  }
  set x(e) {
    (this._x = e), this._onChangeCallback();
  }
  get y() {
    return this._y;
  }
  set y(e) {
    (this._y = e), this._onChangeCallback();
  }
  get z() {
    return this._z;
  }
  set z(e) {
    (this._z = e), this._onChangeCallback();
  }
  get order() {
    return this._order;
  }
  set order(e) {
    (this._order = e), this._onChangeCallback();
  }
  set(e, n, r, i = this._order) {
    return (
      (this._x = e),
      (this._y = n),
      (this._z = r),
      (this._order = i),
      this._onChangeCallback(),
      this
    );
  }
  clone() {
    return new this.constructor(this._x, this._y, this._z, this._order);
  }
  copy(e) {
    return (
      (this._x = e._x),
      (this._y = e._y),
      (this._z = e._z),
      (this._order = e._order),
      this._onChangeCallback(),
      this
    );
  }
  setFromRotationMatrix(e, n = this._order, r = !0) {
    const i = e.elements,
      o = i[0],
      s = i[4],
      a = i[8],
      l = i[1],
      c = i[5],
      u = i[9],
      h = i[2],
      p = i[6],
      m = i[10];
    switch (n) {
      case "XYZ":
        (this._y = Math.asin(Dn(a, -1, 1))),
          Math.abs(a) < 0.9999999
            ? ((this._x = Math.atan2(-u, m)), (this._z = Math.atan2(-s, o)))
            : ((this._x = Math.atan2(p, c)), (this._z = 0));
        break;
      case "YXZ":
        (this._x = Math.asin(-Dn(u, -1, 1))),
          Math.abs(u) < 0.9999999
            ? ((this._y = Math.atan2(a, m)), (this._z = Math.atan2(l, c)))
            : ((this._y = Math.atan2(-h, o)), (this._z = 0));
        break;
      case "ZXY":
        (this._x = Math.asin(Dn(p, -1, 1))),
          Math.abs(p) < 0.9999999
            ? ((this._y = Math.atan2(-h, m)), (this._z = Math.atan2(-s, c)))
            : ((this._y = 0), (this._z = Math.atan2(l, o)));
        break;
      case "ZYX":
        (this._y = Math.asin(-Dn(h, -1, 1))),
          Math.abs(h) < 0.9999999
            ? ((this._x = Math.atan2(p, m)), (this._z = Math.atan2(l, o)))
            : ((this._x = 0), (this._z = Math.atan2(-s, c)));
        break;
      case "YZX":
        (this._z = Math.asin(Dn(l, -1, 1))),
          Math.abs(l) < 0.9999999
            ? ((this._x = Math.atan2(-u, c)), (this._y = Math.atan2(-h, o)))
            : ((this._x = 0), (this._y = Math.atan2(a, m)));
        break;
      case "XZY":
        (this._z = Math.asin(-Dn(s, -1, 1))),
          Math.abs(s) < 0.9999999
            ? ((this._x = Math.atan2(p, c)), (this._y = Math.atan2(a, o)))
            : ((this._x = Math.atan2(-u, m)), (this._y = 0));
        break;
      default:
        console.warn(
          "THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " +
            n
        );
    }
    return (this._order = n), r === !0 && this._onChangeCallback(), this;
  }
  setFromQuaternion(e, n, r) {
    return (
      GT.makeRotationFromQuaternion(e), this.setFromRotationMatrix(GT, n, r)
    );
  }
  setFromVector3(e, n = this._order) {
    return this.set(e.x, e.y, e.z, n);
  }
  reorder(e) {
    return jT.setFromEuler(this), this.setFromQuaternion(jT, e);
  }
  equals(e) {
    return (
      e._x === this._x &&
      e._y === this._y &&
      e._z === this._z &&
      e._order === this._order
    );
  }
  fromArray(e) {
    return (
      (this._x = e[0]),
      (this._y = e[1]),
      (this._z = e[2]),
      e[3] !== void 0 && (this._order = e[3]),
      this._onChangeCallback(),
      this
    );
  }
  toArray(e = [], n = 0) {
    return (
      (e[n] = this._x),
      (e[n + 1] = this._y),
      (e[n + 2] = this._z),
      (e[n + 3] = this._order),
      e
    );
  }
  _onChange(e) {
    return (this._onChangeCallback = e), this;
  }
  _onChangeCallback() {}
  *[Symbol.iterator]() {
    yield this._x, yield this._y, yield this._z, yield this._order;
  }
}
yp.DEFAULT_ORDER = "XYZ";
class mc {
  constructor() {
    this.mask = 1;
  }
  set(e) {
    this.mask = ((1 << e) | 0) >>> 0;
  }
  enable(e) {
    this.mask |= (1 << e) | 0;
  }
  enableAll() {
    this.mask = -1;
  }
  toggle(e) {
    this.mask ^= (1 << e) | 0;
  }
  disable(e) {
    this.mask &= ~((1 << e) | 0);
  }
  disableAll() {
    this.mask = 0;
  }
  test(e) {
    return (this.mask & e.mask) !== 0;
  }
  isEnabled(e) {
    return (this.mask & ((1 << e) | 0)) !== 0;
  }
}
let GB = 0;
const WT = new W(),
  du = new Gr(),
  Bs = new bt(),
  Qm = new W(),
  Td = new W(),
  jB = new W(),
  WB = new Gr(),
  $T = new W(1, 0, 0),
  XT = new W(0, 1, 0),
  qT = new W(0, 0, 1),
  $B = { type: "added" },
  XB = { type: "removed" };
class Zt extends bs {
  constructor() {
    super(),
      (this.isObject3D = !0),
      Object.defineProperty(this, "id", { value: GB++ }),
      (this.uuid = Xi()),
      (this.name = ""),
      (this.type = "Object3D"),
      (this.parent = null),
      (this.children = []),
      (this.up = Zt.DEFAULT_UP.clone());
    const e = new W(),
      n = new yp(),
      r = new Gr(),
      i = new W(1, 1, 1);
    function o() {
      r.setFromEuler(n, !1);
    }
    function s() {
      n.setFromQuaternion(r, void 0, !1);
    }
    n._onChange(o),
      r._onChange(s),
      Object.defineProperties(this, {
        position: { configurable: !0, enumerable: !0, value: e },
        rotation: { configurable: !0, enumerable: !0, value: n },
        quaternion: { configurable: !0, enumerable: !0, value: r },
        scale: { configurable: !0, enumerable: !0, value: i },
        modelViewMatrix: { value: new bt() },
        normalMatrix: { value: new Ot() },
      }),
      (this.matrix = new bt()),
      (this.matrixWorld = new bt()),
      (this.matrixAutoUpdate = Zt.DEFAULT_MATRIX_AUTO_UPDATE),
      (this.matrixWorldAutoUpdate = Zt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE),
      (this.matrixWorldNeedsUpdate = !1),
      (this.layers = new mc()),
      (this.visible = !0),
      (this.castShadow = !1),
      (this.receiveShadow = !1),
      (this.frustumCulled = !0),
      (this.renderOrder = 0),
      (this.animations = []),
      (this.userData = {});
  }
  onBeforeShadow() {}
  onAfterShadow() {}
  onBeforeRender() {}
  onAfterRender() {}
  applyMatrix4(e) {
    this.matrixAutoUpdate && this.updateMatrix(),
      this.matrix.premultiply(e),
      this.matrix.decompose(this.position, this.quaternion, this.scale);
  }
  applyQuaternion(e) {
    return this.quaternion.premultiply(e), this;
  }
  setRotationFromAxisAngle(e, n) {
    this.quaternion.setFromAxisAngle(e, n);
  }
  setRotationFromEuler(e) {
    this.quaternion.setFromEuler(e, !0);
  }
  setRotationFromMatrix(e) {
    this.quaternion.setFromRotationMatrix(e);
  }
  setRotationFromQuaternion(e) {
    this.quaternion.copy(e);
  }
  rotateOnAxis(e, n) {
    return du.setFromAxisAngle(e, n), this.quaternion.multiply(du), this;
  }
  rotateOnWorldAxis(e, n) {
    return du.setFromAxisAngle(e, n), this.quaternion.premultiply(du), this;
  }
  rotateX(e) {
    return this.rotateOnAxis($T, e);
  }
  rotateY(e) {
    return this.rotateOnAxis(XT, e);
  }
  rotateZ(e) {
    return this.rotateOnAxis(qT, e);
  }
  translateOnAxis(e, n) {
    return (
      WT.copy(e).applyQuaternion(this.quaternion),
      this.position.add(WT.multiplyScalar(n)),
      this
    );
  }
  translateX(e) {
    return this.translateOnAxis($T, e);
  }
  translateY(e) {
    return this.translateOnAxis(XT, e);
  }
  translateZ(e) {
    return this.translateOnAxis(qT, e);
  }
  localToWorld(e) {
    return this.updateWorldMatrix(!0, !1), e.applyMatrix4(this.matrixWorld);
  }
  worldToLocal(e) {
    return (
      this.updateWorldMatrix(!0, !1),
      e.applyMatrix4(Bs.copy(this.matrixWorld).invert())
    );
  }
  lookAt(e, n, r) {
    e.isVector3 ? Qm.copy(e) : Qm.set(e, n, r);
    const i = this.parent;
    this.updateWorldMatrix(!0, !1),
      Td.setFromMatrixPosition(this.matrixWorld),
      this.isCamera || this.isLight
        ? Bs.lookAt(Td, Qm, this.up)
        : Bs.lookAt(Qm, Td, this.up),
      this.quaternion.setFromRotationMatrix(Bs),
      i &&
        (Bs.extractRotation(i.matrixWorld),
        du.setFromRotationMatrix(Bs),
        this.quaternion.premultiply(du.invert()));
  }
  add(e) {
    if (arguments.length > 1) {
      for (let n = 0; n < arguments.length; n++) this.add(arguments[n]);
      return this;
    }
    return e === this
      ? (console.error(
          "THREE.Object3D.add: object can't be added as a child of itself.",
          e
        ),
        this)
      : (e && e.isObject3D
          ? (e.parent !== null && e.parent.remove(e),
            (e.parent = this),
            this.children.push(e),
            e.dispatchEvent($B))
          : console.error(
              "THREE.Object3D.add: object not an instance of THREE.Object3D.",
              e
            ),
        this);
  }
  remove(e) {
    if (arguments.length > 1) {
      for (let r = 0; r < arguments.length; r++) this.remove(arguments[r]);
      return this;
    }
    const n = this.children.indexOf(e);
    return (
      n !== -1 &&
        ((e.parent = null), this.children.splice(n, 1), e.dispatchEvent(XB)),
      this
    );
  }
  removeFromParent() {
    const e = this.parent;
    return e !== null && e.remove(this), this;
  }
  clear() {
    return this.remove(...this.children);
  }
  attach(e) {
    return (
      this.updateWorldMatrix(!0, !1),
      Bs.copy(this.matrixWorld).invert(),
      e.parent !== null &&
        (e.parent.updateWorldMatrix(!0, !1), Bs.multiply(e.parent.matrixWorld)),
      e.applyMatrix4(Bs),
      this.add(e),
      e.updateWorldMatrix(!1, !0),
      this
    );
  }
  getObjectById(e) {
    return this.getObjectByProperty("id", e);
  }
  getObjectByName(e) {
    return this.getObjectByProperty("name", e);
  }
  getObjectByProperty(e, n) {
    if (this[e] === n) return this;
    for (let r = 0, i = this.children.length; r < i; r++) {
      const s = this.children[r].getObjectByProperty(e, n);
      if (s !== void 0) return s;
    }
  }
  getObjectsByProperty(e, n, r = []) {
    this[e] === n && r.push(this);
    const i = this.children;
    for (let o = 0, s = i.length; o < s; o++)
      i[o].getObjectsByProperty(e, n, r);
    return r;
  }
  getWorldPosition(e) {
    return (
      this.updateWorldMatrix(!0, !1), e.setFromMatrixPosition(this.matrixWorld)
    );
  }
  getWorldQuaternion(e) {
    return (
      this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(Td, e, jB), e
    );
  }
  getWorldScale(e) {
    return (
      this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(Td, WB, e), e
    );
  }
  getWorldDirection(e) {
    this.updateWorldMatrix(!0, !1);
    const n = this.matrixWorld.elements;
    return e.set(n[8], n[9], n[10]).normalize();
  }
  raycast() {}
  traverse(e) {
    e(this);
    const n = this.children;
    for (let r = 0, i = n.length; r < i; r++) n[r].traverse(e);
  }
  traverseVisible(e) {
    if (this.visible === !1) return;
    e(this);
    const n = this.children;
    for (let r = 0, i = n.length; r < i; r++) n[r].traverseVisible(e);
  }
  traverseAncestors(e) {
    const n = this.parent;
    n !== null && (e(n), n.traverseAncestors(e));
  }
  updateMatrix() {
    this.matrix.compose(this.position, this.quaternion, this.scale),
      (this.matrixWorldNeedsUpdate = !0);
  }
  updateMatrixWorld(e) {
    this.matrixAutoUpdate && this.updateMatrix(),
      (this.matrixWorldNeedsUpdate || e) &&
        (this.parent === null
          ? this.matrixWorld.copy(this.matrix)
          : this.matrixWorld.multiplyMatrices(
              this.parent.matrixWorld,
              this.matrix
            ),
        (this.matrixWorldNeedsUpdate = !1),
        (e = !0));
    const n = this.children;
    for (let r = 0, i = n.length; r < i; r++) {
      const o = n[r];
      (o.matrixWorldAutoUpdate === !0 || e === !0) && o.updateMatrixWorld(e);
    }
  }
  updateWorldMatrix(e, n) {
    const r = this.parent;
    if (
      (e === !0 &&
        r !== null &&
        r.matrixWorldAutoUpdate === !0 &&
        r.updateWorldMatrix(!0, !1),
      this.matrixAutoUpdate && this.updateMatrix(),
      this.parent === null
        ? this.matrixWorld.copy(this.matrix)
        : this.matrixWorld.multiplyMatrices(
            this.parent.matrixWorld,
            this.matrix
          ),
      n === !0)
    ) {
      const i = this.children;
      for (let o = 0, s = i.length; o < s; o++) {
        const a = i[o];
        a.matrixWorldAutoUpdate === !0 && a.updateWorldMatrix(!1, !0);
      }
    }
  }
  toJSON(e) {
    const n = e === void 0 || typeof e == "string",
      r = {};
    n &&
      ((e = {
        geometries: {},
        materials: {},
        textures: {},
        images: {},
        shapes: {},
        skeletons: {},
        animations: {},
        nodes: {},
      }),
      (r.metadata = {
        version: 4.6,
        type: "Object",
        generator: "Object3D.toJSON",
      }));
    const i = {};
    (i.uuid = this.uuid),
      (i.type = this.type),
      this.name !== "" && (i.name = this.name),
      this.castShadow === !0 && (i.castShadow = !0),
      this.receiveShadow === !0 && (i.receiveShadow = !0),
      this.visible === !1 && (i.visible = !1),
      this.frustumCulled === !1 && (i.frustumCulled = !1),
      this.renderOrder !== 0 && (i.renderOrder = this.renderOrder),
      Object.keys(this.userData).length > 0 && (i.userData = this.userData),
      (i.layers = this.layers.mask),
      (i.matrix = this.matrix.toArray()),
      (i.up = this.up.toArray()),
      this.matrixAutoUpdate === !1 && (i.matrixAutoUpdate = !1),
      this.isInstancedMesh &&
        ((i.type = "InstancedMesh"),
        (i.count = this.count),
        (i.instanceMatrix = this.instanceMatrix.toJSON()),
        this.instanceColor !== null &&
          (i.instanceColor = this.instanceColor.toJSON())),
      this.isBatchedMesh &&
        ((i.type = "BatchedMesh"),
        (i.perObjectFrustumCulled = this.perObjectFrustumCulled),
        (i.sortObjects = this.sortObjects),
        (i.drawRanges = this._drawRanges),
        (i.reservedRanges = this._reservedRanges),
        (i.visibility = this._visibility),
        (i.active = this._active),
        (i.bounds = this._bounds.map((a) => ({
          boxInitialized: a.boxInitialized,
          boxMin: a.box.min.toArray(),
          boxMax: a.box.max.toArray(),
          sphereInitialized: a.sphereInitialized,
          sphereRadius: a.sphere.radius,
          sphereCenter: a.sphere.center.toArray(),
        }))),
        (i.maxGeometryCount = this._maxGeometryCount),
        (i.maxVertexCount = this._maxVertexCount),
        (i.maxIndexCount = this._maxIndexCount),
        (i.geometryInitialized = this._geometryInitialized),
        (i.geometryCount = this._geometryCount),
        (i.matricesTexture = this._matricesTexture.toJSON(e)),
        this.boundingSphere !== null &&
          (i.boundingSphere = {
            center: i.boundingSphere.center.toArray(),
            radius: i.boundingSphere.radius,
          }),
        this.boundingBox !== null &&
          (i.boundingBox = {
            min: i.boundingBox.min.toArray(),
            max: i.boundingBox.max.toArray(),
          }));
    function o(a, l) {
      return a[l.uuid] === void 0 && (a[l.uuid] = l.toJSON(e)), l.uuid;
    }
    if (this.isScene)
      this.background &&
        (this.background.isColor
          ? (i.background = this.background.toJSON())
          : this.background.isTexture &&
            (i.background = this.background.toJSON(e).uuid)),
        this.environment &&
          this.environment.isTexture &&
          this.environment.isRenderTargetTexture !== !0 &&
          (i.environment = this.environment.toJSON(e).uuid);
    else if (this.isMesh || this.isLine || this.isPoints) {
      i.geometry = o(e.geometries, this.geometry);
      const a = this.geometry.parameters;
      if (a !== void 0 && a.shapes !== void 0) {
        const l = a.shapes;
        if (Array.isArray(l))
          for (let c = 0, u = l.length; c < u; c++) {
            const h = l[c];
            o(e.shapes, h);
          }
        else o(e.shapes, l);
      }
    }
    if (
      (this.isSkinnedMesh &&
        ((i.bindMode = this.bindMode),
        (i.bindMatrix = this.bindMatrix.toArray()),
        this.skeleton !== void 0 &&
          (o(e.skeletons, this.skeleton), (i.skeleton = this.skeleton.uuid))),
      this.material !== void 0)
    )
      if (Array.isArray(this.material)) {
        const a = [];
        for (let l = 0, c = this.material.length; l < c; l++)
          a.push(o(e.materials, this.material[l]));
        i.material = a;
      } else i.material = o(e.materials, this.material);
    if (this.children.length > 0) {
      i.children = [];
      for (let a = 0; a < this.children.length; a++)
        i.children.push(this.children[a].toJSON(e).object);
    }
    if (this.animations.length > 0) {
      i.animations = [];
      for (let a = 0; a < this.animations.length; a++) {
        const l = this.animations[a];
        i.animations.push(o(e.animations, l));
      }
    }
    if (n) {
      const a = s(e.geometries),
        l = s(e.materials),
        c = s(e.textures),
        u = s(e.images),
        h = s(e.shapes),
        p = s(e.skeletons),
        m = s(e.animations),
        v = s(e.nodes);
      a.length > 0 && (r.geometries = a),
        l.length > 0 && (r.materials = l),
        c.length > 0 && (r.textures = c),
        u.length > 0 && (r.images = u),
        h.length > 0 && (r.shapes = h),
        p.length > 0 && (r.skeletons = p),
        m.length > 0 && (r.animations = m),
        v.length > 0 && (r.nodes = v);
    }
    return (r.object = i), r;
    function s(a) {
      const l = [];
      for (const c in a) {
        const u = a[c];
        delete u.metadata, l.push(u);
      }
      return l;
    }
  }
  clone(e) {
    return new this.constructor().copy(this, e);
  }
  copy(e, n = !0) {
    if (
      ((this.name = e.name),
      this.up.copy(e.up),
      this.position.copy(e.position),
      (this.rotation.order = e.rotation.order),
      this.quaternion.copy(e.quaternion),
      this.scale.copy(e.scale),
      this.matrix.copy(e.matrix),
      this.matrixWorld.copy(e.matrixWorld),
      (this.matrixAutoUpdate = e.matrixAutoUpdate),
      (this.matrixWorldAutoUpdate = e.matrixWorldAutoUpdate),
      (this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate),
      (this.layers.mask = e.layers.mask),
      (this.visible = e.visible),
      (this.castShadow = e.castShadow),
      (this.receiveShadow = e.receiveShadow),
      (this.frustumCulled = e.frustumCulled),
      (this.renderOrder = e.renderOrder),
      (this.animations = e.animations.slice()),
      (this.userData = JSON.parse(JSON.stringify(e.userData))),
      n === !0)
    )
      for (let r = 0; r < e.children.length; r++) {
        const i = e.children[r];
        this.add(i.clone());
      }
    return this;
  }
}
Zt.DEFAULT_UP = new W(0, 1, 0);
Zt.DEFAULT_MATRIX_AUTO_UPDATE = !0;
Zt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = !0;
const Lo = new W(),
  Hs = new W(),
  P1 = new W(),
  Vs = new W(),
  hu = new W(),
  pu = new W(),
  YT = new W(),
  L1 = new W(),
  I1 = new W(),
  O1 = new W();
let Jm = !1;
class gi {
  constructor(e = new W(), n = new W(), r = new W()) {
    (this.a = e), (this.b = n), (this.c = r);
  }
  static getNormal(e, n, r, i) {
    i.subVectors(r, n), Lo.subVectors(e, n), i.cross(Lo);
    const o = i.lengthSq();
    return o > 0 ? i.multiplyScalar(1 / Math.sqrt(o)) : i.set(0, 0, 0);
  }
  static getBarycoord(e, n, r, i, o) {
    Lo.subVectors(i, n), Hs.subVectors(r, n), P1.subVectors(e, n);
    const s = Lo.dot(Lo),
      a = Lo.dot(Hs),
      l = Lo.dot(P1),
      c = Hs.dot(Hs),
      u = Hs.dot(P1),
      h = s * c - a * a;
    if (h === 0) return o.set(0, 0, 0), null;
    const p = 1 / h,
      m = (c * l - a * u) * p,
      v = (s * u - a * l) * p;
    return o.set(1 - m - v, v, m);
  }
  static containsPoint(e, n, r, i) {
    return this.getBarycoord(e, n, r, i, Vs) === null
      ? !1
      : Vs.x >= 0 && Vs.y >= 0 && Vs.x + Vs.y <= 1;
  }
  static getUV(e, n, r, i, o, s, a, l) {
    return (
      Jm === !1 &&
        (console.warn(
          "THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."
        ),
        (Jm = !0)),
      this.getInterpolation(e, n, r, i, o, s, a, l)
    );
  }
  static getInterpolation(e, n, r, i, o, s, a, l) {
    return this.getBarycoord(e, n, r, i, Vs) === null
      ? ((l.x = 0),
        (l.y = 0),
        "z" in l && (l.z = 0),
        "w" in l && (l.w = 0),
        null)
      : (l.setScalar(0),
        l.addScaledVector(o, Vs.x),
        l.addScaledVector(s, Vs.y),
        l.addScaledVector(a, Vs.z),
        l);
  }
  static isFrontFacing(e, n, r, i) {
    return Lo.subVectors(r, n), Hs.subVectors(e, n), Lo.cross(Hs).dot(i) < 0;
  }
  set(e, n, r) {
    return this.a.copy(e), this.b.copy(n), this.c.copy(r), this;
  }
  setFromPointsAndIndices(e, n, r, i) {
    return this.a.copy(e[n]), this.b.copy(e[r]), this.c.copy(e[i]), this;
  }
  setFromAttributeAndIndices(e, n, r, i) {
    return (
      this.a.fromBufferAttribute(e, n),
      this.b.fromBufferAttribute(e, r),
      this.c.fromBufferAttribute(e, i),
      this
    );
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;
  }
  getArea() {
    return (
      Lo.subVectors(this.c, this.b),
      Hs.subVectors(this.a, this.b),
      Lo.cross(Hs).length() * 0.5
    );
  }
  getMidpoint(e) {
    return e
      .addVectors(this.a, this.b)
      .add(this.c)
      .multiplyScalar(1 / 3);
  }
  getNormal(e) {
    return gi.getNormal(this.a, this.b, this.c, e);
  }
  getPlane(e) {
    return e.setFromCoplanarPoints(this.a, this.b, this.c);
  }
  getBarycoord(e, n) {
    return gi.getBarycoord(e, this.a, this.b, this.c, n);
  }
  getUV(e, n, r, i, o) {
    return (
      Jm === !1 &&
        (console.warn(
          "THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."
        ),
        (Jm = !0)),
      gi.getInterpolation(e, this.a, this.b, this.c, n, r, i, o)
    );
  }
  getInterpolation(e, n, r, i, o) {
    return gi.getInterpolation(e, this.a, this.b, this.c, n, r, i, o);
  }
  containsPoint(e) {
    return gi.containsPoint(e, this.a, this.b, this.c);
  }
  isFrontFacing(e) {
    return gi.isFrontFacing(this.a, this.b, this.c, e);
  }
  intersectsBox(e) {
    return e.intersectsTriangle(this);
  }
  closestPointToPoint(e, n) {
    const r = this.a,
      i = this.b,
      o = this.c;
    let s, a;
    hu.subVectors(i, r), pu.subVectors(o, r), L1.subVectors(e, r);
    const l = hu.dot(L1),
      c = pu.dot(L1);
    if (l <= 0 && c <= 0) return n.copy(r);
    I1.subVectors(e, i);
    const u = hu.dot(I1),
      h = pu.dot(I1);
    if (u >= 0 && h <= u) return n.copy(i);
    const p = l * h - u * c;
    if (p <= 0 && l >= 0 && u <= 0)
      return (s = l / (l - u)), n.copy(r).addScaledVector(hu, s);
    O1.subVectors(e, o);
    const m = hu.dot(O1),
      v = pu.dot(O1);
    if (v >= 0 && m <= v) return n.copy(o);
    const S = m * c - l * v;
    if (S <= 0 && c >= 0 && v <= 0)
      return (a = c / (c - v)), n.copy(r).addScaledVector(pu, a);
    const x = u * v - m * h;
    if (x <= 0 && h - u >= 0 && m - v >= 0)
      return (
        YT.subVectors(o, i),
        (a = (h - u) / (h - u + (m - v))),
        n.copy(i).addScaledVector(YT, a)
      );
    const g = 1 / (x + S + p);
    return (
      (s = S * g),
      (a = p * g),
      n.copy(r).addScaledVector(hu, s).addScaledVector(pu, a)
    );
  }
  equals(e) {
    return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
  }
}
const IO = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    rebeccapurple: 6697881,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074,
  },
  Pa = { h: 0, s: 0, l: 0 },
  eg = { h: 0, s: 0, l: 0 };
function F1(t, e, n) {
  return (
    n < 0 && (n += 1),
    n > 1 && (n -= 1),
    n < 1 / 6
      ? t + (e - t) * 6 * n
      : n < 1 / 2
      ? e
      : n < 2 / 3
      ? t + (e - t) * 6 * (2 / 3 - n)
      : t
  );
}
class nt {
  constructor(e, n, r) {
    return (
      (this.isColor = !0),
      (this.r = 1),
      (this.g = 1),
      (this.b = 1),
      this.set(e, n, r)
    );
  }
  set(e, n, r) {
    if (n === void 0 && r === void 0) {
      const i = e;
      i && i.isColor
        ? this.copy(i)
        : typeof i == "number"
        ? this.setHex(i)
        : typeof i == "string" && this.setStyle(i);
    } else this.setRGB(e, n, r);
    return this;
  }
  setScalar(e) {
    return (this.r = e), (this.g = e), (this.b = e), this;
  }
  setHex(e, n = rr) {
    return (
      (e = Math.floor(e)),
      (this.r = ((e >> 16) & 255) / 255),
      (this.g = ((e >> 8) & 255) / 255),
      (this.b = (e & 255) / 255),
      nn.toWorkingColorSpace(this, n),
      this
    );
  }
  setRGB(e, n, r, i = nn.workingColorSpace) {
    return (
      (this.r = e),
      (this.g = n),
      (this.b = r),
      nn.toWorkingColorSpace(this, i),
      this
    );
  }
  setHSL(e, n, r, i = nn.workingColorSpace) {
    if (((e = kE(e, 1)), (n = Dn(n, 0, 1)), (r = Dn(r, 0, 1)), n === 0))
      this.r = this.g = this.b = r;
    else {
      const o = r <= 0.5 ? r * (1 + n) : r + n - r * n,
        s = 2 * r - o;
      (this.r = F1(s, o, e + 1 / 3)),
        (this.g = F1(s, o, e)),
        (this.b = F1(s, o, e - 1 / 3));
    }
    return nn.toWorkingColorSpace(this, i), this;
  }
  setStyle(e, n = rr) {
    function r(o) {
      o !== void 0 &&
        parseFloat(o) < 1 &&
        console.warn(
          "THREE.Color: Alpha component of " + e + " will be ignored."
        );
    }
    let i;
    if ((i = /^(\w+)\(([^\)]*)\)/.exec(e))) {
      let o;
      const s = i[1],
        a = i[2];
      switch (s) {
        case "rgb":
        case "rgba":
          if (
            (o =
              /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                a
              ))
          )
            return (
              r(o[4]),
              this.setRGB(
                Math.min(255, parseInt(o[1], 10)) / 255,
                Math.min(255, parseInt(o[2], 10)) / 255,
                Math.min(255, parseInt(o[3], 10)) / 255,
                n
              )
            );
          if (
            (o =
              /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                a
              ))
          )
            return (
              r(o[4]),
              this.setRGB(
                Math.min(100, parseInt(o[1], 10)) / 100,
                Math.min(100, parseInt(o[2], 10)) / 100,
                Math.min(100, parseInt(o[3], 10)) / 100,
                n
              )
            );
          break;
        case "hsl":
        case "hsla":
          if (
            (o =
              /^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                a
              ))
          )
            return (
              r(o[4]),
              this.setHSL(
                parseFloat(o[1]) / 360,
                parseFloat(o[2]) / 100,
                parseFloat(o[3]) / 100,
                n
              )
            );
          break;
        default:
          console.warn("THREE.Color: Unknown color model " + e);
      }
    } else if ((i = /^\#([A-Fa-f\d]+)$/.exec(e))) {
      const o = i[1],
        s = o.length;
      if (s === 3)
        return this.setRGB(
          parseInt(o.charAt(0), 16) / 15,
          parseInt(o.charAt(1), 16) / 15,
          parseInt(o.charAt(2), 16) / 15,
          n
        );
      if (s === 6) return this.setHex(parseInt(o, 16), n);
      console.warn("THREE.Color: Invalid hex color " + e);
    } else if (e && e.length > 0) return this.setColorName(e, n);
    return this;
  }
  setColorName(e, n = rr) {
    const r = IO[e.toLowerCase()];
    return (
      r !== void 0
        ? this.setHex(r, n)
        : console.warn("THREE.Color: Unknown color " + e),
      this
    );
  }
  clone() {
    return new this.constructor(this.r, this.g, this.b);
  }
  copy(e) {
    return (this.r = e.r), (this.g = e.g), (this.b = e.b), this;
  }
  copySRGBToLinear(e) {
    return (this.r = pf(e.r)), (this.g = pf(e.g)), (this.b = pf(e.b)), this;
  }
  copyLinearToSRGB(e) {
    return (this.r = w1(e.r)), (this.g = w1(e.g)), (this.b = w1(e.b)), this;
  }
  convertSRGBToLinear() {
    return this.copySRGBToLinear(this), this;
  }
  convertLinearToSRGB() {
    return this.copyLinearToSRGB(this), this;
  }
  getHex(e = rr) {
    return (
      nn.fromWorkingColorSpace(Ur.copy(this), e),
      Math.round(Dn(Ur.r * 255, 0, 255)) * 65536 +
        Math.round(Dn(Ur.g * 255, 0, 255)) * 256 +
        Math.round(Dn(Ur.b * 255, 0, 255))
    );
  }
  getHexString(e = rr) {
    return ("000000" + this.getHex(e).toString(16)).slice(-6);
  }
  getHSL(e, n = nn.workingColorSpace) {
    nn.fromWorkingColorSpace(Ur.copy(this), n);
    const r = Ur.r,
      i = Ur.g,
      o = Ur.b,
      s = Math.max(r, i, o),
      a = Math.min(r, i, o);
    let l, c;
    const u = (a + s) / 2;
    if (a === s) (l = 0), (c = 0);
    else {
      const h = s - a;
      switch (((c = u <= 0.5 ? h / (s + a) : h / (2 - s - a)), s)) {
        case r:
          l = (i - o) / h + (i < o ? 6 : 0);
          break;
        case i:
          l = (o - r) / h + 2;
          break;
        case o:
          l = (r - i) / h + 4;
          break;
      }
      l /= 6;
    }
    return (e.h = l), (e.s = c), (e.l = u), e;
  }
  getRGB(e, n = nn.workingColorSpace) {
    return (
      nn.fromWorkingColorSpace(Ur.copy(this), n),
      (e.r = Ur.r),
      (e.g = Ur.g),
      (e.b = Ur.b),
      e
    );
  }
  getStyle(e = rr) {
    nn.fromWorkingColorSpace(Ur.copy(this), e);
    const n = Ur.r,
      r = Ur.g,
      i = Ur.b;
    return e !== rr
      ? `color(${e} ${n.toFixed(3)} ${r.toFixed(3)} ${i.toFixed(3)})`
      : `rgb(${Math.round(n * 255)},${Math.round(r * 255)},${Math.round(
          i * 255
        )})`;
  }
  offsetHSL(e, n, r) {
    return this.getHSL(Pa), this.setHSL(Pa.h + e, Pa.s + n, Pa.l + r);
  }
  add(e) {
    return (this.r += e.r), (this.g += e.g), (this.b += e.b), this;
  }
  addColors(e, n) {
    return (
      (this.r = e.r + n.r), (this.g = e.g + n.g), (this.b = e.b + n.b), this
    );
  }
  addScalar(e) {
    return (this.r += e), (this.g += e), (this.b += e), this;
  }
  sub(e) {
    return (
      (this.r = Math.max(0, this.r - e.r)),
      (this.g = Math.max(0, this.g - e.g)),
      (this.b = Math.max(0, this.b - e.b)),
      this
    );
  }
  multiply(e) {
    return (this.r *= e.r), (this.g *= e.g), (this.b *= e.b), this;
  }
  multiplyScalar(e) {
    return (this.r *= e), (this.g *= e), (this.b *= e), this;
  }
  lerp(e, n) {
    return (
      (this.r += (e.r - this.r) * n),
      (this.g += (e.g - this.g) * n),
      (this.b += (e.b - this.b) * n),
      this
    );
  }
  lerpColors(e, n, r) {
    return (
      (this.r = e.r + (n.r - e.r) * r),
      (this.g = e.g + (n.g - e.g) * r),
      (this.b = e.b + (n.b - e.b) * r),
      this
    );
  }
  lerpHSL(e, n) {
    this.getHSL(Pa), e.getHSL(eg);
    const r = oh(Pa.h, eg.h, n),
      i = oh(Pa.s, eg.s, n),
      o = oh(Pa.l, eg.l, n);
    return this.setHSL(r, i, o), this;
  }
  setFromVector3(e) {
    return (this.r = e.x), (this.g = e.y), (this.b = e.z), this;
  }
  applyMatrix3(e) {
    const n = this.r,
      r = this.g,
      i = this.b,
      o = e.elements;
    return (
      (this.r = o[0] * n + o[3] * r + o[6] * i),
      (this.g = o[1] * n + o[4] * r + o[7] * i),
      (this.b = o[2] * n + o[5] * r + o[8] * i),
      this
    );
  }
  equals(e) {
    return e.r === this.r && e.g === this.g && e.b === this.b;
  }
  fromArray(e, n = 0) {
    return (this.r = e[n]), (this.g = e[n + 1]), (this.b = e[n + 2]), this;
  }
  toArray(e = [], n = 0) {
    return (e[n] = this.r), (e[n + 1] = this.g), (e[n + 2] = this.b), e;
  }
  fromBufferAttribute(e, n) {
    return (
      (this.r = e.getX(n)), (this.g = e.getY(n)), (this.b = e.getZ(n)), this
    );
  }
  toJSON() {
    return this.getHex();
  }
  *[Symbol.iterator]() {
    yield this.r, yield this.g, yield this.b;
  }
}
const Ur = new nt();
nt.NAMES = IO;
let qB = 0;
class Rr extends bs {
  constructor() {
    super(),
      (this.isMaterial = !0),
      Object.defineProperty(this, "id", { value: qB++ }),
      (this.uuid = Xi()),
      (this.name = ""),
      (this.type = "Material"),
      (this.blending = hc),
      (this.side = Ss),
      (this.vertexColors = !1),
      (this.opacity = 1),
      (this.transparent = !1),
      (this.alphaHash = !1),
      (this.blendSrc = u0),
      (this.blendDst = f0),
      (this.blendEquation = za),
      (this.blendSrcAlpha = null),
      (this.blendDstAlpha = null),
      (this.blendEquationAlpha = null),
      (this.blendColor = new nt(0, 0, 0)),
      (this.blendAlpha = 0),
      (this.depthFunc = Ih),
      (this.depthTest = !0),
      (this.depthWrite = !0),
      (this.stencilWriteMask = 255),
      (this.stencilFunc = vw),
      (this.stencilRef = 0),
      (this.stencilFuncMask = 255),
      (this.stencilFail = Yl),
      (this.stencilZFail = Yl),
      (this.stencilZPass = Yl),
      (this.stencilWrite = !1),
      (this.clippingPlanes = null),
      (this.clipIntersection = !1),
      (this.clipShadows = !1),
      (this.shadowSide = null),
      (this.colorWrite = !0),
      (this.precision = null),
      (this.polygonOffset = !1),
      (this.polygonOffsetFactor = 0),
      (this.polygonOffsetUnits = 0),
      (this.dithering = !1),
      (this.alphaToCoverage = !1),
      (this.premultipliedAlpha = !1),
      (this.forceSinglePass = !1),
      (this.visible = !0),
      (this.toneMapped = !0),
      (this.userData = {}),
      (this.version = 0),
      (this._alphaTest = 0);
  }
  get alphaTest() {
    return this._alphaTest;
  }
  set alphaTest(e) {
    this._alphaTest > 0 != e > 0 && this.version++, (this._alphaTest = e);
  }
  onBuild() {}
  onBeforeRender() {}
  onBeforeCompile() {}
  customProgramCacheKey() {
    return this.onBeforeCompile.toString();
  }
  setValues(e) {
    if (e !== void 0)
      for (const n in e) {
        const r = e[n];
        if (r === void 0) {
          console.warn(
            `THREE.Material: parameter '${n}' has value of undefined.`
          );
          continue;
        }
        const i = this[n];
        if (i === void 0) {
          console.warn(
            `THREE.Material: '${n}' is not a property of THREE.${this.type}.`
          );
          continue;
        }
        i && i.isColor
          ? i.set(r)
          : i && i.isVector3 && r && r.isVector3
          ? i.copy(r)
          : (this[n] = r);
      }
  }
  toJSON(e) {
    const n = e === void 0 || typeof e == "string";
    n && (e = { textures: {}, images: {} });
    const r = {
      metadata: {
        version: 4.6,
        type: "Material",
        generator: "Material.toJSON",
      },
    };
    (r.uuid = this.uuid),
      (r.type = this.type),
      this.name !== "" && (r.name = this.name),
      this.color && this.color.isColor && (r.color = this.color.getHex()),
      this.roughness !== void 0 && (r.roughness = this.roughness),
      this.metalness !== void 0 && (r.metalness = this.metalness),
      this.sheen !== void 0 && (r.sheen = this.sheen),
      this.sheenColor &&
        this.sheenColor.isColor &&
        (r.sheenColor = this.sheenColor.getHex()),
      this.sheenRoughness !== void 0 &&
        (r.sheenRoughness = this.sheenRoughness),
      this.emissive &&
        this.emissive.isColor &&
        (r.emissive = this.emissive.getHex()),
      this.emissiveIntensity &&
        this.emissiveIntensity !== 1 &&
        (r.emissiveIntensity = this.emissiveIntensity),
      this.specular &&
        this.specular.isColor &&
        (r.specular = this.specular.getHex()),
      this.specularIntensity !== void 0 &&
        (r.specularIntensity = this.specularIntensity),
      this.specularColor &&
        this.specularColor.isColor &&
        (r.specularColor = this.specularColor.getHex()),
      this.shininess !== void 0 && (r.shininess = this.shininess),
      this.clearcoat !== void 0 && (r.clearcoat = this.clearcoat),
      this.clearcoatRoughness !== void 0 &&
        (r.clearcoatRoughness = this.clearcoatRoughness),
      this.clearcoatMap &&
        this.clearcoatMap.isTexture &&
        (r.clearcoatMap = this.clearcoatMap.toJSON(e).uuid),
      this.clearcoatRoughnessMap &&
        this.clearcoatRoughnessMap.isTexture &&
        (r.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(e).uuid),
      this.clearcoatNormalMap &&
        this.clearcoatNormalMap.isTexture &&
        ((r.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid),
        (r.clearcoatNormalScale = this.clearcoatNormalScale.toArray())),
      this.iridescence !== void 0 && (r.iridescence = this.iridescence),
      this.iridescenceIOR !== void 0 &&
        (r.iridescenceIOR = this.iridescenceIOR),
      this.iridescenceThicknessRange !== void 0 &&
        (r.iridescenceThicknessRange = this.iridescenceThicknessRange),
      this.iridescenceMap &&
        this.iridescenceMap.isTexture &&
        (r.iridescenceMap = this.iridescenceMap.toJSON(e).uuid),
      this.iridescenceThicknessMap &&
        this.iridescenceThicknessMap.isTexture &&
        (r.iridescenceThicknessMap =
          this.iridescenceThicknessMap.toJSON(e).uuid),
      this.anisotropy !== void 0 && (r.anisotropy = this.anisotropy),
      this.anisotropyRotation !== void 0 &&
        (r.anisotropyRotation = this.anisotropyRotation),
      this.anisotropyMap &&
        this.anisotropyMap.isTexture &&
        (r.anisotropyMap = this.anisotropyMap.toJSON(e).uuid),
      this.map && this.map.isTexture && (r.map = this.map.toJSON(e).uuid),
      this.matcap &&
        this.matcap.isTexture &&
        (r.matcap = this.matcap.toJSON(e).uuid),
      this.alphaMap &&
        this.alphaMap.isTexture &&
        (r.alphaMap = this.alphaMap.toJSON(e).uuid),
      this.lightMap &&
        this.lightMap.isTexture &&
        ((r.lightMap = this.lightMap.toJSON(e).uuid),
        (r.lightMapIntensity = this.lightMapIntensity)),
      this.aoMap &&
        this.aoMap.isTexture &&
        ((r.aoMap = this.aoMap.toJSON(e).uuid),
        (r.aoMapIntensity = this.aoMapIntensity)),
      this.bumpMap &&
        this.bumpMap.isTexture &&
        ((r.bumpMap = this.bumpMap.toJSON(e).uuid),
        (r.bumpScale = this.bumpScale)),
      this.normalMap &&
        this.normalMap.isTexture &&
        ((r.normalMap = this.normalMap.toJSON(e).uuid),
        (r.normalMapType = this.normalMapType),
        (r.normalScale = this.normalScale.toArray())),
      this.displacementMap &&
        this.displacementMap.isTexture &&
        ((r.displacementMap = this.displacementMap.toJSON(e).uuid),
        (r.displacementScale = this.displacementScale),
        (r.displacementBias = this.displacementBias)),
      this.roughnessMap &&
        this.roughnessMap.isTexture &&
        (r.roughnessMap = this.roughnessMap.toJSON(e).uuid),
      this.metalnessMap &&
        this.metalnessMap.isTexture &&
        (r.metalnessMap = this.metalnessMap.toJSON(e).uuid),
      this.emissiveMap &&
        this.emissiveMap.isTexture &&
        (r.emissiveMap = this.emissiveMap.toJSON(e).uuid),
      this.specularMap &&
        this.specularMap.isTexture &&
        (r.specularMap = this.specularMap.toJSON(e).uuid),
      this.specularIntensityMap &&
        this.specularIntensityMap.isTexture &&
        (r.specularIntensityMap = this.specularIntensityMap.toJSON(e).uuid),
      this.specularColorMap &&
        this.specularColorMap.isTexture &&
        (r.specularColorMap = this.specularColorMap.toJSON(e).uuid),
      this.envMap &&
        this.envMap.isTexture &&
        ((r.envMap = this.envMap.toJSON(e).uuid),
        this.combine !== void 0 && (r.combine = this.combine)),
      this.envMapIntensity !== void 0 &&
        (r.envMapIntensity = this.envMapIntensity),
      this.reflectivity !== void 0 && (r.reflectivity = this.reflectivity),
      this.refractionRatio !== void 0 &&
        (r.refractionRatio = this.refractionRatio),
      this.gradientMap &&
        this.gradientMap.isTexture &&
        (r.gradientMap = this.gradientMap.toJSON(e).uuid),
      this.transmission !== void 0 && (r.transmission = this.transmission),
      this.transmissionMap &&
        this.transmissionMap.isTexture &&
        (r.transmissionMap = this.transmissionMap.toJSON(e).uuid),
      this.thickness !== void 0 && (r.thickness = this.thickness),
      this.thicknessMap &&
        this.thicknessMap.isTexture &&
        (r.thicknessMap = this.thicknessMap.toJSON(e).uuid),
      this.attenuationDistance !== void 0 &&
        this.attenuationDistance !== 1 / 0 &&
        (r.attenuationDistance = this.attenuationDistance),
      this.attenuationColor !== void 0 &&
        (r.attenuationColor = this.attenuationColor.getHex()),
      this.size !== void 0 && (r.size = this.size),
      this.shadowSide !== null && (r.shadowSide = this.shadowSide),
      this.sizeAttenuation !== void 0 &&
        (r.sizeAttenuation = this.sizeAttenuation),
      this.blending !== hc && (r.blending = this.blending),
      this.side !== Ss && (r.side = this.side),
      this.vertexColors === !0 && (r.vertexColors = !0),
      this.opacity < 1 && (r.opacity = this.opacity),
      this.transparent === !0 && (r.transparent = !0),
      this.blendSrc !== u0 && (r.blendSrc = this.blendSrc),
      this.blendDst !== f0 && (r.blendDst = this.blendDst),
      this.blendEquation !== za && (r.blendEquation = this.blendEquation),
      this.blendSrcAlpha !== null && (r.blendSrcAlpha = this.blendSrcAlpha),
      this.blendDstAlpha !== null && (r.blendDstAlpha = this.blendDstAlpha),
      this.blendEquationAlpha !== null &&
        (r.blendEquationAlpha = this.blendEquationAlpha),
      this.blendColor &&
        this.blendColor.isColor &&
        (r.blendColor = this.blendColor.getHex()),
      this.blendAlpha !== 0 && (r.blendAlpha = this.blendAlpha),
      this.depthFunc !== Ih && (r.depthFunc = this.depthFunc),
      this.depthTest === !1 && (r.depthTest = this.depthTest),
      this.depthWrite === !1 && (r.depthWrite = this.depthWrite),
      this.colorWrite === !1 && (r.colorWrite = this.colorWrite),
      this.stencilWriteMask !== 255 &&
        (r.stencilWriteMask = this.stencilWriteMask),
      this.stencilFunc !== vw && (r.stencilFunc = this.stencilFunc),
      this.stencilRef !== 0 && (r.stencilRef = this.stencilRef),
      this.stencilFuncMask !== 255 &&
        (r.stencilFuncMask = this.stencilFuncMask),
      this.stencilFail !== Yl && (r.stencilFail = this.stencilFail),
      this.stencilZFail !== Yl && (r.stencilZFail = this.stencilZFail),
      this.stencilZPass !== Yl && (r.stencilZPass = this.stencilZPass),
      this.stencilWrite === !0 && (r.stencilWrite = this.stencilWrite),
      this.rotation !== void 0 &&
        this.rotation !== 0 &&
        (r.rotation = this.rotation),
      this.polygonOffset === !0 && (r.polygonOffset = !0),
      this.polygonOffsetFactor !== 0 &&
        (r.polygonOffsetFactor = this.polygonOffsetFactor),
      this.polygonOffsetUnits !== 0 &&
        (r.polygonOffsetUnits = this.polygonOffsetUnits),
      this.linewidth !== void 0 &&
        this.linewidth !== 1 &&
        (r.linewidth = this.linewidth),
      this.dashSize !== void 0 && (r.dashSize = this.dashSize),
      this.gapSize !== void 0 && (r.gapSize = this.gapSize),
      this.scale !== void 0 && (r.scale = this.scale),
      this.dithering === !0 && (r.dithering = !0),
      this.alphaTest > 0 && (r.alphaTest = this.alphaTest),
      this.alphaHash === !0 && (r.alphaHash = !0),
      this.alphaToCoverage === !0 && (r.alphaToCoverage = !0),
      this.premultipliedAlpha === !0 && (r.premultipliedAlpha = !0),
      this.forceSinglePass === !0 && (r.forceSinglePass = !0),
      this.wireframe === !0 && (r.wireframe = !0),
      this.wireframeLinewidth > 1 &&
        (r.wireframeLinewidth = this.wireframeLinewidth),
      this.wireframeLinecap !== "round" &&
        (r.wireframeLinecap = this.wireframeLinecap),
      this.wireframeLinejoin !== "round" &&
        (r.wireframeLinejoin = this.wireframeLinejoin),
      this.flatShading === !0 && (r.flatShading = !0),
      this.visible === !1 && (r.visible = !1),
      this.toneMapped === !1 && (r.toneMapped = !1),
      this.fog === !1 && (r.fog = !1),
      Object.keys(this.userData).length > 0 && (r.userData = this.userData);
    function i(o) {
      const s = [];
      for (const a in o) {
        const l = o[a];
        delete l.metadata, s.push(l);
      }
      return s;
    }
    if (n) {
      const o = i(e.textures),
        s = i(e.images);
      o.length > 0 && (r.textures = o), s.length > 0 && (r.images = s);
    }
    return r;
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    (this.name = e.name),
      (this.blending = e.blending),
      (this.side = e.side),
      (this.vertexColors = e.vertexColors),
      (this.opacity = e.opacity),
      (this.transparent = e.transparent),
      (this.blendSrc = e.blendSrc),
      (this.blendDst = e.blendDst),
      (this.blendEquation = e.blendEquation),
      (this.blendSrcAlpha = e.blendSrcAlpha),
      (this.blendDstAlpha = e.blendDstAlpha),
      (this.blendEquationAlpha = e.blendEquationAlpha),
      this.blendColor.copy(e.blendColor),
      (this.blendAlpha = e.blendAlpha),
      (this.depthFunc = e.depthFunc),
      (this.depthTest = e.depthTest),
      (this.depthWrite = e.depthWrite),
      (this.stencilWriteMask = e.stencilWriteMask),
      (this.stencilFunc = e.stencilFunc),
      (this.stencilRef = e.stencilRef),
      (this.stencilFuncMask = e.stencilFuncMask),
      (this.stencilFail = e.stencilFail),
      (this.stencilZFail = e.stencilZFail),
      (this.stencilZPass = e.stencilZPass),
      (this.stencilWrite = e.stencilWrite);
    const n = e.clippingPlanes;
    let r = null;
    if (n !== null) {
      const i = n.length;
      r = new Array(i);
      for (let o = 0; o !== i; ++o) r[o] = n[o].clone();
    }
    return (
      (this.clippingPlanes = r),
      (this.clipIntersection = e.clipIntersection),
      (this.clipShadows = e.clipShadows),
      (this.shadowSide = e.shadowSide),
      (this.colorWrite = e.colorWrite),
      (this.precision = e.precision),
      (this.polygonOffset = e.polygonOffset),
      (this.polygonOffsetFactor = e.polygonOffsetFactor),
      (this.polygonOffsetUnits = e.polygonOffsetUnits),
      (this.dithering = e.dithering),
      (this.alphaTest = e.alphaTest),
      (this.alphaHash = e.alphaHash),
      (this.alphaToCoverage = e.alphaToCoverage),
      (this.premultipliedAlpha = e.premultipliedAlpha),
      (this.forceSinglePass = e.forceSinglePass),
      (this.visible = e.visible),
      (this.toneMapped = e.toneMapped),
      (this.userData = JSON.parse(JSON.stringify(e.userData))),
      this
    );
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
  set needsUpdate(e) {
    e === !0 && this.version++;
  }
}
class pa extends Rr {
  constructor(e) {
    super(),
      (this.isMeshBasicMaterial = !0),
      (this.type = "MeshBasicMaterial"),
      (this.color = new nt(16777215)),
      (this.map = null),
      (this.lightMap = null),
      (this.lightMapIntensity = 1),
      (this.aoMap = null),
      (this.aoMapIntensity = 1),
      (this.specularMap = null),
      (this.alphaMap = null),
      (this.envMap = null),
      (this.combine = gp),
      (this.reflectivity = 1),
      (this.refractionRatio = 0.98),
      (this.wireframe = !1),
      (this.wireframeLinewidth = 1),
      (this.wireframeLinecap = "round"),
      (this.wireframeLinejoin = "round"),
      (this.fog = !0),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      this.color.copy(e.color),
      (this.map = e.map),
      (this.lightMap = e.lightMap),
      (this.lightMapIntensity = e.lightMapIntensity),
      (this.aoMap = e.aoMap),
      (this.aoMapIntensity = e.aoMapIntensity),
      (this.specularMap = e.specularMap),
      (this.alphaMap = e.alphaMap),
      (this.envMap = e.envMap),
      (this.combine = e.combine),
      (this.reflectivity = e.reflectivity),
      (this.refractionRatio = e.refractionRatio),
      (this.wireframe = e.wireframe),
      (this.wireframeLinewidth = e.wireframeLinewidth),
      (this.wireframeLinecap = e.wireframeLinecap),
      (this.wireframeLinejoin = e.wireframeLinejoin),
      (this.fog = e.fog),
      this
    );
  }
}
const Ks = YB();
function YB() {
  const t = new ArrayBuffer(4),
    e = new Float32Array(t),
    n = new Uint32Array(t),
    r = new Uint32Array(512),
    i = new Uint32Array(512);
  for (let l = 0; l < 256; ++l) {
    const c = l - 127;
    c < -27
      ? ((r[l] = 0), (r[l | 256] = 32768), (i[l] = 24), (i[l | 256] = 24))
      : c < -14
      ? ((r[l] = 1024 >> (-c - 14)),
        (r[l | 256] = (1024 >> (-c - 14)) | 32768),
        (i[l] = -c - 1),
        (i[l | 256] = -c - 1))
      : c <= 15
      ? ((r[l] = (c + 15) << 10),
        (r[l | 256] = ((c + 15) << 10) | 32768),
        (i[l] = 13),
        (i[l | 256] = 13))
      : c < 128
      ? ((r[l] = 31744), (r[l | 256] = 64512), (i[l] = 24), (i[l | 256] = 24))
      : ((r[l] = 31744), (r[l | 256] = 64512), (i[l] = 13), (i[l | 256] = 13));
  }
  const o = new Uint32Array(2048),
    s = new Uint32Array(64),
    a = new Uint32Array(64);
  for (let l = 1; l < 1024; ++l) {
    let c = l << 13,
      u = 0;
    for (; !(c & 8388608); ) (c <<= 1), (u -= 8388608);
    (c &= -8388609), (u += 947912704), (o[l] = c | u);
  }
  for (let l = 1024; l < 2048; ++l) o[l] = 939524096 + ((l - 1024) << 13);
  for (let l = 1; l < 31; ++l) s[l] = l << 23;
  (s[31] = 1199570944), (s[32] = 2147483648);
  for (let l = 33; l < 63; ++l) s[l] = 2147483648 + ((l - 32) << 23);
  s[63] = 3347054592;
  for (let l = 1; l < 64; ++l) l !== 32 && (a[l] = 1024);
  return {
    floatView: e,
    uint32View: n,
    baseTable: r,
    shiftTable: i,
    mantissaTable: o,
    exponentTable: s,
    offsetTable: a,
  };
}
function pi(t) {
  Math.abs(t) > 65504 &&
    console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),
    (t = Dn(t, -65504, 65504)),
    (Ks.floatView[0] = t);
  const e = Ks.uint32View[0],
    n = (e >> 23) & 511;
  return Ks.baseTable[n] + ((e & 8388607) >> Ks.shiftTable[n]);
}
function Wd(t) {
  const e = t >> 10;
  return (
    (Ks.uint32View[0] =
      Ks.mantissaTable[Ks.offsetTable[e] + (t & 1023)] + Ks.exponentTable[e]),
    Ks.floatView[0]
  );
}
const KB = { toHalfFloat: pi, fromHalfFloat: Wd },
  Qn = new W(),
  tg = new Fe();
class en {
  constructor(e, n, r = !1) {
    if (Array.isArray(e))
      throw new TypeError(
        "THREE.BufferAttribute: array should be a Typed Array."
      );
    (this.isBufferAttribute = !0),
      (this.name = ""),
      (this.array = e),
      (this.itemSize = n),
      (this.count = e !== void 0 ? e.length / n : 0),
      (this.normalized = r),
      (this.usage = Gh),
      (this._updateRange = { offset: 0, count: -1 }),
      (this.updateRanges = []),
      (this.gpuType = Vo),
      (this.version = 0);
  }
  onUploadCallback() {}
  set needsUpdate(e) {
    e === !0 && this.version++;
  }
  get updateRange() {
    return (
      console.warn(
        "THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."
      ),
      this._updateRange
    );
  }
  setUsage(e) {
    return (this.usage = e), this;
  }
  addUpdateRange(e, n) {
    this.updateRanges.push({ start: e, count: n });
  }
  clearUpdateRanges() {
    this.updateRanges.length = 0;
  }
  copy(e) {
    return (
      (this.name = e.name),
      (this.array = new e.array.constructor(e.array)),
      (this.itemSize = e.itemSize),
      (this.count = e.count),
      (this.normalized = e.normalized),
      (this.usage = e.usage),
      (this.gpuType = e.gpuType),
      this
    );
  }
  copyAt(e, n, r) {
    (e *= this.itemSize), (r *= n.itemSize);
    for (let i = 0, o = this.itemSize; i < o; i++)
      this.array[e + i] = n.array[r + i];
    return this;
  }
  copyArray(e) {
    return this.array.set(e), this;
  }
  applyMatrix3(e) {
    if (this.itemSize === 2)
      for (let n = 0, r = this.count; n < r; n++)
        tg.fromBufferAttribute(this, n),
          tg.applyMatrix3(e),
          this.setXY(n, tg.x, tg.y);
    else if (this.itemSize === 3)
      for (let n = 0, r = this.count; n < r; n++)
        Qn.fromBufferAttribute(this, n),
          Qn.applyMatrix3(e),
          this.setXYZ(n, Qn.x, Qn.y, Qn.z);
    return this;
  }
  applyMatrix4(e) {
    for (let n = 0, r = this.count; n < r; n++)
      Qn.fromBufferAttribute(this, n),
        Qn.applyMatrix4(e),
        this.setXYZ(n, Qn.x, Qn.y, Qn.z);
    return this;
  }
  applyNormalMatrix(e) {
    for (let n = 0, r = this.count; n < r; n++)
      Qn.fromBufferAttribute(this, n),
        Qn.applyNormalMatrix(e),
        this.setXYZ(n, Qn.x, Qn.y, Qn.z);
    return this;
  }
  transformDirection(e) {
    for (let n = 0, r = this.count; n < r; n++)
      Qn.fromBufferAttribute(this, n),
        Qn.transformDirection(e),
        this.setXYZ(n, Qn.x, Qn.y, Qn.z);
    return this;
  }
  set(e, n = 0) {
    return this.array.set(e, n), this;
  }
  getComponent(e, n) {
    let r = this.array[e * this.itemSize + n];
    return this.normalized && (r = vi(r, this.array)), r;
  }
  setComponent(e, n, r) {
    return (
      this.normalized && (r = Ft(r, this.array)),
      (this.array[e * this.itemSize + n] = r),
      this
    );
  }
  getX(e) {
    let n = this.array[e * this.itemSize];
    return this.normalized && (n = vi(n, this.array)), n;
  }
  setX(e, n) {
    return (
      this.normalized && (n = Ft(n, this.array)),
      (this.array[e * this.itemSize] = n),
      this
    );
  }
  getY(e) {
    let n = this.array[e * this.itemSize + 1];
    return this.normalized && (n = vi(n, this.array)), n;
  }
  setY(e, n) {
    return (
      this.normalized && (n = Ft(n, this.array)),
      (this.array[e * this.itemSize + 1] = n),
      this
    );
  }
  getZ(e) {
    let n = this.array[e * this.itemSize + 2];
    return this.normalized && (n = vi(n, this.array)), n;
  }
  setZ(e, n) {
    return (
      this.normalized && (n = Ft(n, this.array)),
      (this.array[e * this.itemSize + 2] = n),
      this
    );
  }
  getW(e) {
    let n = this.array[e * this.itemSize + 3];
    return this.normalized && (n = vi(n, this.array)), n;
  }
  setW(e, n) {
    return (
      this.normalized && (n = Ft(n, this.array)),
      (this.array[e * this.itemSize + 3] = n),
      this
    );
  }
  setXY(e, n, r) {
    return (
      (e *= this.itemSize),
      this.normalized && ((n = Ft(n, this.array)), (r = Ft(r, this.array))),
      (this.array[e + 0] = n),
      (this.array[e + 1] = r),
      this
    );
  }
  setXYZ(e, n, r, i) {
    return (
      (e *= this.itemSize),
      this.normalized &&
        ((n = Ft(n, this.array)),
        (r = Ft(r, this.array)),
        (i = Ft(i, this.array))),
      (this.array[e + 0] = n),
      (this.array[e + 1] = r),
      (this.array[e + 2] = i),
      this
    );
  }
  setXYZW(e, n, r, i, o) {
    return (
      (e *= this.itemSize),
      this.normalized &&
        ((n = Ft(n, this.array)),
        (r = Ft(r, this.array)),
        (i = Ft(i, this.array)),
        (o = Ft(o, this.array))),
      (this.array[e + 0] = n),
      (this.array[e + 1] = r),
      (this.array[e + 2] = i),
      (this.array[e + 3] = o),
      this
    );
  }
  onUpload(e) {
    return (this.onUploadCallback = e), this;
  }
  clone() {
    return new this.constructor(this.array, this.itemSize).copy(this);
  }
  toJSON() {
    const e = {
      itemSize: this.itemSize,
      type: this.array.constructor.name,
      array: Array.from(this.array),
      normalized: this.normalized,
    };
    return (
      this.name !== "" && (e.name = this.name),
      this.usage !== Gh && (e.usage = this.usage),
      e
    );
  }
}
class ZB extends en {
  constructor(e, n, r) {
    super(new Int8Array(e), n, r);
  }
}
class QB extends en {
  constructor(e, n, r) {
    super(new Uint8Array(e), n, r);
  }
}
class JB extends en {
  constructor(e, n, r) {
    super(new Uint8ClampedArray(e), n, r);
  }
}
class e5 extends en {
  constructor(e, n, r) {
    super(new Int16Array(e), n, r);
  }
}
class VE extends en {
  constructor(e, n, r) {
    super(new Uint16Array(e), n, r);
  }
}
class t5 extends en {
  constructor(e, n, r) {
    super(new Int32Array(e), n, r);
  }
}
class GE extends en {
  constructor(e, n, r) {
    super(new Uint32Array(e), n, r);
  }
}
class n5 extends en {
  constructor(e, n, r) {
    super(new Uint16Array(e), n, r), (this.isFloat16BufferAttribute = !0);
  }
  getX(e) {
    let n = Wd(this.array[e * this.itemSize]);
    return this.normalized && (n = vi(n, this.array)), n;
  }
  setX(e, n) {
    return (
      this.normalized && (n = Ft(n, this.array)),
      (this.array[e * this.itemSize] = pi(n)),
      this
    );
  }
  getY(e) {
    let n = Wd(this.array[e * this.itemSize + 1]);
    return this.normalized && (n = vi(n, this.array)), n;
  }
  setY(e, n) {
    return (
      this.normalized && (n = Ft(n, this.array)),
      (this.array[e * this.itemSize + 1] = pi(n)),
      this
    );
  }
  getZ(e) {
    let n = Wd(this.array[e * this.itemSize + 2]);
    return this.normalized && (n = vi(n, this.array)), n;
  }
  setZ(e, n) {
    return (
      this.normalized && (n = Ft(n, this.array)),
      (this.array[e * this.itemSize + 2] = pi(n)),
      this
    );
  }
  getW(e) {
    let n = Wd(this.array[e * this.itemSize + 3]);
    return this.normalized && (n = vi(n, this.array)), n;
  }
  setW(e, n) {
    return (
      this.normalized && (n = Ft(n, this.array)),
      (this.array[e * this.itemSize + 3] = pi(n)),
      this
    );
  }
  setXY(e, n, r) {
    return (
      (e *= this.itemSize),
      this.normalized && ((n = Ft(n, this.array)), (r = Ft(r, this.array))),
      (this.array[e + 0] = pi(n)),
      (this.array[e + 1] = pi(r)),
      this
    );
  }
  setXYZ(e, n, r, i) {
    return (
      (e *= this.itemSize),
      this.normalized &&
        ((n = Ft(n, this.array)),
        (r = Ft(r, this.array)),
        (i = Ft(i, this.array))),
      (this.array[e + 0] = pi(n)),
      (this.array[e + 1] = pi(r)),
      (this.array[e + 2] = pi(i)),
      this
    );
  }
  setXYZW(e, n, r, i, o) {
    return (
      (e *= this.itemSize),
      this.normalized &&
        ((n = Ft(n, this.array)),
        (r = Ft(r, this.array)),
        (i = Ft(i, this.array)),
        (o = Ft(o, this.array))),
      (this.array[e + 0] = pi(n)),
      (this.array[e + 1] = pi(r)),
      (this.array[e + 2] = pi(i)),
      (this.array[e + 3] = pi(o)),
      this
    );
  }
}
class ut extends en {
  constructor(e, n, r) {
    super(new Float32Array(e), n, r);
  }
}
class r5 extends en {
  constructor(e, n, r) {
    super(new Float64Array(e), n, r);
  }
}
let i5 = 0;
const co = new bt(),
  N1 = new Zt(),
  mu = new W(),
  Fi = new or(),
  Ad = new or(),
  mr = new W();
class It extends bs {
  constructor() {
    super(),
      (this.isBufferGeometry = !0),
      Object.defineProperty(this, "id", { value: i5++ }),
      (this.uuid = Xi()),
      (this.name = ""),
      (this.type = "BufferGeometry"),
      (this.index = null),
      (this.attributes = {}),
      (this.morphAttributes = {}),
      (this.morphTargetsRelative = !1),
      (this.groups = []),
      (this.boundingBox = null),
      (this.boundingSphere = null),
      (this.drawRange = { start: 0, count: 1 / 0 }),
      (this.userData = {});
  }
  getIndex() {
    return this.index;
  }
  setIndex(e) {
    return (
      Array.isArray(e)
        ? (this.index = new (RO(e) ? GE : VE)(e, 1))
        : (this.index = e),
      this
    );
  }
  getAttribute(e) {
    return this.attributes[e];
  }
  setAttribute(e, n) {
    return (this.attributes[e] = n), this;
  }
  deleteAttribute(e) {
    return delete this.attributes[e], this;
  }
  hasAttribute(e) {
    return this.attributes[e] !== void 0;
  }
  addGroup(e, n, r = 0) {
    this.groups.push({ start: e, count: n, materialIndex: r });
  }
  clearGroups() {
    this.groups = [];
  }
  setDrawRange(e, n) {
    (this.drawRange.start = e), (this.drawRange.count = n);
  }
  applyMatrix4(e) {
    const n = this.attributes.position;
    n !== void 0 && (n.applyMatrix4(e), (n.needsUpdate = !0));
    const r = this.attributes.normal;
    if (r !== void 0) {
      const o = new Ot().getNormalMatrix(e);
      r.applyNormalMatrix(o), (r.needsUpdate = !0);
    }
    const i = this.attributes.tangent;
    return (
      i !== void 0 && (i.transformDirection(e), (i.needsUpdate = !0)),
      this.boundingBox !== null && this.computeBoundingBox(),
      this.boundingSphere !== null && this.computeBoundingSphere(),
      this
    );
  }
  applyQuaternion(e) {
    return co.makeRotationFromQuaternion(e), this.applyMatrix4(co), this;
  }
  rotateX(e) {
    return co.makeRotationX(e), this.applyMatrix4(co), this;
  }
  rotateY(e) {
    return co.makeRotationY(e), this.applyMatrix4(co), this;
  }
  rotateZ(e) {
    return co.makeRotationZ(e), this.applyMatrix4(co), this;
  }
  translate(e, n, r) {
    return co.makeTranslation(e, n, r), this.applyMatrix4(co), this;
  }
  scale(e, n, r) {
    return co.makeScale(e, n, r), this.applyMatrix4(co), this;
  }
  lookAt(e) {
    return N1.lookAt(e), N1.updateMatrix(), this.applyMatrix4(N1.matrix), this;
  }
  center() {
    return (
      this.computeBoundingBox(),
      this.boundingBox.getCenter(mu).negate(),
      this.translate(mu.x, mu.y, mu.z),
      this
    );
  }
  setFromPoints(e) {
    const n = [];
    for (let r = 0, i = e.length; r < i; r++) {
      const o = e[r];
      n.push(o.x, o.y, o.z || 0);
    }
    return this.setAttribute("position", new ut(n, 3)), this;
  }
  computeBoundingBox() {
    this.boundingBox === null && (this.boundingBox = new or());
    const e = this.attributes.position,
      n = this.morphAttributes.position;
    if (e && e.isGLBufferAttribute) {
      console.error(
        'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',
        this
      ),
        this.boundingBox.set(
          new W(-1 / 0, -1 / 0, -1 / 0),
          new W(1 / 0, 1 / 0, 1 / 0)
        );
      return;
    }
    if (e !== void 0) {
      if ((this.boundingBox.setFromBufferAttribute(e), n))
        for (let r = 0, i = n.length; r < i; r++) {
          const o = n[r];
          Fi.setFromBufferAttribute(o),
            this.morphTargetsRelative
              ? (mr.addVectors(this.boundingBox.min, Fi.min),
                this.boundingBox.expandByPoint(mr),
                mr.addVectors(this.boundingBox.max, Fi.max),
                this.boundingBox.expandByPoint(mr))
              : (this.boundingBox.expandByPoint(Fi.min),
                this.boundingBox.expandByPoint(Fi.max));
        }
    } else this.boundingBox.makeEmpty();
    (isNaN(this.boundingBox.min.x) ||
      isNaN(this.boundingBox.min.y) ||
      isNaN(this.boundingBox.min.z)) &&
      console.error(
        'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',
        this
      );
  }
  computeBoundingSphere() {
    this.boundingSphere === null && (this.boundingSphere = new sr());
    const e = this.attributes.position,
      n = this.morphAttributes.position;
    if (e && e.isGLBufferAttribute) {
      console.error(
        'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',
        this
      ),
        this.boundingSphere.set(new W(), 1 / 0);
      return;
    }
    if (e) {
      const r = this.boundingSphere.center;
      if ((Fi.setFromBufferAttribute(e), n))
        for (let o = 0, s = n.length; o < s; o++) {
          const a = n[o];
          Ad.setFromBufferAttribute(a),
            this.morphTargetsRelative
              ? (mr.addVectors(Fi.min, Ad.min),
                Fi.expandByPoint(mr),
                mr.addVectors(Fi.max, Ad.max),
                Fi.expandByPoint(mr))
              : (Fi.expandByPoint(Ad.min), Fi.expandByPoint(Ad.max));
        }
      Fi.getCenter(r);
      let i = 0;
      for (let o = 0, s = e.count; o < s; o++)
        mr.fromBufferAttribute(e, o),
          (i = Math.max(i, r.distanceToSquared(mr)));
      if (n)
        for (let o = 0, s = n.length; o < s; o++) {
          const a = n[o],
            l = this.morphTargetsRelative;
          for (let c = 0, u = a.count; c < u; c++)
            mr.fromBufferAttribute(a, c),
              l && (mu.fromBufferAttribute(e, c), mr.add(mu)),
              (i = Math.max(i, r.distanceToSquared(mr)));
        }
      (this.boundingSphere.radius = Math.sqrt(i)),
        isNaN(this.boundingSphere.radius) &&
          console.error(
            'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',
            this
          );
    }
  }
  computeTangents() {
    const e = this.index,
      n = this.attributes;
    if (
      e === null ||
      n.position === void 0 ||
      n.normal === void 0 ||
      n.uv === void 0
    ) {
      console.error(
        "THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)"
      );
      return;
    }
    const r = e.array,
      i = n.position.array,
      o = n.normal.array,
      s = n.uv.array,
      a = i.length / 3;
    this.hasAttribute("tangent") === !1 &&
      this.setAttribute("tangent", new en(new Float32Array(4 * a), 4));
    const l = this.getAttribute("tangent").array,
      c = [],
      u = [];
    for (let P = 0; P < a; P++) (c[P] = new W()), (u[P] = new W());
    const h = new W(),
      p = new W(),
      m = new W(),
      v = new Fe(),
      S = new Fe(),
      x = new Fe(),
      g = new W(),
      y = new W();
    function _(P, k, B) {
      h.fromArray(i, P * 3),
        p.fromArray(i, k * 3),
        m.fromArray(i, B * 3),
        v.fromArray(s, P * 2),
        S.fromArray(s, k * 2),
        x.fromArray(s, B * 2),
        p.sub(h),
        m.sub(h),
        S.sub(v),
        x.sub(v);
      const $ = 1 / (S.x * x.y - x.x * S.y);
      isFinite($) &&
        (g
          .copy(p)
          .multiplyScalar(x.y)
          .addScaledVector(m, -S.y)
          .multiplyScalar($),
        y
          .copy(m)
          .multiplyScalar(S.x)
          .addScaledVector(p, -x.x)
          .multiplyScalar($),
        c[P].add(g),
        c[k].add(g),
        c[B].add(g),
        u[P].add(y),
        u[k].add(y),
        u[B].add(y));
    }
    let b = this.groups;
    b.length === 0 && (b = [{ start: 0, count: r.length }]);
    for (let P = 0, k = b.length; P < k; ++P) {
      const B = b[P],
        $ = B.start,
        D = B.count;
      for (let X = $, j = $ + D; X < j; X += 3) _(r[X + 0], r[X + 1], r[X + 2]);
    }
    const T = new W(),
      M = new W(),
      C = new W(),
      L = new W();
    function A(P) {
      C.fromArray(o, P * 3), L.copy(C);
      const k = c[P];
      T.copy(k),
        T.sub(C.multiplyScalar(C.dot(k))).normalize(),
        M.crossVectors(L, k);
      const $ = M.dot(u[P]) < 0 ? -1 : 1;
      (l[P * 4] = T.x),
        (l[P * 4 + 1] = T.y),
        (l[P * 4 + 2] = T.z),
        (l[P * 4 + 3] = $);
    }
    for (let P = 0, k = b.length; P < k; ++P) {
      const B = b[P],
        $ = B.start,
        D = B.count;
      for (let X = $, j = $ + D; X < j; X += 3)
        A(r[X + 0]), A(r[X + 1]), A(r[X + 2]);
    }
  }
  computeVertexNormals() {
    const e = this.index,
      n = this.getAttribute("position");
    if (n !== void 0) {
      let r = this.getAttribute("normal");
      if (r === void 0)
        (r = new en(new Float32Array(n.count * 3), 3)),
          this.setAttribute("normal", r);
      else for (let p = 0, m = r.count; p < m; p++) r.setXYZ(p, 0, 0, 0);
      const i = new W(),
        o = new W(),
        s = new W(),
        a = new W(),
        l = new W(),
        c = new W(),
        u = new W(),
        h = new W();
      if (e)
        for (let p = 0, m = e.count; p < m; p += 3) {
          const v = e.getX(p + 0),
            S = e.getX(p + 1),
            x = e.getX(p + 2);
          i.fromBufferAttribute(n, v),
            o.fromBufferAttribute(n, S),
            s.fromBufferAttribute(n, x),
            u.subVectors(s, o),
            h.subVectors(i, o),
            u.cross(h),
            a.fromBufferAttribute(r, v),
            l.fromBufferAttribute(r, S),
            c.fromBufferAttribute(r, x),
            a.add(u),
            l.add(u),
            c.add(u),
            r.setXYZ(v, a.x, a.y, a.z),
            r.setXYZ(S, l.x, l.y, l.z),
            r.setXYZ(x, c.x, c.y, c.z);
        }
      else
        for (let p = 0, m = n.count; p < m; p += 3)
          i.fromBufferAttribute(n, p + 0),
            o.fromBufferAttribute(n, p + 1),
            s.fromBufferAttribute(n, p + 2),
            u.subVectors(s, o),
            h.subVectors(i, o),
            u.cross(h),
            r.setXYZ(p + 0, u.x, u.y, u.z),
            r.setXYZ(p + 1, u.x, u.y, u.z),
            r.setXYZ(p + 2, u.x, u.y, u.z);
      this.normalizeNormals(), (r.needsUpdate = !0);
    }
  }
  normalizeNormals() {
    const e = this.attributes.normal;
    for (let n = 0, r = e.count; n < r; n++)
      mr.fromBufferAttribute(e, n),
        mr.normalize(),
        e.setXYZ(n, mr.x, mr.y, mr.z);
  }
  toNonIndexed() {
    function e(a, l) {
      const c = a.array,
        u = a.itemSize,
        h = a.normalized,
        p = new c.constructor(l.length * u);
      let m = 0,
        v = 0;
      for (let S = 0, x = l.length; S < x; S++) {
        a.isInterleavedBufferAttribute
          ? (m = l[S] * a.data.stride + a.offset)
          : (m = l[S] * u);
        for (let g = 0; g < u; g++) p[v++] = c[m++];
      }
      return new en(p, u, h);
    }
    if (this.index === null)
      return (
        console.warn(
          "THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."
        ),
        this
      );
    const n = new It(),
      r = this.index.array,
      i = this.attributes;
    for (const a in i) {
      const l = i[a],
        c = e(l, r);
      n.setAttribute(a, c);
    }
    const o = this.morphAttributes;
    for (const a in o) {
      const l = [],
        c = o[a];
      for (let u = 0, h = c.length; u < h; u++) {
        const p = c[u],
          m = e(p, r);
        l.push(m);
      }
      n.morphAttributes[a] = l;
    }
    n.morphTargetsRelative = this.morphTargetsRelative;
    const s = this.groups;
    for (let a = 0, l = s.length; a < l; a++) {
      const c = s[a];
      n.addGroup(c.start, c.count, c.materialIndex);
    }
    return n;
  }
  toJSON() {
    const e = {
      metadata: {
        version: 4.6,
        type: "BufferGeometry",
        generator: "BufferGeometry.toJSON",
      },
    };
    if (
      ((e.uuid = this.uuid),
      (e.type = this.type),
      this.name !== "" && (e.name = this.name),
      Object.keys(this.userData).length > 0 && (e.userData = this.userData),
      this.parameters !== void 0)
    ) {
      const l = this.parameters;
      for (const c in l) l[c] !== void 0 && (e[c] = l[c]);
      return e;
    }
    e.data = { attributes: {} };
    const n = this.index;
    n !== null &&
      (e.data.index = {
        type: n.array.constructor.name,
        array: Array.prototype.slice.call(n.array),
      });
    const r = this.attributes;
    for (const l in r) {
      const c = r[l];
      e.data.attributes[l] = c.toJSON(e.data);
    }
    const i = {};
    let o = !1;
    for (const l in this.morphAttributes) {
      const c = this.morphAttributes[l],
        u = [];
      for (let h = 0, p = c.length; h < p; h++) {
        const m = c[h];
        u.push(m.toJSON(e.data));
      }
      u.length > 0 && ((i[l] = u), (o = !0));
    }
    o &&
      ((e.data.morphAttributes = i),
      (e.data.morphTargetsRelative = this.morphTargetsRelative));
    const s = this.groups;
    s.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(s)));
    const a = this.boundingSphere;
    return (
      a !== null &&
        (e.data.boundingSphere = {
          center: a.center.toArray(),
          radius: a.radius,
        }),
      e
    );
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    (this.index = null),
      (this.attributes = {}),
      (this.morphAttributes = {}),
      (this.groups = []),
      (this.boundingBox = null),
      (this.boundingSphere = null);
    const n = {};
    this.name = e.name;
    const r = e.index;
    r !== null && this.setIndex(r.clone(n));
    const i = e.attributes;
    for (const c in i) {
      const u = i[c];
      this.setAttribute(c, u.clone(n));
    }
    const o = e.morphAttributes;
    for (const c in o) {
      const u = [],
        h = o[c];
      for (let p = 0, m = h.length; p < m; p++) u.push(h[p].clone(n));
      this.morphAttributes[c] = u;
    }
    this.morphTargetsRelative = e.morphTargetsRelative;
    const s = e.groups;
    for (let c = 0, u = s.length; c < u; c++) {
      const h = s[c];
      this.addGroup(h.start, h.count, h.materialIndex);
    }
    const a = e.boundingBox;
    a !== null && (this.boundingBox = a.clone());
    const l = e.boundingSphere;
    return (
      l !== null && (this.boundingSphere = l.clone()),
      (this.drawRange.start = e.drawRange.start),
      (this.drawRange.count = e.drawRange.count),
      (this.userData = e.userData),
      this
    );
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
}
const KT = new bt(),
  Dl = new Uc(),
  ng = new sr(),
  ZT = new W(),
  gu = new W(),
  vu = new W(),
  yu = new W(),
  D1 = new W(),
  rg = new W(),
  ig = new Fe(),
  og = new Fe(),
  sg = new Fe(),
  QT = new W(),
  JT = new W(),
  eA = new W(),
  ag = new W(),
  lg = new W();
class An extends Zt {
  constructor(e = new It(), n = new pa()) {
    super(),
      (this.isMesh = !0),
      (this.type = "Mesh"),
      (this.geometry = e),
      (this.material = n),
      this.updateMorphTargets();
  }
  copy(e, n) {
    return (
      super.copy(e, n),
      e.morphTargetInfluences !== void 0 &&
        (this.morphTargetInfluences = e.morphTargetInfluences.slice()),
      e.morphTargetDictionary !== void 0 &&
        (this.morphTargetDictionary = Object.assign(
          {},
          e.morphTargetDictionary
        )),
      (this.material = Array.isArray(e.material)
        ? e.material.slice()
        : e.material),
      (this.geometry = e.geometry),
      this
    );
  }
  updateMorphTargets() {
    const n = this.geometry.morphAttributes,
      r = Object.keys(n);
    if (r.length > 0) {
      const i = n[r[0]];
      if (i !== void 0) {
        (this.morphTargetInfluences = []), (this.morphTargetDictionary = {});
        for (let o = 0, s = i.length; o < s; o++) {
          const a = i[o].name || String(o);
          this.morphTargetInfluences.push(0),
            (this.morphTargetDictionary[a] = o);
        }
      }
    }
  }
  getVertexPosition(e, n) {
    const r = this.geometry,
      i = r.attributes.position,
      o = r.morphAttributes.position,
      s = r.morphTargetsRelative;
    n.fromBufferAttribute(i, e);
    const a = this.morphTargetInfluences;
    if (o && a) {
      rg.set(0, 0, 0);
      for (let l = 0, c = o.length; l < c; l++) {
        const u = a[l],
          h = o[l];
        u !== 0 &&
          (D1.fromBufferAttribute(h, e),
          s ? rg.addScaledVector(D1, u) : rg.addScaledVector(D1.sub(n), u));
      }
      n.add(rg);
    }
    return n;
  }
  raycast(e, n) {
    const r = this.geometry,
      i = this.material,
      o = this.matrixWorld;
    i !== void 0 &&
      (r.boundingSphere === null && r.computeBoundingSphere(),
      ng.copy(r.boundingSphere),
      ng.applyMatrix4(o),
      Dl.copy(e.ray).recast(e.near),
      !(
        ng.containsPoint(Dl.origin) === !1 &&
        (Dl.intersectSphere(ng, ZT) === null ||
          Dl.origin.distanceToSquared(ZT) > (e.far - e.near) ** 2)
      ) &&
        (KT.copy(o).invert(),
        Dl.copy(e.ray).applyMatrix4(KT),
        !(r.boundingBox !== null && Dl.intersectsBox(r.boundingBox) === !1) &&
          this._computeIntersections(e, n, Dl)));
  }
  _computeIntersections(e, n, r) {
    let i;
    const o = this.geometry,
      s = this.material,
      a = o.index,
      l = o.attributes.position,
      c = o.attributes.uv,
      u = o.attributes.uv1,
      h = o.attributes.normal,
      p = o.groups,
      m = o.drawRange;
    if (a !== null)
      if (Array.isArray(s))
        for (let v = 0, S = p.length; v < S; v++) {
          const x = p[v],
            g = s[x.materialIndex],
            y = Math.max(x.start, m.start),
            _ = Math.min(
              a.count,
              Math.min(x.start + x.count, m.start + m.count)
            );
          for (let b = y, T = _; b < T; b += 3) {
            const M = a.getX(b),
              C = a.getX(b + 1),
              L = a.getX(b + 2);
            (i = cg(this, g, e, r, c, u, h, M, C, L)),
              i &&
                ((i.faceIndex = Math.floor(b / 3)),
                (i.face.materialIndex = x.materialIndex),
                n.push(i));
          }
        }
      else {
        const v = Math.max(0, m.start),
          S = Math.min(a.count, m.start + m.count);
        for (let x = v, g = S; x < g; x += 3) {
          const y = a.getX(x),
            _ = a.getX(x + 1),
            b = a.getX(x + 2);
          (i = cg(this, s, e, r, c, u, h, y, _, b)),
            i && ((i.faceIndex = Math.floor(x / 3)), n.push(i));
        }
      }
    else if (l !== void 0)
      if (Array.isArray(s))
        for (let v = 0, S = p.length; v < S; v++) {
          const x = p[v],
            g = s[x.materialIndex],
            y = Math.max(x.start, m.start),
            _ = Math.min(
              l.count,
              Math.min(x.start + x.count, m.start + m.count)
            );
          for (let b = y, T = _; b < T; b += 3) {
            const M = b,
              C = b + 1,
              L = b + 2;
            (i = cg(this, g, e, r, c, u, h, M, C, L)),
              i &&
                ((i.faceIndex = Math.floor(b / 3)),
                (i.face.materialIndex = x.materialIndex),
                n.push(i));
          }
        }
      else {
        const v = Math.max(0, m.start),
          S = Math.min(l.count, m.start + m.count);
        for (let x = v, g = S; x < g; x += 3) {
          const y = x,
            _ = x + 1,
            b = x + 2;
          (i = cg(this, s, e, r, c, u, h, y, _, b)),
            i && ((i.faceIndex = Math.floor(x / 3)), n.push(i));
        }
      }
  }
}
function o5(t, e, n, r, i, o, s, a) {
  let l;
  if (
    (e.side === Vr
      ? (l = r.intersectTriangle(s, o, i, !0, a))
      : (l = r.intersectTriangle(i, o, s, e.side === Ss, a)),
    l === null)
  )
    return null;
  lg.copy(a), lg.applyMatrix4(t.matrixWorld);
  const c = n.ray.origin.distanceTo(lg);
  return c < n.near || c > n.far
    ? null
    : { distance: c, point: lg.clone(), object: t };
}
function cg(t, e, n, r, i, o, s, a, l, c) {
  t.getVertexPosition(a, gu),
    t.getVertexPosition(l, vu),
    t.getVertexPosition(c, yu);
  const u = o5(t, e, n, r, gu, vu, yu, ag);
  if (u) {
    i &&
      (ig.fromBufferAttribute(i, a),
      og.fromBufferAttribute(i, l),
      sg.fromBufferAttribute(i, c),
      (u.uv = gi.getInterpolation(ag, gu, vu, yu, ig, og, sg, new Fe()))),
      o &&
        (ig.fromBufferAttribute(o, a),
        og.fromBufferAttribute(o, l),
        sg.fromBufferAttribute(o, c),
        (u.uv1 = gi.getInterpolation(ag, gu, vu, yu, ig, og, sg, new Fe())),
        (u.uv2 = u.uv1)),
      s &&
        (QT.fromBufferAttribute(s, a),
        JT.fromBufferAttribute(s, l),
        eA.fromBufferAttribute(s, c),
        (u.normal = gi.getInterpolation(ag, gu, vu, yu, QT, JT, eA, new W())),
        u.normal.dot(r.direction) > 0 && u.normal.multiplyScalar(-1));
    const h = { a, b: l, c, normal: new W(), materialIndex: 0 };
    gi.getNormal(gu, vu, yu, h.normal), (u.face = h);
  }
  return u;
}
class zc extends It {
  constructor(e = 1, n = 1, r = 1, i = 1, o = 1, s = 1) {
    super(),
      (this.type = "BoxGeometry"),
      (this.parameters = {
        width: e,
        height: n,
        depth: r,
        widthSegments: i,
        heightSegments: o,
        depthSegments: s,
      });
    const a = this;
    (i = Math.floor(i)), (o = Math.floor(o)), (s = Math.floor(s));
    const l = [],
      c = [],
      u = [],
      h = [];
    let p = 0,
      m = 0;
    v("z", "y", "x", -1, -1, r, n, e, s, o, 0),
      v("z", "y", "x", 1, -1, r, n, -e, s, o, 1),
      v("x", "z", "y", 1, 1, e, r, n, i, s, 2),
      v("x", "z", "y", 1, -1, e, r, -n, i, s, 3),
      v("x", "y", "z", 1, -1, e, n, r, i, o, 4),
      v("x", "y", "z", -1, -1, e, n, -r, i, o, 5),
      this.setIndex(l),
      this.setAttribute("position", new ut(c, 3)),
      this.setAttribute("normal", new ut(u, 3)),
      this.setAttribute("uv", new ut(h, 2));
    function v(S, x, g, y, _, b, T, M, C, L, A) {
      const P = b / C,
        k = T / L,
        B = b / 2,
        $ = T / 2,
        D = M / 2,
        X = C + 1,
        j = L + 1;
      let Y = 0,
        N = 0;
      const V = new W();
      for (let G = 0; G < j; G++) {
        const U = G * k - $;
        for (let Z = 0; Z < X; Z++) {
          const Q = Z * P - B;
          (V[S] = Q * y),
            (V[x] = U * _),
            (V[g] = D),
            c.push(V.x, V.y, V.z),
            (V[S] = 0),
            (V[x] = 0),
            (V[g] = M > 0 ? 1 : -1),
            u.push(V.x, V.y, V.z),
            h.push(Z / C),
            h.push(1 - G / L),
            (Y += 1);
        }
      }
      for (let G = 0; G < L; G++)
        for (let U = 0; U < C; U++) {
          const Z = p + U + X * G,
            Q = p + U + X * (G + 1),
            te = p + (U + 1) + X * (G + 1),
            re = p + (U + 1) + X * G;
          l.push(Z, Q, re), l.push(Q, te, re), (N += 6);
        }
      a.addGroup(m, N, A), (m += N), (p += Y);
    }
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  static fromJSON(e) {
    return new zc(
      e.width,
      e.height,
      e.depth,
      e.widthSegments,
      e.heightSegments,
      e.depthSegments
    );
  }
}
function Af(t) {
  const e = {};
  for (const n in t) {
    e[n] = {};
    for (const r in t[n]) {
      const i = t[n][r];
      i &&
      (i.isColor ||
        i.isMatrix3 ||
        i.isMatrix4 ||
        i.isVector2 ||
        i.isVector3 ||
        i.isVector4 ||
        i.isTexture ||
        i.isQuaternion)
        ? i.isRenderTargetTexture
          ? (console.warn(
              "UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."
            ),
            (e[n][r] = null))
          : (e[n][r] = i.clone())
        : Array.isArray(i)
        ? (e[n][r] = i.slice())
        : (e[n][r] = i);
    }
  }
  return e;
}
function ti(t) {
  const e = {};
  for (let n = 0; n < t.length; n++) {
    const r = Af(t[n]);
    for (const i in r) e[i] = r[i];
  }
  return e;
}
function s5(t) {
  const e = [];
  for (let n = 0; n < t.length; n++) e.push(t[n].clone());
  return e;
}
function OO(t) {
  return t.getRenderTarget() === null
    ? t.outputColorSpace
    : nn.workingColorSpace;
}
const Wh = { clone: Af, merge: ti };
var a5 = `void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,
  l5 = `void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;
class Ko extends Rr {
  constructor(e) {
    super(),
      (this.isShaderMaterial = !0),
      (this.type = "ShaderMaterial"),
      (this.defines = {}),
      (this.uniforms = {}),
      (this.uniformsGroups = []),
      (this.vertexShader = a5),
      (this.fragmentShader = l5),
      (this.linewidth = 1),
      (this.wireframe = !1),
      (this.wireframeLinewidth = 1),
      (this.fog = !1),
      (this.lights = !1),
      (this.clipping = !1),
      (this.forceSinglePass = !0),
      (this.extensions = {
        derivatives: !1,
        fragDepth: !1,
        drawBuffers: !1,
        shaderTextureLOD: !1,
        clipCullDistance: !1,
      }),
      (this.defaultAttributeValues = {
        color: [1, 1, 1],
        uv: [0, 0],
        uv1: [0, 0],
      }),
      (this.index0AttributeName = void 0),
      (this.uniformsNeedUpdate = !1),
      (this.glslVersion = null),
      e !== void 0 && this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      (this.fragmentShader = e.fragmentShader),
      (this.vertexShader = e.vertexShader),
      (this.uniforms = Af(e.uniforms)),
      (this.uniformsGroups = s5(e.uniformsGroups)),
      (this.defines = Object.assign({}, e.defines)),
      (this.wireframe = e.wireframe),
      (this.wireframeLinewidth = e.wireframeLinewidth),
      (this.fog = e.fog),
      (this.lights = e.lights),
      (this.clipping = e.clipping),
      (this.extensions = Object.assign({}, e.extensions)),
      (this.glslVersion = e.glslVersion),
      this
    );
  }
  toJSON(e) {
    const n = super.toJSON(e);
    (n.glslVersion = this.glslVersion), (n.uniforms = {});
    for (const i in this.uniforms) {
      const s = this.uniforms[i].value;
      s && s.isTexture
        ? (n.uniforms[i] = { type: "t", value: s.toJSON(e).uuid })
        : s && s.isColor
        ? (n.uniforms[i] = { type: "c", value: s.getHex() })
        : s && s.isVector2
        ? (n.uniforms[i] = { type: "v2", value: s.toArray() })
        : s && s.isVector3
        ? (n.uniforms[i] = { type: "v3", value: s.toArray() })
        : s && s.isVector4
        ? (n.uniforms[i] = { type: "v4", value: s.toArray() })
        : s && s.isMatrix3
        ? (n.uniforms[i] = { type: "m3", value: s.toArray() })
        : s && s.isMatrix4
        ? (n.uniforms[i] = { type: "m4", value: s.toArray() })
        : (n.uniforms[i] = { value: s });
    }
    Object.keys(this.defines).length > 0 && (n.defines = this.defines),
      (n.vertexShader = this.vertexShader),
      (n.fragmentShader = this.fragmentShader),
      (n.lights = this.lights),
      (n.clipping = this.clipping);
    const r = {};
    for (const i in this.extensions) this.extensions[i] === !0 && (r[i] = !0);
    return Object.keys(r).length > 0 && (n.extensions = r), n;
  }
}
class xp extends Zt {
  constructor() {
    super(),
      (this.isCamera = !0),
      (this.type = "Camera"),
      (this.matrixWorldInverse = new bt()),
      (this.projectionMatrix = new bt()),
      (this.projectionMatrixInverse = new bt()),
      (this.coordinateSystem = Go);
  }
  copy(e, n) {
    return (
      super.copy(e, n),
      this.matrixWorldInverse.copy(e.matrixWorldInverse),
      this.projectionMatrix.copy(e.projectionMatrix),
      this.projectionMatrixInverse.copy(e.projectionMatrixInverse),
      (this.coordinateSystem = e.coordinateSystem),
      this
    );
  }
  getWorldDirection(e) {
    return super.getWorldDirection(e).negate();
  }
  updateMatrixWorld(e) {
    super.updateMatrixWorld(e),
      this.matrixWorldInverse.copy(this.matrixWorld).invert();
  }
  updateWorldMatrix(e, n) {
    super.updateWorldMatrix(e, n),
      this.matrixWorldInverse.copy(this.matrixWorld).invert();
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
class Un extends xp {
  constructor(e = 50, n = 1, r = 0.1, i = 2e3) {
    super(),
      (this.isPerspectiveCamera = !0),
      (this.type = "PerspectiveCamera"),
      (this.fov = e),
      (this.zoom = 1),
      (this.near = r),
      (this.far = i),
      (this.focus = 10),
      (this.aspect = n),
      (this.view = null),
      (this.filmGauge = 35),
      (this.filmOffset = 0),
      this.updateProjectionMatrix();
  }
  copy(e, n) {
    return (
      super.copy(e, n),
      (this.fov = e.fov),
      (this.zoom = e.zoom),
      (this.near = e.near),
      (this.far = e.far),
      (this.focus = e.focus),
      (this.aspect = e.aspect),
      (this.view = e.view === null ? null : Object.assign({}, e.view)),
      (this.filmGauge = e.filmGauge),
      (this.filmOffset = e.filmOffset),
      this
    );
  }
  setFocalLength(e) {
    const n = (0.5 * this.getFilmHeight()) / e;
    (this.fov = Tf * 2 * Math.atan(n)), this.updateProjectionMatrix();
  }
  getFocalLength() {
    const e = Math.tan(pc * 0.5 * this.fov);
    return (0.5 * this.getFilmHeight()) / e;
  }
  getEffectiveFOV() {
    return Tf * 2 * Math.atan(Math.tan(pc * 0.5 * this.fov) / this.zoom);
  }
  getFilmWidth() {
    return this.filmGauge * Math.min(this.aspect, 1);
  }
  getFilmHeight() {
    return this.filmGauge / Math.max(this.aspect, 1);
  }
  setViewOffset(e, n, r, i, o, s) {
    (this.aspect = e / n),
      this.view === null &&
        (this.view = {
          enabled: !0,
          fullWidth: 1,
          fullHeight: 1,
          offsetX: 0,
          offsetY: 0,
          width: 1,
          height: 1,
        }),
      (this.view.enabled = !0),
      (this.view.fullWidth = e),
      (this.view.fullHeight = n),
      (this.view.offsetX = r),
      (this.view.offsetY = i),
      (this.view.width = o),
      (this.view.height = s),
      this.updateProjectionMatrix();
  }
  clearViewOffset() {
    this.view !== null && (this.view.enabled = !1),
      this.updateProjectionMatrix();
  }
  updateProjectionMatrix() {
    const e = this.near;
    let n = (e * Math.tan(pc * 0.5 * this.fov)) / this.zoom,
      r = 2 * n,
      i = this.aspect * r,
      o = -0.5 * i;
    const s = this.view;
    if (this.view !== null && this.view.enabled) {
      const l = s.fullWidth,
        c = s.fullHeight;
      (o += (s.offsetX * i) / l),
        (n -= (s.offsetY * r) / c),
        (i *= s.width / l),
        (r *= s.height / c);
    }
    const a = this.filmOffset;
    a !== 0 && (o += (e * a) / this.getFilmWidth()),
      this.projectionMatrix.makePerspective(
        o,
        o + i,
        n,
        n - r,
        e,
        this.far,
        this.coordinateSystem
      ),
      this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
  }
  toJSON(e) {
    const n = super.toJSON(e);
    return (
      (n.object.fov = this.fov),
      (n.object.zoom = this.zoom),
      (n.object.near = this.near),
      (n.object.far = this.far),
      (n.object.focus = this.focus),
      (n.object.aspect = this.aspect),
      this.view !== null && (n.object.view = Object.assign({}, this.view)),
      (n.object.filmGauge = this.filmGauge),
      (n.object.filmOffset = this.filmOffset),
      n
    );
  }
}
const xu = -90,
  _u = 1;
class FO extends Zt {
  constructor(e, n, r) {
    super(),
      (this.type = "CubeCamera"),
      (this.renderTarget = r),
      (this.coordinateSystem = null),
      (this.activeMipmapLevel = 0);
    const i = new Un(xu, _u, e, n);
    (i.layers = this.layers), this.add(i);
    const o = new Un(xu, _u, e, n);
    (o.layers = this.layers), this.add(o);
    const s = new Un(xu, _u, e, n);
    (s.layers = this.layers), this.add(s);
    const a = new Un(xu, _u, e, n);
    (a.layers = this.layers), this.add(a);
    const l = new Un(xu, _u, e, n);
    (l.layers = this.layers), this.add(l);
    const c = new Un(xu, _u, e, n);
    (c.layers = this.layers), this.add(c);
  }
  updateCoordinateSystem() {
    const e = this.coordinateSystem,
      n = this.children.concat(),
      [r, i, o, s, a, l] = n;
    for (const c of n) this.remove(c);
    if (e === Go)
      r.up.set(0, 1, 0),
        r.lookAt(1, 0, 0),
        i.up.set(0, 1, 0),
        i.lookAt(-1, 0, 0),
        o.up.set(0, 0, -1),
        o.lookAt(0, 1, 0),
        s.up.set(0, 0, 1),
        s.lookAt(0, -1, 0),
        a.up.set(0, 1, 0),
        a.lookAt(0, 0, 1),
        l.up.set(0, 1, 0),
        l.lookAt(0, 0, -1);
    else if (e === Cf)
      r.up.set(0, -1, 0),
        r.lookAt(-1, 0, 0),
        i.up.set(0, -1, 0),
        i.lookAt(1, 0, 0),
        o.up.set(0, 0, 1),
        o.lookAt(0, 1, 0),
        s.up.set(0, 0, -1),
        s.lookAt(0, -1, 0),
        a.up.set(0, -1, 0),
        a.lookAt(0, 0, 1),
        l.up.set(0, -1, 0),
        l.lookAt(0, 0, -1);
    else
      throw new Error(
        "THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: " +
          e
      );
    for (const c of n) this.add(c), c.updateMatrixWorld();
  }
  update(e, n) {
    this.parent === null && this.updateMatrixWorld();
    const { renderTarget: r, activeMipmapLevel: i } = this;
    this.coordinateSystem !== e.coordinateSystem &&
      ((this.coordinateSystem = e.coordinateSystem),
      this.updateCoordinateSystem());
    const [o, s, a, l, c, u] = this.children,
      h = e.getRenderTarget(),
      p = e.getActiveCubeFace(),
      m = e.getActiveMipmapLevel(),
      v = e.xr.enabled;
    e.xr.enabled = !1;
    const S = r.texture.generateMipmaps;
    (r.texture.generateMipmaps = !1),
      e.setRenderTarget(r, 0, i),
      e.render(n, o),
      e.setRenderTarget(r, 1, i),
      e.render(n, s),
      e.setRenderTarget(r, 2, i),
      e.render(n, a),
      e.setRenderTarget(r, 3, i),
      e.render(n, l),
      e.setRenderTarget(r, 4, i),
      e.render(n, c),
      (r.texture.generateMipmaps = S),
      e.setRenderTarget(r, 5, i),
      e.render(n, u),
      e.setRenderTarget(h, p, m),
      (e.xr.enabled = v),
      (r.texture.needsPMREMUpdate = !0);
  }
}
class _p extends Pn {
  constructor(e, n, r, i, o, s, a, l, c, u) {
    (e = e !== void 0 ? e : []),
      (n = n !== void 0 ? n : la),
      super(e, n, r, i, o, s, a, l, c, u),
      (this.isCubeTexture = !0),
      (this.flipY = !1);
  }
  get images() {
    return this.image;
  }
  set images(e) {
    this.image = e;
  }
}
class NO extends Yo {
  constructor(e = 1, n = {}) {
    super(e, e, n), (this.isWebGLCubeRenderTarget = !0);
    const r = { width: e, height: e, depth: 1 },
      i = [r, r, r, r, r, r];
    n.encoding !== void 0 &&
      (sh(
        "THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."
      ),
      (n.colorSpace = n.encoding === el ? rr : Bi)),
      (this.texture = new _p(
        i,
        n.mapping,
        n.wrapS,
        n.wrapT,
        n.magFilter,
        n.minFilter,
        n.format,
        n.type,
        n.anisotropy,
        n.colorSpace
      )),
      (this.texture.isRenderTargetTexture = !0),
      (this.texture.generateMipmaps =
        n.generateMipmaps !== void 0 ? n.generateMipmaps : !1),
      (this.texture.minFilter = n.minFilter !== void 0 ? n.minFilter : Cn);
  }
  fromEquirectangularTexture(e, n) {
    (this.texture.type = n.type),
      (this.texture.colorSpace = n.colorSpace),
      (this.texture.generateMipmaps = n.generateMipmaps),
      (this.texture.minFilter = n.minFilter),
      (this.texture.magFilter = n.magFilter);
    const r = {
        uniforms: { tEquirect: { value: null } },
        vertexShader: `

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,
        fragmentShader: `

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`,
      },
      i = new zc(5, 5, 5),
      o = new Ko({
        name: "CubemapFromEquirect",
        uniforms: Af(r.uniforms),
        vertexShader: r.vertexShader,
        fragmentShader: r.fragmentShader,
        side: Vr,
        blending: ra,
      });
    o.uniforms.tEquirect.value = n;
    const s = new An(i, o),
      a = n.minFilter;
    return (
      n.minFilter === ol && (n.minFilter = Cn),
      new FO(1, 10, this).update(e, s),
      (n.minFilter = a),
      s.geometry.dispose(),
      s.material.dispose(),
      this
    );
  }
  clear(e, n, r, i) {
    const o = e.getRenderTarget();
    for (let s = 0; s < 6; s++) e.setRenderTarget(this, s), e.clear(n, r, i);
    e.setRenderTarget(o);
  }
}
const U1 = new W(),
  c5 = new W(),
  u5 = new Ot();
class qs {
  constructor(e = new W(1, 0, 0), n = 0) {
    (this.isPlane = !0), (this.normal = e), (this.constant = n);
  }
  set(e, n) {
    return this.normal.copy(e), (this.constant = n), this;
  }
  setComponents(e, n, r, i) {
    return this.normal.set(e, n, r), (this.constant = i), this;
  }
  setFromNormalAndCoplanarPoint(e, n) {
    return this.normal.copy(e), (this.constant = -n.dot(this.normal)), this;
  }
  setFromCoplanarPoints(e, n, r) {
    const i = U1.subVectors(r, n).cross(c5.subVectors(e, n)).normalize();
    return this.setFromNormalAndCoplanarPoint(i, e), this;
  }
  copy(e) {
    return this.normal.copy(e.normal), (this.constant = e.constant), this;
  }
  normalize() {
    const e = 1 / this.normal.length();
    return this.normal.multiplyScalar(e), (this.constant *= e), this;
  }
  negate() {
    return (this.constant *= -1), this.normal.negate(), this;
  }
  distanceToPoint(e) {
    return this.normal.dot(e) + this.constant;
  }
  distanceToSphere(e) {
    return this.distanceToPoint(e.center) - e.radius;
  }
  projectPoint(e, n) {
    return n.copy(e).addScaledVector(this.normal, -this.distanceToPoint(e));
  }
  intersectLine(e, n) {
    const r = e.delta(U1),
      i = this.normal.dot(r);
    if (i === 0)
      return this.distanceToPoint(e.start) === 0 ? n.copy(e.start) : null;
    const o = -(e.start.dot(this.normal) + this.constant) / i;
    return o < 0 || o > 1 ? null : n.copy(e.start).addScaledVector(r, o);
  }
  intersectsLine(e) {
    const n = this.distanceToPoint(e.start),
      r = this.distanceToPoint(e.end);
    return (n < 0 && r > 0) || (r < 0 && n > 0);
  }
  intersectsBox(e) {
    return e.intersectsPlane(this);
  }
  intersectsSphere(e) {
    return e.intersectsPlane(this);
  }
  coplanarPoint(e) {
    return e.copy(this.normal).multiplyScalar(-this.constant);
  }
  applyMatrix4(e, n) {
    const r = n || u5.getNormalMatrix(e),
      i = this.coplanarPoint(U1).applyMatrix4(e),
      o = this.normal.applyMatrix3(r).normalize();
    return (this.constant = -i.dot(o)), this;
  }
  translate(e) {
    return (this.constant -= e.dot(this.normal)), this;
  }
  equals(e) {
    return e.normal.equals(this.normal) && e.constant === this.constant;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
const Ul = new sr(),
  ug = new W();
class Sp {
  constructor(
    e = new qs(),
    n = new qs(),
    r = new qs(),
    i = new qs(),
    o = new qs(),
    s = new qs()
  ) {
    this.planes = [e, n, r, i, o, s];
  }
  set(e, n, r, i, o, s) {
    const a = this.planes;
    return (
      a[0].copy(e),
      a[1].copy(n),
      a[2].copy(r),
      a[3].copy(i),
      a[4].copy(o),
      a[5].copy(s),
      this
    );
  }
  copy(e) {
    const n = this.planes;
    for (let r = 0; r < 6; r++) n[r].copy(e.planes[r]);
    return this;
  }
  setFromProjectionMatrix(e, n = Go) {
    const r = this.planes,
      i = e.elements,
      o = i[0],
      s = i[1],
      a = i[2],
      l = i[3],
      c = i[4],
      u = i[5],
      h = i[6],
      p = i[7],
      m = i[8],
      v = i[9],
      S = i[10],
      x = i[11],
      g = i[12],
      y = i[13],
      _ = i[14],
      b = i[15];
    if (
      (r[0].setComponents(l - o, p - c, x - m, b - g).normalize(),
      r[1].setComponents(l + o, p + c, x + m, b + g).normalize(),
      r[2].setComponents(l + s, p + u, x + v, b + y).normalize(),
      r[3].setComponents(l - s, p - u, x - v, b - y).normalize(),
      r[4].setComponents(l - a, p - h, x - S, b - _).normalize(),
      n === Go)
    )
      r[5].setComponents(l + a, p + h, x + S, b + _).normalize();
    else if (n === Cf) r[5].setComponents(a, h, S, _).normalize();
    else
      throw new Error(
        "THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: " +
          n
      );
    return this;
  }
  intersectsObject(e) {
    if (e.boundingSphere !== void 0)
      e.boundingSphere === null && e.computeBoundingSphere(),
        Ul.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);
    else {
      const n = e.geometry;
      n.boundingSphere === null && n.computeBoundingSphere(),
        Ul.copy(n.boundingSphere).applyMatrix4(e.matrixWorld);
    }
    return this.intersectsSphere(Ul);
  }
  intersectsSprite(e) {
    return (
      Ul.center.set(0, 0, 0),
      (Ul.radius = 0.7071067811865476),
      Ul.applyMatrix4(e.matrixWorld),
      this.intersectsSphere(Ul)
    );
  }
  intersectsSphere(e) {
    const n = this.planes,
      r = e.center,
      i = -e.radius;
    for (let o = 0; o < 6; o++) if (n[o].distanceToPoint(r) < i) return !1;
    return !0;
  }
  intersectsBox(e) {
    const n = this.planes;
    for (let r = 0; r < 6; r++) {
      const i = n[r];
      if (
        ((ug.x = i.normal.x > 0 ? e.max.x : e.min.x),
        (ug.y = i.normal.y > 0 ? e.max.y : e.min.y),
        (ug.z = i.normal.z > 0 ? e.max.z : e.min.z),
        i.distanceToPoint(ug) < 0)
      )
        return !1;
    }
    return !0;
  }
  containsPoint(e) {
    const n = this.planes;
    for (let r = 0; r < 6; r++) if (n[r].distanceToPoint(e) < 0) return !1;
    return !0;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
function DO() {
  let t = null,
    e = !1,
    n = null,
    r = null;
  function i(o, s) {
    n(o, s), (r = t.requestAnimationFrame(i));
  }
  return {
    start: function () {
      e !== !0 && n !== null && ((r = t.requestAnimationFrame(i)), (e = !0));
    },
    stop: function () {
      t.cancelAnimationFrame(r), (e = !1);
    },
    setAnimationLoop: function (o) {
      n = o;
    },
    setContext: function (o) {
      t = o;
    },
  };
}
function f5(t, e) {
  const n = e.isWebGL2,
    r = new WeakMap();
  function i(c, u) {
    const h = c.array,
      p = c.usage,
      m = h.byteLength,
      v = t.createBuffer();
    t.bindBuffer(u, v), t.bufferData(u, h, p), c.onUploadCallback();
    let S;
    if (h instanceof Float32Array) S = t.FLOAT;
    else if (h instanceof Uint16Array)
      if (c.isFloat16BufferAttribute)
        if (n) S = t.HALF_FLOAT;
        else
          throw new Error(
            "THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."
          );
      else S = t.UNSIGNED_SHORT;
    else if (h instanceof Int16Array) S = t.SHORT;
    else if (h instanceof Uint32Array) S = t.UNSIGNED_INT;
    else if (h instanceof Int32Array) S = t.INT;
    else if (h instanceof Int8Array) S = t.BYTE;
    else if (h instanceof Uint8Array) S = t.UNSIGNED_BYTE;
    else if (h instanceof Uint8ClampedArray) S = t.UNSIGNED_BYTE;
    else
      throw new Error(
        "THREE.WebGLAttributes: Unsupported buffer data format: " + h
      );
    return {
      buffer: v,
      type: S,
      bytesPerElement: h.BYTES_PER_ELEMENT,
      version: c.version,
      size: m,
    };
  }
  function o(c, u, h) {
    const p = u.array,
      m = u._updateRange,
      v = u.updateRanges;
    if (
      (t.bindBuffer(h, c),
      m.count === -1 && v.length === 0 && t.bufferSubData(h, 0, p),
      v.length !== 0)
    ) {
      for (let S = 0, x = v.length; S < x; S++) {
        const g = v[S];
        n
          ? t.bufferSubData(
              h,
              g.start * p.BYTES_PER_ELEMENT,
              p,
              g.start,
              g.count
            )
          : t.bufferSubData(
              h,
              g.start * p.BYTES_PER_ELEMENT,
              p.subarray(g.start, g.start + g.count)
            );
      }
      u.clearUpdateRanges();
    }
    m.count !== -1 &&
      (n
        ? t.bufferSubData(
            h,
            m.offset * p.BYTES_PER_ELEMENT,
            p,
            m.offset,
            m.count
          )
        : t.bufferSubData(
            h,
            m.offset * p.BYTES_PER_ELEMENT,
            p.subarray(m.offset, m.offset + m.count)
          ),
      (m.count = -1)),
      u.onUploadCallback();
  }
  function s(c) {
    return c.isInterleavedBufferAttribute && (c = c.data), r.get(c);
  }
  function a(c) {
    c.isInterleavedBufferAttribute && (c = c.data);
    const u = r.get(c);
    u && (t.deleteBuffer(u.buffer), r.delete(c));
  }
  function l(c, u) {
    if (c.isGLBufferAttribute) {
      const p = r.get(c);
      (!p || p.version < c.version) &&
        r.set(c, {
          buffer: c.buffer,
          type: c.type,
          bytesPerElement: c.elementSize,
          version: c.version,
        });
      return;
    }
    c.isInterleavedBufferAttribute && (c = c.data);
    const h = r.get(c);
    if (h === void 0) r.set(c, i(c, u));
    else if (h.version < c.version) {
      if (h.size !== c.array.byteLength)
        throw new Error(
          "THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported."
        );
      o(h.buffer, c, u), (h.version = c.version);
    }
  }
  return { get: s, remove: a, update: l };
}
class ml extends It {
  constructor(e = 1, n = 1, r = 1, i = 1) {
    super(),
      (this.type = "PlaneGeometry"),
      (this.parameters = {
        width: e,
        height: n,
        widthSegments: r,
        heightSegments: i,
      });
    const o = e / 2,
      s = n / 2,
      a = Math.floor(r),
      l = Math.floor(i),
      c = a + 1,
      u = l + 1,
      h = e / a,
      p = n / l,
      m = [],
      v = [],
      S = [],
      x = [];
    for (let g = 0; g < u; g++) {
      const y = g * p - s;
      for (let _ = 0; _ < c; _++) {
        const b = _ * h - o;
        v.push(b, -y, 0), S.push(0, 0, 1), x.push(_ / a), x.push(1 - g / l);
      }
    }
    for (let g = 0; g < l; g++)
      for (let y = 0; y < a; y++) {
        const _ = y + c * g,
          b = y + c * (g + 1),
          T = y + 1 + c * (g + 1),
          M = y + 1 + c * g;
        m.push(_, b, M), m.push(b, T, M);
      }
    this.setIndex(m),
      this.setAttribute("position", new ut(v, 3)),
      this.setAttribute("normal", new ut(S, 3)),
      this.setAttribute("uv", new ut(x, 2));
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  static fromJSON(e) {
    return new ml(e.width, e.height, e.widthSegments, e.heightSegments);
  }
}
var d5 = `#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,
  h5 = `#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,
  p5 = `#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,
  m5 = `#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,
  g5 = `#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,
  v5 = `#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,
  y5 = `#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,
  x5 = `#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,
  _5 = `#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,
  S5 = `#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,
  w5 = `vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,
  b5 = `vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,
  E5 = `float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,
  M5 = `#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,
  C5 = `#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,
  T5 = `#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,
  A5 = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,
  R5 = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,
  P5 = `#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,
  L5 = `#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,
  I5 = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,
  O5 = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,
  F5 = `#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,
  N5 = `#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,
  D5 = `#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,
  U5 = `vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,
  z5 = `#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,
  k5 = `#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,
  B5 = `#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,
  H5 = `#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,
  V5 = "gl_FragColor = linearToOutputTexel( gl_FragColor );",
  G5 = `
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,
  j5 = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,
  W5 = `#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,
  $5 = `#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,
  X5 = `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,
  q5 = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,
  Y5 = `#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,
  K5 = `#ifdef USE_FOG
	varying float vFogDepth;
#endif`,
  Z5 = `#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,
  Q5 = `#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,
  J5 = `#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,
  e6 = `#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,
  t6 = `#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,
  n6 = `LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,
  r6 = `varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,
  i6 = `uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,
  o6 = `#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,
  s6 = `ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,
  a6 = `varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,
  l6 = `BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,
  c6 = `varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,
  u6 = `PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,
  f6 = `struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,
  d6 = `
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,
  h6 = `#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,
  p6 = `#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,
  m6 = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,
  g6 = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,
  v6 = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,
  y6 = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,
  x6 = `#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,
  _6 = `#ifdef USE_MAP
	uniform sampler2D map;
#endif`,
  S6 = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,
  w6 = `#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,
  b6 = `float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,
  E6 = `#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,
  M6 = `#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,
  C6 = `#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,
  T6 = `#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,
  A6 = `#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,
  R6 = `float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,
  P6 = `#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,
  L6 = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,
  I6 = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,
  O6 = `#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,
  F6 = `#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,
  N6 = `#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,
  D6 = `#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,
  U6 = `#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,
  z6 = `#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,
  k6 = `#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,
  B6 = `vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,
  H6 = `#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,
  V6 = `vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,
  G6 = `#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,
  j6 = `#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,
  W6 = `float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,
  $6 = `#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,
  X6 = `#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,
  q6 = `#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,
  Y6 = `#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,
  K6 = `float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,
  Z6 = `#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,
  Q6 = `#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,
  J6 = `#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,
  eH = `#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,
  tH = `float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,
  nH = `#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,
  rH = `#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,
  iH = `#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color *= toneMappingExposure;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	return color;
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,
  oH = `#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,
  sH = `#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,
  aH = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,
  lH = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,
  cH = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,
  uH = `#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;
const fH = `varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,
  dH = `uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,
  hH = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,
  pH = `#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,
  mH = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,
  gH = `uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,
  vH = `#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,
  yH = `#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,
  xH = `#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,
  _H = `#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,
  SH = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,
  wH = `uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,
  bH = `uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,
  EH = `uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,
  MH = `#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,
  CH = `uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  TH = `#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
  AH = `#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  RH = `#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,
  PH = `#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  LH = `#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,
  IH = `#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,
  OH = `#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
  FH = `#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  NH = `#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,
  DH = `#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  UH = `#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
  zH = `#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  kH = `uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,
  BH = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,
  HH = `#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
  VH = `uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,
  GH = `uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,
  jH = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,
  Lt = {
    alphahash_fragment: d5,
    alphahash_pars_fragment: h5,
    alphamap_fragment: p5,
    alphamap_pars_fragment: m5,
    alphatest_fragment: g5,
    alphatest_pars_fragment: v5,
    aomap_fragment: y5,
    aomap_pars_fragment: x5,
    batching_pars_vertex: _5,
    batching_vertex: S5,
    begin_vertex: w5,
    beginnormal_vertex: b5,
    bsdfs: E5,
    iridescence_fragment: M5,
    bumpmap_pars_fragment: C5,
    clipping_planes_fragment: T5,
    clipping_planes_pars_fragment: A5,
    clipping_planes_pars_vertex: R5,
    clipping_planes_vertex: P5,
    color_fragment: L5,
    color_pars_fragment: I5,
    color_pars_vertex: O5,
    color_vertex: F5,
    common: N5,
    cube_uv_reflection_fragment: D5,
    defaultnormal_vertex: U5,
    displacementmap_pars_vertex: z5,
    displacementmap_vertex: k5,
    emissivemap_fragment: B5,
    emissivemap_pars_fragment: H5,
    colorspace_fragment: V5,
    colorspace_pars_fragment: G5,
    envmap_fragment: j5,
    envmap_common_pars_fragment: W5,
    envmap_pars_fragment: $5,
    envmap_pars_vertex: X5,
    envmap_physical_pars_fragment: o6,
    envmap_vertex: q5,
    fog_vertex: Y5,
    fog_pars_vertex: K5,
    fog_fragment: Z5,
    fog_pars_fragment: Q5,
    gradientmap_pars_fragment: J5,
    lightmap_fragment: e6,
    lightmap_pars_fragment: t6,
    lights_lambert_fragment: n6,
    lights_lambert_pars_fragment: r6,
    lights_pars_begin: i6,
    lights_toon_fragment: s6,
    lights_toon_pars_fragment: a6,
    lights_phong_fragment: l6,
    lights_phong_pars_fragment: c6,
    lights_physical_fragment: u6,
    lights_physical_pars_fragment: f6,
    lights_fragment_begin: d6,
    lights_fragment_maps: h6,
    lights_fragment_end: p6,
    logdepthbuf_fragment: m6,
    logdepthbuf_pars_fragment: g6,
    logdepthbuf_pars_vertex: v6,
    logdepthbuf_vertex: y6,
    map_fragment: x6,
    map_pars_fragment: _6,
    map_particle_fragment: S6,
    map_particle_pars_fragment: w6,
    metalnessmap_fragment: b6,
    metalnessmap_pars_fragment: E6,
    morphcolor_vertex: M6,
    morphnormal_vertex: C6,
    morphtarget_pars_vertex: T6,
    morphtarget_vertex: A6,
    normal_fragment_begin: R6,
    normal_fragment_maps: P6,
    normal_pars_fragment: L6,
    normal_pars_vertex: I6,
    normal_vertex: O6,
    normalmap_pars_fragment: F6,
    clearcoat_normal_fragment_begin: N6,
    clearcoat_normal_fragment_maps: D6,
    clearcoat_pars_fragment: U6,
    iridescence_pars_fragment: z6,
    opaque_fragment: k6,
    packing: B6,
    premultiplied_alpha_fragment: H6,
    project_vertex: V6,
    dithering_fragment: G6,
    dithering_pars_fragment: j6,
    roughnessmap_fragment: W6,
    roughnessmap_pars_fragment: $6,
    shadowmap_pars_fragment: X6,
    shadowmap_pars_vertex: q6,
    shadowmap_vertex: Y6,
    shadowmask_pars_fragment: K6,
    skinbase_vertex: Z6,
    skinning_pars_vertex: Q6,
    skinning_vertex: J6,
    skinnormal_vertex: eH,
    specularmap_fragment: tH,
    specularmap_pars_fragment: nH,
    tonemapping_fragment: rH,
    tonemapping_pars_fragment: iH,
    transmission_fragment: oH,
    transmission_pars_fragment: sH,
    uv_pars_fragment: aH,
    uv_pars_vertex: lH,
    uv_vertex: cH,
    worldpos_vertex: uH,
    background_vert: fH,
    background_frag: dH,
    backgroundCube_vert: hH,
    backgroundCube_frag: pH,
    cube_vert: mH,
    cube_frag: gH,
    depth_vert: vH,
    depth_frag: yH,
    distanceRGBA_vert: xH,
    distanceRGBA_frag: _H,
    equirect_vert: SH,
    equirect_frag: wH,
    linedashed_vert: bH,
    linedashed_frag: EH,
    meshbasic_vert: MH,
    meshbasic_frag: CH,
    meshlambert_vert: TH,
    meshlambert_frag: AH,
    meshmatcap_vert: RH,
    meshmatcap_frag: PH,
    meshnormal_vert: LH,
    meshnormal_frag: IH,
    meshphong_vert: OH,
    meshphong_frag: FH,
    meshphysical_vert: NH,
    meshphysical_frag: DH,
    meshtoon_vert: UH,
    meshtoon_frag: zH,
    points_vert: kH,
    points_frag: BH,
    shadow_vert: HH,
    shadow_frag: VH,
    sprite_vert: GH,
    sprite_frag: jH,
  },
  Ze = {
    common: {
      diffuse: { value: new nt(16777215) },
      opacity: { value: 1 },
      map: { value: null },
      mapTransform: { value: new Ot() },
      alphaMap: { value: null },
      alphaMapTransform: { value: new Ot() },
      alphaTest: { value: 0 },
    },
    specularmap: {
      specularMap: { value: null },
      specularMapTransform: { value: new Ot() },
    },
    envmap: {
      envMap: { value: null },
      flipEnvMap: { value: -1 },
      reflectivity: { value: 1 },
      ior: { value: 1.5 },
      refractionRatio: { value: 0.98 },
    },
    aomap: {
      aoMap: { value: null },
      aoMapIntensity: { value: 1 },
      aoMapTransform: { value: new Ot() },
    },
    lightmap: {
      lightMap: { value: null },
      lightMapIntensity: { value: 1 },
      lightMapTransform: { value: new Ot() },
    },
    bumpmap: {
      bumpMap: { value: null },
      bumpMapTransform: { value: new Ot() },
      bumpScale: { value: 1 },
    },
    normalmap: {
      normalMap: { value: null },
      normalMapTransform: { value: new Ot() },
      normalScale: { value: new Fe(1, 1) },
    },
    displacementmap: {
      displacementMap: { value: null },
      displacementMapTransform: { value: new Ot() },
      displacementScale: { value: 1 },
      displacementBias: { value: 0 },
    },
    emissivemap: {
      emissiveMap: { value: null },
      emissiveMapTransform: { value: new Ot() },
    },
    metalnessmap: {
      metalnessMap: { value: null },
      metalnessMapTransform: { value: new Ot() },
    },
    roughnessmap: {
      roughnessMap: { value: null },
      roughnessMapTransform: { value: new Ot() },
    },
    gradientmap: { gradientMap: { value: null } },
    fog: {
      fogDensity: { value: 25e-5 },
      fogNear: { value: 1 },
      fogFar: { value: 2e3 },
      fogColor: { value: new nt(16777215) },
    },
    lights: {
      ambientLightColor: { value: [] },
      lightProbe: { value: [] },
      directionalLights: {
        value: [],
        properties: { direction: {}, color: {} },
      },
      directionalLightShadows: {
        value: [],
        properties: {
          shadowBias: {},
          shadowNormalBias: {},
          shadowRadius: {},
          shadowMapSize: {},
        },
      },
      directionalShadowMap: { value: [] },
      directionalShadowMatrix: { value: [] },
      spotLights: {
        value: [],
        properties: {
          color: {},
          position: {},
          direction: {},
          distance: {},
          coneCos: {},
          penumbraCos: {},
          decay: {},
        },
      },
      spotLightShadows: {
        value: [],
        properties: {
          shadowBias: {},
          shadowNormalBias: {},
          shadowRadius: {},
          shadowMapSize: {},
        },
      },
      spotLightMap: { value: [] },
      spotShadowMap: { value: [] },
      spotLightMatrix: { value: [] },
      pointLights: {
        value: [],
        properties: { color: {}, position: {}, decay: {}, distance: {} },
      },
      pointLightShadows: {
        value: [],
        properties: {
          shadowBias: {},
          shadowNormalBias: {},
          shadowRadius: {},
          shadowMapSize: {},
          shadowCameraNear: {},
          shadowCameraFar: {},
        },
      },
      pointShadowMap: { value: [] },
      pointShadowMatrix: { value: [] },
      hemisphereLights: {
        value: [],
        properties: { direction: {}, skyColor: {}, groundColor: {} },
      },
      rectAreaLights: {
        value: [],
        properties: { color: {}, position: {}, width: {}, height: {} },
      },
      ltc_1: { value: null },
      ltc_2: { value: null },
    },
    points: {
      diffuse: { value: new nt(16777215) },
      opacity: { value: 1 },
      size: { value: 1 },
      scale: { value: 1 },
      map: { value: null },
      alphaMap: { value: null },
      alphaMapTransform: { value: new Ot() },
      alphaTest: { value: 0 },
      uvTransform: { value: new Ot() },
    },
    sprite: {
      diffuse: { value: new nt(16777215) },
      opacity: { value: 1 },
      center: { value: new Fe(0.5, 0.5) },
      rotation: { value: 0 },
      map: { value: null },
      mapTransform: { value: new Ot() },
      alphaMap: { value: null },
      alphaMapTransform: { value: new Ot() },
      alphaTest: { value: 0 },
    },
  },
  Bo = {
    basic: {
      uniforms: ti([
        Ze.common,
        Ze.specularmap,
        Ze.envmap,
        Ze.aomap,
        Ze.lightmap,
        Ze.fog,
      ]),
      vertexShader: Lt.meshbasic_vert,
      fragmentShader: Lt.meshbasic_frag,
    },
    lambert: {
      uniforms: ti([
        Ze.common,
        Ze.specularmap,
        Ze.envmap,
        Ze.aomap,
        Ze.lightmap,
        Ze.emissivemap,
        Ze.bumpmap,
        Ze.normalmap,
        Ze.displacementmap,
        Ze.fog,
        Ze.lights,
        { emissive: { value: new nt(0) } },
      ]),
      vertexShader: Lt.meshlambert_vert,
      fragmentShader: Lt.meshlambert_frag,
    },
    phong: {
      uniforms: ti([
        Ze.common,
        Ze.specularmap,
        Ze.envmap,
        Ze.aomap,
        Ze.lightmap,
        Ze.emissivemap,
        Ze.bumpmap,
        Ze.normalmap,
        Ze.displacementmap,
        Ze.fog,
        Ze.lights,
        {
          emissive: { value: new nt(0) },
          specular: { value: new nt(1118481) },
          shininess: { value: 30 },
        },
      ]),
      vertexShader: Lt.meshphong_vert,
      fragmentShader: Lt.meshphong_frag,
    },
    standard: {
      uniforms: ti([
        Ze.common,
        Ze.envmap,
        Ze.aomap,
        Ze.lightmap,
        Ze.emissivemap,
        Ze.bumpmap,
        Ze.normalmap,
        Ze.displacementmap,
        Ze.roughnessmap,
        Ze.metalnessmap,
        Ze.fog,
        Ze.lights,
        {
          emissive: { value: new nt(0) },
          roughness: { value: 1 },
          metalness: { value: 0 },
          envMapIntensity: { value: 1 },
        },
      ]),
      vertexShader: Lt.meshphysical_vert,
      fragmentShader: Lt.meshphysical_frag,
    },
    toon: {
      uniforms: ti([
        Ze.common,
        Ze.aomap,
        Ze.lightmap,
        Ze.emissivemap,
        Ze.bumpmap,
        Ze.normalmap,
        Ze.displacementmap,
        Ze.gradientmap,
        Ze.fog,
        Ze.lights,
        { emissive: { value: new nt(0) } },
      ]),
      vertexShader: Lt.meshtoon_vert,
      fragmentShader: Lt.meshtoon_frag,
    },
    matcap: {
      uniforms: ti([
        Ze.common,
        Ze.bumpmap,
        Ze.normalmap,
        Ze.displacementmap,
        Ze.fog,
        { matcap: { value: null } },
      ]),
      vertexShader: Lt.meshmatcap_vert,
      fragmentShader: Lt.meshmatcap_frag,
    },
    points: {
      uniforms: ti([Ze.points, Ze.fog]),
      vertexShader: Lt.points_vert,
      fragmentShader: Lt.points_frag,
    },
    dashed: {
      uniforms: ti([
        Ze.common,
        Ze.fog,
        {
          scale: { value: 1 },
          dashSize: { value: 1 },
          totalSize: { value: 2 },
        },
      ]),
      vertexShader: Lt.linedashed_vert,
      fragmentShader: Lt.linedashed_frag,
    },
    depth: {
      uniforms: ti([Ze.common, Ze.displacementmap]),
      vertexShader: Lt.depth_vert,
      fragmentShader: Lt.depth_frag,
    },
    normal: {
      uniforms: ti([
        Ze.common,
        Ze.bumpmap,
        Ze.normalmap,
        Ze.displacementmap,
        { opacity: { value: 1 } },
      ]),
      vertexShader: Lt.meshnormal_vert,
      fragmentShader: Lt.meshnormal_frag,
    },
    sprite: {
      uniforms: ti([Ze.sprite, Ze.fog]),
      vertexShader: Lt.sprite_vert,
      fragmentShader: Lt.sprite_frag,
    },
    background: {
      uniforms: {
        uvTransform: { value: new Ot() },
        t2D: { value: null },
        backgroundIntensity: { value: 1 },
      },
      vertexShader: Lt.background_vert,
      fragmentShader: Lt.background_frag,
    },
    backgroundCube: {
      uniforms: {
        envMap: { value: null },
        flipEnvMap: { value: -1 },
        backgroundBlurriness: { value: 0 },
        backgroundIntensity: { value: 1 },
      },
      vertexShader: Lt.backgroundCube_vert,
      fragmentShader: Lt.backgroundCube_frag,
    },
    cube: {
      uniforms: {
        tCube: { value: null },
        tFlip: { value: -1 },
        opacity: { value: 1 },
      },
      vertexShader: Lt.cube_vert,
      fragmentShader: Lt.cube_frag,
    },
    equirect: {
      uniforms: { tEquirect: { value: null } },
      vertexShader: Lt.equirect_vert,
      fragmentShader: Lt.equirect_frag,
    },
    distanceRGBA: {
      uniforms: ti([
        Ze.common,
        Ze.displacementmap,
        {
          referencePosition: { value: new W() },
          nearDistance: { value: 1 },
          farDistance: { value: 1e3 },
        },
      ]),
      vertexShader: Lt.distanceRGBA_vert,
      fragmentShader: Lt.distanceRGBA_frag,
    },
    shadow: {
      uniforms: ti([
        Ze.lights,
        Ze.fog,
        { color: { value: new nt(0) }, opacity: { value: 1 } },
      ]),
      vertexShader: Lt.shadow_vert,
      fragmentShader: Lt.shadow_frag,
    },
  };
Bo.physical = {
  uniforms: ti([
    Bo.standard.uniforms,
    {
      clearcoat: { value: 0 },
      clearcoatMap: { value: null },
      clearcoatMapTransform: { value: new Ot() },
      clearcoatNormalMap: { value: null },
      clearcoatNormalMapTransform: { value: new Ot() },
      clearcoatNormalScale: { value: new Fe(1, 1) },
      clearcoatRoughness: { value: 0 },
      clearcoatRoughnessMap: { value: null },
      clearcoatRoughnessMapTransform: { value: new Ot() },
      iridescence: { value: 0 },
      iridescenceMap: { value: null },
      iridescenceMapTransform: { value: new Ot() },
      iridescenceIOR: { value: 1.3 },
      iridescenceThicknessMinimum: { value: 100 },
      iridescenceThicknessMaximum: { value: 400 },
      iridescenceThicknessMap: { value: null },
      iridescenceThicknessMapTransform: { value: new Ot() },
      sheen: { value: 0 },
      sheenColor: { value: new nt(0) },
      sheenColorMap: { value: null },
      sheenColorMapTransform: { value: new Ot() },
      sheenRoughness: { value: 1 },
      sheenRoughnessMap: { value: null },
      sheenRoughnessMapTransform: { value: new Ot() },
      transmission: { value: 0 },
      transmissionMap: { value: null },
      transmissionMapTransform: { value: new Ot() },
      transmissionSamplerSize: { value: new Fe() },
      transmissionSamplerMap: { value: null },
      thickness: { value: 0 },
      thicknessMap: { value: null },
      thicknessMapTransform: { value: new Ot() },
      attenuationDistance: { value: 0 },
      attenuationColor: { value: new nt(0) },
      specularColor: { value: new nt(1, 1, 1) },
      specularColorMap: { value: null },
      specularColorMapTransform: { value: new Ot() },
      specularIntensity: { value: 1 },
      specularIntensityMap: { value: null },
      specularIntensityMapTransform: { value: new Ot() },
      anisotropyVector: { value: new Fe() },
      anisotropyMap: { value: null },
      anisotropyMapTransform: { value: new Ot() },
    },
  ]),
  vertexShader: Lt.meshphysical_vert,
  fragmentShader: Lt.meshphysical_frag,
};
const fg = { r: 0, b: 0, g: 0 };
function WH(t, e, n, r, i, o, s) {
  const a = new nt(0);
  let l = o === !0 ? 0 : 1,
    c,
    u,
    h = null,
    p = 0,
    m = null;
  function v(x, g) {
    let y = !1,
      _ = g.isScene === !0 ? g.background : null;
    _ && _.isTexture && (_ = (g.backgroundBlurriness > 0 ? n : e).get(_)),
      _ === null ? S(a, l) : _ && _.isColor && (S(_, 1), (y = !0));
    const b = t.xr.getEnvironmentBlendMode();
    b === "additive"
      ? r.buffers.color.setClear(0, 0, 0, 1, s)
      : b === "alpha-blend" && r.buffers.color.setClear(0, 0, 0, 0, s),
      (t.autoClear || y) &&
        t.clear(t.autoClearColor, t.autoClearDepth, t.autoClearStencil),
      _ && (_.isCubeTexture || _.mapping === kf)
        ? (u === void 0 &&
            ((u = new An(
              new zc(1, 1, 1),
              new Ko({
                name: "BackgroundCubeMaterial",
                uniforms: Af(Bo.backgroundCube.uniforms),
                vertexShader: Bo.backgroundCube.vertexShader,
                fragmentShader: Bo.backgroundCube.fragmentShader,
                side: Vr,
                depthTest: !1,
                depthWrite: !1,
                fog: !1,
              })
            )),
            u.geometry.deleteAttribute("normal"),
            u.geometry.deleteAttribute("uv"),
            (u.onBeforeRender = function (T, M, C) {
              this.matrixWorld.copyPosition(C.matrixWorld);
            }),
            Object.defineProperty(u.material, "envMap", {
              get: function () {
                return this.uniforms.envMap.value;
              },
            }),
            i.update(u)),
          (u.material.uniforms.envMap.value = _),
          (u.material.uniforms.flipEnvMap.value =
            _.isCubeTexture && _.isRenderTargetTexture === !1 ? -1 : 1),
          (u.material.uniforms.backgroundBlurriness.value =
            g.backgroundBlurriness),
          (u.material.uniforms.backgroundIntensity.value =
            g.backgroundIntensity),
          (u.material.toneMapped = nn.getTransfer(_.colorSpace) !== dn),
          (h !== _ || p !== _.version || m !== t.toneMapping) &&
            ((u.material.needsUpdate = !0),
            (h = _),
            (p = _.version),
            (m = t.toneMapping)),
          u.layers.enableAll(),
          x.unshift(u, u.geometry, u.material, 0, 0, null))
        : _ &&
          _.isTexture &&
          (c === void 0 &&
            ((c = new An(
              new ml(2, 2),
              new Ko({
                name: "BackgroundMaterial",
                uniforms: Af(Bo.background.uniforms),
                vertexShader: Bo.background.vertexShader,
                fragmentShader: Bo.background.fragmentShader,
                side: Ss,
                depthTest: !1,
                depthWrite: !1,
                fog: !1,
              })
            )),
            c.geometry.deleteAttribute("normal"),
            Object.defineProperty(c.material, "map", {
              get: function () {
                return this.uniforms.t2D.value;
              },
            }),
            i.update(c)),
          (c.material.uniforms.t2D.value = _),
          (c.material.uniforms.backgroundIntensity.value =
            g.backgroundIntensity),
          (c.material.toneMapped = nn.getTransfer(_.colorSpace) !== dn),
          _.matrixAutoUpdate === !0 && _.updateMatrix(),
          c.material.uniforms.uvTransform.value.copy(_.matrix),
          (h !== _ || p !== _.version || m !== t.toneMapping) &&
            ((c.material.needsUpdate = !0),
            (h = _),
            (p = _.version),
            (m = t.toneMapping)),
          c.layers.enableAll(),
          x.unshift(c, c.geometry, c.material, 0, 0, null));
  }
  function S(x, g) {
    x.getRGB(fg, OO(t)), r.buffers.color.setClear(fg.r, fg.g, fg.b, g, s);
  }
  return {
    getClearColor: function () {
      return a;
    },
    setClearColor: function (x, g = 1) {
      a.set(x), (l = g), S(a, l);
    },
    getClearAlpha: function () {
      return l;
    },
    setClearAlpha: function (x) {
      (l = x), S(a, l);
    },
    render: v,
  };
}
function $H(t, e, n, r) {
  const i = t.getParameter(t.MAX_VERTEX_ATTRIBS),
    o = r.isWebGL2 ? null : e.get("OES_vertex_array_object"),
    s = r.isWebGL2 || o !== null,
    a = {},
    l = x(null);
  let c = l,
    u = !1;
  function h(D, X, j, Y, N) {
    let V = !1;
    if (s) {
      const G = S(Y, j, X);
      c !== G && ((c = G), m(c.object)),
        (V = g(D, Y, j, N)),
        V && y(D, Y, j, N);
    } else {
      const G = X.wireframe === !0;
      (c.geometry !== Y.id || c.program !== j.id || c.wireframe !== G) &&
        ((c.geometry = Y.id), (c.program = j.id), (c.wireframe = G), (V = !0));
    }
    N !== null && n.update(N, t.ELEMENT_ARRAY_BUFFER),
      (V || u) &&
        ((u = !1),
        L(D, X, j, Y),
        N !== null && t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, n.get(N).buffer));
  }
  function p() {
    return r.isWebGL2 ? t.createVertexArray() : o.createVertexArrayOES();
  }
  function m(D) {
    return r.isWebGL2 ? t.bindVertexArray(D) : o.bindVertexArrayOES(D);
  }
  function v(D) {
    return r.isWebGL2 ? t.deleteVertexArray(D) : o.deleteVertexArrayOES(D);
  }
  function S(D, X, j) {
    const Y = j.wireframe === !0;
    let N = a[D.id];
    N === void 0 && ((N = {}), (a[D.id] = N));
    let V = N[X.id];
    V === void 0 && ((V = {}), (N[X.id] = V));
    let G = V[Y];
    return G === void 0 && ((G = x(p())), (V[Y] = G)), G;
  }
  function x(D) {
    const X = [],
      j = [],
      Y = [];
    for (let N = 0; N < i; N++) (X[N] = 0), (j[N] = 0), (Y[N] = 0);
    return {
      geometry: null,
      program: null,
      wireframe: !1,
      newAttributes: X,
      enabledAttributes: j,
      attributeDivisors: Y,
      object: D,
      attributes: {},
      index: null,
    };
  }
  function g(D, X, j, Y) {
    const N = c.attributes,
      V = X.attributes;
    let G = 0;
    const U = j.getAttributes();
    for (const Z in U)
      if (U[Z].location >= 0) {
        const te = N[Z];
        let re = V[Z];
        if (
          (re === void 0 &&
            (Z === "instanceMatrix" &&
              D.instanceMatrix &&
              (re = D.instanceMatrix),
            Z === "instanceColor" && D.instanceColor && (re = D.instanceColor)),
          te === void 0 || te.attribute !== re || (re && te.data !== re.data))
        )
          return !0;
        G++;
      }
    return c.attributesNum !== G || c.index !== Y;
  }
  function y(D, X, j, Y) {
    const N = {},
      V = X.attributes;
    let G = 0;
    const U = j.getAttributes();
    for (const Z in U)
      if (U[Z].location >= 0) {
        let te = V[Z];
        te === void 0 &&
          (Z === "instanceMatrix" &&
            D.instanceMatrix &&
            (te = D.instanceMatrix),
          Z === "instanceColor" && D.instanceColor && (te = D.instanceColor));
        const re = {};
        (re.attribute = te),
          te && te.data && (re.data = te.data),
          (N[Z] = re),
          G++;
      }
    (c.attributes = N), (c.attributesNum = G), (c.index = Y);
  }
  function _() {
    const D = c.newAttributes;
    for (let X = 0, j = D.length; X < j; X++) D[X] = 0;
  }
  function b(D) {
    T(D, 0);
  }
  function T(D, X) {
    const j = c.newAttributes,
      Y = c.enabledAttributes,
      N = c.attributeDivisors;
    (j[D] = 1),
      Y[D] === 0 && (t.enableVertexAttribArray(D), (Y[D] = 1)),
      N[D] !== X &&
        ((r.isWebGL2 ? t : e.get("ANGLE_instanced_arrays"))[
          r.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"
        ](D, X),
        (N[D] = X));
  }
  function M() {
    const D = c.newAttributes,
      X = c.enabledAttributes;
    for (let j = 0, Y = X.length; j < Y; j++)
      X[j] !== D[j] && (t.disableVertexAttribArray(j), (X[j] = 0));
  }
  function C(D, X, j, Y, N, V, G) {
    G === !0
      ? t.vertexAttribIPointer(D, X, j, N, V)
      : t.vertexAttribPointer(D, X, j, Y, N, V);
  }
  function L(D, X, j, Y) {
    if (
      r.isWebGL2 === !1 &&
      (D.isInstancedMesh || Y.isInstancedBufferGeometry) &&
      e.get("ANGLE_instanced_arrays") === null
    )
      return;
    _();
    const N = Y.attributes,
      V = j.getAttributes(),
      G = X.defaultAttributeValues;
    for (const U in V) {
      const Z = V[U];
      if (Z.location >= 0) {
        let Q = N[U];
        if (
          (Q === void 0 &&
            (U === "instanceMatrix" &&
              D.instanceMatrix &&
              (Q = D.instanceMatrix),
            U === "instanceColor" && D.instanceColor && (Q = D.instanceColor)),
          Q !== void 0)
        ) {
          const te = Q.normalized,
            re = Q.itemSize,
            le = n.get(Q);
          if (le === void 0) continue;
          const oe = le.buffer,
            ve = le.type,
            Ae = le.bytesPerElement,
            Re =
              r.isWebGL2 === !0 &&
              (ve === t.INT || ve === t.UNSIGNED_INT || Q.gpuType === AE);
          if (Q.isInterleavedBufferAttribute) {
            const ye = Q.data,
              q = ye.stride,
              xe = Q.offset;
            if (ye.isInstancedInterleavedBuffer) {
              for (let he = 0; he < Z.locationSize; he++)
                T(Z.location + he, ye.meshPerAttribute);
              D.isInstancedMesh !== !0 &&
                Y._maxInstanceCount === void 0 &&
                (Y._maxInstanceCount = ye.meshPerAttribute * ye.count);
            } else
              for (let he = 0; he < Z.locationSize; he++) b(Z.location + he);
            t.bindBuffer(t.ARRAY_BUFFER, oe);
            for (let he = 0; he < Z.locationSize; he++)
              C(
                Z.location + he,
                re / Z.locationSize,
                ve,
                te,
                q * Ae,
                (xe + (re / Z.locationSize) * he) * Ae,
                Re
              );
          } else {
            if (Q.isInstancedBufferAttribute) {
              for (let ye = 0; ye < Z.locationSize; ye++)
                T(Z.location + ye, Q.meshPerAttribute);
              D.isInstancedMesh !== !0 &&
                Y._maxInstanceCount === void 0 &&
                (Y._maxInstanceCount = Q.meshPerAttribute * Q.count);
            } else
              for (let ye = 0; ye < Z.locationSize; ye++) b(Z.location + ye);
            t.bindBuffer(t.ARRAY_BUFFER, oe);
            for (let ye = 0; ye < Z.locationSize; ye++)
              C(
                Z.location + ye,
                re / Z.locationSize,
                ve,
                te,
                re * Ae,
                (re / Z.locationSize) * ye * Ae,
                Re
              );
          }
        } else if (G !== void 0) {
          const te = G[U];
          if (te !== void 0)
            switch (te.length) {
              case 2:
                t.vertexAttrib2fv(Z.location, te);
                break;
              case 3:
                t.vertexAttrib3fv(Z.location, te);
                break;
              case 4:
                t.vertexAttrib4fv(Z.location, te);
                break;
              default:
                t.vertexAttrib1fv(Z.location, te);
            }
        }
      }
    }
    M();
  }
  function A() {
    B();
    for (const D in a) {
      const X = a[D];
      for (const j in X) {
        const Y = X[j];
        for (const N in Y) v(Y[N].object), delete Y[N];
        delete X[j];
      }
      delete a[D];
    }
  }
  function P(D) {
    if (a[D.id] === void 0) return;
    const X = a[D.id];
    for (const j in X) {
      const Y = X[j];
      for (const N in Y) v(Y[N].object), delete Y[N];
      delete X[j];
    }
    delete a[D.id];
  }
  function k(D) {
    for (const X in a) {
      const j = a[X];
      if (j[D.id] === void 0) continue;
      const Y = j[D.id];
      for (const N in Y) v(Y[N].object), delete Y[N];
      delete j[D.id];
    }
  }
  function B() {
    $(), (u = !0), c !== l && ((c = l), m(c.object));
  }
  function $() {
    (l.geometry = null), (l.program = null), (l.wireframe = !1);
  }
  return {
    setup: h,
    reset: B,
    resetDefaultState: $,
    dispose: A,
    releaseStatesOfGeometry: P,
    releaseStatesOfProgram: k,
    initAttributes: _,
    enableAttribute: b,
    disableUnusedAttributes: M,
  };
}
function XH(t, e, n, r) {
  const i = r.isWebGL2;
  let o;
  function s(u) {
    o = u;
  }
  function a(u, h) {
    t.drawArrays(o, u, h), n.update(h, o, 1);
  }
  function l(u, h, p) {
    if (p === 0) return;
    let m, v;
    if (i) (m = t), (v = "drawArraysInstanced");
    else if (
      ((m = e.get("ANGLE_instanced_arrays")),
      (v = "drawArraysInstancedANGLE"),
      m === null)
    ) {
      console.error(
        "THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
      );
      return;
    }
    m[v](o, u, h, p), n.update(h, o, p);
  }
  function c(u, h, p) {
    if (p === 0) return;
    const m = e.get("WEBGL_multi_draw");
    if (m === null) for (let v = 0; v < p; v++) this.render(u[v], h[v]);
    else {
      m.multiDrawArraysWEBGL(o, u, 0, h, 0, p);
      let v = 0;
      for (let S = 0; S < p; S++) v += h[S];
      n.update(v, o, 1);
    }
  }
  (this.setMode = s),
    (this.render = a),
    (this.renderInstances = l),
    (this.renderMultiDraw = c);
}
function qH(t, e, n) {
  let r;
  function i() {
    if (r !== void 0) return r;
    if (e.has("EXT_texture_filter_anisotropic") === !0) {
      const C = e.get("EXT_texture_filter_anisotropic");
      r = t.getParameter(C.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
    } else r = 0;
    return r;
  }
  function o(C) {
    if (C === "highp") {
      if (
        t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.HIGH_FLOAT).precision >
          0 &&
        t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.HIGH_FLOAT).precision >
          0
      )
        return "highp";
      C = "mediump";
    }
    return C === "mediump" &&
      t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.MEDIUM_FLOAT).precision >
        0 &&
      t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.MEDIUM_FLOAT).precision >
        0
      ? "mediump"
      : "lowp";
  }
  const s =
    typeof WebGL2RenderingContext < "u" &&
    t.constructor.name === "WebGL2RenderingContext";
  let a = n.precision !== void 0 ? n.precision : "highp";
  const l = o(a);
  l !== a &&
    (console.warn(
      "THREE.WebGLRenderer:",
      a,
      "not supported, using",
      l,
      "instead."
    ),
    (a = l));
  const c = s || e.has("WEBGL_draw_buffers"),
    u = n.logarithmicDepthBuffer === !0,
    h = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),
    p = t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),
    m = t.getParameter(t.MAX_TEXTURE_SIZE),
    v = t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),
    S = t.getParameter(t.MAX_VERTEX_ATTRIBS),
    x = t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),
    g = t.getParameter(t.MAX_VARYING_VECTORS),
    y = t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),
    _ = p > 0,
    b = s || e.has("OES_texture_float"),
    T = _ && b,
    M = s ? t.getParameter(t.MAX_SAMPLES) : 0;
  return {
    isWebGL2: s,
    drawBuffers: c,
    getMaxAnisotropy: i,
    getMaxPrecision: o,
    precision: a,
    logarithmicDepthBuffer: u,
    maxTextures: h,
    maxVertexTextures: p,
    maxTextureSize: m,
    maxCubemapSize: v,
    maxAttributes: S,
    maxVertexUniforms: x,
    maxVaryings: g,
    maxFragmentUniforms: y,
    vertexTextures: _,
    floatFragmentTextures: b,
    floatVertexTextures: T,
    maxSamples: M,
  };
}
function YH(t) {
  const e = this;
  let n = null,
    r = 0,
    i = !1,
    o = !1;
  const s = new qs(),
    a = new Ot(),
    l = { value: null, needsUpdate: !1 };
  (this.uniform = l),
    (this.numPlanes = 0),
    (this.numIntersection = 0),
    (this.init = function (h, p) {
      const m = h.length !== 0 || p || r !== 0 || i;
      return (i = p), (r = h.length), m;
    }),
    (this.beginShadows = function () {
      (o = !0), u(null);
    }),
    (this.endShadows = function () {
      o = !1;
    }),
    (this.setGlobalState = function (h, p) {
      n = u(h, p, 0);
    }),
    (this.setState = function (h, p, m) {
      const v = h.clippingPlanes,
        S = h.clipIntersection,
        x = h.clipShadows,
        g = t.get(h);
      if (!i || v === null || v.length === 0 || (o && !x)) o ? u(null) : c();
      else {
        const y = o ? 0 : r,
          _ = y * 4;
        let b = g.clippingState || null;
        (l.value = b), (b = u(v, p, _, m));
        for (let T = 0; T !== _; ++T) b[T] = n[T];
        (g.clippingState = b),
          (this.numIntersection = S ? this.numPlanes : 0),
          (this.numPlanes += y);
      }
    });
  function c() {
    l.value !== n && ((l.value = n), (l.needsUpdate = r > 0)),
      (e.numPlanes = r),
      (e.numIntersection = 0);
  }
  function u(h, p, m, v) {
    const S = h !== null ? h.length : 0;
    let x = null;
    if (S !== 0) {
      if (((x = l.value), v !== !0 || x === null)) {
        const g = m + S * 4,
          y = p.matrixWorldInverse;
        a.getNormalMatrix(y),
          (x === null || x.length < g) && (x = new Float32Array(g));
        for (let _ = 0, b = m; _ !== S; ++_, b += 4)
          s.copy(h[_]).applyMatrix4(y, a),
            s.normal.toArray(x, b),
            (x[b + 3] = s.constant);
      }
      (l.value = x), (l.needsUpdate = !0);
    }
    return (e.numPlanes = S), (e.numIntersection = 0), x;
  }
}
function KH(t) {
  let e = new WeakMap();
  function n(s, a) {
    return a === Oh ? (s.mapping = la) : a === Fh && (s.mapping = il), s;
  }
  function r(s) {
    if (s && s.isTexture) {
      const a = s.mapping;
      if (a === Oh || a === Fh)
        if (e.has(s)) {
          const l = e.get(s).texture;
          return n(l, s.mapping);
        } else {
          const l = s.image;
          if (l && l.height > 0) {
            const c = new NO(l.height / 2);
            return (
              c.fromEquirectangularTexture(t, s),
              e.set(s, c),
              s.addEventListener("dispose", i),
              n(c.texture, s.mapping)
            );
          } else return null;
        }
    }
    return s;
  }
  function i(s) {
    const a = s.target;
    a.removeEventListener("dispose", i);
    const l = e.get(a);
    l !== void 0 && (e.delete(a), l.dispose());
  }
  function o() {
    e = new WeakMap();
  }
  return { get: r, dispose: o };
}
class ea extends xp {
  constructor(e = -1, n = 1, r = 1, i = -1, o = 0.1, s = 2e3) {
    super(),
      (this.isOrthographicCamera = !0),
      (this.type = "OrthographicCamera"),
      (this.zoom = 1),
      (this.view = null),
      (this.left = e),
      (this.right = n),
      (this.top = r),
      (this.bottom = i),
      (this.near = o),
      (this.far = s),
      this.updateProjectionMatrix();
  }
  copy(e, n) {
    return (
      super.copy(e, n),
      (this.left = e.left),
      (this.right = e.right),
      (this.top = e.top),
      (this.bottom = e.bottom),
      (this.near = e.near),
      (this.far = e.far),
      (this.zoom = e.zoom),
      (this.view = e.view === null ? null : Object.assign({}, e.view)),
      this
    );
  }
  setViewOffset(e, n, r, i, o, s) {
    this.view === null &&
      (this.view = {
        enabled: !0,
        fullWidth: 1,
        fullHeight: 1,
        offsetX: 0,
        offsetY: 0,
        width: 1,
        height: 1,
      }),
      (this.view.enabled = !0),
      (this.view.fullWidth = e),
      (this.view.fullHeight = n),
      (this.view.offsetX = r),
      (this.view.offsetY = i),
      (this.view.width = o),
      (this.view.height = s),
      this.updateProjectionMatrix();
  }
  clearViewOffset() {
    this.view !== null && (this.view.enabled = !1),
      this.updateProjectionMatrix();
  }
  updateProjectionMatrix() {
    const e = (this.right - this.left) / (2 * this.zoom),
      n = (this.top - this.bottom) / (2 * this.zoom),
      r = (this.right + this.left) / 2,
      i = (this.top + this.bottom) / 2;
    let o = r - e,
      s = r + e,
      a = i + n,
      l = i - n;
    if (this.view !== null && this.view.enabled) {
      const c = (this.right - this.left) / this.view.fullWidth / this.zoom,
        u = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
      (o += c * this.view.offsetX),
        (s = o + c * this.view.width),
        (a -= u * this.view.offsetY),
        (l = a - u * this.view.height);
    }
    this.projectionMatrix.makeOrthographic(
      o,
      s,
      a,
      l,
      this.near,
      this.far,
      this.coordinateSystem
    ),
      this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
  }
  toJSON(e) {
    const n = super.toJSON(e);
    return (
      (n.object.zoom = this.zoom),
      (n.object.left = this.left),
      (n.object.right = this.right),
      (n.object.top = this.top),
      (n.object.bottom = this.bottom),
      (n.object.near = this.near),
      (n.object.far = this.far),
      this.view !== null && (n.object.view = Object.assign({}, this.view)),
      n
    );
  }
}
const Qu = 4,
  tA = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582],
  Jl = 20,
  z1 = new ea(),
  nA = new nt();
let k1 = null,
  B1 = 0,
  H1 = 0;
const Kl = (1 + Math.sqrt(5)) / 2,
  Su = 1 / Kl,
  rA = [
    new W(1, 1, 1),
    new W(-1, 1, 1),
    new W(1, 1, -1),
    new W(-1, 1, -1),
    new W(0, Kl, Su),
    new W(0, Kl, -Su),
    new W(Su, 0, Kl),
    new W(-Su, 0, Kl),
    new W(Kl, Su, 0),
    new W(-Kl, Su, 0),
  ];
class _w {
  constructor(e) {
    (this._renderer = e),
      (this._pingPongRenderTarget = null),
      (this._lodMax = 0),
      (this._cubeSize = 0),
      (this._lodPlanes = []),
      (this._sizeLods = []),
      (this._sigmas = []),
      (this._blurMaterial = null),
      (this._cubemapMaterial = null),
      (this._equirectMaterial = null),
      this._compileMaterial(this._blurMaterial);
  }
  fromScene(e, n = 0, r = 0.1, i = 100) {
    (k1 = this._renderer.getRenderTarget()),
      (B1 = this._renderer.getActiveCubeFace()),
      (H1 = this._renderer.getActiveMipmapLevel()),
      this._setSize(256);
    const o = this._allocateTargets();
    return (
      (o.depthBuffer = !0),
      this._sceneToCubeUV(e, r, i, o),
      n > 0 && this._blur(o, 0, 0, n),
      this._applyPMREM(o),
      this._cleanup(o),
      o
    );
  }
  fromEquirectangular(e, n = null) {
    return this._fromTexture(e, n);
  }
  fromCubemap(e, n = null) {
    return this._fromTexture(e, n);
  }
  compileCubemapShader() {
    this._cubemapMaterial === null &&
      ((this._cubemapMaterial = sA()),
      this._compileMaterial(this._cubemapMaterial));
  }
  compileEquirectangularShader() {
    this._equirectMaterial === null &&
      ((this._equirectMaterial = oA()),
      this._compileMaterial(this._equirectMaterial));
  }
  dispose() {
    this._dispose(),
      this._cubemapMaterial !== null && this._cubemapMaterial.dispose(),
      this._equirectMaterial !== null && this._equirectMaterial.dispose();
  }
  _setSize(e) {
    (this._lodMax = Math.floor(Math.log2(e))),
      (this._cubeSize = Math.pow(2, this._lodMax));
  }
  _dispose() {
    this._blurMaterial !== null && this._blurMaterial.dispose(),
      this._pingPongRenderTarget !== null &&
        this._pingPongRenderTarget.dispose();
    for (let e = 0; e < this._lodPlanes.length; e++)
      this._lodPlanes[e].dispose();
  }
  _cleanup(e) {
    this._renderer.setRenderTarget(k1, B1, H1),
      (e.scissorTest = !1),
      dg(e, 0, 0, e.width, e.height);
  }
  _fromTexture(e, n) {
    e.mapping === la || e.mapping === il
      ? this._setSize(
          e.image.length === 0 ? 16 : e.image[0].width || e.image[0].image.width
        )
      : this._setSize(e.image.width / 4),
      (k1 = this._renderer.getRenderTarget()),
      (B1 = this._renderer.getActiveCubeFace()),
      (H1 = this._renderer.getActiveMipmapLevel());
    const r = n || this._allocateTargets();
    return (
      this._textureToCubeUV(e, r), this._applyPMREM(r), this._cleanup(r), r
    );
  }
  _allocateTargets() {
    const e = 3 * Math.max(this._cubeSize, 112),
      n = 4 * this._cubeSize,
      r = {
        magFilter: Cn,
        minFilter: Cn,
        generateMipmaps: !1,
        type: Mf,
        format: ri,
        colorSpace: ws,
        depthBuffer: !1,
      },
      i = iA(e, n, r);
    if (
      this._pingPongRenderTarget === null ||
      this._pingPongRenderTarget.width !== e ||
      this._pingPongRenderTarget.height !== n
    ) {
      this._pingPongRenderTarget !== null && this._dispose(),
        (this._pingPongRenderTarget = iA(e, n, r));
      const { _lodMax: o } = this;
      ({
        sizeLods: this._sizeLods,
        lodPlanes: this._lodPlanes,
        sigmas: this._sigmas,
      } = ZH(o)),
        (this._blurMaterial = QH(o, e, n));
    }
    return i;
  }
  _compileMaterial(e) {
    const n = new An(this._lodPlanes[0], e);
    this._renderer.compile(n, z1);
  }
  _sceneToCubeUV(e, n, r, i) {
    const a = new Un(90, 1, n, r),
      l = [1, -1, 1, 1, 1, 1],
      c = [1, 1, 1, -1, -1, -1],
      u = this._renderer,
      h = u.autoClear,
      p = u.toneMapping;
    u.getClearColor(nA), (u.toneMapping = ys), (u.autoClear = !1);
    const m = new pa({
        name: "PMREM.Background",
        side: Vr,
        depthWrite: !1,
        depthTest: !1,
      }),
      v = new An(new zc(), m);
    let S = !1;
    const x = e.background;
    x
      ? x.isColor && (m.color.copy(x), (e.background = null), (S = !0))
      : (m.color.copy(nA), (S = !0));
    for (let g = 0; g < 6; g++) {
      const y = g % 3;
      y === 0
        ? (a.up.set(0, l[g], 0), a.lookAt(c[g], 0, 0))
        : y === 1
        ? (a.up.set(0, 0, l[g]), a.lookAt(0, c[g], 0))
        : (a.up.set(0, l[g], 0), a.lookAt(0, 0, c[g]));
      const _ = this._cubeSize;
      dg(i, y * _, g > 2 ? _ : 0, _, _),
        u.setRenderTarget(i),
        S && u.render(v, a),
        u.render(e, a);
    }
    v.geometry.dispose(),
      v.material.dispose(),
      (u.toneMapping = p),
      (u.autoClear = h),
      (e.background = x);
  }
  _textureToCubeUV(e, n) {
    const r = this._renderer,
      i = e.mapping === la || e.mapping === il;
    i
      ? (this._cubemapMaterial === null && (this._cubemapMaterial = sA()),
        (this._cubemapMaterial.uniforms.flipEnvMap.value =
          e.isRenderTargetTexture === !1 ? -1 : 1))
      : this._equirectMaterial === null && (this._equirectMaterial = oA());
    const o = i ? this._cubemapMaterial : this._equirectMaterial,
      s = new An(this._lodPlanes[0], o),
      a = o.uniforms;
    a.envMap.value = e;
    const l = this._cubeSize;
    dg(n, 0, 0, 3 * l, 2 * l), r.setRenderTarget(n), r.render(s, z1);
  }
  _applyPMREM(e) {
    const n = this._renderer,
      r = n.autoClear;
    n.autoClear = !1;
    for (let i = 1; i < this._lodPlanes.length; i++) {
      const o = Math.sqrt(
          this._sigmas[i] * this._sigmas[i] -
            this._sigmas[i - 1] * this._sigmas[i - 1]
        ),
        s = rA[(i - 1) % rA.length];
      this._blur(e, i - 1, i, o, s);
    }
    n.autoClear = r;
  }
  _blur(e, n, r, i, o) {
    const s = this._pingPongRenderTarget;
    this._halfBlur(e, s, n, r, i, "latitudinal", o),
      this._halfBlur(s, e, r, r, i, "longitudinal", o);
  }
  _halfBlur(e, n, r, i, o, s, a) {
    const l = this._renderer,
      c = this._blurMaterial;
    s !== "latitudinal" &&
      s !== "longitudinal" &&
      console.error(
        "blur direction must be either latitudinal or longitudinal!"
      );
    const u = 3,
      h = new An(this._lodPlanes[i], c),
      p = c.uniforms,
      m = this._sizeLods[r] - 1,
      v = isFinite(o) ? Math.PI / (2 * m) : (2 * Math.PI) / (2 * Jl - 1),
      S = o / v,
      x = isFinite(o) ? 1 + Math.floor(u * S) : Jl;
    x > Jl &&
      console.warn(
        `sigmaRadians, ${o}, is too large and will clip, as it requested ${x} samples when the maximum is set to ${Jl}`
      );
    const g = [];
    let y = 0;
    for (let C = 0; C < Jl; ++C) {
      const L = C / S,
        A = Math.exp((-L * L) / 2);
      g.push(A), C === 0 ? (y += A) : C < x && (y += 2 * A);
    }
    for (let C = 0; C < g.length; C++) g[C] = g[C] / y;
    (p.envMap.value = e.texture),
      (p.samples.value = x),
      (p.weights.value = g),
      (p.latitudinal.value = s === "latitudinal"),
      a && (p.poleAxis.value = a);
    const { _lodMax: _ } = this;
    (p.dTheta.value = v), (p.mipInt.value = _ - r);
    const b = this._sizeLods[i],
      T = 3 * b * (i > _ - Qu ? i - _ + Qu : 0),
      M = 4 * (this._cubeSize - b);
    dg(n, T, M, 3 * b, 2 * b), l.setRenderTarget(n), l.render(h, z1);
  }
}
function ZH(t) {
  const e = [],
    n = [],
    r = [];
  let i = t;
  const o = t - Qu + 1 + tA.length;
  for (let s = 0; s < o; s++) {
    const a = Math.pow(2, i);
    n.push(a);
    let l = 1 / a;
    s > t - Qu ? (l = tA[s - t + Qu - 1]) : s === 0 && (l = 0), r.push(l);
    const c = 1 / (a - 2),
      u = -c,
      h = 1 + c,
      p = [u, u, h, u, h, h, u, u, h, h, u, h],
      m = 6,
      v = 6,
      S = 3,
      x = 2,
      g = 1,
      y = new Float32Array(S * v * m),
      _ = new Float32Array(x * v * m),
      b = new Float32Array(g * v * m);
    for (let M = 0; M < m; M++) {
      const C = ((M % 3) * 2) / 3 - 1,
        L = M > 2 ? 0 : -1,
        A = [
          C,
          L,
          0,
          C + 2 / 3,
          L,
          0,
          C + 2 / 3,
          L + 1,
          0,
          C,
          L,
          0,
          C + 2 / 3,
          L + 1,
          0,
          C,
          L + 1,
          0,
        ];
      y.set(A, S * v * M), _.set(p, x * v * M);
      const P = [M, M, M, M, M, M];
      b.set(P, g * v * M);
    }
    const T = new It();
    T.setAttribute("position", new en(y, S)),
      T.setAttribute("uv", new en(_, x)),
      T.setAttribute("faceIndex", new en(b, g)),
      e.push(T),
      i > Qu && i--;
  }
  return { lodPlanes: e, sizeLods: n, sigmas: r };
}
function iA(t, e, n) {
  const r = new Yo(t, e, n);
  return (
    (r.texture.mapping = kf),
    (r.texture.name = "PMREM.cubeUv"),
    (r.scissorTest = !0),
    r
  );
}
function dg(t, e, n, r, i) {
  t.viewport.set(e, n, r, i), t.scissor.set(e, n, r, i);
}
function QH(t, e, n) {
  const r = new Float32Array(Jl),
    i = new W(0, 1, 0);
  return new Ko({
    name: "SphericalGaussianBlur",
    defines: {
      n: Jl,
      CUBEUV_TEXEL_WIDTH: 1 / e,
      CUBEUV_TEXEL_HEIGHT: 1 / n,
      CUBEUV_MAX_MIP: `${t}.0`,
    },
    uniforms: {
      envMap: { value: null },
      samples: { value: 1 },
      weights: { value: r },
      latitudinal: { value: !1 },
      dTheta: { value: 0 },
      mipInt: { value: 0 },
      poleAxis: { value: i },
    },
    vertexShader: jE(),
    fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,
    blending: ra,
    depthTest: !1,
    depthWrite: !1,
  });
}
function oA() {
  return new Ko({
    name: "EquirectangularToCubeUV",
    uniforms: { envMap: { value: null } },
    vertexShader: jE(),
    fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,
    blending: ra,
    depthTest: !1,
    depthWrite: !1,
  });
}
function sA() {
  return new Ko({
    name: "CubemapToCubeUV",
    uniforms: { envMap: { value: null }, flipEnvMap: { value: -1 } },
    vertexShader: jE(),
    fragmentShader: `

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,
    blending: ra,
    depthTest: !1,
    depthWrite: !1,
  });
}
function jE() {
  return `

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`;
}
function JH(t) {
  let e = new WeakMap(),
    n = null;
  function r(a) {
    if (a && a.isTexture) {
      const l = a.mapping,
        c = l === Oh || l === Fh,
        u = l === la || l === il;
      if (c || u)
        if (a.isRenderTargetTexture && a.needsPMREMUpdate === !0) {
          a.needsPMREMUpdate = !1;
          let h = e.get(a);
          return (
            n === null && (n = new _w(t)),
            (h = c ? n.fromEquirectangular(a, h) : n.fromCubemap(a, h)),
            e.set(a, h),
            h.texture
          );
        } else {
          if (e.has(a)) return e.get(a).texture;
          {
            const h = a.image;
            if ((c && h && h.height > 0) || (u && h && i(h))) {
              n === null && (n = new _w(t));
              const p = c ? n.fromEquirectangular(a) : n.fromCubemap(a);
              return e.set(a, p), a.addEventListener("dispose", o), p.texture;
            } else return null;
          }
        }
    }
    return a;
  }
  function i(a) {
    let l = 0;
    const c = 6;
    for (let u = 0; u < c; u++) a[u] !== void 0 && l++;
    return l === c;
  }
  function o(a) {
    const l = a.target;
    l.removeEventListener("dispose", o);
    const c = e.get(l);
    c !== void 0 && (e.delete(l), c.dispose());
  }
  function s() {
    (e = new WeakMap()), n !== null && (n.dispose(), (n = null));
  }
  return { get: r, dispose: s };
}
function eV(t) {
  const e = {};
  function n(r) {
    if (e[r] !== void 0) return e[r];
    let i;
    switch (r) {
      case "WEBGL_depth_texture":
        i =
          t.getExtension("WEBGL_depth_texture") ||
          t.getExtension("MOZ_WEBGL_depth_texture") ||
          t.getExtension("WEBKIT_WEBGL_depth_texture");
        break;
      case "EXT_texture_filter_anisotropic":
        i =
          t.getExtension("EXT_texture_filter_anisotropic") ||
          t.getExtension("MOZ_EXT_texture_filter_anisotropic") ||
          t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
        break;
      case "WEBGL_compressed_texture_s3tc":
        i =
          t.getExtension("WEBGL_compressed_texture_s3tc") ||
          t.getExtension("MOZ_WEBGL_compressed_texture_s3tc") ||
          t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
        break;
      case "WEBGL_compressed_texture_pvrtc":
        i =
          t.getExtension("WEBGL_compressed_texture_pvrtc") ||
          t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
        break;
      default:
        i = t.getExtension(r);
    }
    return (e[r] = i), i;
  }
  return {
    has: function (r) {
      return n(r) !== null;
    },
    init: function (r) {
      r.isWebGL2
        ? (n("EXT_color_buffer_float"), n("WEBGL_clip_cull_distance"))
        : (n("WEBGL_depth_texture"),
          n("OES_texture_float"),
          n("OES_texture_half_float"),
          n("OES_texture_half_float_linear"),
          n("OES_standard_derivatives"),
          n("OES_element_index_uint"),
          n("OES_vertex_array_object"),
          n("ANGLE_instanced_arrays")),
        n("OES_texture_float_linear"),
        n("EXT_color_buffer_half_float"),
        n("WEBGL_multisampled_render_to_texture");
    },
    get: function (r) {
      const i = n(r);
      return (
        i === null &&
          console.warn(
            "THREE.WebGLRenderer: " + r + " extension not supported."
          ),
        i
      );
    },
  };
}
function tV(t, e, n, r) {
  const i = {},
    o = new WeakMap();
  function s(h) {
    const p = h.target;
    p.index !== null && e.remove(p.index);
    for (const v in p.attributes) e.remove(p.attributes[v]);
    for (const v in p.morphAttributes) {
      const S = p.morphAttributes[v];
      for (let x = 0, g = S.length; x < g; x++) e.remove(S[x]);
    }
    p.removeEventListener("dispose", s), delete i[p.id];
    const m = o.get(p);
    m && (e.remove(m), o.delete(p)),
      r.releaseStatesOfGeometry(p),
      p.isInstancedBufferGeometry === !0 && delete p._maxInstanceCount,
      n.memory.geometries--;
  }
  function a(h, p) {
    return (
      i[p.id] === !0 ||
        (p.addEventListener("dispose", s),
        (i[p.id] = !0),
        n.memory.geometries++),
      p
    );
  }
  function l(h) {
    const p = h.attributes;
    for (const v in p) e.update(p[v], t.ARRAY_BUFFER);
    const m = h.morphAttributes;
    for (const v in m) {
      const S = m[v];
      for (let x = 0, g = S.length; x < g; x++) e.update(S[x], t.ARRAY_BUFFER);
    }
  }
  function c(h) {
    const p = [],
      m = h.index,
      v = h.attributes.position;
    let S = 0;
    if (m !== null) {
      const y = m.array;
      S = m.version;
      for (let _ = 0, b = y.length; _ < b; _ += 3) {
        const T = y[_ + 0],
          M = y[_ + 1],
          C = y[_ + 2];
        p.push(T, M, M, C, C, T);
      }
    } else if (v !== void 0) {
      const y = v.array;
      S = v.version;
      for (let _ = 0, b = y.length / 3 - 1; _ < b; _ += 3) {
        const T = _ + 0,
          M = _ + 1,
          C = _ + 2;
        p.push(T, M, M, C, C, T);
      }
    } else return;
    const x = new (RO(p) ? GE : VE)(p, 1);
    x.version = S;
    const g = o.get(h);
    g && e.remove(g), o.set(h, x);
  }
  function u(h) {
    const p = o.get(h);
    if (p) {
      const m = h.index;
      m !== null && p.version < m.version && c(h);
    } else c(h);
    return o.get(h);
  }
  return { get: a, update: l, getWireframeAttribute: u };
}
function nV(t, e, n, r) {
  const i = r.isWebGL2;
  let o;
  function s(m) {
    o = m;
  }
  let a, l;
  function c(m) {
    (a = m.type), (l = m.bytesPerElement);
  }
  function u(m, v) {
    t.drawElements(o, v, a, m * l), n.update(v, o, 1);
  }
  function h(m, v, S) {
    if (S === 0) return;
    let x, g;
    if (i) (x = t), (g = "drawElementsInstanced");
    else if (
      ((x = e.get("ANGLE_instanced_arrays")),
      (g = "drawElementsInstancedANGLE"),
      x === null)
    ) {
      console.error(
        "THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
      );
      return;
    }
    x[g](o, v, a, m * l, S), n.update(v, o, S);
  }
  function p(m, v, S) {
    if (S === 0) return;
    const x = e.get("WEBGL_multi_draw");
    if (x === null) for (let g = 0; g < S; g++) this.render(m[g] / l, v[g]);
    else {
      x.multiDrawElementsWEBGL(o, v, 0, a, m, 0, S);
      let g = 0;
      for (let y = 0; y < S; y++) g += v[y];
      n.update(g, o, 1);
    }
  }
  (this.setMode = s),
    (this.setIndex = c),
    (this.render = u),
    (this.renderInstances = h),
    (this.renderMultiDraw = p);
}
function rV(t) {
  const e = { geometries: 0, textures: 0 },
    n = { frame: 0, calls: 0, triangles: 0, points: 0, lines: 0 };
  function r(o, s, a) {
    switch ((n.calls++, s)) {
      case t.TRIANGLES:
        n.triangles += a * (o / 3);
        break;
      case t.LINES:
        n.lines += a * (o / 2);
        break;
      case t.LINE_STRIP:
        n.lines += a * (o - 1);
        break;
      case t.LINE_LOOP:
        n.lines += a * o;
        break;
      case t.POINTS:
        n.points += a * o;
        break;
      default:
        console.error("THREE.WebGLInfo: Unknown draw mode:", s);
        break;
    }
  }
  function i() {
    (n.calls = 0), (n.triangles = 0), (n.points = 0), (n.lines = 0);
  }
  return {
    memory: e,
    render: n,
    programs: null,
    autoReset: !0,
    reset: i,
    update: r,
  };
}
function iV(t, e) {
  return t[0] - e[0];
}
function oV(t, e) {
  return Math.abs(e[1]) - Math.abs(t[1]);
}
function sV(t, e, n) {
  const r = {},
    i = new Float32Array(8),
    o = new WeakMap(),
    s = new Ht(),
    a = [];
  for (let c = 0; c < 8; c++) a[c] = [c, 0];
  function l(c, u, h) {
    const p = c.morphTargetInfluences;
    if (e.isWebGL2 === !0) {
      const v =
          u.morphAttributes.position ||
          u.morphAttributes.normal ||
          u.morphAttributes.color,
        S = v !== void 0 ? v.length : 0;
      let x = o.get(u);
      if (x === void 0 || x.count !== S) {
        let X = function () {
          $.dispose(), o.delete(u), u.removeEventListener("dispose", X);
        };
        var m = X;
        x !== void 0 && x.texture.dispose();
        const _ = u.morphAttributes.position !== void 0,
          b = u.morphAttributes.normal !== void 0,
          T = u.morphAttributes.color !== void 0,
          M = u.morphAttributes.position || [],
          C = u.morphAttributes.normal || [],
          L = u.morphAttributes.color || [];
        let A = 0;
        _ === !0 && (A = 1), b === !0 && (A = 2), T === !0 && (A = 3);
        let P = u.attributes.position.count * A,
          k = 1;
        P > e.maxTextureSize &&
          ((k = Math.ceil(P / e.maxTextureSize)), (P = e.maxTextureSize));
        const B = new Float32Array(P * k * 4 * S),
          $ = new ny(B, P, k, S);
        ($.type = Vo), ($.needsUpdate = !0);
        const D = A * 4;
        for (let j = 0; j < S; j++) {
          const Y = M[j],
            N = C[j],
            V = L[j],
            G = P * k * 4 * j;
          for (let U = 0; U < Y.count; U++) {
            const Z = U * D;
            _ === !0 &&
              (s.fromBufferAttribute(Y, U),
              (B[G + Z + 0] = s.x),
              (B[G + Z + 1] = s.y),
              (B[G + Z + 2] = s.z),
              (B[G + Z + 3] = 0)),
              b === !0 &&
                (s.fromBufferAttribute(N, U),
                (B[G + Z + 4] = s.x),
                (B[G + Z + 5] = s.y),
                (B[G + Z + 6] = s.z),
                (B[G + Z + 7] = 0)),
              T === !0 &&
                (s.fromBufferAttribute(V, U),
                (B[G + Z + 8] = s.x),
                (B[G + Z + 9] = s.y),
                (B[G + Z + 10] = s.z),
                (B[G + Z + 11] = V.itemSize === 4 ? s.w : 1));
          }
        }
        (x = { count: S, texture: $, size: new Fe(P, k) }),
          o.set(u, x),
          u.addEventListener("dispose", X);
      }
      let g = 0;
      for (let _ = 0; _ < p.length; _++) g += p[_];
      const y = u.morphTargetsRelative ? 1 : 1 - g;
      h.getUniforms().setValue(t, "morphTargetBaseInfluence", y),
        h.getUniforms().setValue(t, "morphTargetInfluences", p),
        h.getUniforms().setValue(t, "morphTargetsTexture", x.texture, n),
        h.getUniforms().setValue(t, "morphTargetsTextureSize", x.size);
    } else {
      const v = p === void 0 ? 0 : p.length;
      let S = r[u.id];
      if (S === void 0 || S.length !== v) {
        S = [];
        for (let b = 0; b < v; b++) S[b] = [b, 0];
        r[u.id] = S;
      }
      for (let b = 0; b < v; b++) {
        const T = S[b];
        (T[0] = b), (T[1] = p[b]);
      }
      S.sort(oV);
      for (let b = 0; b < 8; b++)
        b < v && S[b][1]
          ? ((a[b][0] = S[b][0]), (a[b][1] = S[b][1]))
          : ((a[b][0] = Number.MAX_SAFE_INTEGER), (a[b][1] = 0));
      a.sort(iV);
      const x = u.morphAttributes.position,
        g = u.morphAttributes.normal;
      let y = 0;
      for (let b = 0; b < 8; b++) {
        const T = a[b],
          M = T[0],
          C = T[1];
        M !== Number.MAX_SAFE_INTEGER && C
          ? (x &&
              u.getAttribute("morphTarget" + b) !== x[M] &&
              u.setAttribute("morphTarget" + b, x[M]),
            g &&
              u.getAttribute("morphNormal" + b) !== g[M] &&
              u.setAttribute("morphNormal" + b, g[M]),
            (i[b] = C),
            (y += C))
          : (x &&
              u.hasAttribute("morphTarget" + b) === !0 &&
              u.deleteAttribute("morphTarget" + b),
            g &&
              u.hasAttribute("morphNormal" + b) === !0 &&
              u.deleteAttribute("morphNormal" + b),
            (i[b] = 0));
      }
      const _ = u.morphTargetsRelative ? 1 : 1 - y;
      h.getUniforms().setValue(t, "morphTargetBaseInfluence", _),
        h.getUniforms().setValue(t, "morphTargetInfluences", i);
    }
  }
  return { update: l };
}
function aV(t, e, n, r) {
  let i = new WeakMap();
  function o(l) {
    const c = r.render.frame,
      u = l.geometry,
      h = e.get(l, u);
    if (
      (i.get(h) !== c && (e.update(h), i.set(h, c)),
      l.isInstancedMesh &&
        (l.hasEventListener("dispose", a) === !1 &&
          l.addEventListener("dispose", a),
        i.get(l) !== c &&
          (n.update(l.instanceMatrix, t.ARRAY_BUFFER),
          l.instanceColor !== null && n.update(l.instanceColor, t.ARRAY_BUFFER),
          i.set(l, c))),
      l.isSkinnedMesh)
    ) {
      const p = l.skeleton;
      i.get(p) !== c && (p.update(), i.set(p, c));
    }
    return h;
  }
  function s() {
    i = new WeakMap();
  }
  function a(l) {
    const c = l.target;
    c.removeEventListener("dispose", a),
      n.remove(c.instanceMatrix),
      c.instanceColor !== null && n.remove(c.instanceColor);
  }
  return { update: o, dispose: s };
}
class WE extends Pn {
  constructor(e, n, r, i, o, s, a, l, c, u) {
    if (((u = u !== void 0 ? u : Ja), u !== Ja && u !== Tc))
      throw new Error(
        "DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat"
      );
    r === void 0 && u === Ja && (r = Js),
      r === void 0 && u === Tc && (r = Qa),
      super(null, i, o, s, a, l, u, r, c),
      (this.isDepthTexture = !0),
      (this.image = { width: e, height: n }),
      (this.magFilter = a !== void 0 ? a : Wn),
      (this.minFilter = l !== void 0 ? l : Wn),
      (this.flipY = !1),
      (this.generateMipmaps = !1),
      (this.compareFunction = null);
  }
  copy(e) {
    return super.copy(e), (this.compareFunction = e.compareFunction), this;
  }
  toJSON(e) {
    const n = super.toJSON(e);
    return (
      this.compareFunction !== null &&
        (n.compareFunction = this.compareFunction),
      n
    );
  }
}
const UO = new Pn(),
  zO = new WE(1, 1);
zO.compareFunction = zE;
const kO = new ny(),
  BO = new HE(),
  HO = new _p(),
  aA = [],
  lA = [],
  cA = new Float32Array(16),
  uA = new Float32Array(9),
  fA = new Float32Array(4);
function Bf(t, e, n) {
  const r = t[0];
  if (r <= 0 || r > 0) return t;
  const i = e * n;
  let o = aA[i];
  if ((o === void 0 && ((o = new Float32Array(i)), (aA[i] = o)), e !== 0)) {
    r.toArray(o, 0);
    for (let s = 1, a = 0; s !== e; ++s) (a += n), t[s].toArray(o, a);
  }
  return o;
}
function ar(t, e) {
  if (t.length !== e.length) return !1;
  for (let n = 0, r = t.length; n < r; n++) if (t[n] !== e[n]) return !1;
  return !0;
}
function lr(t, e) {
  for (let n = 0, r = e.length; n < r; n++) t[n] = e[n];
}
function ry(t, e) {
  let n = lA[e];
  n === void 0 && ((n = new Int32Array(e)), (lA[e] = n));
  for (let r = 0; r !== e; ++r) n[r] = t.allocateTextureUnit();
  return n;
}
function lV(t, e) {
  const n = this.cache;
  n[0] !== e && (t.uniform1f(this.addr, e), (n[0] = e));
}
function cV(t, e) {
  const n = this.cache;
  if (e.x !== void 0)
    (n[0] !== e.x || n[1] !== e.y) &&
      (t.uniform2f(this.addr, e.x, e.y), (n[0] = e.x), (n[1] = e.y));
  else {
    if (ar(n, e)) return;
    t.uniform2fv(this.addr, e), lr(n, e);
  }
}
function uV(t, e) {
  const n = this.cache;
  if (e.x !== void 0)
    (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z) &&
      (t.uniform3f(this.addr, e.x, e.y, e.z),
      (n[0] = e.x),
      (n[1] = e.y),
      (n[2] = e.z));
  else if (e.r !== void 0)
    (n[0] !== e.r || n[1] !== e.g || n[2] !== e.b) &&
      (t.uniform3f(this.addr, e.r, e.g, e.b),
      (n[0] = e.r),
      (n[1] = e.g),
      (n[2] = e.b));
  else {
    if (ar(n, e)) return;
    t.uniform3fv(this.addr, e), lr(n, e);
  }
}
function fV(t, e) {
  const n = this.cache;
  if (e.x !== void 0)
    (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z || n[3] !== e.w) &&
      (t.uniform4f(this.addr, e.x, e.y, e.z, e.w),
      (n[0] = e.x),
      (n[1] = e.y),
      (n[2] = e.z),
      (n[3] = e.w));
  else {
    if (ar(n, e)) return;
    t.uniform4fv(this.addr, e), lr(n, e);
  }
}
function dV(t, e) {
  const n = this.cache,
    r = e.elements;
  if (r === void 0) {
    if (ar(n, e)) return;
    t.uniformMatrix2fv(this.addr, !1, e), lr(n, e);
  } else {
    if (ar(n, r)) return;
    fA.set(r), t.uniformMatrix2fv(this.addr, !1, fA), lr(n, r);
  }
}
function hV(t, e) {
  const n = this.cache,
    r = e.elements;
  if (r === void 0) {
    if (ar(n, e)) return;
    t.uniformMatrix3fv(this.addr, !1, e), lr(n, e);
  } else {
    if (ar(n, r)) return;
    uA.set(r), t.uniformMatrix3fv(this.addr, !1, uA), lr(n, r);
  }
}
function pV(t, e) {
  const n = this.cache,
    r = e.elements;
  if (r === void 0) {
    if (ar(n, e)) return;
    t.uniformMatrix4fv(this.addr, !1, e), lr(n, e);
  } else {
    if (ar(n, r)) return;
    cA.set(r), t.uniformMatrix4fv(this.addr, !1, cA), lr(n, r);
  }
}
function mV(t, e) {
  const n = this.cache;
  n[0] !== e && (t.uniform1i(this.addr, e), (n[0] = e));
}
function gV(t, e) {
  const n = this.cache;
  if (e.x !== void 0)
    (n[0] !== e.x || n[1] !== e.y) &&
      (t.uniform2i(this.addr, e.x, e.y), (n[0] = e.x), (n[1] = e.y));
  else {
    if (ar(n, e)) return;
    t.uniform2iv(this.addr, e), lr(n, e);
  }
}
function vV(t, e) {
  const n = this.cache;
  if (e.x !== void 0)
    (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z) &&
      (t.uniform3i(this.addr, e.x, e.y, e.z),
      (n[0] = e.x),
      (n[1] = e.y),
      (n[2] = e.z));
  else {
    if (ar(n, e)) return;
    t.uniform3iv(this.addr, e), lr(n, e);
  }
}
function yV(t, e) {
  const n = this.cache;
  if (e.x !== void 0)
    (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z || n[3] !== e.w) &&
      (t.uniform4i(this.addr, e.x, e.y, e.z, e.w),
      (n[0] = e.x),
      (n[1] = e.y),
      (n[2] = e.z),
      (n[3] = e.w));
  else {
    if (ar(n, e)) return;
    t.uniform4iv(this.addr, e), lr(n, e);
  }
}
function xV(t, e) {
  const n = this.cache;
  n[0] !== e && (t.uniform1ui(this.addr, e), (n[0] = e));
}
function _V(t, e) {
  const n = this.cache;
  if (e.x !== void 0)
    (n[0] !== e.x || n[1] !== e.y) &&
      (t.uniform2ui(this.addr, e.x, e.y), (n[0] = e.x), (n[1] = e.y));
  else {
    if (ar(n, e)) return;
    t.uniform2uiv(this.addr, e), lr(n, e);
  }
}
function SV(t, e) {
  const n = this.cache;
  if (e.x !== void 0)
    (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z) &&
      (t.uniform3ui(this.addr, e.x, e.y, e.z),
      (n[0] = e.x),
      (n[1] = e.y),
      (n[2] = e.z));
  else {
    if (ar(n, e)) return;
    t.uniform3uiv(this.addr, e), lr(n, e);
  }
}
function wV(t, e) {
  const n = this.cache;
  if (e.x !== void 0)
    (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z || n[3] !== e.w) &&
      (t.uniform4ui(this.addr, e.x, e.y, e.z, e.w),
      (n[0] = e.x),
      (n[1] = e.y),
      (n[2] = e.z),
      (n[3] = e.w));
  else {
    if (ar(n, e)) return;
    t.uniform4uiv(this.addr, e), lr(n, e);
  }
}
function bV(t, e, n) {
  const r = this.cache,
    i = n.allocateTextureUnit();
  r[0] !== i && (t.uniform1i(this.addr, i), (r[0] = i));
  const o = this.type === t.SAMPLER_2D_SHADOW ? zO : UO;
  n.setTexture2D(e || o, i);
}
function EV(t, e, n) {
  const r = this.cache,
    i = n.allocateTextureUnit();
  r[0] !== i && (t.uniform1i(this.addr, i), (r[0] = i)),
    n.setTexture3D(e || BO, i);
}
function MV(t, e, n) {
  const r = this.cache,
    i = n.allocateTextureUnit();
  r[0] !== i && (t.uniform1i(this.addr, i), (r[0] = i)),
    n.setTextureCube(e || HO, i);
}
function CV(t, e, n) {
  const r = this.cache,
    i = n.allocateTextureUnit();
  r[0] !== i && (t.uniform1i(this.addr, i), (r[0] = i)),
    n.setTexture2DArray(e || kO, i);
}
function TV(t) {
  switch (t) {
    case 5126:
      return lV;
    case 35664:
      return cV;
    case 35665:
      return uV;
    case 35666:
      return fV;
    case 35674:
      return dV;
    case 35675:
      return hV;
    case 35676:
      return pV;
    case 5124:
    case 35670:
      return mV;
    case 35667:
    case 35671:
      return gV;
    case 35668:
    case 35672:
      return vV;
    case 35669:
    case 35673:
      return yV;
    case 5125:
      return xV;
    case 36294:
      return _V;
    case 36295:
      return SV;
    case 36296:
      return wV;
    case 35678:
    case 36198:
    case 36298:
    case 36306:
    case 35682:
      return bV;
    case 35679:
    case 36299:
    case 36307:
      return EV;
    case 35680:
    case 36300:
    case 36308:
    case 36293:
      return MV;
    case 36289:
    case 36303:
    case 36311:
    case 36292:
      return CV;
  }
}
function AV(t, e) {
  t.uniform1fv(this.addr, e);
}
function RV(t, e) {
  const n = Bf(e, this.size, 2);
  t.uniform2fv(this.addr, n);
}
function PV(t, e) {
  const n = Bf(e, this.size, 3);
  t.uniform3fv(this.addr, n);
}
function LV(t, e) {
  const n = Bf(e, this.size, 4);
  t.uniform4fv(this.addr, n);
}
function IV(t, e) {
  const n = Bf(e, this.size, 4);
  t.uniformMatrix2fv(this.addr, !1, n);
}
function OV(t, e) {
  const n = Bf(e, this.size, 9);
  t.uniformMatrix3fv(this.addr, !1, n);
}
function FV(t, e) {
  const n = Bf(e, this.size, 16);
  t.uniformMatrix4fv(this.addr, !1, n);
}
function NV(t, e) {
  t.uniform1iv(this.addr, e);
}
function DV(t, e) {
  t.uniform2iv(this.addr, e);
}
function UV(t, e) {
  t.uniform3iv(this.addr, e);
}
function zV(t, e) {
  t.uniform4iv(this.addr, e);
}
function kV(t, e) {
  t.uniform1uiv(this.addr, e);
}
function BV(t, e) {
  t.uniform2uiv(this.addr, e);
}
function HV(t, e) {
  t.uniform3uiv(this.addr, e);
}
function VV(t, e) {
  t.uniform4uiv(this.addr, e);
}
function GV(t, e, n) {
  const r = this.cache,
    i = e.length,
    o = ry(n, i);
  ar(r, o) || (t.uniform1iv(this.addr, o), lr(r, o));
  for (let s = 0; s !== i; ++s) n.setTexture2D(e[s] || UO, o[s]);
}
function jV(t, e, n) {
  const r = this.cache,
    i = e.length,
    o = ry(n, i);
  ar(r, o) || (t.uniform1iv(this.addr, o), lr(r, o));
  for (let s = 0; s !== i; ++s) n.setTexture3D(e[s] || BO, o[s]);
}
function WV(t, e, n) {
  const r = this.cache,
    i = e.length,
    o = ry(n, i);
  ar(r, o) || (t.uniform1iv(this.addr, o), lr(r, o));
  for (let s = 0; s !== i; ++s) n.setTextureCube(e[s] || HO, o[s]);
}
function $V(t, e, n) {
  const r = this.cache,
    i = e.length,
    o = ry(n, i);
  ar(r, o) || (t.uniform1iv(this.addr, o), lr(r, o));
  for (let s = 0; s !== i; ++s) n.setTexture2DArray(e[s] || kO, o[s]);
}
function XV(t) {
  switch (t) {
    case 5126:
      return AV;
    case 35664:
      return RV;
    case 35665:
      return PV;
    case 35666:
      return LV;
    case 35674:
      return IV;
    case 35675:
      return OV;
    case 35676:
      return FV;
    case 5124:
    case 35670:
      return NV;
    case 35667:
    case 35671:
      return DV;
    case 35668:
    case 35672:
      return UV;
    case 35669:
    case 35673:
      return zV;
    case 5125:
      return kV;
    case 36294:
      return BV;
    case 36295:
      return HV;
    case 36296:
      return VV;
    case 35678:
    case 36198:
    case 36298:
    case 36306:
    case 35682:
      return GV;
    case 35679:
    case 36299:
    case 36307:
      return jV;
    case 35680:
    case 36300:
    case 36308:
    case 36293:
      return WV;
    case 36289:
    case 36303:
    case 36311:
    case 36292:
      return $V;
  }
}
class qV {
  constructor(e, n, r) {
    (this.id = e),
      (this.addr = r),
      (this.cache = []),
      (this.type = n.type),
      (this.setValue = TV(n.type));
  }
}
class YV {
  constructor(e, n, r) {
    (this.id = e),
      (this.addr = r),
      (this.cache = []),
      (this.type = n.type),
      (this.size = n.size),
      (this.setValue = XV(n.type));
  }
}
class KV {
  constructor(e) {
    (this.id = e), (this.seq = []), (this.map = {});
  }
  setValue(e, n, r) {
    const i = this.seq;
    for (let o = 0, s = i.length; o !== s; ++o) {
      const a = i[o];
      a.setValue(e, n[a.id], r);
    }
  }
}
const V1 = /(\w+)(\])?(\[|\.)?/g;
function dA(t, e) {
  t.seq.push(e), (t.map[e.id] = e);
}
function ZV(t, e, n) {
  const r = t.name,
    i = r.length;
  for (V1.lastIndex = 0; ; ) {
    const o = V1.exec(r),
      s = V1.lastIndex;
    let a = o[1];
    const l = o[2] === "]",
      c = o[3];
    if ((l && (a = a | 0), c === void 0 || (c === "[" && s + 2 === i))) {
      dA(n, c === void 0 ? new qV(a, t, e) : new YV(a, t, e));
      break;
    } else {
      let h = n.map[a];
      h === void 0 && ((h = new KV(a)), dA(n, h)), (n = h);
    }
  }
}
class Av {
  constructor(e, n) {
    (this.seq = []), (this.map = {});
    const r = e.getProgramParameter(n, e.ACTIVE_UNIFORMS);
    for (let i = 0; i < r; ++i) {
      const o = e.getActiveUniform(n, i),
        s = e.getUniformLocation(n, o.name);
      ZV(o, s, this);
    }
  }
  setValue(e, n, r, i) {
    const o = this.map[n];
    o !== void 0 && o.setValue(e, r, i);
  }
  setOptional(e, n, r) {
    const i = n[r];
    i !== void 0 && this.setValue(e, r, i);
  }
  static upload(e, n, r, i) {
    for (let o = 0, s = n.length; o !== s; ++o) {
      const a = n[o],
        l = r[a.id];
      l.needsUpdate !== !1 && a.setValue(e, l.value, i);
    }
  }
  static seqWithValue(e, n) {
    const r = [];
    for (let i = 0, o = e.length; i !== o; ++i) {
      const s = e[i];
      s.id in n && r.push(s);
    }
    return r;
  }
}
function hA(t, e, n) {
  const r = t.createShader(e);
  return t.shaderSource(r, n), t.compileShader(r), r;
}
const QV = 37297;
let JV = 0;
function e8(t, e) {
  const n = t.split(`
`),
    r = [],
    i = Math.max(e - 6, 0),
    o = Math.min(e + 6, n.length);
  for (let s = i; s < o; s++) {
    const a = s + 1;
    r.push(`${a === e ? ">" : " "} ${a}: ${n[s]}`);
  }
  return r.join(`
`);
}
function t8(t) {
  const e = nn.getPrimaries(nn.workingColorSpace),
    n = nn.getPrimaries(t);
  let r;
  switch (
    (e === n
      ? (r = "")
      : e === Vh && n === Hh
      ? (r = "LinearDisplayP3ToLinearSRGB")
      : e === Hh && n === Vh && (r = "LinearSRGBToLinearDisplayP3"),
    t)
  ) {
    case ws:
    case vp:
      return [r, "LinearTransferOETF"];
    case rr:
    case ty:
      return [r, "sRGBTransferOETF"];
    default:
      return (
        console.warn("THREE.WebGLProgram: Unsupported color space:", t),
        [r, "LinearTransferOETF"]
      );
  }
}
function pA(t, e, n) {
  const r = t.getShaderParameter(e, t.COMPILE_STATUS),
    i = t.getShaderInfoLog(e).trim();
  if (r && i === "") return "";
  const o = /ERROR: 0:(\d+)/.exec(i);
  if (o) {
    const s = parseInt(o[1]);
    return (
      n.toUpperCase() +
      `

` +
      i +
      `

` +
      e8(t.getShaderSource(e), s)
    );
  } else return i;
}
function n8(t, e) {
  const n = t8(e);
  return `vec4 ${t}( vec4 value ) { return ${n[0]}( ${n[1]}( value ) ); }`;
}
function r8(t, e) {
  let n;
  switch (e) {
    case nO:
      n = "Linear";
      break;
    case rO:
      n = "Reinhard";
      break;
    case iO:
      n = "OptimizedCineon";
      break;
    case CE:
      n = "ACESFilmic";
      break;
    case sO:
      n = "AgX";
      break;
    case oO:
      n = "Custom";
      break;
    default:
      console.warn("THREE.WebGLProgram: Unsupported toneMapping:", e),
        (n = "Linear");
  }
  return (
    "vec3 " + t + "( vec3 color ) { return " + n + "ToneMapping( color ); }"
  );
}
function i8(t) {
  return [
    t.extensionDerivatives ||
    t.envMapCubeUVHeight ||
    t.bumpMap ||
    t.normalMapTangentSpace ||
    t.clearcoatNormalMap ||
    t.flatShading ||
    t.shaderID === "physical"
      ? "#extension GL_OES_standard_derivatives : enable"
      : "",
    (t.extensionFragDepth || t.logarithmicDepthBuffer) &&
    t.rendererExtensionFragDepth
      ? "#extension GL_EXT_frag_depth : enable"
      : "",
    t.extensionDrawBuffers && t.rendererExtensionDrawBuffers
      ? "#extension GL_EXT_draw_buffers : require"
      : "",
    (t.extensionShaderTextureLOD || t.envMap || t.transmission) &&
    t.rendererExtensionShaderTextureLod
      ? "#extension GL_EXT_shader_texture_lod : enable"
      : "",
  ].filter(Ju).join(`
`);
}
function o8(t) {
  return [
    t.extensionClipCullDistance
      ? "#extension GL_ANGLE_clip_cull_distance : require"
      : "",
  ].filter(Ju).join(`
`);
}
function s8(t) {
  const e = [];
  for (const n in t) {
    const r = t[n];
    r !== !1 && e.push("#define " + n + " " + r);
  }
  return e.join(`
`);
}
function a8(t, e) {
  const n = {},
    r = t.getProgramParameter(e, t.ACTIVE_ATTRIBUTES);
  for (let i = 0; i < r; i++) {
    const o = t.getActiveAttrib(e, i),
      s = o.name;
    let a = 1;
    o.type === t.FLOAT_MAT2 && (a = 2),
      o.type === t.FLOAT_MAT3 && (a = 3),
      o.type === t.FLOAT_MAT4 && (a = 4),
      (n[s] = {
        type: o.type,
        location: t.getAttribLocation(e, s),
        locationSize: a,
      });
  }
  return n;
}
function Ju(t) {
  return t !== "";
}
function mA(t, e) {
  const n =
    e.numSpotLightShadows + e.numSpotLightMaps - e.numSpotLightShadowsWithMaps;
  return t
    .replace(/NUM_DIR_LIGHTS/g, e.numDirLights)
    .replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights)
    .replace(/NUM_SPOT_LIGHT_MAPS/g, e.numSpotLightMaps)
    .replace(/NUM_SPOT_LIGHT_COORDS/g, n)
    .replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights)
    .replace(/NUM_POINT_LIGHTS/g, e.numPointLights)
    .replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights)
    .replace(/NUM_DIR_LIGHT_SHADOWS/g, e.numDirLightShadows)
    .replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, e.numSpotLightShadowsWithMaps)
    .replace(/NUM_SPOT_LIGHT_SHADOWS/g, e.numSpotLightShadows)
    .replace(/NUM_POINT_LIGHT_SHADOWS/g, e.numPointLightShadows);
}
function gA(t, e) {
  return t
    .replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes)
    .replace(
      /UNION_CLIPPING_PLANES/g,
      e.numClippingPlanes - e.numClipIntersection
    );
}
const l8 = /^[ \t]*#include +<([\w\d./]+)>/gm;
function Sw(t) {
  return t.replace(l8, u8);
}
const c8 = new Map([
  ["encodings_fragment", "colorspace_fragment"],
  ["encodings_pars_fragment", "colorspace_pars_fragment"],
  ["output_fragment", "opaque_fragment"],
]);
function u8(t, e) {
  let n = Lt[e];
  if (n === void 0) {
    const r = c8.get(e);
    if (r !== void 0)
      (n = Lt[r]),
        console.warn(
          'THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',
          e,
          r
        );
    else throw new Error("Can not resolve #include <" + e + ">");
  }
  return Sw(n);
}
const f8 =
  /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
function vA(t) {
  return t.replace(f8, d8);
}
function d8(t, e, n, r) {
  let i = "";
  for (let o = parseInt(e); o < parseInt(n); o++)
    i += r
      .replace(/\[\s*i\s*\]/g, "[ " + o + " ]")
      .replace(/UNROLLED_LOOP_INDEX/g, o);
  return i;
}
function yA(t) {
  let e =
    "precision " +
    t.precision +
    ` float;
precision ` +
    t.precision +
    " int;";
  return (
    t.precision === "highp"
      ? (e += `
#define HIGH_PRECISION`)
      : t.precision === "mediump"
      ? (e += `
#define MEDIUM_PRECISION`)
      : t.precision === "lowp" &&
        (e += `
#define LOW_PRECISION`),
    e
  );
}
function h8(t) {
  let e = "SHADOWMAP_TYPE_BASIC";
  return (
    t.shadowMapType === Z0
      ? (e = "SHADOWMAP_TYPE_PCF")
      : t.shadowMapType === rh
      ? (e = "SHADOWMAP_TYPE_PCF_SOFT")
      : t.shadowMapType === No && (e = "SHADOWMAP_TYPE_VSM"),
    e
  );
}
function p8(t) {
  let e = "ENVMAP_TYPE_CUBE";
  if (t.envMap)
    switch (t.envMapMode) {
      case la:
      case il:
        e = "ENVMAP_TYPE_CUBE";
        break;
      case kf:
        e = "ENVMAP_TYPE_CUBE_UV";
        break;
    }
  return e;
}
function m8(t) {
  let e = "ENVMAP_MODE_REFLECTION";
  if (t.envMap)
    switch (t.envMapMode) {
      case il:
        e = "ENVMAP_MODE_REFRACTION";
        break;
    }
  return e;
}
function g8(t) {
  let e = "ENVMAP_BLENDING_NONE";
  if (t.envMap)
    switch (t.combine) {
      case gp:
        e = "ENVMAP_BLENDING_MULTIPLY";
        break;
      case eO:
        e = "ENVMAP_BLENDING_MIX";
        break;
      case tO:
        e = "ENVMAP_BLENDING_ADD";
        break;
    }
  return e;
}
function v8(t) {
  const e = t.envMapCubeUVHeight;
  if (e === null) return null;
  const n = Math.log2(e) - 2,
    r = 1 / e;
  return {
    texelWidth: 1 / (3 * Math.max(Math.pow(2, n), 7 * 16)),
    texelHeight: r,
    maxMip: n,
  };
}
function y8(t, e, n, r) {
  const i = t.getContext(),
    o = n.defines;
  let s = n.vertexShader,
    a = n.fragmentShader;
  const l = h8(n),
    c = p8(n),
    u = m8(n),
    h = g8(n),
    p = v8(n),
    m = n.isWebGL2 ? "" : i8(n),
    v = o8(n),
    S = s8(o),
    x = i.createProgram();
  let g,
    y,
    _ = n.glslVersion
      ? "#version " +
        n.glslVersion +
        `
`
      : "";
  n.isRawShaderMaterial
    ? ((g = [
        "#define SHADER_TYPE " + n.shaderType,
        "#define SHADER_NAME " + n.shaderName,
        S,
      ].filter(Ju).join(`
`)),
      g.length > 0 &&
        (g += `
`),
      (y = [
        m,
        "#define SHADER_TYPE " + n.shaderType,
        "#define SHADER_NAME " + n.shaderName,
        S,
      ].filter(Ju).join(`
`)),
      y.length > 0 &&
        (y += `
`))
    : ((g = [
        yA(n),
        "#define SHADER_TYPE " + n.shaderType,
        "#define SHADER_NAME " + n.shaderName,
        S,
        n.extensionClipCullDistance ? "#define USE_CLIP_DISTANCE" : "",
        n.batching ? "#define USE_BATCHING" : "",
        n.instancing ? "#define USE_INSTANCING" : "",
        n.instancingColor ? "#define USE_INSTANCING_COLOR" : "",
        n.useFog && n.fog ? "#define USE_FOG" : "",
        n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "",
        n.map ? "#define USE_MAP" : "",
        n.envMap ? "#define USE_ENVMAP" : "",
        n.envMap ? "#define " + u : "",
        n.lightMap ? "#define USE_LIGHTMAP" : "",
        n.aoMap ? "#define USE_AOMAP" : "",
        n.bumpMap ? "#define USE_BUMPMAP" : "",
        n.normalMap ? "#define USE_NORMALMAP" : "",
        n.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "",
        n.normalMapTangentSpace ? "#define USE_NORMALMAP_TANGENTSPACE" : "",
        n.displacementMap ? "#define USE_DISPLACEMENTMAP" : "",
        n.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
        n.anisotropy ? "#define USE_ANISOTROPY" : "",
        n.anisotropyMap ? "#define USE_ANISOTROPYMAP" : "",
        n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
        n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
        n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
        n.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
        n.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "",
        n.specularMap ? "#define USE_SPECULARMAP" : "",
        n.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "",
        n.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "",
        n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
        n.metalnessMap ? "#define USE_METALNESSMAP" : "",
        n.alphaMap ? "#define USE_ALPHAMAP" : "",
        n.alphaHash ? "#define USE_ALPHAHASH" : "",
        n.transmission ? "#define USE_TRANSMISSION" : "",
        n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
        n.thicknessMap ? "#define USE_THICKNESSMAP" : "",
        n.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "",
        n.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "",
        n.mapUv ? "#define MAP_UV " + n.mapUv : "",
        n.alphaMapUv ? "#define ALPHAMAP_UV " + n.alphaMapUv : "",
        n.lightMapUv ? "#define LIGHTMAP_UV " + n.lightMapUv : "",
        n.aoMapUv ? "#define AOMAP_UV " + n.aoMapUv : "",
        n.emissiveMapUv ? "#define EMISSIVEMAP_UV " + n.emissiveMapUv : "",
        n.bumpMapUv ? "#define BUMPMAP_UV " + n.bumpMapUv : "",
        n.normalMapUv ? "#define NORMALMAP_UV " + n.normalMapUv : "",
        n.displacementMapUv
          ? "#define DISPLACEMENTMAP_UV " + n.displacementMapUv
          : "",
        n.metalnessMapUv ? "#define METALNESSMAP_UV " + n.metalnessMapUv : "",
        n.roughnessMapUv ? "#define ROUGHNESSMAP_UV " + n.roughnessMapUv : "",
        n.anisotropyMapUv
          ? "#define ANISOTROPYMAP_UV " + n.anisotropyMapUv
          : "",
        n.clearcoatMapUv ? "#define CLEARCOATMAP_UV " + n.clearcoatMapUv : "",
        n.clearcoatNormalMapUv
          ? "#define CLEARCOAT_NORMALMAP_UV " + n.clearcoatNormalMapUv
          : "",
        n.clearcoatRoughnessMapUv
          ? "#define CLEARCOAT_ROUGHNESSMAP_UV " + n.clearcoatRoughnessMapUv
          : "",
        n.iridescenceMapUv
          ? "#define IRIDESCENCEMAP_UV " + n.iridescenceMapUv
          : "",
        n.iridescenceThicknessMapUv
          ? "#define IRIDESCENCE_THICKNESSMAP_UV " + n.iridescenceThicknessMapUv
          : "",
        n.sheenColorMapUv
          ? "#define SHEEN_COLORMAP_UV " + n.sheenColorMapUv
          : "",
        n.sheenRoughnessMapUv
          ? "#define SHEEN_ROUGHNESSMAP_UV " + n.sheenRoughnessMapUv
          : "",
        n.specularMapUv ? "#define SPECULARMAP_UV " + n.specularMapUv : "",
        n.specularColorMapUv
          ? "#define SPECULAR_COLORMAP_UV " + n.specularColorMapUv
          : "",
        n.specularIntensityMapUv
          ? "#define SPECULAR_INTENSITYMAP_UV " + n.specularIntensityMapUv
          : "",
        n.transmissionMapUv
          ? "#define TRANSMISSIONMAP_UV " + n.transmissionMapUv
          : "",
        n.thicknessMapUv ? "#define THICKNESSMAP_UV " + n.thicknessMapUv : "",
        n.vertexTangents && n.flatShading === !1 ? "#define USE_TANGENT" : "",
        n.vertexColors ? "#define USE_COLOR" : "",
        n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
        n.vertexUv1s ? "#define USE_UV1" : "",
        n.vertexUv2s ? "#define USE_UV2" : "",
        n.vertexUv3s ? "#define USE_UV3" : "",
        n.pointsUvs ? "#define USE_POINTS_UV" : "",
        n.flatShading ? "#define FLAT_SHADED" : "",
        n.skinning ? "#define USE_SKINNING" : "",
        n.morphTargets ? "#define USE_MORPHTARGETS" : "",
        n.morphNormals && n.flatShading === !1
          ? "#define USE_MORPHNORMALS"
          : "",
        n.morphColors && n.isWebGL2 ? "#define USE_MORPHCOLORS" : "",
        n.morphTargetsCount > 0 && n.isWebGL2
          ? "#define MORPHTARGETS_TEXTURE"
          : "",
        n.morphTargetsCount > 0 && n.isWebGL2
          ? "#define MORPHTARGETS_TEXTURE_STRIDE " + n.morphTextureStride
          : "",
        n.morphTargetsCount > 0 && n.isWebGL2
          ? "#define MORPHTARGETS_COUNT " + n.morphTargetsCount
          : "",
        n.doubleSided ? "#define DOUBLE_SIDED" : "",
        n.flipSided ? "#define FLIP_SIDED" : "",
        n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
        n.shadowMapEnabled ? "#define " + l : "",
        n.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
        n.numLightProbes > 0 ? "#define USE_LIGHT_PROBES" : "",
        n.useLegacyLights ? "#define LEGACY_LIGHTS" : "",
        n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
        n.logarithmicDepthBuffer && n.rendererExtensionFragDepth
          ? "#define USE_LOGDEPTHBUF_EXT"
          : "",
        "uniform mat4 modelMatrix;",
        "uniform mat4 modelViewMatrix;",
        "uniform mat4 projectionMatrix;",
        "uniform mat4 viewMatrix;",
        "uniform mat3 normalMatrix;",
        "uniform vec3 cameraPosition;",
        "uniform bool isOrthographic;",
        "#ifdef USE_INSTANCING",
        "	attribute mat4 instanceMatrix;",
        "#endif",
        "#ifdef USE_INSTANCING_COLOR",
        "	attribute vec3 instanceColor;",
        "#endif",
        "attribute vec3 position;",
        "attribute vec3 normal;",
        "attribute vec2 uv;",
        "#ifdef USE_UV1",
        "	attribute vec2 uv1;",
        "#endif",
        "#ifdef USE_UV2",
        "	attribute vec2 uv2;",
        "#endif",
        "#ifdef USE_UV3",
        "	attribute vec2 uv3;",
        "#endif",
        "#ifdef USE_TANGENT",
        "	attribute vec4 tangent;",
        "#endif",
        "#if defined( USE_COLOR_ALPHA )",
        "	attribute vec4 color;",
        "#elif defined( USE_COLOR )",
        "	attribute vec3 color;",
        "#endif",
        "#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )",
        "	attribute vec3 morphTarget0;",
        "	attribute vec3 morphTarget1;",
        "	attribute vec3 morphTarget2;",
        "	attribute vec3 morphTarget3;",
        "	#ifdef USE_MORPHNORMALS",
        "		attribute vec3 morphNormal0;",
        "		attribute vec3 morphNormal1;",
        "		attribute vec3 morphNormal2;",
        "		attribute vec3 morphNormal3;",
        "	#else",
        "		attribute vec3 morphTarget4;",
        "		attribute vec3 morphTarget5;",
        "		attribute vec3 morphTarget6;",
        "		attribute vec3 morphTarget7;",
        "	#endif",
        "#endif",
        "#ifdef USE_SKINNING",
        "	attribute vec4 skinIndex;",
        "	attribute vec4 skinWeight;",
        "#endif",
        `
`,
      ].filter(Ju).join(`
`)),
      (y = [
        m,
        yA(n),
        "#define SHADER_TYPE " + n.shaderType,
        "#define SHADER_NAME " + n.shaderName,
        S,
        n.useFog && n.fog ? "#define USE_FOG" : "",
        n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "",
        n.map ? "#define USE_MAP" : "",
        n.matcap ? "#define USE_MATCAP" : "",
        n.envMap ? "#define USE_ENVMAP" : "",
        n.envMap ? "#define " + c : "",
        n.envMap ? "#define " + u : "",
        n.envMap ? "#define " + h : "",
        p ? "#define CUBEUV_TEXEL_WIDTH " + p.texelWidth : "",
        p ? "#define CUBEUV_TEXEL_HEIGHT " + p.texelHeight : "",
        p ? "#define CUBEUV_MAX_MIP " + p.maxMip + ".0" : "",
        n.lightMap ? "#define USE_LIGHTMAP" : "",
        n.aoMap ? "#define USE_AOMAP" : "",
        n.bumpMap ? "#define USE_BUMPMAP" : "",
        n.normalMap ? "#define USE_NORMALMAP" : "",
        n.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "",
        n.normalMapTangentSpace ? "#define USE_NORMALMAP_TANGENTSPACE" : "",
        n.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
        n.anisotropy ? "#define USE_ANISOTROPY" : "",
        n.anisotropyMap ? "#define USE_ANISOTROPYMAP" : "",
        n.clearcoat ? "#define USE_CLEARCOAT" : "",
        n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
        n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
        n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
        n.iridescence ? "#define USE_IRIDESCENCE" : "",
        n.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
        n.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "",
        n.specularMap ? "#define USE_SPECULARMAP" : "",
        n.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "",
        n.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "",
        n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
        n.metalnessMap ? "#define USE_METALNESSMAP" : "",
        n.alphaMap ? "#define USE_ALPHAMAP" : "",
        n.alphaTest ? "#define USE_ALPHATEST" : "",
        n.alphaHash ? "#define USE_ALPHAHASH" : "",
        n.sheen ? "#define USE_SHEEN" : "",
        n.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "",
        n.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "",
        n.transmission ? "#define USE_TRANSMISSION" : "",
        n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
        n.thicknessMap ? "#define USE_THICKNESSMAP" : "",
        n.vertexTangents && n.flatShading === !1 ? "#define USE_TANGENT" : "",
        n.vertexColors || n.instancingColor ? "#define USE_COLOR" : "",
        n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
        n.vertexUv1s ? "#define USE_UV1" : "",
        n.vertexUv2s ? "#define USE_UV2" : "",
        n.vertexUv3s ? "#define USE_UV3" : "",
        n.pointsUvs ? "#define USE_POINTS_UV" : "",
        n.gradientMap ? "#define USE_GRADIENTMAP" : "",
        n.flatShading ? "#define FLAT_SHADED" : "",
        n.doubleSided ? "#define DOUBLE_SIDED" : "",
        n.flipSided ? "#define FLIP_SIDED" : "",
        n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
        n.shadowMapEnabled ? "#define " + l : "",
        n.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
        n.numLightProbes > 0 ? "#define USE_LIGHT_PROBES" : "",
        n.useLegacyLights ? "#define LEGACY_LIGHTS" : "",
        n.decodeVideoTexture ? "#define DECODE_VIDEO_TEXTURE" : "",
        n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
        n.logarithmicDepthBuffer && n.rendererExtensionFragDepth
          ? "#define USE_LOGDEPTHBUF_EXT"
          : "",
        "uniform mat4 viewMatrix;",
        "uniform vec3 cameraPosition;",
        "uniform bool isOrthographic;",
        n.toneMapping !== ys ? "#define TONE_MAPPING" : "",
        n.toneMapping !== ys ? Lt.tonemapping_pars_fragment : "",
        n.toneMapping !== ys ? r8("toneMapping", n.toneMapping) : "",
        n.dithering ? "#define DITHERING" : "",
        n.opaque ? "#define OPAQUE" : "",
        Lt.colorspace_pars_fragment,
        n8("linearToOutputTexel", n.outputColorSpace),
        n.useDepthPacking ? "#define DEPTH_PACKING " + n.depthPacking : "",
        `
`,
      ].filter(Ju).join(`
`))),
    (s = Sw(s)),
    (s = mA(s, n)),
    (s = gA(s, n)),
    (a = Sw(a)),
    (a = mA(a, n)),
    (a = gA(a, n)),
    (s = vA(s)),
    (a = vA(a)),
    n.isWebGL2 &&
      n.isRawShaderMaterial !== !0 &&
      ((_ = `#version 300 es
`),
      (g =
        [
          v,
          "precision mediump sampler2DArray;",
          "#define attribute in",
          "#define varying out",
          "#define texture2D texture",
        ].join(`
`) +
        `
` +
        g),
      (y =
        [
          "precision mediump sampler2DArray;",
          "#define varying in",
          n.glslVersion === yw
            ? ""
            : "layout(location = 0) out highp vec4 pc_fragColor;",
          n.glslVersion === yw ? "" : "#define gl_FragColor pc_fragColor",
          "#define gl_FragDepthEXT gl_FragDepth",
          "#define texture2D texture",
          "#define textureCube texture",
          "#define texture2DProj textureProj",
          "#define texture2DLodEXT textureLod",
          "#define texture2DProjLodEXT textureProjLod",
          "#define textureCubeLodEXT textureLod",
          "#define texture2DGradEXT textureGrad",
          "#define texture2DProjGradEXT textureProjGrad",
          "#define textureCubeGradEXT textureGrad",
        ].join(`
`) +
        `
` +
        y));
  const b = _ + g + s,
    T = _ + y + a,
    M = hA(i, i.VERTEX_SHADER, b),
    C = hA(i, i.FRAGMENT_SHADER, T);
  i.attachShader(x, M),
    i.attachShader(x, C),
    n.index0AttributeName !== void 0
      ? i.bindAttribLocation(x, 0, n.index0AttributeName)
      : n.morphTargets === !0 && i.bindAttribLocation(x, 0, "position"),
    i.linkProgram(x);
  function L(B) {
    if (t.debug.checkShaderErrors) {
      const $ = i.getProgramInfoLog(x).trim(),
        D = i.getShaderInfoLog(M).trim(),
        X = i.getShaderInfoLog(C).trim();
      let j = !0,
        Y = !0;
      if (i.getProgramParameter(x, i.LINK_STATUS) === !1)
        if (((j = !1), typeof t.debug.onShaderError == "function"))
          t.debug.onShaderError(i, x, M, C);
        else {
          const N = pA(i, M, "vertex"),
            V = pA(i, C, "fragment");
          console.error(
            "THREE.WebGLProgram: Shader Error " +
              i.getError() +
              " - VALIDATE_STATUS " +
              i.getProgramParameter(x, i.VALIDATE_STATUS) +
              `

Program Info Log: ` +
              $ +
              `
` +
              N +
              `
` +
              V
          );
        }
      else
        $ !== ""
          ? console.warn("THREE.WebGLProgram: Program Info Log:", $)
          : (D === "" || X === "") && (Y = !1);
      Y &&
        (B.diagnostics = {
          runnable: j,
          programLog: $,
          vertexShader: { log: D, prefix: g },
          fragmentShader: { log: X, prefix: y },
        });
    }
    i.deleteShader(M), i.deleteShader(C), (A = new Av(i, x)), (P = a8(i, x));
  }
  let A;
  this.getUniforms = function () {
    return A === void 0 && L(this), A;
  };
  let P;
  this.getAttributes = function () {
    return P === void 0 && L(this), P;
  };
  let k = n.rendererExtensionParallelShaderCompile === !1;
  return (
    (this.isReady = function () {
      return k === !1 && (k = i.getProgramParameter(x, QV)), k;
    }),
    (this.destroy = function () {
      r.releaseStatesOfProgram(this),
        i.deleteProgram(x),
        (this.program = void 0);
    }),
    (this.type = n.shaderType),
    (this.name = n.shaderName),
    (this.id = JV++),
    (this.cacheKey = e),
    (this.usedTimes = 1),
    (this.program = x),
    (this.vertexShader = M),
    (this.fragmentShader = C),
    this
  );
}
let x8 = 0;
class _8 {
  constructor() {
    (this.shaderCache = new Map()), (this.materialCache = new Map());
  }
  update(e) {
    const n = e.vertexShader,
      r = e.fragmentShader,
      i = this._getShaderStage(n),
      o = this._getShaderStage(r),
      s = this._getShaderCacheForMaterial(e);
    return (
      s.has(i) === !1 && (s.add(i), i.usedTimes++),
      s.has(o) === !1 && (s.add(o), o.usedTimes++),
      this
    );
  }
  remove(e) {
    const n = this.materialCache.get(e);
    for (const r of n)
      r.usedTimes--, r.usedTimes === 0 && this.shaderCache.delete(r.code);
    return this.materialCache.delete(e), this;
  }
  getVertexShaderID(e) {
    return this._getShaderStage(e.vertexShader).id;
  }
  getFragmentShaderID(e) {
    return this._getShaderStage(e.fragmentShader).id;
  }
  dispose() {
    this.shaderCache.clear(), this.materialCache.clear();
  }
  _getShaderCacheForMaterial(e) {
    const n = this.materialCache;
    let r = n.get(e);
    return r === void 0 && ((r = new Set()), n.set(e, r)), r;
  }
  _getShaderStage(e) {
    const n = this.shaderCache;
    let r = n.get(e);
    return r === void 0 && ((r = new S8(e)), n.set(e, r)), r;
  }
}
class S8 {
  constructor(e) {
    (this.id = x8++), (this.code = e), (this.usedTimes = 0);
  }
}
function w8(t, e, n, r, i, o, s) {
  const a = new mc(),
    l = new _8(),
    c = [],
    u = i.isWebGL2,
    h = i.logarithmicDepthBuffer,
    p = i.vertexTextures;
  let m = i.precision;
  const v = {
    MeshDepthMaterial: "depth",
    MeshDistanceMaterial: "distanceRGBA",
    MeshNormalMaterial: "normal",
    MeshBasicMaterial: "basic",
    MeshLambertMaterial: "lambert",
    MeshPhongMaterial: "phong",
    MeshToonMaterial: "toon",
    MeshStandardMaterial: "physical",
    MeshPhysicalMaterial: "physical",
    MeshMatcapMaterial: "matcap",
    LineBasicMaterial: "basic",
    LineDashedMaterial: "dashed",
    PointsMaterial: "points",
    ShadowMaterial: "shadow",
    SpriteMaterial: "sprite",
  };
  function S(A) {
    return A === 0 ? "uv" : `uv${A}`;
  }
  function x(A, P, k, B, $) {
    const D = B.fog,
      X = $.geometry,
      j = A.isMeshStandardMaterial ? B.environment : null,
      Y = (A.isMeshStandardMaterial ? n : e).get(A.envMap || j),
      N = Y && Y.mapping === kf ? Y.image.height : null,
      V = v[A.type];
    A.precision !== null &&
      ((m = i.getMaxPrecision(A.precision)),
      m !== A.precision &&
        console.warn(
          "THREE.WebGLProgram.getParameters:",
          A.precision,
          "not supported, using",
          m,
          "instead."
        ));
    const G =
        X.morphAttributes.position ||
        X.morphAttributes.normal ||
        X.morphAttributes.color,
      U = G !== void 0 ? G.length : 0;
    let Z = 0;
    X.morphAttributes.position !== void 0 && (Z = 1),
      X.morphAttributes.normal !== void 0 && (Z = 2),
      X.morphAttributes.color !== void 0 && (Z = 3);
    let Q, te, re, le;
    if (V) {
      const St = Bo[V];
      (Q = St.vertexShader), (te = St.fragmentShader);
    } else
      (Q = A.vertexShader),
        (te = A.fragmentShader),
        l.update(A),
        (re = l.getVertexShaderID(A)),
        (le = l.getFragmentShaderID(A));
    const oe = t.getRenderTarget(),
      ve = $.isInstancedMesh === !0,
      Ae = $.isBatchedMesh === !0,
      Re = !!A.map,
      ye = !!A.matcap,
      q = !!Y,
      xe = !!A.aoMap,
      he = !!A.lightMap,
      me = !!A.bumpMap,
      fe = !!A.normalMap,
      Ve = !!A.displacementMap,
      ge = !!A.emissiveMap,
      H = !!A.metalnessMap,
      F = !!A.roughnessMap,
      K = A.anisotropy > 0,
      ae = A.clearcoat > 0,
      se = A.iridescence > 0,
      de = A.sheen > 0,
      Pe = A.transmission > 0,
      ke = K && !!A.anisotropyMap,
      Be = ae && !!A.clearcoatMap,
      Ne = ae && !!A.clearcoatNormalMap,
      ze = ae && !!A.clearcoatRoughnessMap,
      Ee = se && !!A.iridescenceMap,
      Je = se && !!A.iridescenceThicknessMap,
      qe = de && !!A.sheenColorMap,
      Qe = de && !!A.sheenRoughnessMap,
      Ge = !!A.specularMap,
      Oe = !!A.specularColorMap,
      ne = !!A.specularIntensityMap,
      be = Pe && !!A.transmissionMap,
      je = Pe && !!A.thicknessMap,
      De = !!A.gradientMap,
      Le = !!A.alphaMap,
      ie = A.alphaTest > 0,
      Ue = !!A.alphaHash,
      Ke = !!A.extensions,
      ft = !!X.attributes.uv1,
      $e = !!X.attributes.uv2,
      it = !!X.attributes.uv3;
    let ot = ys;
    return (
      A.toneMapped &&
        (oe === null || oe.isXRRenderTarget === !0) &&
        (ot = t.toneMapping),
      {
        isWebGL2: u,
        shaderID: V,
        shaderType: A.type,
        shaderName: A.name,
        vertexShader: Q,
        fragmentShader: te,
        defines: A.defines,
        customVertexShaderID: re,
        customFragmentShaderID: le,
        isRawShaderMaterial: A.isRawShaderMaterial === !0,
        glslVersion: A.glslVersion,
        precision: m,
        batching: Ae,
        instancing: ve,
        instancingColor: ve && $.instanceColor !== null,
        supportsVertexTextures: p,
        outputColorSpace:
          oe === null
            ? t.outputColorSpace
            : oe.isXRRenderTarget === !0
            ? oe.texture.colorSpace
            : ws,
        map: Re,
        matcap: ye,
        envMap: q,
        envMapMode: q && Y.mapping,
        envMapCubeUVHeight: N,
        aoMap: xe,
        lightMap: he,
        bumpMap: me,
        normalMap: fe,
        displacementMap: p && Ve,
        emissiveMap: ge,
        normalMapObjectSpace: fe && A.normalMapType === _O,
        normalMapTangentSpace: fe && A.normalMapType === pl,
        metalnessMap: H,
        roughnessMap: F,
        anisotropy: K,
        anisotropyMap: ke,
        clearcoat: ae,
        clearcoatMap: Be,
        clearcoatNormalMap: Ne,
        clearcoatRoughnessMap: ze,
        iridescence: se,
        iridescenceMap: Ee,
        iridescenceThicknessMap: Je,
        sheen: de,
        sheenColorMap: qe,
        sheenRoughnessMap: Qe,
        specularMap: Ge,
        specularColorMap: Oe,
        specularIntensityMap: ne,
        transmission: Pe,
        transmissionMap: be,
        thicknessMap: je,
        gradientMap: De,
        opaque: A.transparent === !1 && A.blending === hc,
        alphaMap: Le,
        alphaTest: ie,
        alphaHash: Ue,
        combine: A.combine,
        mapUv: Re && S(A.map.channel),
        aoMapUv: xe && S(A.aoMap.channel),
        lightMapUv: he && S(A.lightMap.channel),
        bumpMapUv: me && S(A.bumpMap.channel),
        normalMapUv: fe && S(A.normalMap.channel),
        displacementMapUv: Ve && S(A.displacementMap.channel),
        emissiveMapUv: ge && S(A.emissiveMap.channel),
        metalnessMapUv: H && S(A.metalnessMap.channel),
        roughnessMapUv: F && S(A.roughnessMap.channel),
        anisotropyMapUv: ke && S(A.anisotropyMap.channel),
        clearcoatMapUv: Be && S(A.clearcoatMap.channel),
        clearcoatNormalMapUv: Ne && S(A.clearcoatNormalMap.channel),
        clearcoatRoughnessMapUv: ze && S(A.clearcoatRoughnessMap.channel),
        iridescenceMapUv: Ee && S(A.iridescenceMap.channel),
        iridescenceThicknessMapUv: Je && S(A.iridescenceThicknessMap.channel),
        sheenColorMapUv: qe && S(A.sheenColorMap.channel),
        sheenRoughnessMapUv: Qe && S(A.sheenRoughnessMap.channel),
        specularMapUv: Ge && S(A.specularMap.channel),
        specularColorMapUv: Oe && S(A.specularColorMap.channel),
        specularIntensityMapUv: ne && S(A.specularIntensityMap.channel),
        transmissionMapUv: be && S(A.transmissionMap.channel),
        thicknessMapUv: je && S(A.thicknessMap.channel),
        alphaMapUv: Le && S(A.alphaMap.channel),
        vertexTangents: !!X.attributes.tangent && (fe || K),
        vertexColors: A.vertexColors,
        vertexAlphas:
          A.vertexColors === !0 &&
          !!X.attributes.color &&
          X.attributes.color.itemSize === 4,
        vertexUv1s: ft,
        vertexUv2s: $e,
        vertexUv3s: it,
        pointsUvs: $.isPoints === !0 && !!X.attributes.uv && (Re || Le),
        fog: !!D,
        useFog: A.fog === !0,
        fogExp2: D && D.isFogExp2,
        flatShading: A.flatShading === !0,
        sizeAttenuation: A.sizeAttenuation === !0,
        logarithmicDepthBuffer: h,
        skinning: $.isSkinnedMesh === !0,
        morphTargets: X.morphAttributes.position !== void 0,
        morphNormals: X.morphAttributes.normal !== void 0,
        morphColors: X.morphAttributes.color !== void 0,
        morphTargetsCount: U,
        morphTextureStride: Z,
        numDirLights: P.directional.length,
        numPointLights: P.point.length,
        numSpotLights: P.spot.length,
        numSpotLightMaps: P.spotLightMap.length,
        numRectAreaLights: P.rectArea.length,
        numHemiLights: P.hemi.length,
        numDirLightShadows: P.directionalShadowMap.length,
        numPointLightShadows: P.pointShadowMap.length,
        numSpotLightShadows: P.spotShadowMap.length,
        numSpotLightShadowsWithMaps: P.numSpotLightShadowsWithMaps,
        numLightProbes: P.numLightProbes,
        numClippingPlanes: s.numPlanes,
        numClipIntersection: s.numIntersection,
        dithering: A.dithering,
        shadowMapEnabled: t.shadowMap.enabled && k.length > 0,
        shadowMapType: t.shadowMap.type,
        toneMapping: ot,
        useLegacyLights: t._useLegacyLights,
        decodeVideoTexture:
          Re &&
          A.map.isVideoTexture === !0 &&
          nn.getTransfer(A.map.colorSpace) === dn,
        premultipliedAlpha: A.premultipliedAlpha,
        doubleSided: A.side === mo,
        flipSided: A.side === Vr,
        useDepthPacking: A.depthPacking >= 0,
        depthPacking: A.depthPacking || 0,
        index0AttributeName: A.index0AttributeName,
        extensionDerivatives: Ke && A.extensions.derivatives === !0,
        extensionFragDepth: Ke && A.extensions.fragDepth === !0,
        extensionDrawBuffers: Ke && A.extensions.drawBuffers === !0,
        extensionShaderTextureLOD: Ke && A.extensions.shaderTextureLOD === !0,
        extensionClipCullDistance:
          Ke &&
          A.extensions.clipCullDistance &&
          r.has("WEBGL_clip_cull_distance"),
        rendererExtensionFragDepth: u || r.has("EXT_frag_depth"),
        rendererExtensionDrawBuffers: u || r.has("WEBGL_draw_buffers"),
        rendererExtensionShaderTextureLod: u || r.has("EXT_shader_texture_lod"),
        rendererExtensionParallelShaderCompile: r.has(
          "KHR_parallel_shader_compile"
        ),
        customProgramCacheKey: A.customProgramCacheKey(),
      }
    );
  }
  function g(A) {
    const P = [];
    if (
      (A.shaderID
        ? P.push(A.shaderID)
        : (P.push(A.customVertexShaderID), P.push(A.customFragmentShaderID)),
      A.defines !== void 0)
    )
      for (const k in A.defines) P.push(k), P.push(A.defines[k]);
    return (
      A.isRawShaderMaterial === !1 &&
        (y(P, A), _(P, A), P.push(t.outputColorSpace)),
      P.push(A.customProgramCacheKey),
      P.join()
    );
  }
  function y(A, P) {
    A.push(P.precision),
      A.push(P.outputColorSpace),
      A.push(P.envMapMode),
      A.push(P.envMapCubeUVHeight),
      A.push(P.mapUv),
      A.push(P.alphaMapUv),
      A.push(P.lightMapUv),
      A.push(P.aoMapUv),
      A.push(P.bumpMapUv),
      A.push(P.normalMapUv),
      A.push(P.displacementMapUv),
      A.push(P.emissiveMapUv),
      A.push(P.metalnessMapUv),
      A.push(P.roughnessMapUv),
      A.push(P.anisotropyMapUv),
      A.push(P.clearcoatMapUv),
      A.push(P.clearcoatNormalMapUv),
      A.push(P.clearcoatRoughnessMapUv),
      A.push(P.iridescenceMapUv),
      A.push(P.iridescenceThicknessMapUv),
      A.push(P.sheenColorMapUv),
      A.push(P.sheenRoughnessMapUv),
      A.push(P.specularMapUv),
      A.push(P.specularColorMapUv),
      A.push(P.specularIntensityMapUv),
      A.push(P.transmissionMapUv),
      A.push(P.thicknessMapUv),
      A.push(P.combine),
      A.push(P.fogExp2),
      A.push(P.sizeAttenuation),
      A.push(P.morphTargetsCount),
      A.push(P.morphAttributeCount),
      A.push(P.numDirLights),
      A.push(P.numPointLights),
      A.push(P.numSpotLights),
      A.push(P.numSpotLightMaps),
      A.push(P.numHemiLights),
      A.push(P.numRectAreaLights),
      A.push(P.numDirLightShadows),
      A.push(P.numPointLightShadows),
      A.push(P.numSpotLightShadows),
      A.push(P.numSpotLightShadowsWithMaps),
      A.push(P.numLightProbes),
      A.push(P.shadowMapType),
      A.push(P.toneMapping),
      A.push(P.numClippingPlanes),
      A.push(P.numClipIntersection),
      A.push(P.depthPacking);
  }
  function _(A, P) {
    a.disableAll(),
      P.isWebGL2 && a.enable(0),
      P.supportsVertexTextures && a.enable(1),
      P.instancing && a.enable(2),
      P.instancingColor && a.enable(3),
      P.matcap && a.enable(4),
      P.envMap && a.enable(5),
      P.normalMapObjectSpace && a.enable(6),
      P.normalMapTangentSpace && a.enable(7),
      P.clearcoat && a.enable(8),
      P.iridescence && a.enable(9),
      P.alphaTest && a.enable(10),
      P.vertexColors && a.enable(11),
      P.vertexAlphas && a.enable(12),
      P.vertexUv1s && a.enable(13),
      P.vertexUv2s && a.enable(14),
      P.vertexUv3s && a.enable(15),
      P.vertexTangents && a.enable(16),
      P.anisotropy && a.enable(17),
      P.alphaHash && a.enable(18),
      P.batching && a.enable(19),
      A.push(a.mask),
      a.disableAll(),
      P.fog && a.enable(0),
      P.useFog && a.enable(1),
      P.flatShading && a.enable(2),
      P.logarithmicDepthBuffer && a.enable(3),
      P.skinning && a.enable(4),
      P.morphTargets && a.enable(5),
      P.morphNormals && a.enable(6),
      P.morphColors && a.enable(7),
      P.premultipliedAlpha && a.enable(8),
      P.shadowMapEnabled && a.enable(9),
      P.useLegacyLights && a.enable(10),
      P.doubleSided && a.enable(11),
      P.flipSided && a.enable(12),
      P.useDepthPacking && a.enable(13),
      P.dithering && a.enable(14),
      P.transmission && a.enable(15),
      P.sheen && a.enable(16),
      P.opaque && a.enable(17),
      P.pointsUvs && a.enable(18),
      P.decodeVideoTexture && a.enable(19),
      A.push(a.mask);
  }
  function b(A) {
    const P = v[A.type];
    let k;
    if (P) {
      const B = Bo[P];
      k = Wh.clone(B.uniforms);
    } else k = A.uniforms;
    return k;
  }
  function T(A, P) {
    let k;
    for (let B = 0, $ = c.length; B < $; B++) {
      const D = c[B];
      if (D.cacheKey === P) {
        (k = D), ++k.usedTimes;
        break;
      }
    }
    return k === void 0 && ((k = new y8(t, P, A, o)), c.push(k)), k;
  }
  function M(A) {
    if (--A.usedTimes === 0) {
      const P = c.indexOf(A);
      (c[P] = c[c.length - 1]), c.pop(), A.destroy();
    }
  }
  function C(A) {
    l.remove(A);
  }
  function L() {
    l.dispose();
  }
  return {
    getParameters: x,
    getProgramCacheKey: g,
    getUniforms: b,
    acquireProgram: T,
    releaseProgram: M,
    releaseShaderCache: C,
    programs: c,
    dispose: L,
  };
}
function b8() {
  let t = new WeakMap();
  function e(o) {
    let s = t.get(o);
    return s === void 0 && ((s = {}), t.set(o, s)), s;
  }
  function n(o) {
    t.delete(o);
  }
  function r(o, s, a) {
    t.get(o)[s] = a;
  }
  function i() {
    t = new WeakMap();
  }
  return { get: e, remove: n, update: r, dispose: i };
}
function E8(t, e) {
  return t.groupOrder !== e.groupOrder
    ? t.groupOrder - e.groupOrder
    : t.renderOrder !== e.renderOrder
    ? t.renderOrder - e.renderOrder
    : t.material.id !== e.material.id
    ? t.material.id - e.material.id
    : t.z !== e.z
    ? t.z - e.z
    : t.id - e.id;
}
function xA(t, e) {
  return t.groupOrder !== e.groupOrder
    ? t.groupOrder - e.groupOrder
    : t.renderOrder !== e.renderOrder
    ? t.renderOrder - e.renderOrder
    : t.z !== e.z
    ? e.z - t.z
    : t.id - e.id;
}
function _A() {
  const t = [];
  let e = 0;
  const n = [],
    r = [],
    i = [];
  function o() {
    (e = 0), (n.length = 0), (r.length = 0), (i.length = 0);
  }
  function s(h, p, m, v, S, x) {
    let g = t[e];
    return (
      g === void 0
        ? ((g = {
            id: h.id,
            object: h,
            geometry: p,
            material: m,
            groupOrder: v,
            renderOrder: h.renderOrder,
            z: S,
            group: x,
          }),
          (t[e] = g))
        : ((g.id = h.id),
          (g.object = h),
          (g.geometry = p),
          (g.material = m),
          (g.groupOrder = v),
          (g.renderOrder = h.renderOrder),
          (g.z = S),
          (g.group = x)),
      e++,
      g
    );
  }
  function a(h, p, m, v, S, x) {
    const g = s(h, p, m, v, S, x);
    m.transmission > 0
      ? r.push(g)
      : m.transparent === !0
      ? i.push(g)
      : n.push(g);
  }
  function l(h, p, m, v, S, x) {
    const g = s(h, p, m, v, S, x);
    m.transmission > 0
      ? r.unshift(g)
      : m.transparent === !0
      ? i.unshift(g)
      : n.unshift(g);
  }
  function c(h, p) {
    n.length > 1 && n.sort(h || E8),
      r.length > 1 && r.sort(p || xA),
      i.length > 1 && i.sort(p || xA);
  }
  function u() {
    for (let h = e, p = t.length; h < p; h++) {
      const m = t[h];
      if (m.id === null) break;
      (m.id = null),
        (m.object = null),
        (m.geometry = null),
        (m.material = null),
        (m.group = null);
    }
  }
  return {
    opaque: n,
    transmissive: r,
    transparent: i,
    init: o,
    push: a,
    unshift: l,
    finish: u,
    sort: c,
  };
}
function M8() {
  let t = new WeakMap();
  function e(r, i) {
    const o = t.get(r);
    let s;
    return (
      o === void 0
        ? ((s = new _A()), t.set(r, [s]))
        : i >= o.length
        ? ((s = new _A()), o.push(s))
        : (s = o[i]),
      s
    );
  }
  function n() {
    t = new WeakMap();
  }
  return { get: e, dispose: n };
}
function C8() {
  const t = {};
  return {
    get: function (e) {
      if (t[e.id] !== void 0) return t[e.id];
      let n;
      switch (e.type) {
        case "DirectionalLight":
          n = { direction: new W(), color: new nt() };
          break;
        case "SpotLight":
          n = {
            position: new W(),
            direction: new W(),
            color: new nt(),
            distance: 0,
            coneCos: 0,
            penumbraCos: 0,
            decay: 0,
          };
          break;
        case "PointLight":
          n = { position: new W(), color: new nt(), distance: 0, decay: 0 };
          break;
        case "HemisphereLight":
          n = { direction: new W(), skyColor: new nt(), groundColor: new nt() };
          break;
        case "RectAreaLight":
          n = {
            color: new nt(),
            position: new W(),
            halfWidth: new W(),
            halfHeight: new W(),
          };
          break;
      }
      return (t[e.id] = n), n;
    },
  };
}
function T8() {
  const t = {};
  return {
    get: function (e) {
      if (t[e.id] !== void 0) return t[e.id];
      let n;
      switch (e.type) {
        case "DirectionalLight":
          n = {
            shadowBias: 0,
            shadowNormalBias: 0,
            shadowRadius: 1,
            shadowMapSize: new Fe(),
          };
          break;
        case "SpotLight":
          n = {
            shadowBias: 0,
            shadowNormalBias: 0,
            shadowRadius: 1,
            shadowMapSize: new Fe(),
          };
          break;
        case "PointLight":
          n = {
            shadowBias: 0,
            shadowNormalBias: 0,
            shadowRadius: 1,
            shadowMapSize: new Fe(),
            shadowCameraNear: 1,
            shadowCameraFar: 1e3,
          };
          break;
      }
      return (t[e.id] = n), n;
    },
  };
}
let A8 = 0;
function R8(t, e) {
  return (
    (e.castShadow ? 2 : 0) -
    (t.castShadow ? 2 : 0) +
    (e.map ? 1 : 0) -
    (t.map ? 1 : 0)
  );
}
function P8(t, e) {
  const n = new C8(),
    r = T8(),
    i = {
      version: 0,
      hash: {
        directionalLength: -1,
        pointLength: -1,
        spotLength: -1,
        rectAreaLength: -1,
        hemiLength: -1,
        numDirectionalShadows: -1,
        numPointShadows: -1,
        numSpotShadows: -1,
        numSpotMaps: -1,
        numLightProbes: -1,
      },
      ambient: [0, 0, 0],
      probe: [],
      directional: [],
      directionalShadow: [],
      directionalShadowMap: [],
      directionalShadowMatrix: [],
      spot: [],
      spotLightMap: [],
      spotShadow: [],
      spotShadowMap: [],
      spotLightMatrix: [],
      rectArea: [],
      rectAreaLTC1: null,
      rectAreaLTC2: null,
      point: [],
      pointShadow: [],
      pointShadowMap: [],
      pointShadowMatrix: [],
      hemi: [],
      numSpotLightShadowsWithMaps: 0,
      numLightProbes: 0,
    };
  for (let u = 0; u < 9; u++) i.probe.push(new W());
  const o = new W(),
    s = new bt(),
    a = new bt();
  function l(u, h) {
    let p = 0,
      m = 0,
      v = 0;
    for (let B = 0; B < 9; B++) i.probe[B].set(0, 0, 0);
    let S = 0,
      x = 0,
      g = 0,
      y = 0,
      _ = 0,
      b = 0,
      T = 0,
      M = 0,
      C = 0,
      L = 0,
      A = 0;
    u.sort(R8);
    const P = h === !0 ? Math.PI : 1;
    for (let B = 0, $ = u.length; B < $; B++) {
      const D = u[B],
        X = D.color,
        j = D.intensity,
        Y = D.distance,
        N = D.shadow && D.shadow.map ? D.shadow.map.texture : null;
      if (D.isAmbientLight)
        (p += X.r * j * P), (m += X.g * j * P), (v += X.b * j * P);
      else if (D.isLightProbe) {
        for (let V = 0; V < 9; V++)
          i.probe[V].addScaledVector(D.sh.coefficients[V], j);
        A++;
      } else if (D.isDirectionalLight) {
        const V = n.get(D);
        if (
          (V.color.copy(D.color).multiplyScalar(D.intensity * P), D.castShadow)
        ) {
          const G = D.shadow,
            U = r.get(D);
          (U.shadowBias = G.bias),
            (U.shadowNormalBias = G.normalBias),
            (U.shadowRadius = G.radius),
            (U.shadowMapSize = G.mapSize),
            (i.directionalShadow[S] = U),
            (i.directionalShadowMap[S] = N),
            (i.directionalShadowMatrix[S] = D.shadow.matrix),
            b++;
        }
        (i.directional[S] = V), S++;
      } else if (D.isSpotLight) {
        const V = n.get(D);
        V.position.setFromMatrixPosition(D.matrixWorld),
          V.color.copy(X).multiplyScalar(j * P),
          (V.distance = Y),
          (V.coneCos = Math.cos(D.angle)),
          (V.penumbraCos = Math.cos(D.angle * (1 - D.penumbra))),
          (V.decay = D.decay),
          (i.spot[g] = V);
        const G = D.shadow;
        if (
          (D.map &&
            ((i.spotLightMap[C] = D.map),
            C++,
            G.updateMatrices(D),
            D.castShadow && L++),
          (i.spotLightMatrix[g] = G.matrix),
          D.castShadow)
        ) {
          const U = r.get(D);
          (U.shadowBias = G.bias),
            (U.shadowNormalBias = G.normalBias),
            (U.shadowRadius = G.radius),
            (U.shadowMapSize = G.mapSize),
            (i.spotShadow[g] = U),
            (i.spotShadowMap[g] = N),
            M++;
        }
        g++;
      } else if (D.isRectAreaLight) {
        const V = n.get(D);
        V.color.copy(X).multiplyScalar(j),
          V.halfWidth.set(D.width * 0.5, 0, 0),
          V.halfHeight.set(0, D.height * 0.5, 0),
          (i.rectArea[y] = V),
          y++;
      } else if (D.isPointLight) {
        const V = n.get(D);
        if (
          (V.color.copy(D.color).multiplyScalar(D.intensity * P),
          (V.distance = D.distance),
          (V.decay = D.decay),
          D.castShadow)
        ) {
          const G = D.shadow,
            U = r.get(D);
          (U.shadowBias = G.bias),
            (U.shadowNormalBias = G.normalBias),
            (U.shadowRadius = G.radius),
            (U.shadowMapSize = G.mapSize),
            (U.shadowCameraNear = G.camera.near),
            (U.shadowCameraFar = G.camera.far),
            (i.pointShadow[x] = U),
            (i.pointShadowMap[x] = N),
            (i.pointShadowMatrix[x] = D.shadow.matrix),
            T++;
        }
        (i.point[x] = V), x++;
      } else if (D.isHemisphereLight) {
        const V = n.get(D);
        V.skyColor.copy(D.color).multiplyScalar(j * P),
          V.groundColor.copy(D.groundColor).multiplyScalar(j * P),
          (i.hemi[_] = V),
          _++;
      }
    }
    y > 0 &&
      (e.isWebGL2
        ? t.has("OES_texture_float_linear") === !0
          ? ((i.rectAreaLTC1 = Ze.LTC_FLOAT_1),
            (i.rectAreaLTC2 = Ze.LTC_FLOAT_2))
          : ((i.rectAreaLTC1 = Ze.LTC_HALF_1), (i.rectAreaLTC2 = Ze.LTC_HALF_2))
        : t.has("OES_texture_float_linear") === !0
        ? ((i.rectAreaLTC1 = Ze.LTC_FLOAT_1), (i.rectAreaLTC2 = Ze.LTC_FLOAT_2))
        : t.has("OES_texture_half_float_linear") === !0
        ? ((i.rectAreaLTC1 = Ze.LTC_HALF_1), (i.rectAreaLTC2 = Ze.LTC_HALF_2))
        : console.error(
            "THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions."
          )),
      (i.ambient[0] = p),
      (i.ambient[1] = m),
      (i.ambient[2] = v);
    const k = i.hash;
    (k.directionalLength !== S ||
      k.pointLength !== x ||
      k.spotLength !== g ||
      k.rectAreaLength !== y ||
      k.hemiLength !== _ ||
      k.numDirectionalShadows !== b ||
      k.numPointShadows !== T ||
      k.numSpotShadows !== M ||
      k.numSpotMaps !== C ||
      k.numLightProbes !== A) &&
      ((i.directional.length = S),
      (i.spot.length = g),
      (i.rectArea.length = y),
      (i.point.length = x),
      (i.hemi.length = _),
      (i.directionalShadow.length = b),
      (i.directionalShadowMap.length = b),
      (i.pointShadow.length = T),
      (i.pointShadowMap.length = T),
      (i.spotShadow.length = M),
      (i.spotShadowMap.length = M),
      (i.directionalShadowMatrix.length = b),
      (i.pointShadowMatrix.length = T),
      (i.spotLightMatrix.length = M + C - L),
      (i.spotLightMap.length = C),
      (i.numSpotLightShadowsWithMaps = L),
      (i.numLightProbes = A),
      (k.directionalLength = S),
      (k.pointLength = x),
      (k.spotLength = g),
      (k.rectAreaLength = y),
      (k.hemiLength = _),
      (k.numDirectionalShadows = b),
      (k.numPointShadows = T),
      (k.numSpotShadows = M),
      (k.numSpotMaps = C),
      (k.numLightProbes = A),
      (i.version = A8++));
  }
  function c(u, h) {
    let p = 0,
      m = 0,
      v = 0,
      S = 0,
      x = 0;
    const g = h.matrixWorldInverse;
    for (let y = 0, _ = u.length; y < _; y++) {
      const b = u[y];
      if (b.isDirectionalLight) {
        const T = i.directional[p];
        T.direction.setFromMatrixPosition(b.matrixWorld),
          o.setFromMatrixPosition(b.target.matrixWorld),
          T.direction.sub(o),
          T.direction.transformDirection(g),
          p++;
      } else if (b.isSpotLight) {
        const T = i.spot[v];
        T.position.setFromMatrixPosition(b.matrixWorld),
          T.position.applyMatrix4(g),
          T.direction.setFromMatrixPosition(b.matrixWorld),
          o.setFromMatrixPosition(b.target.matrixWorld),
          T.direction.sub(o),
          T.direction.transformDirection(g),
          v++;
      } else if (b.isRectAreaLight) {
        const T = i.rectArea[S];
        T.position.setFromMatrixPosition(b.matrixWorld),
          T.position.applyMatrix4(g),
          a.identity(),
          s.copy(b.matrixWorld),
          s.premultiply(g),
          a.extractRotation(s),
          T.halfWidth.set(b.width * 0.5, 0, 0),
          T.halfHeight.set(0, b.height * 0.5, 0),
          T.halfWidth.applyMatrix4(a),
          T.halfHeight.applyMatrix4(a),
          S++;
      } else if (b.isPointLight) {
        const T = i.point[m];
        T.position.setFromMatrixPosition(b.matrixWorld),
          T.position.applyMatrix4(g),
          m++;
      } else if (b.isHemisphereLight) {
        const T = i.hemi[x];
        T.direction.setFromMatrixPosition(b.matrixWorld),
          T.direction.transformDirection(g),
          x++;
      }
    }
  }
  return { setup: l, setupView: c, state: i };
}
function SA(t, e) {
  const n = new P8(t, e),
    r = [],
    i = [];
  function o() {
    (r.length = 0), (i.length = 0);
  }
  function s(h) {
    r.push(h);
  }
  function a(h) {
    i.push(h);
  }
  function l(h) {
    n.setup(r, h);
  }
  function c(h) {
    n.setupView(r, h);
  }
  return {
    init: o,
    state: { lightsArray: r, shadowsArray: i, lights: n },
    setupLights: l,
    setupLightsView: c,
    pushLight: s,
    pushShadow: a,
  };
}
function L8(t, e) {
  let n = new WeakMap();
  function r(o, s = 0) {
    const a = n.get(o);
    let l;
    return (
      a === void 0
        ? ((l = new SA(t, e)), n.set(o, [l]))
        : s >= a.length
        ? ((l = new SA(t, e)), a.push(l))
        : (l = a[s]),
      l
    );
  }
  function i() {
    n = new WeakMap();
  }
  return { get: r, dispose: i };
}
class iy extends Rr {
  constructor(e) {
    super(),
      (this.isMeshDepthMaterial = !0),
      (this.type = "MeshDepthMaterial"),
      (this.depthPacking = xO),
      (this.map = null),
      (this.alphaMap = null),
      (this.displacementMap = null),
      (this.displacementScale = 1),
      (this.displacementBias = 0),
      (this.wireframe = !1),
      (this.wireframeLinewidth = 1),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      (this.depthPacking = e.depthPacking),
      (this.map = e.map),
      (this.alphaMap = e.alphaMap),
      (this.displacementMap = e.displacementMap),
      (this.displacementScale = e.displacementScale),
      (this.displacementBias = e.displacementBias),
      (this.wireframe = e.wireframe),
      (this.wireframeLinewidth = e.wireframeLinewidth),
      this
    );
  }
}
class oy extends Rr {
  constructor(e) {
    super(),
      (this.isMeshDistanceMaterial = !0),
      (this.type = "MeshDistanceMaterial"),
      (this.map = null),
      (this.alphaMap = null),
      (this.displacementMap = null),
      (this.displacementScale = 1),
      (this.displacementBias = 0),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      (this.map = e.map),
      (this.alphaMap = e.alphaMap),
      (this.displacementMap = e.displacementMap),
      (this.displacementScale = e.displacementScale),
      (this.displacementBias = e.displacementBias),
      this
    );
  }
}
const I8 = `void main() {
	gl_Position = vec4( position, 1.0 );
}`,
  O8 = `uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;
function F8(t, e, n) {
  let r = new Sp();
  const i = new Fe(),
    o = new Fe(),
    s = new Ht(),
    a = new iy({ depthPacking: UE }),
    l = new oy(),
    c = {},
    u = n.maxTextureSize,
    h = { [Ss]: Vr, [Vr]: Ss, [mo]: mo },
    p = new Ko({
      defines: { VSM_SAMPLES: 8 },
      uniforms: {
        shadow_pass: { value: null },
        resolution: { value: new Fe() },
        radius: { value: 4 },
      },
      vertexShader: I8,
      fragmentShader: O8,
    }),
    m = p.clone();
  m.defines.HORIZONTAL_PASS = 1;
  const v = new It();
  v.setAttribute(
    "position",
    new en(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3)
  );
  const S = new An(v, p),
    x = this;
  (this.enabled = !1),
    (this.autoUpdate = !0),
    (this.needsUpdate = !1),
    (this.type = Z0);
  let g = this.type;
  this.render = function (M, C, L) {
    if (
      x.enabled === !1 ||
      (x.autoUpdate === !1 && x.needsUpdate === !1) ||
      M.length === 0
    )
      return;
    const A = t.getRenderTarget(),
      P = t.getActiveCubeFace(),
      k = t.getActiveMipmapLevel(),
      B = t.state;
    B.setBlending(ra),
      B.buffers.color.setClear(1, 1, 1, 1),
      B.buffers.depth.setTest(!0),
      B.setScissorTest(!1);
    const $ = g !== No && this.type === No,
      D = g === No && this.type !== No;
    for (let X = 0, j = M.length; X < j; X++) {
      const Y = M[X],
        N = Y.shadow;
      if (N === void 0) {
        console.warn("THREE.WebGLShadowMap:", Y, "has no shadow.");
        continue;
      }
      if (N.autoUpdate === !1 && N.needsUpdate === !1) continue;
      i.copy(N.mapSize);
      const V = N.getFrameExtents();
      if (
        (i.multiply(V),
        o.copy(N.mapSize),
        (i.x > u || i.y > u) &&
          (i.x > u &&
            ((o.x = Math.floor(u / V.x)),
            (i.x = o.x * V.x),
            (N.mapSize.x = o.x)),
          i.y > u &&
            ((o.y = Math.floor(u / V.y)),
            (i.y = o.y * V.y),
            (N.mapSize.y = o.y))),
        N.map === null || $ === !0 || D === !0)
      ) {
        const U = this.type !== No ? { minFilter: Wn, magFilter: Wn } : {};
        N.map !== null && N.map.dispose(),
          (N.map = new Yo(i.x, i.y, U)),
          (N.map.texture.name = Y.name + ".shadowMap"),
          N.camera.updateProjectionMatrix();
      }
      t.setRenderTarget(N.map), t.clear();
      const G = N.getViewportCount();
      for (let U = 0; U < G; U++) {
        const Z = N.getViewport(U);
        s.set(o.x * Z.x, o.y * Z.y, o.x * Z.z, o.y * Z.w),
          B.viewport(s),
          N.updateMatrices(Y, U),
          (r = N.getFrustum()),
          b(C, L, N.camera, Y, this.type);
      }
      N.isPointLightShadow !== !0 && this.type === No && y(N, L),
        (N.needsUpdate = !1);
    }
    (g = this.type), (x.needsUpdate = !1), t.setRenderTarget(A, P, k);
  };
  function y(M, C) {
    const L = e.update(S);
    p.defines.VSM_SAMPLES !== M.blurSamples &&
      ((p.defines.VSM_SAMPLES = M.blurSamples),
      (m.defines.VSM_SAMPLES = M.blurSamples),
      (p.needsUpdate = !0),
      (m.needsUpdate = !0)),
      M.mapPass === null && (M.mapPass = new Yo(i.x, i.y)),
      (p.uniforms.shadow_pass.value = M.map.texture),
      (p.uniforms.resolution.value = M.mapSize),
      (p.uniforms.radius.value = M.radius),
      t.setRenderTarget(M.mapPass),
      t.clear(),
      t.renderBufferDirect(C, null, L, p, S, null),
      (m.uniforms.shadow_pass.value = M.mapPass.texture),
      (m.uniforms.resolution.value = M.mapSize),
      (m.uniforms.radius.value = M.radius),
      t.setRenderTarget(M.map),
      t.clear(),
      t.renderBufferDirect(C, null, L, m, S, null);
  }
  function _(M, C, L, A) {
    let P = null;
    const k =
      L.isPointLight === !0 ? M.customDistanceMaterial : M.customDepthMaterial;
    if (k !== void 0) P = k;
    else if (
      ((P = L.isPointLight === !0 ? l : a),
      (t.localClippingEnabled &&
        C.clipShadows === !0 &&
        Array.isArray(C.clippingPlanes) &&
        C.clippingPlanes.length !== 0) ||
        (C.displacementMap && C.displacementScale !== 0) ||
        (C.alphaMap && C.alphaTest > 0) ||
        (C.map && C.alphaTest > 0))
    ) {
      const B = P.uuid,
        $ = C.uuid;
      let D = c[B];
      D === void 0 && ((D = {}), (c[B] = D));
      let X = D[$];
      X === void 0 &&
        ((X = P.clone()), (D[$] = X), C.addEventListener("dispose", T)),
        (P = X);
    }
    if (
      ((P.visible = C.visible),
      (P.wireframe = C.wireframe),
      A === No
        ? (P.side = C.shadowSide !== null ? C.shadowSide : C.side)
        : (P.side = C.shadowSide !== null ? C.shadowSide : h[C.side]),
      (P.alphaMap = C.alphaMap),
      (P.alphaTest = C.alphaTest),
      (P.map = C.map),
      (P.clipShadows = C.clipShadows),
      (P.clippingPlanes = C.clippingPlanes),
      (P.clipIntersection = C.clipIntersection),
      (P.displacementMap = C.displacementMap),
      (P.displacementScale = C.displacementScale),
      (P.displacementBias = C.displacementBias),
      (P.wireframeLinewidth = C.wireframeLinewidth),
      (P.linewidth = C.linewidth),
      L.isPointLight === !0 && P.isMeshDistanceMaterial === !0)
    ) {
      const B = t.properties.get(P);
      B.light = L;
    }
    return P;
  }
  function b(M, C, L, A, P) {
    if (M.visible === !1) return;
    if (
      M.layers.test(C.layers) &&
      (M.isMesh || M.isLine || M.isPoints) &&
      (M.castShadow || (M.receiveShadow && P === No)) &&
      (!M.frustumCulled || r.intersectsObject(M))
    ) {
      M.modelViewMatrix.multiplyMatrices(L.matrixWorldInverse, M.matrixWorld);
      const $ = e.update(M),
        D = M.material;
      if (Array.isArray(D)) {
        const X = $.groups;
        for (let j = 0, Y = X.length; j < Y; j++) {
          const N = X[j],
            V = D[N.materialIndex];
          if (V && V.visible) {
            const G = _(M, V, A, P);
            M.onBeforeShadow(t, M, C, L, $, G, N),
              t.renderBufferDirect(L, null, $, G, M, N),
              M.onAfterShadow(t, M, C, L, $, G, N);
          }
        }
      } else if (D.visible) {
        const X = _(M, D, A, P);
        M.onBeforeShadow(t, M, C, L, $, X, null),
          t.renderBufferDirect(L, null, $, X, M, null),
          M.onAfterShadow(t, M, C, L, $, X, null);
      }
    }
    const B = M.children;
    for (let $ = 0, D = B.length; $ < D; $++) b(B[$], C, L, A, P);
  }
  function T(M) {
    M.target.removeEventListener("dispose", T);
    for (const L in c) {
      const A = c[L],
        P = M.target.uuid;
      P in A && (A[P].dispose(), delete A[P]);
    }
  }
}
function N8(t, e, n) {
  const r = n.isWebGL2;
  function i() {
    let ie = !1;
    const Ue = new Ht();
    let Ke = null;
    const ft = new Ht(0, 0, 0, 0);
    return {
      setMask: function ($e) {
        Ke !== $e && !ie && (t.colorMask($e, $e, $e, $e), (Ke = $e));
      },
      setLocked: function ($e) {
        ie = $e;
      },
      setClear: function ($e, it, ot, Tt, St) {
        St === !0 && (($e *= Tt), (it *= Tt), (ot *= Tt)),
          Ue.set($e, it, ot, Tt),
          ft.equals(Ue) === !1 && (t.clearColor($e, it, ot, Tt), ft.copy(Ue));
      },
      reset: function () {
        (ie = !1), (Ke = null), ft.set(-1, 0, 0, 0);
      },
    };
  }
  function o() {
    let ie = !1,
      Ue = null,
      Ke = null,
      ft = null;
    return {
      setTest: function ($e) {
        $e ? Ae(t.DEPTH_TEST) : Re(t.DEPTH_TEST);
      },
      setMask: function ($e) {
        Ue !== $e && !ie && (t.depthMask($e), (Ue = $e));
      },
      setFunc: function ($e) {
        if (Ke !== $e) {
          switch ($e) {
            case XI:
              t.depthFunc(t.NEVER);
              break;
            case qI:
              t.depthFunc(t.ALWAYS);
              break;
            case YI:
              t.depthFunc(t.LESS);
              break;
            case Ih:
              t.depthFunc(t.LEQUAL);
              break;
            case KI:
              t.depthFunc(t.EQUAL);
              break;
            case ZI:
              t.depthFunc(t.GEQUAL);
              break;
            case QI:
              t.depthFunc(t.GREATER);
              break;
            case JI:
              t.depthFunc(t.NOTEQUAL);
              break;
            default:
              t.depthFunc(t.LEQUAL);
          }
          Ke = $e;
        }
      },
      setLocked: function ($e) {
        ie = $e;
      },
      setClear: function ($e) {
        ft !== $e && (t.clearDepth($e), (ft = $e));
      },
      reset: function () {
        (ie = !1), (Ue = null), (Ke = null), (ft = null);
      },
    };
  }
  function s() {
    let ie = !1,
      Ue = null,
      Ke = null,
      ft = null,
      $e = null,
      it = null,
      ot = null,
      Tt = null,
      St = null;
    return {
      setTest: function (ht) {
        ie || (ht ? Ae(t.STENCIL_TEST) : Re(t.STENCIL_TEST));
      },
      setMask: function (ht) {
        Ue !== ht && !ie && (t.stencilMask(ht), (Ue = ht));
      },
      setFunc: function (ht, qt, Jt) {
        (Ke !== ht || ft !== qt || $e !== Jt) &&
          (t.stencilFunc(ht, qt, Jt), (Ke = ht), (ft = qt), ($e = Jt));
      },
      setOp: function (ht, qt, Jt) {
        (it !== ht || ot !== qt || Tt !== Jt) &&
          (t.stencilOp(ht, qt, Jt), (it = ht), (ot = qt), (Tt = Jt));
      },
      setLocked: function (ht) {
        ie = ht;
      },
      setClear: function (ht) {
        St !== ht && (t.clearStencil(ht), (St = ht));
      },
      reset: function () {
        (ie = !1),
          (Ue = null),
          (Ke = null),
          (ft = null),
          ($e = null),
          (it = null),
          (ot = null),
          (Tt = null),
          (St = null);
      },
    };
  }
  const a = new i(),
    l = new o(),
    c = new s(),
    u = new WeakMap(),
    h = new WeakMap();
  let p = {},
    m = {},
    v = new WeakMap(),
    S = [],
    x = null,
    g = !1,
    y = null,
    _ = null,
    b = null,
    T = null,
    M = null,
    C = null,
    L = null,
    A = new nt(0, 0, 0),
    P = 0,
    k = !1,
    B = null,
    $ = null,
    D = null,
    X = null,
    j = null;
  const Y = t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS);
  let N = !1,
    V = 0;
  const G = t.getParameter(t.VERSION);
  G.indexOf("WebGL") !== -1
    ? ((V = parseFloat(/^WebGL (\d)/.exec(G)[1])), (N = V >= 1))
    : G.indexOf("OpenGL ES") !== -1 &&
      ((V = parseFloat(/^OpenGL ES (\d)/.exec(G)[1])), (N = V >= 2));
  let U = null,
    Z = {};
  const Q = t.getParameter(t.SCISSOR_BOX),
    te = t.getParameter(t.VIEWPORT),
    re = new Ht().fromArray(Q),
    le = new Ht().fromArray(te);
  function oe(ie, Ue, Ke, ft) {
    const $e = new Uint8Array(4),
      it = t.createTexture();
    t.bindTexture(ie, it),
      t.texParameteri(ie, t.TEXTURE_MIN_FILTER, t.NEAREST),
      t.texParameteri(ie, t.TEXTURE_MAG_FILTER, t.NEAREST);
    for (let ot = 0; ot < Ke; ot++)
      r && (ie === t.TEXTURE_3D || ie === t.TEXTURE_2D_ARRAY)
        ? t.texImage3D(Ue, 0, t.RGBA, 1, 1, ft, 0, t.RGBA, t.UNSIGNED_BYTE, $e)
        : t.texImage2D(
            Ue + ot,
            0,
            t.RGBA,
            1,
            1,
            0,
            t.RGBA,
            t.UNSIGNED_BYTE,
            $e
          );
    return it;
  }
  const ve = {};
  (ve[t.TEXTURE_2D] = oe(t.TEXTURE_2D, t.TEXTURE_2D, 1)),
    (ve[t.TEXTURE_CUBE_MAP] = oe(
      t.TEXTURE_CUBE_MAP,
      t.TEXTURE_CUBE_MAP_POSITIVE_X,
      6
    )),
    r &&
      ((ve[t.TEXTURE_2D_ARRAY] = oe(
        t.TEXTURE_2D_ARRAY,
        t.TEXTURE_2D_ARRAY,
        1,
        1
      )),
      (ve[t.TEXTURE_3D] = oe(t.TEXTURE_3D, t.TEXTURE_3D, 1, 1))),
    a.setClear(0, 0, 0, 1),
    l.setClear(1),
    c.setClear(0),
    Ae(t.DEPTH_TEST),
    l.setFunc(Ih),
    ge(!1),
    H(kS),
    Ae(t.CULL_FACE),
    fe(ra);
  function Ae(ie) {
    p[ie] !== !0 && (t.enable(ie), (p[ie] = !0));
  }
  function Re(ie) {
    p[ie] !== !1 && (t.disable(ie), (p[ie] = !1));
  }
  function ye(ie, Ue) {
    return m[ie] !== Ue
      ? (t.bindFramebuffer(ie, Ue),
        (m[ie] = Ue),
        r &&
          (ie === t.DRAW_FRAMEBUFFER && (m[t.FRAMEBUFFER] = Ue),
          ie === t.FRAMEBUFFER && (m[t.DRAW_FRAMEBUFFER] = Ue)),
        !0)
      : !1;
  }
  function q(ie, Ue) {
    let Ke = S,
      ft = !1;
    if (ie)
      if (
        ((Ke = v.get(Ue)),
        Ke === void 0 && ((Ke = []), v.set(Ue, Ke)),
        ie.isWebGLMultipleRenderTargets)
      ) {
        const $e = ie.texture;
        if (Ke.length !== $e.length || Ke[0] !== t.COLOR_ATTACHMENT0) {
          for (let it = 0, ot = $e.length; it < ot; it++)
            Ke[it] = t.COLOR_ATTACHMENT0 + it;
          (Ke.length = $e.length), (ft = !0);
        }
      } else
        Ke[0] !== t.COLOR_ATTACHMENT0 &&
          ((Ke[0] = t.COLOR_ATTACHMENT0), (ft = !0));
    else Ke[0] !== t.BACK && ((Ke[0] = t.BACK), (ft = !0));
    ft &&
      (n.isWebGL2
        ? t.drawBuffers(Ke)
        : e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Ke));
  }
  function xe(ie) {
    return x !== ie ? (t.useProgram(ie), (x = ie), !0) : !1;
  }
  const he = {
    [za]: t.FUNC_ADD,
    [II]: t.FUNC_SUBTRACT,
    [OI]: t.FUNC_REVERSE_SUBTRACT,
  };
  if (r) (he[GS] = t.MIN), (he[jS] = t.MAX);
  else {
    const ie = e.get("EXT_blend_minmax");
    ie !== null && ((he[GS] = ie.MIN_EXT), (he[jS] = ie.MAX_EXT));
  }
  const me = {
    [FI]: t.ZERO,
    [NI]: t.ONE,
    [DI]: t.SRC_COLOR,
    [u0]: t.SRC_ALPHA,
    [VI]: t.SRC_ALPHA_SATURATE,
    [BI]: t.DST_COLOR,
    [zI]: t.DST_ALPHA,
    [UI]: t.ONE_MINUS_SRC_COLOR,
    [f0]: t.ONE_MINUS_SRC_ALPHA,
    [HI]: t.ONE_MINUS_DST_COLOR,
    [kI]: t.ONE_MINUS_DST_ALPHA,
    [GI]: t.CONSTANT_COLOR,
    [jI]: t.ONE_MINUS_CONSTANT_COLOR,
    [WI]: t.CONSTANT_ALPHA,
    [$I]: t.ONE_MINUS_CONSTANT_ALPHA,
  };
  function fe(ie, Ue, Ke, ft, $e, it, ot, Tt, St, ht) {
    if (ie === ra) {
      g === !0 && (Re(t.BLEND), (g = !1));
      return;
    }
    if ((g === !1 && (Ae(t.BLEND), (g = !0)), ie !== LI)) {
      if (ie !== y || ht !== k) {
        if (
          ((_ !== za || M !== za) &&
            (t.blendEquation(t.FUNC_ADD), (_ = za), (M = za)),
          ht)
        )
          switch (ie) {
            case hc:
              t.blendFuncSeparate(
                t.ONE,
                t.ONE_MINUS_SRC_ALPHA,
                t.ONE,
                t.ONE_MINUS_SRC_ALPHA
              );
              break;
            case BS:
              t.blendFunc(t.ONE, t.ONE);
              break;
            case HS:
              t.blendFuncSeparate(t.ZERO, t.ONE_MINUS_SRC_COLOR, t.ZERO, t.ONE);
              break;
            case VS:
              t.blendFuncSeparate(t.ZERO, t.SRC_COLOR, t.ZERO, t.SRC_ALPHA);
              break;
            default:
              console.error("THREE.WebGLState: Invalid blending: ", ie);
              break;
          }
        else
          switch (ie) {
            case hc:
              t.blendFuncSeparate(
                t.SRC_ALPHA,
                t.ONE_MINUS_SRC_ALPHA,
                t.ONE,
                t.ONE_MINUS_SRC_ALPHA
              );
              break;
            case BS:
              t.blendFunc(t.SRC_ALPHA, t.ONE);
              break;
            case HS:
              t.blendFuncSeparate(t.ZERO, t.ONE_MINUS_SRC_COLOR, t.ZERO, t.ONE);
              break;
            case VS:
              t.blendFunc(t.ZERO, t.SRC_COLOR);
              break;
            default:
              console.error("THREE.WebGLState: Invalid blending: ", ie);
              break;
          }
        (b = null),
          (T = null),
          (C = null),
          (L = null),
          A.set(0, 0, 0),
          (P = 0),
          (y = ie),
          (k = ht);
      }
      return;
    }
    ($e = $e || Ue),
      (it = it || Ke),
      (ot = ot || ft),
      (Ue !== _ || $e !== M) &&
        (t.blendEquationSeparate(he[Ue], he[$e]), (_ = Ue), (M = $e)),
      (Ke !== b || ft !== T || it !== C || ot !== L) &&
        (t.blendFuncSeparate(me[Ke], me[ft], me[it], me[ot]),
        (b = Ke),
        (T = ft),
        (C = it),
        (L = ot)),
      (Tt.equals(A) === !1 || St !== P) &&
        (t.blendColor(Tt.r, Tt.g, Tt.b, St), A.copy(Tt), (P = St)),
      (y = ie),
      (k = !1);
  }
  function Ve(ie, Ue) {
    ie.side === mo ? Re(t.CULL_FACE) : Ae(t.CULL_FACE);
    let Ke = ie.side === Vr;
    Ue && (Ke = !Ke),
      ge(Ke),
      ie.blending === hc && ie.transparent === !1
        ? fe(ra)
        : fe(
            ie.blending,
            ie.blendEquation,
            ie.blendSrc,
            ie.blendDst,
            ie.blendEquationAlpha,
            ie.blendSrcAlpha,
            ie.blendDstAlpha,
            ie.blendColor,
            ie.blendAlpha,
            ie.premultipliedAlpha
          ),
      l.setFunc(ie.depthFunc),
      l.setTest(ie.depthTest),
      l.setMask(ie.depthWrite),
      a.setMask(ie.colorWrite);
    const ft = ie.stencilWrite;
    c.setTest(ft),
      ft &&
        (c.setMask(ie.stencilWriteMask),
        c.setFunc(ie.stencilFunc, ie.stencilRef, ie.stencilFuncMask),
        c.setOp(ie.stencilFail, ie.stencilZFail, ie.stencilZPass)),
      K(ie.polygonOffset, ie.polygonOffsetFactor, ie.polygonOffsetUnits),
      ie.alphaToCoverage === !0
        ? Ae(t.SAMPLE_ALPHA_TO_COVERAGE)
        : Re(t.SAMPLE_ALPHA_TO_COVERAGE);
  }
  function ge(ie) {
    B !== ie && (ie ? t.frontFace(t.CW) : t.frontFace(t.CCW), (B = ie));
  }
  function H(ie) {
    ie !== AI
      ? (Ae(t.CULL_FACE),
        ie !== $ &&
          (ie === kS
            ? t.cullFace(t.BACK)
            : ie === RI
            ? t.cullFace(t.FRONT)
            : t.cullFace(t.FRONT_AND_BACK)))
      : Re(t.CULL_FACE),
      ($ = ie);
  }
  function F(ie) {
    ie !== D && (N && t.lineWidth(ie), (D = ie));
  }
  function K(ie, Ue, Ke) {
    ie
      ? (Ae(t.POLYGON_OFFSET_FILL),
        (X !== Ue || j !== Ke) && (t.polygonOffset(Ue, Ke), (X = Ue), (j = Ke)))
      : Re(t.POLYGON_OFFSET_FILL);
  }
  function ae(ie) {
    ie ? Ae(t.SCISSOR_TEST) : Re(t.SCISSOR_TEST);
  }
  function se(ie) {
    ie === void 0 && (ie = t.TEXTURE0 + Y - 1),
      U !== ie && (t.activeTexture(ie), (U = ie));
  }
  function de(ie, Ue, Ke) {
    Ke === void 0 && (U === null ? (Ke = t.TEXTURE0 + Y - 1) : (Ke = U));
    let ft = Z[Ke];
    ft === void 0 && ((ft = { type: void 0, texture: void 0 }), (Z[Ke] = ft)),
      (ft.type !== ie || ft.texture !== Ue) &&
        (U !== Ke && (t.activeTexture(Ke), (U = Ke)),
        t.bindTexture(ie, Ue || ve[ie]),
        (ft.type = ie),
        (ft.texture = Ue));
  }
  function Pe() {
    const ie = Z[U];
    ie !== void 0 &&
      ie.type !== void 0 &&
      (t.bindTexture(ie.type, null), (ie.type = void 0), (ie.texture = void 0));
  }
  function ke() {
    try {
      t.compressedTexImage2D.apply(t, arguments);
    } catch (ie) {
      console.error("THREE.WebGLState:", ie);
    }
  }
  function Be() {
    try {
      t.compressedTexImage3D.apply(t, arguments);
    } catch (ie) {
      console.error("THREE.WebGLState:", ie);
    }
  }
  function Ne() {
    try {
      t.texSubImage2D.apply(t, arguments);
    } catch (ie) {
      console.error("THREE.WebGLState:", ie);
    }
  }
  function ze() {
    try {
      t.texSubImage3D.apply(t, arguments);
    } catch (ie) {
      console.error("THREE.WebGLState:", ie);
    }
  }
  function Ee() {
    try {
      t.compressedTexSubImage2D.apply(t, arguments);
    } catch (ie) {
      console.error("THREE.WebGLState:", ie);
    }
  }
  function Je() {
    try {
      t.compressedTexSubImage3D.apply(t, arguments);
    } catch (ie) {
      console.error("THREE.WebGLState:", ie);
    }
  }
  function qe() {
    try {
      t.texStorage2D.apply(t, arguments);
    } catch (ie) {
      console.error("THREE.WebGLState:", ie);
    }
  }
  function Qe() {
    try {
      t.texStorage3D.apply(t, arguments);
    } catch (ie) {
      console.error("THREE.WebGLState:", ie);
    }
  }
  function Ge() {
    try {
      t.texImage2D.apply(t, arguments);
    } catch (ie) {
      console.error("THREE.WebGLState:", ie);
    }
  }
  function Oe() {
    try {
      t.texImage3D.apply(t, arguments);
    } catch (ie) {
      console.error("THREE.WebGLState:", ie);
    }
  }
  function ne(ie) {
    re.equals(ie) === !1 && (t.scissor(ie.x, ie.y, ie.z, ie.w), re.copy(ie));
  }
  function be(ie) {
    le.equals(ie) === !1 && (t.viewport(ie.x, ie.y, ie.z, ie.w), le.copy(ie));
  }
  function je(ie, Ue) {
    let Ke = h.get(Ue);
    Ke === void 0 && ((Ke = new WeakMap()), h.set(Ue, Ke));
    let ft = Ke.get(ie);
    ft === void 0 &&
      ((ft = t.getUniformBlockIndex(Ue, ie.name)), Ke.set(ie, ft));
  }
  function De(ie, Ue) {
    const ft = h.get(Ue).get(ie);
    u.get(Ue) !== ft &&
      (t.uniformBlockBinding(Ue, ft, ie.__bindingPointIndex), u.set(Ue, ft));
  }
  function Le() {
    t.disable(t.BLEND),
      t.disable(t.CULL_FACE),
      t.disable(t.DEPTH_TEST),
      t.disable(t.POLYGON_OFFSET_FILL),
      t.disable(t.SCISSOR_TEST),
      t.disable(t.STENCIL_TEST),
      t.disable(t.SAMPLE_ALPHA_TO_COVERAGE),
      t.blendEquation(t.FUNC_ADD),
      t.blendFunc(t.ONE, t.ZERO),
      t.blendFuncSeparate(t.ONE, t.ZERO, t.ONE, t.ZERO),
      t.blendColor(0, 0, 0, 0),
      t.colorMask(!0, !0, !0, !0),
      t.clearColor(0, 0, 0, 0),
      t.depthMask(!0),
      t.depthFunc(t.LESS),
      t.clearDepth(1),
      t.stencilMask(4294967295),
      t.stencilFunc(t.ALWAYS, 0, 4294967295),
      t.stencilOp(t.KEEP, t.KEEP, t.KEEP),
      t.clearStencil(0),
      t.cullFace(t.BACK),
      t.frontFace(t.CCW),
      t.polygonOffset(0, 0),
      t.activeTexture(t.TEXTURE0),
      t.bindFramebuffer(t.FRAMEBUFFER, null),
      r === !0 &&
        (t.bindFramebuffer(t.DRAW_FRAMEBUFFER, null),
        t.bindFramebuffer(t.READ_FRAMEBUFFER, null)),
      t.useProgram(null),
      t.lineWidth(1),
      t.scissor(0, 0, t.canvas.width, t.canvas.height),
      t.viewport(0, 0, t.canvas.width, t.canvas.height),
      (p = {}),
      (U = null),
      (Z = {}),
      (m = {}),
      (v = new WeakMap()),
      (S = []),
      (x = null),
      (g = !1),
      (y = null),
      (_ = null),
      (b = null),
      (T = null),
      (M = null),
      (C = null),
      (L = null),
      (A = new nt(0, 0, 0)),
      (P = 0),
      (k = !1),
      (B = null),
      ($ = null),
      (D = null),
      (X = null),
      (j = null),
      re.set(0, 0, t.canvas.width, t.canvas.height),
      le.set(0, 0, t.canvas.width, t.canvas.height),
      a.reset(),
      l.reset(),
      c.reset();
  }
  return {
    buffers: { color: a, depth: l, stencil: c },
    enable: Ae,
    disable: Re,
    bindFramebuffer: ye,
    drawBuffers: q,
    useProgram: xe,
    setBlending: fe,
    setMaterial: Ve,
    setFlipSided: ge,
    setCullFace: H,
    setLineWidth: F,
    setPolygonOffset: K,
    setScissorTest: ae,
    activeTexture: se,
    bindTexture: de,
    unbindTexture: Pe,
    compressedTexImage2D: ke,
    compressedTexImage3D: Be,
    texImage2D: Ge,
    texImage3D: Oe,
    updateUBOMapping: je,
    uniformBlockBinding: De,
    texStorage2D: qe,
    texStorage3D: Qe,
    texSubImage2D: Ne,
    texSubImage3D: ze,
    compressedTexSubImage2D: Ee,
    compressedTexSubImage3D: Je,
    scissor: ne,
    viewport: be,
    reset: Le,
  };
}
function D8(t, e, n, r, i, o, s) {
  const a = i.isWebGL2,
    l = e.has("WEBGL_multisampled_render_to_texture")
      ? e.get("WEBGL_multisampled_render_to_texture")
      : null,
    c =
      typeof navigator > "u" ? !1 : /OculusBrowser/g.test(navigator.userAgent),
    u = new WeakMap();
  let h;
  const p = new WeakMap();
  let m = !1;
  try {
    m =
      typeof OffscreenCanvas < "u" &&
      new OffscreenCanvas(1, 1).getContext("2d") !== null;
  } catch {}
  function v(H, F) {
    return m ? new OffscreenCanvas(H, F) : jh("canvas");
  }
  function S(H, F, K, ae) {
    let se = 1;
    if (
      ((H.width > ae || H.height > ae) &&
        (se = ae / Math.max(H.width, H.height)),
      se < 1 || F === !0)
    )
      if (
        (typeof HTMLImageElement < "u" && H instanceof HTMLImageElement) ||
        (typeof HTMLCanvasElement < "u" && H instanceof HTMLCanvasElement) ||
        (typeof ImageBitmap < "u" && H instanceof ImageBitmap)
      ) {
        const de = F ? p0 : Math.floor,
          Pe = de(se * H.width),
          ke = de(se * H.height);
        h === void 0 && (h = v(Pe, ke));
        const Be = K ? v(Pe, ke) : h;
        return (
          (Be.width = Pe),
          (Be.height = ke),
          Be.getContext("2d").drawImage(H, 0, 0, Pe, ke),
          console.warn(
            "THREE.WebGLRenderer: Texture has been resized from (" +
              H.width +
              "x" +
              H.height +
              ") to (" +
              Pe +
              "x" +
              ke +
              ")."
          ),
          Be
        );
      } else
        return (
          "data" in H &&
            console.warn(
              "THREE.WebGLRenderer: Image in DataTexture is too big (" +
                H.width +
                "x" +
                H.height +
                ")."
            ),
          H
        );
    return H;
  }
  function x(H) {
    return xw(H.width) && xw(H.height);
  }
  function g(H) {
    return a
      ? !1
      : H.wrapS !== Hr ||
          H.wrapT !== Hr ||
          (H.minFilter !== Wn && H.minFilter !== Cn);
  }
  function y(H, F) {
    return H.generateMipmaps && F && H.minFilter !== Wn && H.minFilter !== Cn;
  }
  function _(H) {
    t.generateMipmap(H);
  }
  function b(H, F, K, ae, se = !1) {
    if (a === !1) return F;
    if (H !== null) {
      if (t[H] !== void 0) return t[H];
      console.warn(
        "THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" +
          H +
          "'"
      );
    }
    let de = F;
    if (
      (F === t.RED &&
        (K === t.FLOAT && (de = t.R32F),
        K === t.HALF_FLOAT && (de = t.R16F),
        K === t.UNSIGNED_BYTE && (de = t.R8)),
      F === t.RED_INTEGER &&
        (K === t.UNSIGNED_BYTE && (de = t.R8UI),
        K === t.UNSIGNED_SHORT && (de = t.R16UI),
        K === t.UNSIGNED_INT && (de = t.R32UI),
        K === t.BYTE && (de = t.R8I),
        K === t.SHORT && (de = t.R16I),
        K === t.INT && (de = t.R32I)),
      F === t.RG &&
        (K === t.FLOAT && (de = t.RG32F),
        K === t.HALF_FLOAT && (de = t.RG16F),
        K === t.UNSIGNED_BYTE && (de = t.RG8)),
      F === t.RGBA)
    ) {
      const Pe = se ? Bh : nn.getTransfer(ae);
      K === t.FLOAT && (de = t.RGBA32F),
        K === t.HALF_FLOAT && (de = t.RGBA16F),
        K === t.UNSIGNED_BYTE && (de = Pe === dn ? t.SRGB8_ALPHA8 : t.RGBA8),
        K === t.UNSIGNED_SHORT_4_4_4_4 && (de = t.RGBA4),
        K === t.UNSIGNED_SHORT_5_5_5_1 && (de = t.RGB5_A1);
    }
    return (
      (de === t.R16F ||
        de === t.R32F ||
        de === t.RG16F ||
        de === t.RG32F ||
        de === t.RGBA16F ||
        de === t.RGBA32F) &&
        e.get("EXT_color_buffer_float"),
      de
    );
  }
  function T(H, F, K) {
    return y(H, K) === !0 ||
      (H.isFramebufferTexture && H.minFilter !== Wn && H.minFilter !== Cn)
      ? Math.log2(Math.max(F.width, F.height)) + 1
      : H.mipmaps !== void 0 && H.mipmaps.length > 0
      ? H.mipmaps.length
      : H.isCompressedTexture && Array.isArray(H.image)
      ? F.mipmaps.length
      : 1;
  }
  function M(H) {
    return H === Wn || H === d0 || H === ih ? t.NEAREST : t.LINEAR;
  }
  function C(H) {
    const F = H.target;
    F.removeEventListener("dispose", C), A(F), F.isVideoTexture && u.delete(F);
  }
  function L(H) {
    const F = H.target;
    F.removeEventListener("dispose", L), k(F);
  }
  function A(H) {
    const F = r.get(H);
    if (F.__webglInit === void 0) return;
    const K = H.source,
      ae = p.get(K);
    if (ae) {
      const se = ae[F.__cacheKey];
      se.usedTimes--,
        se.usedTimes === 0 && P(H),
        Object.keys(ae).length === 0 && p.delete(K);
    }
    r.remove(H);
  }
  function P(H) {
    const F = r.get(H);
    t.deleteTexture(F.__webglTexture);
    const K = H.source,
      ae = p.get(K);
    delete ae[F.__cacheKey], s.memory.textures--;
  }
  function k(H) {
    const F = H.texture,
      K = r.get(H),
      ae = r.get(F);
    if (
      (ae.__webglTexture !== void 0 &&
        (t.deleteTexture(ae.__webglTexture), s.memory.textures--),
      H.depthTexture && H.depthTexture.dispose(),
      H.isWebGLCubeRenderTarget)
    )
      for (let se = 0; se < 6; se++) {
        if (Array.isArray(K.__webglFramebuffer[se]))
          for (let de = 0; de < K.__webglFramebuffer[se].length; de++)
            t.deleteFramebuffer(K.__webglFramebuffer[se][de]);
        else t.deleteFramebuffer(K.__webglFramebuffer[se]);
        K.__webglDepthbuffer && t.deleteRenderbuffer(K.__webglDepthbuffer[se]);
      }
    else {
      if (Array.isArray(K.__webglFramebuffer))
        for (let se = 0; se < K.__webglFramebuffer.length; se++)
          t.deleteFramebuffer(K.__webglFramebuffer[se]);
      else t.deleteFramebuffer(K.__webglFramebuffer);
      if (
        (K.__webglDepthbuffer && t.deleteRenderbuffer(K.__webglDepthbuffer),
        K.__webglMultisampledFramebuffer &&
          t.deleteFramebuffer(K.__webglMultisampledFramebuffer),
        K.__webglColorRenderbuffer)
      )
        for (let se = 0; se < K.__webglColorRenderbuffer.length; se++)
          K.__webglColorRenderbuffer[se] &&
            t.deleteRenderbuffer(K.__webglColorRenderbuffer[se]);
      K.__webglDepthRenderbuffer &&
        t.deleteRenderbuffer(K.__webglDepthRenderbuffer);
    }
    if (H.isWebGLMultipleRenderTargets)
      for (let se = 0, de = F.length; se < de; se++) {
        const Pe = r.get(F[se]);
        Pe.__webglTexture &&
          (t.deleteTexture(Pe.__webglTexture), s.memory.textures--),
          r.remove(F[se]);
      }
    r.remove(F), r.remove(H);
  }
  let B = 0;
  function $() {
    B = 0;
  }
  function D() {
    const H = B;
    return (
      H >= i.maxTextures &&
        console.warn(
          "THREE.WebGLTextures: Trying to use " +
            H +
            " texture units while this GPU supports only " +
            i.maxTextures
        ),
      (B += 1),
      H
    );
  }
  function X(H) {
    const F = [];
    return (
      F.push(H.wrapS),
      F.push(H.wrapT),
      F.push(H.wrapR || 0),
      F.push(H.magFilter),
      F.push(H.minFilter),
      F.push(H.anisotropy),
      F.push(H.internalFormat),
      F.push(H.format),
      F.push(H.type),
      F.push(H.generateMipmaps),
      F.push(H.premultiplyAlpha),
      F.push(H.flipY),
      F.push(H.unpackAlignment),
      F.push(H.colorSpace),
      F.join()
    );
  }
  function j(H, F) {
    const K = r.get(H);
    if (
      (H.isVideoTexture && Ve(H),
      H.isRenderTargetTexture === !1 &&
        H.version > 0 &&
        K.__version !== H.version)
    ) {
      const ae = H.image;
      if (ae === null)
        console.warn(
          "THREE.WebGLRenderer: Texture marked for update but no image data found."
        );
      else if (ae.complete === !1)
        console.warn(
          "THREE.WebGLRenderer: Texture marked for update but image is incomplete"
        );
      else {
        re(K, H, F);
        return;
      }
    }
    n.bindTexture(t.TEXTURE_2D, K.__webglTexture, t.TEXTURE0 + F);
  }
  function Y(H, F) {
    const K = r.get(H);
    if (H.version > 0 && K.__version !== H.version) {
      re(K, H, F);
      return;
    }
    n.bindTexture(t.TEXTURE_2D_ARRAY, K.__webglTexture, t.TEXTURE0 + F);
  }
  function N(H, F) {
    const K = r.get(H);
    if (H.version > 0 && K.__version !== H.version) {
      re(K, H, F);
      return;
    }
    n.bindTexture(t.TEXTURE_3D, K.__webglTexture, t.TEXTURE0 + F);
  }
  function V(H, F) {
    const K = r.get(H);
    if (H.version > 0 && K.__version !== H.version) {
      le(K, H, F);
      return;
    }
    n.bindTexture(t.TEXTURE_CUBE_MAP, K.__webglTexture, t.TEXTURE0 + F);
  }
  const G = { [Nh]: t.REPEAT, [Hr]: t.CLAMP_TO_EDGE, [Dh]: t.MIRRORED_REPEAT },
    U = {
      [Wn]: t.NEAREST,
      [d0]: t.NEAREST_MIPMAP_NEAREST,
      [ih]: t.NEAREST_MIPMAP_LINEAR,
      [Cn]: t.LINEAR,
      [TE]: t.LINEAR_MIPMAP_NEAREST,
      [ol]: t.LINEAR_MIPMAP_LINEAR,
    },
    Z = {
      [SO]: t.NEVER,
      [TO]: t.ALWAYS,
      [wO]: t.LESS,
      [zE]: t.LEQUAL,
      [bO]: t.EQUAL,
      [CO]: t.GEQUAL,
      [EO]: t.GREATER,
      [MO]: t.NOTEQUAL,
    };
  function Q(H, F, K) {
    if (
      (K
        ? (t.texParameteri(H, t.TEXTURE_WRAP_S, G[F.wrapS]),
          t.texParameteri(H, t.TEXTURE_WRAP_T, G[F.wrapT]),
          (H === t.TEXTURE_3D || H === t.TEXTURE_2D_ARRAY) &&
            t.texParameteri(H, t.TEXTURE_WRAP_R, G[F.wrapR]),
          t.texParameteri(H, t.TEXTURE_MAG_FILTER, U[F.magFilter]),
          t.texParameteri(H, t.TEXTURE_MIN_FILTER, U[F.minFilter]))
        : (t.texParameteri(H, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE),
          t.texParameteri(H, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE),
          (H === t.TEXTURE_3D || H === t.TEXTURE_2D_ARRAY) &&
            t.texParameteri(H, t.TEXTURE_WRAP_R, t.CLAMP_TO_EDGE),
          (F.wrapS !== Hr || F.wrapT !== Hr) &&
            console.warn(
              "THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."
            ),
          t.texParameteri(H, t.TEXTURE_MAG_FILTER, M(F.magFilter)),
          t.texParameteri(H, t.TEXTURE_MIN_FILTER, M(F.minFilter)),
          F.minFilter !== Wn &&
            F.minFilter !== Cn &&
            console.warn(
              "THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."
            )),
      F.compareFunction &&
        (t.texParameteri(H, t.TEXTURE_COMPARE_MODE, t.COMPARE_REF_TO_TEXTURE),
        t.texParameteri(H, t.TEXTURE_COMPARE_FUNC, Z[F.compareFunction])),
      e.has("EXT_texture_filter_anisotropic") === !0)
    ) {
      const ae = e.get("EXT_texture_filter_anisotropic");
      if (
        F.magFilter === Wn ||
        (F.minFilter !== ih && F.minFilter !== ol) ||
        (F.type === Vo && e.has("OES_texture_float_linear") === !1) ||
        (a === !1 &&
          F.type === Mf &&
          e.has("OES_texture_half_float_linear") === !1)
      )
        return;
      (F.anisotropy > 1 || r.get(F).__currentAnisotropy) &&
        (t.texParameterf(
          H,
          ae.TEXTURE_MAX_ANISOTROPY_EXT,
          Math.min(F.anisotropy, i.getMaxAnisotropy())
        ),
        (r.get(F).__currentAnisotropy = F.anisotropy));
    }
  }
  function te(H, F) {
    let K = !1;
    H.__webglInit === void 0 &&
      ((H.__webglInit = !0), F.addEventListener("dispose", C));
    const ae = F.source;
    let se = p.get(ae);
    se === void 0 && ((se = {}), p.set(ae, se));
    const de = X(F);
    if (de !== H.__cacheKey) {
      se[de] === void 0 &&
        ((se[de] = { texture: t.createTexture(), usedTimes: 0 }),
        s.memory.textures++,
        (K = !0)),
        se[de].usedTimes++;
      const Pe = se[H.__cacheKey];
      Pe !== void 0 &&
        (se[H.__cacheKey].usedTimes--, Pe.usedTimes === 0 && P(F)),
        (H.__cacheKey = de),
        (H.__webglTexture = se[de].texture);
    }
    return K;
  }
  function re(H, F, K) {
    let ae = t.TEXTURE_2D;
    (F.isDataArrayTexture || F.isCompressedArrayTexture) &&
      (ae = t.TEXTURE_2D_ARRAY),
      F.isData3DTexture && (ae = t.TEXTURE_3D);
    const se = te(H, F),
      de = F.source;
    n.bindTexture(ae, H.__webglTexture, t.TEXTURE0 + K);
    const Pe = r.get(de);
    if (de.version !== Pe.__version || se === !0) {
      n.activeTexture(t.TEXTURE0 + K);
      const ke = nn.getPrimaries(nn.workingColorSpace),
        Be = F.colorSpace === Bi ? null : nn.getPrimaries(F.colorSpace),
        Ne =
          F.colorSpace === Bi || ke === Be ? t.NONE : t.BROWSER_DEFAULT_WEBGL;
      t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, F.flipY),
        t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, F.premultiplyAlpha),
        t.pixelStorei(t.UNPACK_ALIGNMENT, F.unpackAlignment),
        t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL, Ne);
      const ze = g(F) && x(F.image) === !1;
      let Ee = S(F.image, ze, !1, i.maxTextureSize);
      Ee = ge(F, Ee);
      const Je = x(Ee) || a,
        qe = o.convert(F.format, F.colorSpace);
      let Qe = o.convert(F.type),
        Ge = b(F.internalFormat, qe, Qe, F.colorSpace, F.isVideoTexture);
      Q(ae, F, Je);
      let Oe;
      const ne = F.mipmaps,
        be = a && F.isVideoTexture !== !0 && Ge !== FE,
        je = Pe.__version === void 0 || se === !0,
        De = T(F, Ee, Je);
      if (F.isDepthTexture)
        (Ge = t.DEPTH_COMPONENT),
          a
            ? F.type === Vo
              ? (Ge = t.DEPTH_COMPONENT32F)
              : F.type === Js
              ? (Ge = t.DEPTH_COMPONENT24)
              : F.type === Qa
              ? (Ge = t.DEPTH24_STENCIL8)
              : (Ge = t.DEPTH_COMPONENT16)
            : F.type === Vo &&
              console.error(
                "WebGLRenderer: Floating point depth texture requires WebGL2."
              ),
          F.format === Ja &&
            Ge === t.DEPTH_COMPONENT &&
            F.type !== J0 &&
            F.type !== Js &&
            (console.warn(
              "THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."
            ),
            (F.type = Js),
            (Qe = o.convert(F.type))),
          F.format === Tc &&
            Ge === t.DEPTH_COMPONENT &&
            ((Ge = t.DEPTH_STENCIL),
            F.type !== Qa &&
              (console.warn(
                "THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."
              ),
              (F.type = Qa),
              (Qe = o.convert(F.type)))),
          je &&
            (be
              ? n.texStorage2D(t.TEXTURE_2D, 1, Ge, Ee.width, Ee.height)
              : n.texImage2D(
                  t.TEXTURE_2D,
                  0,
                  Ge,
                  Ee.width,
                  Ee.height,
                  0,
                  qe,
                  Qe,
                  null
                ));
      else if (F.isDataTexture)
        if (ne.length > 0 && Je) {
          be &&
            je &&
            n.texStorage2D(t.TEXTURE_2D, De, Ge, ne[0].width, ne[0].height);
          for (let Le = 0, ie = ne.length; Le < ie; Le++)
            (Oe = ne[Le]),
              be
                ? n.texSubImage2D(
                    t.TEXTURE_2D,
                    Le,
                    0,
                    0,
                    Oe.width,
                    Oe.height,
                    qe,
                    Qe,
                    Oe.data
                  )
                : n.texImage2D(
                    t.TEXTURE_2D,
                    Le,
                    Ge,
                    Oe.width,
                    Oe.height,
                    0,
                    qe,
                    Qe,
                    Oe.data
                  );
          F.generateMipmaps = !1;
        } else
          be
            ? (je && n.texStorage2D(t.TEXTURE_2D, De, Ge, Ee.width, Ee.height),
              n.texSubImage2D(
                t.TEXTURE_2D,
                0,
                0,
                0,
                Ee.width,
                Ee.height,
                qe,
                Qe,
                Ee.data
              ))
            : n.texImage2D(
                t.TEXTURE_2D,
                0,
                Ge,
                Ee.width,
                Ee.height,
                0,
                qe,
                Qe,
                Ee.data
              );
      else if (F.isCompressedTexture)
        if (F.isCompressedArrayTexture) {
          be &&
            je &&
            n.texStorage3D(
              t.TEXTURE_2D_ARRAY,
              De,
              Ge,
              ne[0].width,
              ne[0].height,
              Ee.depth
            );
          for (let Le = 0, ie = ne.length; Le < ie; Le++)
            (Oe = ne[Le]),
              F.format !== ri
                ? qe !== null
                  ? be
                    ? n.compressedTexSubImage3D(
                        t.TEXTURE_2D_ARRAY,
                        Le,
                        0,
                        0,
                        0,
                        Oe.width,
                        Oe.height,
                        Ee.depth,
                        qe,
                        Oe.data,
                        0,
                        0
                      )
                    : n.compressedTexImage3D(
                        t.TEXTURE_2D_ARRAY,
                        Le,
                        Ge,
                        Oe.width,
                        Oe.height,
                        Ee.depth,
                        0,
                        Oe.data,
                        0,
                        0
                      )
                  : console.warn(
                      "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"
                    )
                : be
                ? n.texSubImage3D(
                    t.TEXTURE_2D_ARRAY,
                    Le,
                    0,
                    0,
                    0,
                    Oe.width,
                    Oe.height,
                    Ee.depth,
                    qe,
                    Qe,
                    Oe.data
                  )
                : n.texImage3D(
                    t.TEXTURE_2D_ARRAY,
                    Le,
                    Ge,
                    Oe.width,
                    Oe.height,
                    Ee.depth,
                    0,
                    qe,
                    Qe,
                    Oe.data
                  );
        } else {
          be &&
            je &&
            n.texStorage2D(t.TEXTURE_2D, De, Ge, ne[0].width, ne[0].height);
          for (let Le = 0, ie = ne.length; Le < ie; Le++)
            (Oe = ne[Le]),
              F.format !== ri
                ? qe !== null
                  ? be
                    ? n.compressedTexSubImage2D(
                        t.TEXTURE_2D,
                        Le,
                        0,
                        0,
                        Oe.width,
                        Oe.height,
                        qe,
                        Oe.data
                      )
                    : n.compressedTexImage2D(
                        t.TEXTURE_2D,
                        Le,
                        Ge,
                        Oe.width,
                        Oe.height,
                        0,
                        Oe.data
                      )
                  : console.warn(
                      "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"
                    )
                : be
                ? n.texSubImage2D(
                    t.TEXTURE_2D,
                    Le,
                    0,
                    0,
                    Oe.width,
                    Oe.height,
                    qe,
                    Qe,
                    Oe.data
                  )
                : n.texImage2D(
                    t.TEXTURE_2D,
                    Le,
                    Ge,
                    Oe.width,
                    Oe.height,
                    0,
                    qe,
                    Qe,
                    Oe.data
                  );
        }
      else if (F.isDataArrayTexture)
        be
          ? (je &&
              n.texStorage3D(
                t.TEXTURE_2D_ARRAY,
                De,
                Ge,
                Ee.width,
                Ee.height,
                Ee.depth
              ),
            n.texSubImage3D(
              t.TEXTURE_2D_ARRAY,
              0,
              0,
              0,
              0,
              Ee.width,
              Ee.height,
              Ee.depth,
              qe,
              Qe,
              Ee.data
            ))
          : n.texImage3D(
              t.TEXTURE_2D_ARRAY,
              0,
              Ge,
              Ee.width,
              Ee.height,
              Ee.depth,
              0,
              qe,
              Qe,
              Ee.data
            );
      else if (F.isData3DTexture)
        be
          ? (je &&
              n.texStorage3D(
                t.TEXTURE_3D,
                De,
                Ge,
                Ee.width,
                Ee.height,
                Ee.depth
              ),
            n.texSubImage3D(
              t.TEXTURE_3D,
              0,
              0,
              0,
              0,
              Ee.width,
              Ee.height,
              Ee.depth,
              qe,
              Qe,
              Ee.data
            ))
          : n.texImage3D(
              t.TEXTURE_3D,
              0,
              Ge,
              Ee.width,
              Ee.height,
              Ee.depth,
              0,
              qe,
              Qe,
              Ee.data
            );
      else if (F.isFramebufferTexture) {
        if (je)
          if (be) n.texStorage2D(t.TEXTURE_2D, De, Ge, Ee.width, Ee.height);
          else {
            let Le = Ee.width,
              ie = Ee.height;
            for (let Ue = 0; Ue < De; Ue++)
              n.texImage2D(t.TEXTURE_2D, Ue, Ge, Le, ie, 0, qe, Qe, null),
                (Le >>= 1),
                (ie >>= 1);
          }
      } else if (ne.length > 0 && Je) {
        be &&
          je &&
          n.texStorage2D(t.TEXTURE_2D, De, Ge, ne[0].width, ne[0].height);
        for (let Le = 0, ie = ne.length; Le < ie; Le++)
          (Oe = ne[Le]),
            be
              ? n.texSubImage2D(t.TEXTURE_2D, Le, 0, 0, qe, Qe, Oe)
              : n.texImage2D(t.TEXTURE_2D, Le, Ge, qe, Qe, Oe);
        F.generateMipmaps = !1;
      } else
        be
          ? (je && n.texStorage2D(t.TEXTURE_2D, De, Ge, Ee.width, Ee.height),
            n.texSubImage2D(t.TEXTURE_2D, 0, 0, 0, qe, Qe, Ee))
          : n.texImage2D(t.TEXTURE_2D, 0, Ge, qe, Qe, Ee);
      y(F, Je) && _(ae),
        (Pe.__version = de.version),
        F.onUpdate && F.onUpdate(F);
    }
    H.__version = F.version;
  }
  function le(H, F, K) {
    if (F.image.length !== 6) return;
    const ae = te(H, F),
      se = F.source;
    n.bindTexture(t.TEXTURE_CUBE_MAP, H.__webglTexture, t.TEXTURE0 + K);
    const de = r.get(se);
    if (se.version !== de.__version || ae === !0) {
      n.activeTexture(t.TEXTURE0 + K);
      const Pe = nn.getPrimaries(nn.workingColorSpace),
        ke = F.colorSpace === Bi ? null : nn.getPrimaries(F.colorSpace),
        Be =
          F.colorSpace === Bi || Pe === ke ? t.NONE : t.BROWSER_DEFAULT_WEBGL;
      t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, F.flipY),
        t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, F.premultiplyAlpha),
        t.pixelStorei(t.UNPACK_ALIGNMENT, F.unpackAlignment),
        t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL, Be);
      const Ne = F.isCompressedTexture || F.image[0].isCompressedTexture,
        ze = F.image[0] && F.image[0].isDataTexture,
        Ee = [];
      for (let Le = 0; Le < 6; Le++)
        !Ne && !ze
          ? (Ee[Le] = S(F.image[Le], !1, !0, i.maxCubemapSize))
          : (Ee[Le] = ze ? F.image[Le].image : F.image[Le]),
          (Ee[Le] = ge(F, Ee[Le]));
      const Je = Ee[0],
        qe = x(Je) || a,
        Qe = o.convert(F.format, F.colorSpace),
        Ge = o.convert(F.type),
        Oe = b(F.internalFormat, Qe, Ge, F.colorSpace),
        ne = a && F.isVideoTexture !== !0,
        be = de.__version === void 0 || ae === !0;
      let je = T(F, Je, qe);
      Q(t.TEXTURE_CUBE_MAP, F, qe);
      let De;
      if (Ne) {
        ne &&
          be &&
          n.texStorage2D(t.TEXTURE_CUBE_MAP, je, Oe, Je.width, Je.height);
        for (let Le = 0; Le < 6; Le++) {
          De = Ee[Le].mipmaps;
          for (let ie = 0; ie < De.length; ie++) {
            const Ue = De[ie];
            F.format !== ri
              ? Qe !== null
                ? ne
                  ? n.compressedTexSubImage2D(
                      t.TEXTURE_CUBE_MAP_POSITIVE_X + Le,
                      ie,
                      0,
                      0,
                      Ue.width,
                      Ue.height,
                      Qe,
                      Ue.data
                    )
                  : n.compressedTexImage2D(
                      t.TEXTURE_CUBE_MAP_POSITIVE_X + Le,
                      ie,
                      Oe,
                      Ue.width,
                      Ue.height,
                      0,
                      Ue.data
                    )
                : console.warn(
                    "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"
                  )
              : ne
              ? n.texSubImage2D(
                  t.TEXTURE_CUBE_MAP_POSITIVE_X + Le,
                  ie,
                  0,
                  0,
                  Ue.width,
                  Ue.height,
                  Qe,
                  Ge,
                  Ue.data
                )
              : n.texImage2D(
                  t.TEXTURE_CUBE_MAP_POSITIVE_X + Le,
                  ie,
                  Oe,
                  Ue.width,
                  Ue.height,
                  0,
                  Qe,
                  Ge,
                  Ue.data
                );
          }
        }
      } else {
        (De = F.mipmaps),
          ne &&
            be &&
            (De.length > 0 && je++,
            n.texStorage2D(
              t.TEXTURE_CUBE_MAP,
              je,
              Oe,
              Ee[0].width,
              Ee[0].height
            ));
        for (let Le = 0; Le < 6; Le++)
          if (ze) {
            ne
              ? n.texSubImage2D(
                  t.TEXTURE_CUBE_MAP_POSITIVE_X + Le,
                  0,
                  0,
                  0,
                  Ee[Le].width,
                  Ee[Le].height,
                  Qe,
                  Ge,
                  Ee[Le].data
                )
              : n.texImage2D(
                  t.TEXTURE_CUBE_MAP_POSITIVE_X + Le,
                  0,
                  Oe,
                  Ee[Le].width,
                  Ee[Le].height,
                  0,
                  Qe,
                  Ge,
                  Ee[Le].data
                );
            for (let ie = 0; ie < De.length; ie++) {
              const Ke = De[ie].image[Le].image;
              ne
                ? n.texSubImage2D(
                    t.TEXTURE_CUBE_MAP_POSITIVE_X + Le,
                    ie + 1,
                    0,
                    0,
                    Ke.width,
                    Ke.height,
                    Qe,
                    Ge,
                    Ke.data
                  )
                : n.texImage2D(
                    t.TEXTURE_CUBE_MAP_POSITIVE_X + Le,
                    ie + 1,
                    Oe,
                    Ke.width,
                    Ke.height,
                    0,
                    Qe,
                    Ge,
                    Ke.data
                  );
            }
          } else {
            ne
              ? n.texSubImage2D(
                  t.TEXTURE_CUBE_MAP_POSITIVE_X + Le,
                  0,
                  0,
                  0,
                  Qe,
                  Ge,
                  Ee[Le]
                )
              : n.texImage2D(
                  t.TEXTURE_CUBE_MAP_POSITIVE_X + Le,
                  0,
                  Oe,
                  Qe,
                  Ge,
                  Ee[Le]
                );
            for (let ie = 0; ie < De.length; ie++) {
              const Ue = De[ie];
              ne
                ? n.texSubImage2D(
                    t.TEXTURE_CUBE_MAP_POSITIVE_X + Le,
                    ie + 1,
                    0,
                    0,
                    Qe,
                    Ge,
                    Ue.image[Le]
                  )
                : n.texImage2D(
                    t.TEXTURE_CUBE_MAP_POSITIVE_X + Le,
                    ie + 1,
                    Oe,
                    Qe,
                    Ge,
                    Ue.image[Le]
                  );
            }
          }
      }
      y(F, qe) && _(t.TEXTURE_CUBE_MAP),
        (de.__version = se.version),
        F.onUpdate && F.onUpdate(F);
    }
    H.__version = F.version;
  }
  function oe(H, F, K, ae, se, de) {
    const Pe = o.convert(K.format, K.colorSpace),
      ke = o.convert(K.type),
      Be = b(K.internalFormat, Pe, ke, K.colorSpace);
    if (!r.get(F).__hasExternalTextures) {
      const ze = Math.max(1, F.width >> de),
        Ee = Math.max(1, F.height >> de);
      se === t.TEXTURE_3D || se === t.TEXTURE_2D_ARRAY
        ? n.texImage3D(se, de, Be, ze, Ee, F.depth, 0, Pe, ke, null)
        : n.texImage2D(se, de, Be, ze, Ee, 0, Pe, ke, null);
    }
    n.bindFramebuffer(t.FRAMEBUFFER, H),
      fe(F)
        ? l.framebufferTexture2DMultisampleEXT(
            t.FRAMEBUFFER,
            ae,
            se,
            r.get(K).__webglTexture,
            0,
            me(F)
          )
        : (se === t.TEXTURE_2D ||
            (se >= t.TEXTURE_CUBE_MAP_POSITIVE_X &&
              se <= t.TEXTURE_CUBE_MAP_NEGATIVE_Z)) &&
          t.framebufferTexture2D(
            t.FRAMEBUFFER,
            ae,
            se,
            r.get(K).__webglTexture,
            de
          ),
      n.bindFramebuffer(t.FRAMEBUFFER, null);
  }
  function ve(H, F, K) {
    if (
      (t.bindRenderbuffer(t.RENDERBUFFER, H), F.depthBuffer && !F.stencilBuffer)
    ) {
      let ae = a === !0 ? t.DEPTH_COMPONENT24 : t.DEPTH_COMPONENT16;
      if (K || fe(F)) {
        const se = F.depthTexture;
        se &&
          se.isDepthTexture &&
          (se.type === Vo
            ? (ae = t.DEPTH_COMPONENT32F)
            : se.type === Js && (ae = t.DEPTH_COMPONENT24));
        const de = me(F);
        fe(F)
          ? l.renderbufferStorageMultisampleEXT(
              t.RENDERBUFFER,
              de,
              ae,
              F.width,
              F.height
            )
          : t.renderbufferStorageMultisample(
              t.RENDERBUFFER,
              de,
              ae,
              F.width,
              F.height
            );
      } else t.renderbufferStorage(t.RENDERBUFFER, ae, F.width, F.height);
      t.framebufferRenderbuffer(
        t.FRAMEBUFFER,
        t.DEPTH_ATTACHMENT,
        t.RENDERBUFFER,
        H
      );
    } else if (F.depthBuffer && F.stencilBuffer) {
      const ae = me(F);
      K && fe(F) === !1
        ? t.renderbufferStorageMultisample(
            t.RENDERBUFFER,
            ae,
            t.DEPTH24_STENCIL8,
            F.width,
            F.height
          )
        : fe(F)
        ? l.renderbufferStorageMultisampleEXT(
            t.RENDERBUFFER,
            ae,
            t.DEPTH24_STENCIL8,
            F.width,
            F.height
          )
        : t.renderbufferStorage(
            t.RENDERBUFFER,
            t.DEPTH_STENCIL,
            F.width,
            F.height
          ),
        t.framebufferRenderbuffer(
          t.FRAMEBUFFER,
          t.DEPTH_STENCIL_ATTACHMENT,
          t.RENDERBUFFER,
          H
        );
    } else {
      const ae =
        F.isWebGLMultipleRenderTargets === !0 ? F.texture : [F.texture];
      for (let se = 0; se < ae.length; se++) {
        const de = ae[se],
          Pe = o.convert(de.format, de.colorSpace),
          ke = o.convert(de.type),
          Be = b(de.internalFormat, Pe, ke, de.colorSpace),
          Ne = me(F);
        K && fe(F) === !1
          ? t.renderbufferStorageMultisample(
              t.RENDERBUFFER,
              Ne,
              Be,
              F.width,
              F.height
            )
          : fe(F)
          ? l.renderbufferStorageMultisampleEXT(
              t.RENDERBUFFER,
              Ne,
              Be,
              F.width,
              F.height
            )
          : t.renderbufferStorage(t.RENDERBUFFER, Be, F.width, F.height);
      }
    }
    t.bindRenderbuffer(t.RENDERBUFFER, null);
  }
  function Ae(H, F) {
    if (F && F.isWebGLCubeRenderTarget)
      throw new Error(
        "Depth Texture with cube render targets is not supported"
      );
    if (
      (n.bindFramebuffer(t.FRAMEBUFFER, H),
      !(F.depthTexture && F.depthTexture.isDepthTexture))
    )
      throw new Error(
        "renderTarget.depthTexture must be an instance of THREE.DepthTexture"
      );
    (!r.get(F.depthTexture).__webglTexture ||
      F.depthTexture.image.width !== F.width ||
      F.depthTexture.image.height !== F.height) &&
      ((F.depthTexture.image.width = F.width),
      (F.depthTexture.image.height = F.height),
      (F.depthTexture.needsUpdate = !0)),
      j(F.depthTexture, 0);
    const ae = r.get(F.depthTexture).__webglTexture,
      se = me(F);
    if (F.depthTexture.format === Ja)
      fe(F)
        ? l.framebufferTexture2DMultisampleEXT(
            t.FRAMEBUFFER,
            t.DEPTH_ATTACHMENT,
            t.TEXTURE_2D,
            ae,
            0,
            se
          )
        : t.framebufferTexture2D(
            t.FRAMEBUFFER,
            t.DEPTH_ATTACHMENT,
            t.TEXTURE_2D,
            ae,
            0
          );
    else if (F.depthTexture.format === Tc)
      fe(F)
        ? l.framebufferTexture2DMultisampleEXT(
            t.FRAMEBUFFER,
            t.DEPTH_STENCIL_ATTACHMENT,
            t.TEXTURE_2D,
            ae,
            0,
            se
          )
        : t.framebufferTexture2D(
            t.FRAMEBUFFER,
            t.DEPTH_STENCIL_ATTACHMENT,
            t.TEXTURE_2D,
            ae,
            0
          );
    else throw new Error("Unknown depthTexture format");
  }
  function Re(H) {
    const F = r.get(H),
      K = H.isWebGLCubeRenderTarget === !0;
    if (H.depthTexture && !F.__autoAllocateDepthBuffer) {
      if (K)
        throw new Error(
          "target.depthTexture not supported in Cube render targets"
        );
      Ae(F.__webglFramebuffer, H);
    } else if (K) {
      F.__webglDepthbuffer = [];
      for (let ae = 0; ae < 6; ae++)
        n.bindFramebuffer(t.FRAMEBUFFER, F.__webglFramebuffer[ae]),
          (F.__webglDepthbuffer[ae] = t.createRenderbuffer()),
          ve(F.__webglDepthbuffer[ae], H, !1);
    } else
      n.bindFramebuffer(t.FRAMEBUFFER, F.__webglFramebuffer),
        (F.__webglDepthbuffer = t.createRenderbuffer()),
        ve(F.__webglDepthbuffer, H, !1);
    n.bindFramebuffer(t.FRAMEBUFFER, null);
  }
  function ye(H, F, K) {
    const ae = r.get(H);
    F !== void 0 &&
      oe(
        ae.__webglFramebuffer,
        H,
        H.texture,
        t.COLOR_ATTACHMENT0,
        t.TEXTURE_2D,
        0
      ),
      K !== void 0 && Re(H);
  }
  function q(H) {
    const F = H.texture,
      K = r.get(H),
      ae = r.get(F);
    H.addEventListener("dispose", L),
      H.isWebGLMultipleRenderTargets !== !0 &&
        (ae.__webglTexture === void 0 &&
          (ae.__webglTexture = t.createTexture()),
        (ae.__version = F.version),
        s.memory.textures++);
    const se = H.isWebGLCubeRenderTarget === !0,
      de = H.isWebGLMultipleRenderTargets === !0,
      Pe = x(H) || a;
    if (se) {
      K.__webglFramebuffer = [];
      for (let ke = 0; ke < 6; ke++)
        if (a && F.mipmaps && F.mipmaps.length > 0) {
          K.__webglFramebuffer[ke] = [];
          for (let Be = 0; Be < F.mipmaps.length; Be++)
            K.__webglFramebuffer[ke][Be] = t.createFramebuffer();
        } else K.__webglFramebuffer[ke] = t.createFramebuffer();
    } else {
      if (a && F.mipmaps && F.mipmaps.length > 0) {
        K.__webglFramebuffer = [];
        for (let ke = 0; ke < F.mipmaps.length; ke++)
          K.__webglFramebuffer[ke] = t.createFramebuffer();
      } else K.__webglFramebuffer = t.createFramebuffer();
      if (de)
        if (i.drawBuffers) {
          const ke = H.texture;
          for (let Be = 0, Ne = ke.length; Be < Ne; Be++) {
            const ze = r.get(ke[Be]);
            ze.__webglTexture === void 0 &&
              ((ze.__webglTexture = t.createTexture()), s.memory.textures++);
          }
        } else
          console.warn(
            "THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension."
          );
      if (a && H.samples > 0 && fe(H) === !1) {
        const ke = de ? F : [F];
        (K.__webglMultisampledFramebuffer = t.createFramebuffer()),
          (K.__webglColorRenderbuffer = []),
          n.bindFramebuffer(t.FRAMEBUFFER, K.__webglMultisampledFramebuffer);
        for (let Be = 0; Be < ke.length; Be++) {
          const Ne = ke[Be];
          (K.__webglColorRenderbuffer[Be] = t.createRenderbuffer()),
            t.bindRenderbuffer(t.RENDERBUFFER, K.__webglColorRenderbuffer[Be]);
          const ze = o.convert(Ne.format, Ne.colorSpace),
            Ee = o.convert(Ne.type),
            Je = b(
              Ne.internalFormat,
              ze,
              Ee,
              Ne.colorSpace,
              H.isXRRenderTarget === !0
            ),
            qe = me(H);
          t.renderbufferStorageMultisample(
            t.RENDERBUFFER,
            qe,
            Je,
            H.width,
            H.height
          ),
            t.framebufferRenderbuffer(
              t.FRAMEBUFFER,
              t.COLOR_ATTACHMENT0 + Be,
              t.RENDERBUFFER,
              K.__webglColorRenderbuffer[Be]
            );
        }
        t.bindRenderbuffer(t.RENDERBUFFER, null),
          H.depthBuffer &&
            ((K.__webglDepthRenderbuffer = t.createRenderbuffer()),
            ve(K.__webglDepthRenderbuffer, H, !0)),
          n.bindFramebuffer(t.FRAMEBUFFER, null);
      }
    }
    if (se) {
      n.bindTexture(t.TEXTURE_CUBE_MAP, ae.__webglTexture),
        Q(t.TEXTURE_CUBE_MAP, F, Pe);
      for (let ke = 0; ke < 6; ke++)
        if (a && F.mipmaps && F.mipmaps.length > 0)
          for (let Be = 0; Be < F.mipmaps.length; Be++)
            oe(
              K.__webglFramebuffer[ke][Be],
              H,
              F,
              t.COLOR_ATTACHMENT0,
              t.TEXTURE_CUBE_MAP_POSITIVE_X + ke,
              Be
            );
        else
          oe(
            K.__webglFramebuffer[ke],
            H,
            F,
            t.COLOR_ATTACHMENT0,
            t.TEXTURE_CUBE_MAP_POSITIVE_X + ke,
            0
          );
      y(F, Pe) && _(t.TEXTURE_CUBE_MAP), n.unbindTexture();
    } else if (de) {
      const ke = H.texture;
      for (let Be = 0, Ne = ke.length; Be < Ne; Be++) {
        const ze = ke[Be],
          Ee = r.get(ze);
        n.bindTexture(t.TEXTURE_2D, Ee.__webglTexture),
          Q(t.TEXTURE_2D, ze, Pe),
          oe(
            K.__webglFramebuffer,
            H,
            ze,
            t.COLOR_ATTACHMENT0 + Be,
            t.TEXTURE_2D,
            0
          ),
          y(ze, Pe) && _(t.TEXTURE_2D);
      }
      n.unbindTexture();
    } else {
      let ke = t.TEXTURE_2D;
      if (
        ((H.isWebGL3DRenderTarget || H.isWebGLArrayRenderTarget) &&
          (a
            ? (ke = H.isWebGL3DRenderTarget ? t.TEXTURE_3D : t.TEXTURE_2D_ARRAY)
            : console.error(
                "THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2."
              )),
        n.bindTexture(ke, ae.__webglTexture),
        Q(ke, F, Pe),
        a && F.mipmaps && F.mipmaps.length > 0)
      )
        for (let Be = 0; Be < F.mipmaps.length; Be++)
          oe(K.__webglFramebuffer[Be], H, F, t.COLOR_ATTACHMENT0, ke, Be);
      else oe(K.__webglFramebuffer, H, F, t.COLOR_ATTACHMENT0, ke, 0);
      y(F, Pe) && _(ke), n.unbindTexture();
    }
    H.depthBuffer && Re(H);
  }
  function xe(H) {
    const F = x(H) || a,
      K = H.isWebGLMultipleRenderTargets === !0 ? H.texture : [H.texture];
    for (let ae = 0, se = K.length; ae < se; ae++) {
      const de = K[ae];
      if (y(de, F)) {
        const Pe = H.isWebGLCubeRenderTarget
            ? t.TEXTURE_CUBE_MAP
            : t.TEXTURE_2D,
          ke = r.get(de).__webglTexture;
        n.bindTexture(Pe, ke), _(Pe), n.unbindTexture();
      }
    }
  }
  function he(H) {
    if (a && H.samples > 0 && fe(H) === !1) {
      const F = H.isWebGLMultipleRenderTargets ? H.texture : [H.texture],
        K = H.width,
        ae = H.height;
      let se = t.COLOR_BUFFER_BIT;
      const de = [],
        Pe = H.stencilBuffer ? t.DEPTH_STENCIL_ATTACHMENT : t.DEPTH_ATTACHMENT,
        ke = r.get(H),
        Be = H.isWebGLMultipleRenderTargets === !0;
      if (Be)
        for (let Ne = 0; Ne < F.length; Ne++)
          n.bindFramebuffer(t.FRAMEBUFFER, ke.__webglMultisampledFramebuffer),
            t.framebufferRenderbuffer(
              t.FRAMEBUFFER,
              t.COLOR_ATTACHMENT0 + Ne,
              t.RENDERBUFFER,
              null
            ),
            n.bindFramebuffer(t.FRAMEBUFFER, ke.__webglFramebuffer),
            t.framebufferTexture2D(
              t.DRAW_FRAMEBUFFER,
              t.COLOR_ATTACHMENT0 + Ne,
              t.TEXTURE_2D,
              null,
              0
            );
      n.bindFramebuffer(t.READ_FRAMEBUFFER, ke.__webglMultisampledFramebuffer),
        n.bindFramebuffer(t.DRAW_FRAMEBUFFER, ke.__webglFramebuffer);
      for (let Ne = 0; Ne < F.length; Ne++) {
        de.push(t.COLOR_ATTACHMENT0 + Ne), H.depthBuffer && de.push(Pe);
        const ze =
          ke.__ignoreDepthValues !== void 0 ? ke.__ignoreDepthValues : !1;
        if (
          (ze === !1 &&
            (H.depthBuffer && (se |= t.DEPTH_BUFFER_BIT),
            H.stencilBuffer && (se |= t.STENCIL_BUFFER_BIT)),
          Be &&
            t.framebufferRenderbuffer(
              t.READ_FRAMEBUFFER,
              t.COLOR_ATTACHMENT0,
              t.RENDERBUFFER,
              ke.__webglColorRenderbuffer[Ne]
            ),
          ze === !0 &&
            (t.invalidateFramebuffer(t.READ_FRAMEBUFFER, [Pe]),
            t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER, [Pe])),
          Be)
        ) {
          const Ee = r.get(F[Ne]).__webglTexture;
          t.framebufferTexture2D(
            t.DRAW_FRAMEBUFFER,
            t.COLOR_ATTACHMENT0,
            t.TEXTURE_2D,
            Ee,
            0
          );
        }
        t.blitFramebuffer(0, 0, K, ae, 0, 0, K, ae, se, t.NEAREST),
          c && t.invalidateFramebuffer(t.READ_FRAMEBUFFER, de);
      }
      if (
        (n.bindFramebuffer(t.READ_FRAMEBUFFER, null),
        n.bindFramebuffer(t.DRAW_FRAMEBUFFER, null),
        Be)
      )
        for (let Ne = 0; Ne < F.length; Ne++) {
          n.bindFramebuffer(t.FRAMEBUFFER, ke.__webglMultisampledFramebuffer),
            t.framebufferRenderbuffer(
              t.FRAMEBUFFER,
              t.COLOR_ATTACHMENT0 + Ne,
              t.RENDERBUFFER,
              ke.__webglColorRenderbuffer[Ne]
            );
          const ze = r.get(F[Ne]).__webglTexture;
          n.bindFramebuffer(t.FRAMEBUFFER, ke.__webglFramebuffer),
            t.framebufferTexture2D(
              t.DRAW_FRAMEBUFFER,
              t.COLOR_ATTACHMENT0 + Ne,
              t.TEXTURE_2D,
              ze,
              0
            );
        }
      n.bindFramebuffer(t.DRAW_FRAMEBUFFER, ke.__webglMultisampledFramebuffer);
    }
  }
  function me(H) {
    return Math.min(i.maxSamples, H.samples);
  }
  function fe(H) {
    const F = r.get(H);
    return (
      a &&
      H.samples > 0 &&
      e.has("WEBGL_multisampled_render_to_texture") === !0 &&
      F.__useRenderToTexture !== !1
    );
  }
  function Ve(H) {
    const F = s.render.frame;
    u.get(H) !== F && (u.set(H, F), H.update());
  }
  function ge(H, F) {
    const K = H.colorSpace,
      ae = H.format,
      se = H.type;
    return (
      H.isCompressedTexture === !0 ||
        H.isVideoTexture === !0 ||
        H.format === h0 ||
        (K !== ws &&
          K !== Bi &&
          (nn.getTransfer(K) === dn
            ? a === !1
              ? e.has("EXT_sRGB") === !0 && ae === ri
                ? ((H.format = h0),
                  (H.minFilter = Cn),
                  (H.generateMipmaps = !1))
                : (F = BE.sRGBToLinear(F))
              : (ae !== ri || se !== xs) &&
                console.warn(
                  "THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."
                )
            : console.error(
                "THREE.WebGLTextures: Unsupported texture color space:",
                K
              ))),
      F
    );
  }
  (this.allocateTextureUnit = D),
    (this.resetTextureUnits = $),
    (this.setTexture2D = j),
    (this.setTexture2DArray = Y),
    (this.setTexture3D = N),
    (this.setTextureCube = V),
    (this.rebindTextures = ye),
    (this.setupRenderTarget = q),
    (this.updateRenderTargetMipmap = xe),
    (this.updateMultisampleRenderTarget = he),
    (this.setupDepthRenderbuffer = Re),
    (this.setupFrameBufferTexture = oe),
    (this.useMultisampledRTT = fe);
}
function VO(t, e, n) {
  const r = n.isWebGL2;
  function i(o, s = Bi) {
    let a;
    const l = nn.getTransfer(s);
    if (o === xs) return t.UNSIGNED_BYTE;
    if (o === RE) return t.UNSIGNED_SHORT_4_4_4_4;
    if (o === PE) return t.UNSIGNED_SHORT_5_5_5_1;
    if (o === lO) return t.BYTE;
    if (o === cO) return t.SHORT;
    if (o === J0) return t.UNSIGNED_SHORT;
    if (o === AE) return t.INT;
    if (o === Js) return t.UNSIGNED_INT;
    if (o === Vo) return t.FLOAT;
    if (o === Mf)
      return r
        ? t.HALF_FLOAT
        : ((a = e.get("OES_texture_half_float")),
          a !== null ? a.HALF_FLOAT_OES : null);
    if (o === uO) return t.ALPHA;
    if (o === ri) return t.RGBA;
    if (o === fO) return t.LUMINANCE;
    if (o === dO) return t.LUMINANCE_ALPHA;
    if (o === Ja) return t.DEPTH_COMPONENT;
    if (o === Tc) return t.DEPTH_STENCIL;
    if (o === h0)
      return (a = e.get("EXT_sRGB")), a !== null ? a.SRGB_ALPHA_EXT : null;
    if (o === hO) return t.RED;
    if (o === LE) return t.RED_INTEGER;
    if (o === pO) return t.RG;
    if (o === IE) return t.RG_INTEGER;
    if (o === OE) return t.RGBA_INTEGER;
    if (o === wv || o === bv || o === Ev || o === Mv)
      if (l === dn)
        if (((a = e.get("WEBGL_compressed_texture_s3tc_srgb")), a !== null)) {
          if (o === wv) return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;
          if (o === bv) return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;
          if (o === Ev) return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;
          if (o === Mv) return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;
        } else return null;
      else if (((a = e.get("WEBGL_compressed_texture_s3tc")), a !== null)) {
        if (o === wv) return a.COMPRESSED_RGB_S3TC_DXT1_EXT;
        if (o === bv) return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;
        if (o === Ev) return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;
        if (o === Mv) return a.COMPRESSED_RGBA_S3TC_DXT5_EXT;
      } else return null;
    if (o === $S || o === XS || o === qS || o === YS)
      if (((a = e.get("WEBGL_compressed_texture_pvrtc")), a !== null)) {
        if (o === $S) return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
        if (o === XS) return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
        if (o === qS) return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
        if (o === YS) return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
      } else return null;
    if (o === FE)
      return (
        (a = e.get("WEBGL_compressed_texture_etc1")),
        a !== null ? a.COMPRESSED_RGB_ETC1_WEBGL : null
      );
    if (o === KS || o === ZS)
      if (((a = e.get("WEBGL_compressed_texture_etc")), a !== null)) {
        if (o === KS)
          return l === dn ? a.COMPRESSED_SRGB8_ETC2 : a.COMPRESSED_RGB8_ETC2;
        if (o === ZS)
          return l === dn
            ? a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
            : a.COMPRESSED_RGBA8_ETC2_EAC;
      } else return null;
    if (
      o === QS ||
      o === JS ||
      o === ew ||
      o === tw ||
      o === nw ||
      o === rw ||
      o === iw ||
      o === ow ||
      o === sw ||
      o === aw ||
      o === lw ||
      o === cw ||
      o === uw ||
      o === fw
    )
      if (((a = e.get("WEBGL_compressed_texture_astc")), a !== null)) {
        if (o === QS)
          return l === dn
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR
            : a.COMPRESSED_RGBA_ASTC_4x4_KHR;
        if (o === JS)
          return l === dn
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR
            : a.COMPRESSED_RGBA_ASTC_5x4_KHR;
        if (o === ew)
          return l === dn
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR
            : a.COMPRESSED_RGBA_ASTC_5x5_KHR;
        if (o === tw)
          return l === dn
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR
            : a.COMPRESSED_RGBA_ASTC_6x5_KHR;
        if (o === nw)
          return l === dn
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR
            : a.COMPRESSED_RGBA_ASTC_6x6_KHR;
        if (o === rw)
          return l === dn
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR
            : a.COMPRESSED_RGBA_ASTC_8x5_KHR;
        if (o === iw)
          return l === dn
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR
            : a.COMPRESSED_RGBA_ASTC_8x6_KHR;
        if (o === ow)
          return l === dn
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR
            : a.COMPRESSED_RGBA_ASTC_8x8_KHR;
        if (o === sw)
          return l === dn
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR
            : a.COMPRESSED_RGBA_ASTC_10x5_KHR;
        if (o === aw)
          return l === dn
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR
            : a.COMPRESSED_RGBA_ASTC_10x6_KHR;
        if (o === lw)
          return l === dn
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR
            : a.COMPRESSED_RGBA_ASTC_10x8_KHR;
        if (o === cw)
          return l === dn
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR
            : a.COMPRESSED_RGBA_ASTC_10x10_KHR;
        if (o === uw)
          return l === dn
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR
            : a.COMPRESSED_RGBA_ASTC_12x10_KHR;
        if (o === fw)
          return l === dn
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR
            : a.COMPRESSED_RGBA_ASTC_12x12_KHR;
      } else return null;
    if (o === Cv || o === dw || o === hw)
      if (((a = e.get("EXT_texture_compression_bptc")), a !== null)) {
        if (o === Cv)
          return l === dn
            ? a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT
            : a.COMPRESSED_RGBA_BPTC_UNORM_EXT;
        if (o === dw) return a.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;
        if (o === hw) return a.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;
      } else return null;
    if (o === mO || o === pw || o === mw || o === gw)
      if (((a = e.get("EXT_texture_compression_rgtc")), a !== null)) {
        if (o === Cv) return a.COMPRESSED_RED_RGTC1_EXT;
        if (o === pw) return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;
        if (o === mw) return a.COMPRESSED_RED_GREEN_RGTC2_EXT;
        if (o === gw) return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;
      } else return null;
    return o === Qa
      ? r
        ? t.UNSIGNED_INT_24_8
        : ((a = e.get("WEBGL_depth_texture")),
          a !== null ? a.UNSIGNED_INT_24_8_WEBGL : null)
      : t[o] !== void 0
      ? t[o]
      : null;
  }
  return { convert: i };
}
class GO extends Un {
  constructor(e = []) {
    super(), (this.isArrayCamera = !0), (this.cameras = e);
  }
}
let ef = class extends Zt {
  constructor() {
    super(), (this.isGroup = !0), (this.type = "Group");
  }
};
const U8 = { type: "move" };
class G1 {
  constructor() {
    (this._targetRay = null), (this._grip = null), (this._hand = null);
  }
  getHandSpace() {
    return (
      this._hand === null &&
        ((this._hand = new ef()),
        (this._hand.matrixAutoUpdate = !1),
        (this._hand.visible = !1),
        (this._hand.joints = {}),
        (this._hand.inputState = { pinching: !1 })),
      this._hand
    );
  }
  getTargetRaySpace() {
    return (
      this._targetRay === null &&
        ((this._targetRay = new ef()),
        (this._targetRay.matrixAutoUpdate = !1),
        (this._targetRay.visible = !1),
        (this._targetRay.hasLinearVelocity = !1),
        (this._targetRay.linearVelocity = new W()),
        (this._targetRay.hasAngularVelocity = !1),
        (this._targetRay.angularVelocity = new W())),
      this._targetRay
    );
  }
  getGripSpace() {
    return (
      this._grip === null &&
        ((this._grip = new ef()),
        (this._grip.matrixAutoUpdate = !1),
        (this._grip.visible = !1),
        (this._grip.hasLinearVelocity = !1),
        (this._grip.linearVelocity = new W()),
        (this._grip.hasAngularVelocity = !1),
        (this._grip.angularVelocity = new W())),
      this._grip
    );
  }
  dispatchEvent(e) {
    return (
      this._targetRay !== null && this._targetRay.dispatchEvent(e),
      this._grip !== null && this._grip.dispatchEvent(e),
      this._hand !== null && this._hand.dispatchEvent(e),
      this
    );
  }
  connect(e) {
    if (e && e.hand) {
      const n = this._hand;
      if (n) for (const r of e.hand.values()) this._getHandJoint(n, r);
    }
    return this.dispatchEvent({ type: "connected", data: e }), this;
  }
  disconnect(e) {
    return (
      this.dispatchEvent({ type: "disconnected", data: e }),
      this._targetRay !== null && (this._targetRay.visible = !1),
      this._grip !== null && (this._grip.visible = !1),
      this._hand !== null && (this._hand.visible = !1),
      this
    );
  }
  update(e, n, r) {
    let i = null,
      o = null,
      s = null;
    const a = this._targetRay,
      l = this._grip,
      c = this._hand;
    if (e && n.session.visibilityState !== "visible-blurred") {
      if (c && e.hand) {
        s = !0;
        for (const S of e.hand.values()) {
          const x = n.getJointPose(S, r),
            g = this._getHandJoint(c, S);
          x !== null &&
            (g.matrix.fromArray(x.transform.matrix),
            g.matrix.decompose(g.position, g.rotation, g.scale),
            (g.matrixWorldNeedsUpdate = !0),
            (g.jointRadius = x.radius)),
            (g.visible = x !== null);
        }
        const u = c.joints["index-finger-tip"],
          h = c.joints["thumb-tip"],
          p = u.position.distanceTo(h.position),
          m = 0.02,
          v = 0.005;
        c.inputState.pinching && p > m + v
          ? ((c.inputState.pinching = !1),
            this.dispatchEvent({
              type: "pinchend",
              handedness: e.handedness,
              target: this,
            }))
          : !c.inputState.pinching &&
            p <= m - v &&
            ((c.inputState.pinching = !0),
            this.dispatchEvent({
              type: "pinchstart",
              handedness: e.handedness,
              target: this,
            }));
      } else
        l !== null &&
          e.gripSpace &&
          ((o = n.getPose(e.gripSpace, r)),
          o !== null &&
            (l.matrix.fromArray(o.transform.matrix),
            l.matrix.decompose(l.position, l.rotation, l.scale),
            (l.matrixWorldNeedsUpdate = !0),
            o.linearVelocity
              ? ((l.hasLinearVelocity = !0),
                l.linearVelocity.copy(o.linearVelocity))
              : (l.hasLinearVelocity = !1),
            o.angularVelocity
              ? ((l.hasAngularVelocity = !0),
                l.angularVelocity.copy(o.angularVelocity))
              : (l.hasAngularVelocity = !1)));
      a !== null &&
        ((i = n.getPose(e.targetRaySpace, r)),
        i === null && o !== null && (i = o),
        i !== null &&
          (a.matrix.fromArray(i.transform.matrix),
          a.matrix.decompose(a.position, a.rotation, a.scale),
          (a.matrixWorldNeedsUpdate = !0),
          i.linearVelocity
            ? ((a.hasLinearVelocity = !0),
              a.linearVelocity.copy(i.linearVelocity))
            : (a.hasLinearVelocity = !1),
          i.angularVelocity
            ? ((a.hasAngularVelocity = !0),
              a.angularVelocity.copy(i.angularVelocity))
            : (a.hasAngularVelocity = !1),
          this.dispatchEvent(U8)));
    }
    return (
      a !== null && (a.visible = i !== null),
      l !== null && (l.visible = o !== null),
      c !== null && (c.visible = s !== null),
      this
    );
  }
  _getHandJoint(e, n) {
    if (e.joints[n.jointName] === void 0) {
      const r = new ef();
      (r.matrixAutoUpdate = !1),
        (r.visible = !1),
        (e.joints[n.jointName] = r),
        e.add(r);
    }
    return e.joints[n.jointName];
  }
}
class z8 extends bs {
  constructor(e, n) {
    super();
    const r = this;
    let i = null,
      o = 1,
      s = null,
      a = "local-floor",
      l = 1,
      c = null,
      u = null,
      h = null,
      p = null,
      m = null,
      v = null;
    const S = n.getContextAttributes();
    let x = null,
      g = null;
    const y = [],
      _ = [],
      b = new Fe();
    let T = null;
    const M = new Un();
    M.layers.enable(1), (M.viewport = new Ht());
    const C = new Un();
    C.layers.enable(2), (C.viewport = new Ht());
    const L = [M, C],
      A = new GO();
    A.layers.enable(1), A.layers.enable(2);
    let P = null,
      k = null;
    (this.cameraAutoUpdate = !0),
      (this.enabled = !1),
      (this.isPresenting = !1),
      (this.getController = function (Q) {
        let te = y[Q];
        return (
          te === void 0 && ((te = new G1()), (y[Q] = te)),
          te.getTargetRaySpace()
        );
      }),
      (this.getControllerGrip = function (Q) {
        let te = y[Q];
        return (
          te === void 0 && ((te = new G1()), (y[Q] = te)), te.getGripSpace()
        );
      }),
      (this.getHand = function (Q) {
        let te = y[Q];
        return (
          te === void 0 && ((te = new G1()), (y[Q] = te)), te.getHandSpace()
        );
      });
    function B(Q) {
      const te = _.indexOf(Q.inputSource);
      if (te === -1) return;
      const re = y[te];
      re !== void 0 &&
        (re.update(Q.inputSource, Q.frame, c || s),
        re.dispatchEvent({ type: Q.type, data: Q.inputSource }));
    }
    function $() {
      i.removeEventListener("select", B),
        i.removeEventListener("selectstart", B),
        i.removeEventListener("selectend", B),
        i.removeEventListener("squeeze", B),
        i.removeEventListener("squeezestart", B),
        i.removeEventListener("squeezeend", B),
        i.removeEventListener("end", $),
        i.removeEventListener("inputsourceschange", D);
      for (let Q = 0; Q < y.length; Q++) {
        const te = _[Q];
        te !== null && ((_[Q] = null), y[Q].disconnect(te));
      }
      (P = null),
        (k = null),
        e.setRenderTarget(x),
        (m = null),
        (p = null),
        (h = null),
        (i = null),
        (g = null),
        Z.stop(),
        (r.isPresenting = !1),
        e.setPixelRatio(T),
        e.setSize(b.width, b.height, !1),
        r.dispatchEvent({ type: "sessionend" });
    }
    (this.setFramebufferScaleFactor = function (Q) {
      (o = Q),
        r.isPresenting === !0 &&
          console.warn(
            "THREE.WebXRManager: Cannot change framebuffer scale while presenting."
          );
    }),
      (this.setReferenceSpaceType = function (Q) {
        (a = Q),
          r.isPresenting === !0 &&
            console.warn(
              "THREE.WebXRManager: Cannot change reference space type while presenting."
            );
      }),
      (this.getReferenceSpace = function () {
        return c || s;
      }),
      (this.setReferenceSpace = function (Q) {
        c = Q;
      }),
      (this.getBaseLayer = function () {
        return p !== null ? p : m;
      }),
      (this.getBinding = function () {
        return h;
      }),
      (this.getFrame = function () {
        return v;
      }),
      (this.getSession = function () {
        return i;
      }),
      (this.setSession = async function (Q) {
        if (((i = Q), i !== null)) {
          if (
            ((x = e.getRenderTarget()),
            i.addEventListener("select", B),
            i.addEventListener("selectstart", B),
            i.addEventListener("selectend", B),
            i.addEventListener("squeeze", B),
            i.addEventListener("squeezestart", B),
            i.addEventListener("squeezeend", B),
            i.addEventListener("end", $),
            i.addEventListener("inputsourceschange", D),
            S.xrCompatible !== !0 && (await n.makeXRCompatible()),
            (T = e.getPixelRatio()),
            e.getSize(b),
            i.renderState.layers === void 0 || e.capabilities.isWebGL2 === !1)
          ) {
            const te = {
              antialias: i.renderState.layers === void 0 ? S.antialias : !0,
              alpha: !0,
              depth: S.depth,
              stencil: S.stencil,
              framebufferScaleFactor: o,
            };
            (m = new XRWebGLLayer(i, n, te)),
              i.updateRenderState({ baseLayer: m }),
              e.setPixelRatio(1),
              e.setSize(m.framebufferWidth, m.framebufferHeight, !1),
              (g = new Yo(m.framebufferWidth, m.framebufferHeight, {
                format: ri,
                type: xs,
                colorSpace: e.outputColorSpace,
                stencilBuffer: S.stencil,
              }));
          } else {
            let te = null,
              re = null,
              le = null;
            S.depth &&
              ((le = S.stencil ? n.DEPTH24_STENCIL8 : n.DEPTH_COMPONENT24),
              (te = S.stencil ? Tc : Ja),
              (re = S.stencil ? Qa : Js));
            const oe = {
              colorFormat: n.RGBA8,
              depthFormat: le,
              scaleFactor: o,
            };
            (h = new XRWebGLBinding(i, n)),
              (p = h.createProjectionLayer(oe)),
              i.updateRenderState({ layers: [p] }),
              e.setPixelRatio(1),
              e.setSize(p.textureWidth, p.textureHeight, !1),
              (g = new Yo(p.textureWidth, p.textureHeight, {
                format: ri,
                type: xs,
                depthTexture: new WE(
                  p.textureWidth,
                  p.textureHeight,
                  re,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  te
                ),
                stencilBuffer: S.stencil,
                colorSpace: e.outputColorSpace,
                samples: S.antialias ? 4 : 0,
              }));
            const ve = e.properties.get(g);
            ve.__ignoreDepthValues = p.ignoreDepthValues;
          }
          (g.isXRRenderTarget = !0),
            this.setFoveation(l),
            (c = null),
            (s = await i.requestReferenceSpace(a)),
            Z.setContext(i),
            Z.start(),
            (r.isPresenting = !0),
            r.dispatchEvent({ type: "sessionstart" });
        }
      }),
      (this.getEnvironmentBlendMode = function () {
        if (i !== null) return i.environmentBlendMode;
      });
    function D(Q) {
      for (let te = 0; te < Q.removed.length; te++) {
        const re = Q.removed[te],
          le = _.indexOf(re);
        le >= 0 && ((_[le] = null), y[le].disconnect(re));
      }
      for (let te = 0; te < Q.added.length; te++) {
        const re = Q.added[te];
        let le = _.indexOf(re);
        if (le === -1) {
          for (let ve = 0; ve < y.length; ve++)
            if (ve >= _.length) {
              _.push(re), (le = ve);
              break;
            } else if (_[ve] === null) {
              (_[ve] = re), (le = ve);
              break;
            }
          if (le === -1) break;
        }
        const oe = y[le];
        oe && oe.connect(re);
      }
    }
    const X = new W(),
      j = new W();
    function Y(Q, te, re) {
      X.setFromMatrixPosition(te.matrixWorld),
        j.setFromMatrixPosition(re.matrixWorld);
      const le = X.distanceTo(j),
        oe = te.projectionMatrix.elements,
        ve = re.projectionMatrix.elements,
        Ae = oe[14] / (oe[10] - 1),
        Re = oe[14] / (oe[10] + 1),
        ye = (oe[9] + 1) / oe[5],
        q = (oe[9] - 1) / oe[5],
        xe = (oe[8] - 1) / oe[0],
        he = (ve[8] + 1) / ve[0],
        me = Ae * xe,
        fe = Ae * he,
        Ve = le / (-xe + he),
        ge = Ve * -xe;
      te.matrixWorld.decompose(Q.position, Q.quaternion, Q.scale),
        Q.translateX(ge),
        Q.translateZ(Ve),
        Q.matrixWorld.compose(Q.position, Q.quaternion, Q.scale),
        Q.matrixWorldInverse.copy(Q.matrixWorld).invert();
      const H = Ae + Ve,
        F = Re + Ve,
        K = me - ge,
        ae = fe + (le - ge),
        se = ((ye * Re) / F) * H,
        de = ((q * Re) / F) * H;
      Q.projectionMatrix.makePerspective(K, ae, se, de, H, F),
        Q.projectionMatrixInverse.copy(Q.projectionMatrix).invert();
    }
    function N(Q, te) {
      te === null
        ? Q.matrixWorld.copy(Q.matrix)
        : Q.matrixWorld.multiplyMatrices(te.matrixWorld, Q.matrix),
        Q.matrixWorldInverse.copy(Q.matrixWorld).invert();
    }
    this.updateCamera = function (Q) {
      if (i === null) return;
      (A.near = C.near = M.near = Q.near),
        (A.far = C.far = M.far = Q.far),
        (P !== A.near || k !== A.far) &&
          (i.updateRenderState({ depthNear: A.near, depthFar: A.far }),
          (P = A.near),
          (k = A.far));
      const te = Q.parent,
        re = A.cameras;
      N(A, te);
      for (let le = 0; le < re.length; le++) N(re[le], te);
      re.length === 2
        ? Y(A, M, C)
        : A.projectionMatrix.copy(M.projectionMatrix),
        V(Q, A, te);
    };
    function V(Q, te, re) {
      re === null
        ? Q.matrix.copy(te.matrixWorld)
        : (Q.matrix.copy(re.matrixWorld),
          Q.matrix.invert(),
          Q.matrix.multiply(te.matrixWorld)),
        Q.matrix.decompose(Q.position, Q.quaternion, Q.scale),
        Q.updateMatrixWorld(!0),
        Q.projectionMatrix.copy(te.projectionMatrix),
        Q.projectionMatrixInverse.copy(te.projectionMatrixInverse),
        Q.isPerspectiveCamera &&
          ((Q.fov = Tf * 2 * Math.atan(1 / Q.projectionMatrix.elements[5])),
          (Q.zoom = 1));
    }
    (this.getCamera = function () {
      return A;
    }),
      (this.getFoveation = function () {
        if (!(p === null && m === null)) return l;
      }),
      (this.setFoveation = function (Q) {
        (l = Q),
          p !== null && (p.fixedFoveation = Q),
          m !== null && m.fixedFoveation !== void 0 && (m.fixedFoveation = Q);
      });
    let G = null;
    function U(Q, te) {
      if (((u = te.getViewerPose(c || s)), (v = te), u !== null)) {
        const re = u.views;
        m !== null &&
          (e.setRenderTargetFramebuffer(g, m.framebuffer),
          e.setRenderTarget(g));
        let le = !1;
        re.length !== A.cameras.length && ((A.cameras.length = 0), (le = !0));
        for (let oe = 0; oe < re.length; oe++) {
          const ve = re[oe];
          let Ae = null;
          if (m !== null) Ae = m.getViewport(ve);
          else {
            const ye = h.getViewSubImage(p, ve);
            (Ae = ye.viewport),
              oe === 0 &&
                (e.setRenderTargetTextures(
                  g,
                  ye.colorTexture,
                  p.ignoreDepthValues ? void 0 : ye.depthStencilTexture
                ),
                e.setRenderTarget(g));
          }
          let Re = L[oe];
          Re === void 0 &&
            ((Re = new Un()),
            Re.layers.enable(oe),
            (Re.viewport = new Ht()),
            (L[oe] = Re)),
            Re.matrix.fromArray(ve.transform.matrix),
            Re.matrix.decompose(Re.position, Re.quaternion, Re.scale),
            Re.projectionMatrix.fromArray(ve.projectionMatrix),
            Re.projectionMatrixInverse.copy(Re.projectionMatrix).invert(),
            Re.viewport.set(Ae.x, Ae.y, Ae.width, Ae.height),
            oe === 0 &&
              (A.matrix.copy(Re.matrix),
              A.matrix.decompose(A.position, A.quaternion, A.scale)),
            le === !0 && A.cameras.push(Re);
        }
      }
      for (let re = 0; re < y.length; re++) {
        const le = _[re],
          oe = y[re];
        le !== null && oe !== void 0 && oe.update(le, te, c || s);
      }
      G && G(Q, te),
        te.detectedPlanes &&
          r.dispatchEvent({ type: "planesdetected", data: te }),
        (v = null);
    }
    const Z = new DO();
    Z.setAnimationLoop(U),
      (this.setAnimationLoop = function (Q) {
        G = Q;
      }),
      (this.dispose = function () {});
  }
}
function k8(t, e) {
  function n(x, g) {
    x.matrixAutoUpdate === !0 && x.updateMatrix(), g.value.copy(x.matrix);
  }
  function r(x, g) {
    g.color.getRGB(x.fogColor.value, OO(t)),
      g.isFog
        ? ((x.fogNear.value = g.near), (x.fogFar.value = g.far))
        : g.isFogExp2 && (x.fogDensity.value = g.density);
  }
  function i(x, g, y, _, b) {
    g.isMeshBasicMaterial || g.isMeshLambertMaterial
      ? o(x, g)
      : g.isMeshToonMaterial
      ? (o(x, g), h(x, g))
      : g.isMeshPhongMaterial
      ? (o(x, g), u(x, g))
      : g.isMeshStandardMaterial
      ? (o(x, g), p(x, g), g.isMeshPhysicalMaterial && m(x, g, b))
      : g.isMeshMatcapMaterial
      ? (o(x, g), v(x, g))
      : g.isMeshDepthMaterial
      ? o(x, g)
      : g.isMeshDistanceMaterial
      ? (o(x, g), S(x, g))
      : g.isMeshNormalMaterial
      ? o(x, g)
      : g.isLineBasicMaterial
      ? (s(x, g), g.isLineDashedMaterial && a(x, g))
      : g.isPointsMaterial
      ? l(x, g, y, _)
      : g.isSpriteMaterial
      ? c(x, g)
      : g.isShadowMaterial
      ? (x.color.value.copy(g.color), (x.opacity.value = g.opacity))
      : g.isShaderMaterial && (g.uniformsNeedUpdate = !1);
  }
  function o(x, g) {
    (x.opacity.value = g.opacity),
      g.color && x.diffuse.value.copy(g.color),
      g.emissive &&
        x.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),
      g.map && ((x.map.value = g.map), n(g.map, x.mapTransform)),
      g.alphaMap &&
        ((x.alphaMap.value = g.alphaMap), n(g.alphaMap, x.alphaMapTransform)),
      g.bumpMap &&
        ((x.bumpMap.value = g.bumpMap),
        n(g.bumpMap, x.bumpMapTransform),
        (x.bumpScale.value = g.bumpScale),
        g.side === Vr && (x.bumpScale.value *= -1)),
      g.normalMap &&
        ((x.normalMap.value = g.normalMap),
        n(g.normalMap, x.normalMapTransform),
        x.normalScale.value.copy(g.normalScale),
        g.side === Vr && x.normalScale.value.negate()),
      g.displacementMap &&
        ((x.displacementMap.value = g.displacementMap),
        n(g.displacementMap, x.displacementMapTransform),
        (x.displacementScale.value = g.displacementScale),
        (x.displacementBias.value = g.displacementBias)),
      g.emissiveMap &&
        ((x.emissiveMap.value = g.emissiveMap),
        n(g.emissiveMap, x.emissiveMapTransform)),
      g.specularMap &&
        ((x.specularMap.value = g.specularMap),
        n(g.specularMap, x.specularMapTransform)),
      g.alphaTest > 0 && (x.alphaTest.value = g.alphaTest);
    const y = e.get(g).envMap;
    if (
      (y &&
        ((x.envMap.value = y),
        (x.flipEnvMap.value =
          y.isCubeTexture && y.isRenderTargetTexture === !1 ? -1 : 1),
        (x.reflectivity.value = g.reflectivity),
        (x.ior.value = g.ior),
        (x.refractionRatio.value = g.refractionRatio)),
      g.lightMap)
    ) {
      x.lightMap.value = g.lightMap;
      const _ = t._useLegacyLights === !0 ? Math.PI : 1;
      (x.lightMapIntensity.value = g.lightMapIntensity * _),
        n(g.lightMap, x.lightMapTransform);
    }
    g.aoMap &&
      ((x.aoMap.value = g.aoMap),
      (x.aoMapIntensity.value = g.aoMapIntensity),
      n(g.aoMap, x.aoMapTransform));
  }
  function s(x, g) {
    x.diffuse.value.copy(g.color),
      (x.opacity.value = g.opacity),
      g.map && ((x.map.value = g.map), n(g.map, x.mapTransform));
  }
  function a(x, g) {
    (x.dashSize.value = g.dashSize),
      (x.totalSize.value = g.dashSize + g.gapSize),
      (x.scale.value = g.scale);
  }
  function l(x, g, y, _) {
    x.diffuse.value.copy(g.color),
      (x.opacity.value = g.opacity),
      (x.size.value = g.size * y),
      (x.scale.value = _ * 0.5),
      g.map && ((x.map.value = g.map), n(g.map, x.uvTransform)),
      g.alphaMap &&
        ((x.alphaMap.value = g.alphaMap), n(g.alphaMap, x.alphaMapTransform)),
      g.alphaTest > 0 && (x.alphaTest.value = g.alphaTest);
  }
  function c(x, g) {
    x.diffuse.value.copy(g.color),
      (x.opacity.value = g.opacity),
      (x.rotation.value = g.rotation),
      g.map && ((x.map.value = g.map), n(g.map, x.mapTransform)),
      g.alphaMap &&
        ((x.alphaMap.value = g.alphaMap), n(g.alphaMap, x.alphaMapTransform)),
      g.alphaTest > 0 && (x.alphaTest.value = g.alphaTest);
  }
  function u(x, g) {
    x.specular.value.copy(g.specular),
      (x.shininess.value = Math.max(g.shininess, 1e-4));
  }
  function h(x, g) {
    g.gradientMap && (x.gradientMap.value = g.gradientMap);
  }
  function p(x, g) {
    (x.metalness.value = g.metalness),
      g.metalnessMap &&
        ((x.metalnessMap.value = g.metalnessMap),
        n(g.metalnessMap, x.metalnessMapTransform)),
      (x.roughness.value = g.roughness),
      g.roughnessMap &&
        ((x.roughnessMap.value = g.roughnessMap),
        n(g.roughnessMap, x.roughnessMapTransform)),
      e.get(g).envMap && (x.envMapIntensity.value = g.envMapIntensity);
  }
  function m(x, g, y) {
    (x.ior.value = g.ior),
      g.sheen > 0 &&
        (x.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),
        (x.sheenRoughness.value = g.sheenRoughness),
        g.sheenColorMap &&
          ((x.sheenColorMap.value = g.sheenColorMap),
          n(g.sheenColorMap, x.sheenColorMapTransform)),
        g.sheenRoughnessMap &&
          ((x.sheenRoughnessMap.value = g.sheenRoughnessMap),
          n(g.sheenRoughnessMap, x.sheenRoughnessMapTransform))),
      g.clearcoat > 0 &&
        ((x.clearcoat.value = g.clearcoat),
        (x.clearcoatRoughness.value = g.clearcoatRoughness),
        g.clearcoatMap &&
          ((x.clearcoatMap.value = g.clearcoatMap),
          n(g.clearcoatMap, x.clearcoatMapTransform)),
        g.clearcoatRoughnessMap &&
          ((x.clearcoatRoughnessMap.value = g.clearcoatRoughnessMap),
          n(g.clearcoatRoughnessMap, x.clearcoatRoughnessMapTransform)),
        g.clearcoatNormalMap &&
          ((x.clearcoatNormalMap.value = g.clearcoatNormalMap),
          n(g.clearcoatNormalMap, x.clearcoatNormalMapTransform),
          x.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),
          g.side === Vr && x.clearcoatNormalScale.value.negate())),
      g.iridescence > 0 &&
        ((x.iridescence.value = g.iridescence),
        (x.iridescenceIOR.value = g.iridescenceIOR),
        (x.iridescenceThicknessMinimum.value = g.iridescenceThicknessRange[0]),
        (x.iridescenceThicknessMaximum.value = g.iridescenceThicknessRange[1]),
        g.iridescenceMap &&
          ((x.iridescenceMap.value = g.iridescenceMap),
          n(g.iridescenceMap, x.iridescenceMapTransform)),
        g.iridescenceThicknessMap &&
          ((x.iridescenceThicknessMap.value = g.iridescenceThicknessMap),
          n(g.iridescenceThicknessMap, x.iridescenceThicknessMapTransform))),
      g.transmission > 0 &&
        ((x.transmission.value = g.transmission),
        (x.transmissionSamplerMap.value = y.texture),
        x.transmissionSamplerSize.value.set(y.width, y.height),
        g.transmissionMap &&
          ((x.transmissionMap.value = g.transmissionMap),
          n(g.transmissionMap, x.transmissionMapTransform)),
        (x.thickness.value = g.thickness),
        g.thicknessMap &&
          ((x.thicknessMap.value = g.thicknessMap),
          n(g.thicknessMap, x.thicknessMapTransform)),
        (x.attenuationDistance.value = g.attenuationDistance),
        x.attenuationColor.value.copy(g.attenuationColor)),
      g.anisotropy > 0 &&
        (x.anisotropyVector.value.set(
          g.anisotropy * Math.cos(g.anisotropyRotation),
          g.anisotropy * Math.sin(g.anisotropyRotation)
        ),
        g.anisotropyMap &&
          ((x.anisotropyMap.value = g.anisotropyMap),
          n(g.anisotropyMap, x.anisotropyMapTransform))),
      (x.specularIntensity.value = g.specularIntensity),
      x.specularColor.value.copy(g.specularColor),
      g.specularColorMap &&
        ((x.specularColorMap.value = g.specularColorMap),
        n(g.specularColorMap, x.specularColorMapTransform)),
      g.specularIntensityMap &&
        ((x.specularIntensityMap.value = g.specularIntensityMap),
        n(g.specularIntensityMap, x.specularIntensityMapTransform));
  }
  function v(x, g) {
    g.matcap && (x.matcap.value = g.matcap);
  }
  function S(x, g) {
    const y = e.get(g).light;
    x.referencePosition.value.setFromMatrixPosition(y.matrixWorld),
      (x.nearDistance.value = y.shadow.camera.near),
      (x.farDistance.value = y.shadow.camera.far);
  }
  return { refreshFogUniforms: r, refreshMaterialUniforms: i };
}
function B8(t, e, n, r) {
  let i = {},
    o = {},
    s = [];
  const a = n.isWebGL2 ? t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS) : 0;
  function l(y, _) {
    const b = _.program;
    r.uniformBlockBinding(y, b);
  }
  function c(y, _) {
    let b = i[y.id];
    b === void 0 &&
      (v(y), (b = u(y)), (i[y.id] = b), y.addEventListener("dispose", x));
    const T = _.program;
    r.updateUBOMapping(y, T);
    const M = e.render.frame;
    o[y.id] !== M && (p(y), (o[y.id] = M));
  }
  function u(y) {
    const _ = h();
    y.__bindingPointIndex = _;
    const b = t.createBuffer(),
      T = y.__size,
      M = y.usage;
    return (
      t.bindBuffer(t.UNIFORM_BUFFER, b),
      t.bufferData(t.UNIFORM_BUFFER, T, M),
      t.bindBuffer(t.UNIFORM_BUFFER, null),
      t.bindBufferBase(t.UNIFORM_BUFFER, _, b),
      b
    );
  }
  function h() {
    for (let y = 0; y < a; y++) if (s.indexOf(y) === -1) return s.push(y), y;
    return (
      console.error(
        "THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."
      ),
      0
    );
  }
  function p(y) {
    const _ = i[y.id],
      b = y.uniforms,
      T = y.__cache;
    t.bindBuffer(t.UNIFORM_BUFFER, _);
    for (let M = 0, C = b.length; M < C; M++) {
      const L = Array.isArray(b[M]) ? b[M] : [b[M]];
      for (let A = 0, P = L.length; A < P; A++) {
        const k = L[A];
        if (m(k, M, A, T) === !0) {
          const B = k.__offset,
            $ = Array.isArray(k.value) ? k.value : [k.value];
          let D = 0;
          for (let X = 0; X < $.length; X++) {
            const j = $[X],
              Y = S(j);
            typeof j == "number" || typeof j == "boolean"
              ? ((k.__data[0] = j),
                t.bufferSubData(t.UNIFORM_BUFFER, B + D, k.__data))
              : j.isMatrix3
              ? ((k.__data[0] = j.elements[0]),
                (k.__data[1] = j.elements[1]),
                (k.__data[2] = j.elements[2]),
                (k.__data[3] = 0),
                (k.__data[4] = j.elements[3]),
                (k.__data[5] = j.elements[4]),
                (k.__data[6] = j.elements[5]),
                (k.__data[7] = 0),
                (k.__data[8] = j.elements[6]),
                (k.__data[9] = j.elements[7]),
                (k.__data[10] = j.elements[8]),
                (k.__data[11] = 0))
              : (j.toArray(k.__data, D),
                (D += Y.storage / Float32Array.BYTES_PER_ELEMENT));
          }
          t.bufferSubData(t.UNIFORM_BUFFER, B, k.__data);
        }
      }
    }
    t.bindBuffer(t.UNIFORM_BUFFER, null);
  }
  function m(y, _, b, T) {
    const M = y.value,
      C = _ + "_" + b;
    if (T[C] === void 0)
      return (
        typeof M == "number" || typeof M == "boolean"
          ? (T[C] = M)
          : (T[C] = M.clone()),
        !0
      );
    {
      const L = T[C];
      if (typeof M == "number" || typeof M == "boolean") {
        if (L !== M) return (T[C] = M), !0;
      } else if (L.equals(M) === !1) return L.copy(M), !0;
    }
    return !1;
  }
  function v(y) {
    const _ = y.uniforms;
    let b = 0;
    const T = 16;
    for (let C = 0, L = _.length; C < L; C++) {
      const A = Array.isArray(_[C]) ? _[C] : [_[C]];
      for (let P = 0, k = A.length; P < k; P++) {
        const B = A[P],
          $ = Array.isArray(B.value) ? B.value : [B.value];
        for (let D = 0, X = $.length; D < X; D++) {
          const j = $[D],
            Y = S(j),
            N = b % T;
          N !== 0 && T - N < Y.boundary && (b += T - N),
            (B.__data = new Float32Array(
              Y.storage / Float32Array.BYTES_PER_ELEMENT
            )),
            (B.__offset = b),
            (b += Y.storage);
        }
      }
    }
    const M = b % T;
    return M > 0 && (b += T - M), (y.__size = b), (y.__cache = {}), this;
  }
  function S(y) {
    const _ = { boundary: 0, storage: 0 };
    return (
      typeof y == "number" || typeof y == "boolean"
        ? ((_.boundary = 4), (_.storage = 4))
        : y.isVector2
        ? ((_.boundary = 8), (_.storage = 8))
        : y.isVector3 || y.isColor
        ? ((_.boundary = 16), (_.storage = 12))
        : y.isVector4
        ? ((_.boundary = 16), (_.storage = 16))
        : y.isMatrix3
        ? ((_.boundary = 48), (_.storage = 48))
        : y.isMatrix4
        ? ((_.boundary = 64), (_.storage = 64))
        : y.isTexture
        ? console.warn(
            "THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."
          )
        : console.warn(
            "THREE.WebGLRenderer: Unsupported uniform value type.",
            y
          ),
      _
    );
  }
  function x(y) {
    const _ = y.target;
    _.removeEventListener("dispose", x);
    const b = s.indexOf(_.__bindingPointIndex);
    s.splice(b, 1), t.deleteBuffer(i[_.id]), delete i[_.id], delete o[_.id];
  }
  function g() {
    for (const y in i) t.deleteBuffer(i[y]);
    (s = []), (i = {}), (o = {});
  }
  return { bind: l, update: c, dispose: g };
}
class $E {
  constructor(e = {}) {
    const {
      canvas: n = PO(),
      context: r = null,
      depth: i = !0,
      stencil: o = !0,
      alpha: s = !1,
      antialias: a = !1,
      premultipliedAlpha: l = !0,
      preserveDrawingBuffer: c = !1,
      powerPreference: u = "default",
      failIfMajorPerformanceCaveat: h = !1,
    } = e;
    this.isWebGLRenderer = !0;
    let p;
    r !== null ? (p = r.getContextAttributes().alpha) : (p = s);
    const m = new Uint32Array(4),
      v = new Int32Array(4);
    let S = null,
      x = null;
    const g = [],
      y = [];
    (this.domElement = n),
      (this.debug = { checkShaderErrors: !0, onShaderError: null }),
      (this.autoClear = !0),
      (this.autoClearColor = !0),
      (this.autoClearDepth = !0),
      (this.autoClearStencil = !0),
      (this.sortObjects = !0),
      (this.clippingPlanes = []),
      (this.localClippingEnabled = !1),
      (this._outputColorSpace = rr),
      (this._useLegacyLights = !1),
      (this.toneMapping = ys),
      (this.toneMappingExposure = 1);
    const _ = this;
    let b = !1,
      T = 0,
      M = 0,
      C = null,
      L = -1,
      A = null;
    const P = new Ht(),
      k = new Ht();
    let B = null;
    const $ = new nt(0);
    let D = 0,
      X = n.width,
      j = n.height,
      Y = 1,
      N = null,
      V = null;
    const G = new Ht(0, 0, X, j),
      U = new Ht(0, 0, X, j);
    let Z = !1;
    const Q = new Sp();
    let te = !1,
      re = !1,
      le = null;
    const oe = new bt(),
      ve = new Fe(),
      Ae = new W(),
      Re = {
        background: null,
        fog: null,
        environment: null,
        overrideMaterial: null,
        isScene: !0,
      };
    function ye() {
      return C === null ? Y : 1;
    }
    let q = r;
    function xe(J, pe) {
      for (let we = 0; we < J.length; we++) {
        const Ce = J[we],
          Se = n.getContext(Ce, pe);
        if (Se !== null) return Se;
      }
      return null;
    }
    try {
      const J = {
        alpha: !0,
        depth: i,
        stencil: o,
        antialias: a,
        premultipliedAlpha: l,
        preserveDrawingBuffer: c,
        powerPreference: u,
        failIfMajorPerformanceCaveat: h,
      };
      if (
        ("setAttribute" in n &&
          n.setAttribute("data-engine", `three.js r${mp}`),
        n.addEventListener("webglcontextlost", Le, !1),
        n.addEventListener("webglcontextrestored", ie, !1),
        n.addEventListener("webglcontextcreationerror", Ue, !1),
        q === null)
      ) {
        const pe = ["webgl2", "webgl", "experimental-webgl"];
        if (
          (_.isWebGL1Renderer === !0 && pe.shift(), (q = xe(pe, J)), q === null)
        )
          throw xe(pe)
            ? new Error(
                "Error creating WebGL context with your selected attributes."
              )
            : new Error("Error creating WebGL context.");
      }
      typeof WebGLRenderingContext < "u" &&
        q instanceof WebGLRenderingContext &&
        console.warn(
          "THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."
        ),
        q.getShaderPrecisionFormat === void 0 &&
          (q.getShaderPrecisionFormat = function () {
            return { rangeMin: 1, rangeMax: 1, precision: 1 };
          });
    } catch (J) {
      throw (console.error("THREE.WebGLRenderer: " + J.message), J);
    }
    let he,
      me,
      fe,
      Ve,
      ge,
      H,
      F,
      K,
      ae,
      se,
      de,
      Pe,
      ke,
      Be,
      Ne,
      ze,
      Ee,
      Je,
      qe,
      Qe,
      Ge,
      Oe,
      ne,
      be;
    function je() {
      (he = new eV(q)),
        (me = new qH(q, he, e)),
        he.init(me),
        (Oe = new VO(q, he, me)),
        (fe = new N8(q, he, me)),
        (Ve = new rV(q)),
        (ge = new b8()),
        (H = new D8(q, he, fe, ge, me, Oe, Ve)),
        (F = new KH(_)),
        (K = new JH(_)),
        (ae = new f5(q, me)),
        (ne = new $H(q, he, ae, me)),
        (se = new tV(q, ae, Ve, ne)),
        (de = new aV(q, se, ae, Ve)),
        (qe = new sV(q, me, H)),
        (ze = new YH(ge)),
        (Pe = new w8(_, F, K, he, me, ne, ze)),
        (ke = new k8(_, ge)),
        (Be = new M8()),
        (Ne = new L8(he, me)),
        (Je = new WH(_, F, K, fe, de, p, l)),
        (Ee = new F8(_, de, me)),
        (be = new B8(q, Ve, me, fe)),
        (Qe = new XH(q, he, Ve, me)),
        (Ge = new nV(q, he, Ve, me)),
        (Ve.programs = Pe.programs),
        (_.capabilities = me),
        (_.extensions = he),
        (_.properties = ge),
        (_.renderLists = Be),
        (_.shadowMap = Ee),
        (_.state = fe),
        (_.info = Ve);
    }
    je();
    const De = new z8(_, q);
    (this.xr = De),
      (this.getContext = function () {
        return q;
      }),
      (this.getContextAttributes = function () {
        return q.getContextAttributes();
      }),
      (this.forceContextLoss = function () {
        const J = he.get("WEBGL_lose_context");
        J && J.loseContext();
      }),
      (this.forceContextRestore = function () {
        const J = he.get("WEBGL_lose_context");
        J && J.restoreContext();
      }),
      (this.getPixelRatio = function () {
        return Y;
      }),
      (this.setPixelRatio = function (J) {
        J !== void 0 && ((Y = J), this.setSize(X, j, !1));
      }),
      (this.getSize = function (J) {
        return J.set(X, j);
      }),
      (this.setSize = function (J, pe, we = !0) {
        if (De.isPresenting) {
          console.warn(
            "THREE.WebGLRenderer: Can't change size while VR device is presenting."
          );
          return;
        }
        (X = J),
          (j = pe),
          (n.width = Math.floor(J * Y)),
          (n.height = Math.floor(pe * Y)),
          we === !0 &&
            ((n.style.width = J + "px"), (n.style.height = pe + "px")),
          this.setViewport(0, 0, J, pe);
      }),
      (this.getDrawingBufferSize = function (J) {
        return J.set(X * Y, j * Y).floor();
      }),
      (this.setDrawingBufferSize = function (J, pe, we) {
        (X = J),
          (j = pe),
          (Y = we),
          (n.width = Math.floor(J * we)),
          (n.height = Math.floor(pe * we)),
          this.setViewport(0, 0, J, pe);
      }),
      (this.getCurrentViewport = function (J) {
        return J.copy(P);
      }),
      (this.getViewport = function (J) {
        return J.copy(G);
      }),
      (this.setViewport = function (J, pe, we, Ce) {
        J.isVector4 ? G.set(J.x, J.y, J.z, J.w) : G.set(J, pe, we, Ce),
          fe.viewport(P.copy(G).multiplyScalar(Y).floor());
      }),
      (this.getScissor = function (J) {
        return J.copy(U);
      }),
      (this.setScissor = function (J, pe, we, Ce) {
        J.isVector4 ? U.set(J.x, J.y, J.z, J.w) : U.set(J, pe, we, Ce),
          fe.scissor(k.copy(U).multiplyScalar(Y).floor());
      }),
      (this.getScissorTest = function () {
        return Z;
      }),
      (this.setScissorTest = function (J) {
        fe.setScissorTest((Z = J));
      }),
      (this.setOpaqueSort = function (J) {
        N = J;
      }),
      (this.setTransparentSort = function (J) {
        V = J;
      }),
      (this.getClearColor = function (J) {
        return J.copy(Je.getClearColor());
      }),
      (this.setClearColor = function () {
        Je.setClearColor.apply(Je, arguments);
      }),
      (this.getClearAlpha = function () {
        return Je.getClearAlpha();
      }),
      (this.setClearAlpha = function () {
        Je.setClearAlpha.apply(Je, arguments);
      }),
      (this.clear = function (J = !0, pe = !0, we = !0) {
        let Ce = 0;
        if (J) {
          let Se = !1;
          if (C !== null) {
            const et = C.texture.format;
            Se = et === OE || et === IE || et === LE;
          }
          if (Se) {
            const et = C.texture.type,
              dt =
                et === xs ||
                et === Js ||
                et === J0 ||
                et === Qa ||
                et === RE ||
                et === PE,
              gt = Je.getClearColor(),
              He = Je.getClearAlpha(),
              wt = gt.r,
              Et = gt.g,
              xt = gt.b;
            dt
              ? ((m[0] = wt),
                (m[1] = Et),
                (m[2] = xt),
                (m[3] = He),
                q.clearBufferuiv(q.COLOR, 0, m))
              : ((v[0] = wt),
                (v[1] = Et),
                (v[2] = xt),
                (v[3] = He),
                q.clearBufferiv(q.COLOR, 0, v));
          } else Ce |= q.COLOR_BUFFER_BIT;
        }
        pe && (Ce |= q.DEPTH_BUFFER_BIT),
          we &&
            ((Ce |= q.STENCIL_BUFFER_BIT),
            this.state.buffers.stencil.setMask(4294967295)),
          q.clear(Ce);
      }),
      (this.clearColor = function () {
        this.clear(!0, !1, !1);
      }),
      (this.clearDepth = function () {
        this.clear(!1, !0, !1);
      }),
      (this.clearStencil = function () {
        this.clear(!1, !1, !0);
      }),
      (this.dispose = function () {
        n.removeEventListener("webglcontextlost", Le, !1),
          n.removeEventListener("webglcontextrestored", ie, !1),
          n.removeEventListener("webglcontextcreationerror", Ue, !1),
          Be.dispose(),
          Ne.dispose(),
          ge.dispose(),
          F.dispose(),
          K.dispose(),
          de.dispose(),
          ne.dispose(),
          be.dispose(),
          Pe.dispose(),
          De.dispose(),
          De.removeEventListener("sessionstart", St),
          De.removeEventListener("sessionend", ht),
          le && (le.dispose(), (le = null)),
          qt.stop();
      });
    function Le(J) {
      J.preventDefault(),
        console.log("THREE.WebGLRenderer: Context Lost."),
        (b = !0);
    }
    function ie() {
      console.log("THREE.WebGLRenderer: Context Restored."), (b = !1);
      const J = Ve.autoReset,
        pe = Ee.enabled,
        we = Ee.autoUpdate,
        Ce = Ee.needsUpdate,
        Se = Ee.type;
      je(),
        (Ve.autoReset = J),
        (Ee.enabled = pe),
        (Ee.autoUpdate = we),
        (Ee.needsUpdate = Ce),
        (Ee.type = Se);
    }
    function Ue(J) {
      console.error(
        "THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",
        J.statusMessage
      );
    }
    function Ke(J) {
      const pe = J.target;
      pe.removeEventListener("dispose", Ke), ft(pe);
    }
    function ft(J) {
      $e(J), ge.remove(J);
    }
    function $e(J) {
      const pe = ge.get(J).programs;
      pe !== void 0 &&
        (pe.forEach(function (we) {
          Pe.releaseProgram(we);
        }),
        J.isShaderMaterial && Pe.releaseShaderCache(J));
    }
    this.renderBufferDirect = function (J, pe, we, Ce, Se, et) {
      pe === null && (pe = Re);
      const dt = Se.isMesh && Se.matrixWorld.determinant() < 0,
        gt = $r(J, pe, we, Ce, Se);
      fe.setMaterial(Ce, dt);
      let He = we.index,
        wt = 1;
      if (Ce.wireframe === !0) {
        if (((He = se.getWireframeAttribute(we)), He === void 0)) return;
        wt = 2;
      }
      const Et = we.drawRange,
        xt = we.attributes.position;
      let sn = Et.start * wt,
        Yn = (Et.start + Et.count) * wt;
      et !== null &&
        ((sn = Math.max(sn, et.start * wt)),
        (Yn = Math.min(Yn, (et.start + et.count) * wt))),
        He !== null
          ? ((sn = Math.max(sn, 0)), (Yn = Math.min(Yn, He.count)))
          : xt != null &&
            ((sn = Math.max(sn, 0)), (Yn = Math.min(Yn, xt.count)));
      const tn = Yn - sn;
      if (tn < 0 || tn === 1 / 0) return;
      ne.setup(Se, Ce, gt, we, He);
      let wn,
        vt = Qe;
      if (
        (He !== null && ((wn = ae.get(He)), (vt = Ge), vt.setIndex(wn)),
        Se.isMesh)
      )
        Ce.wireframe === !0
          ? (fe.setLineWidth(Ce.wireframeLinewidth * ye()), vt.setMode(q.LINES))
          : vt.setMode(q.TRIANGLES);
      else if (Se.isLine) {
        let st = Ce.linewidth;
        st === void 0 && (st = 1),
          fe.setLineWidth(st * ye()),
          Se.isLineSegments
            ? vt.setMode(q.LINES)
            : Se.isLineLoop
            ? vt.setMode(q.LINE_LOOP)
            : vt.setMode(q.LINE_STRIP);
      } else
        Se.isPoints
          ? vt.setMode(q.POINTS)
          : Se.isSprite && vt.setMode(q.TRIANGLES);
      if (Se.isBatchedMesh)
        vt.renderMultiDraw(
          Se._multiDrawStarts,
          Se._multiDrawCounts,
          Se._multiDrawCount
        );
      else if (Se.isInstancedMesh) vt.renderInstances(sn, tn, Se.count);
      else if (we.isInstancedBufferGeometry) {
        const st =
            we._maxInstanceCount !== void 0 ? we._maxInstanceCount : 1 / 0,
          yr = Math.min(we.instanceCount, st);
        vt.renderInstances(sn, tn, yr);
      } else vt.render(sn, tn);
    };
    function it(J, pe, we) {
      J.transparent === !0 && J.side === mo && J.forceSinglePass === !1
        ? ((J.side = Vr),
          (J.needsUpdate = !0),
          jt(J, pe, we),
          (J.side = Ss),
          (J.needsUpdate = !0),
          jt(J, pe, we),
          (J.side = mo))
        : jt(J, pe, we);
    }
    (this.compile = function (J, pe, we = null) {
      we === null && (we = J),
        (x = Ne.get(we)),
        x.init(),
        y.push(x),
        we.traverseVisible(function (Se) {
          Se.isLight &&
            Se.layers.test(pe.layers) &&
            (x.pushLight(Se), Se.castShadow && x.pushShadow(Se));
        }),
        J !== we &&
          J.traverseVisible(function (Se) {
            Se.isLight &&
              Se.layers.test(pe.layers) &&
              (x.pushLight(Se), Se.castShadow && x.pushShadow(Se));
          }),
        x.setupLights(_._useLegacyLights);
      const Ce = new Set();
      return (
        J.traverse(function (Se) {
          const et = Se.material;
          if (et)
            if (Array.isArray(et))
              for (let dt = 0; dt < et.length; dt++) {
                const gt = et[dt];
                it(gt, we, Se), Ce.add(gt);
              }
            else it(et, we, Se), Ce.add(et);
        }),
        y.pop(),
        (x = null),
        Ce
      );
    }),
      (this.compileAsync = function (J, pe, we = null) {
        const Ce = this.compile(J, pe, we);
        return new Promise((Se) => {
          function et() {
            if (
              (Ce.forEach(function (dt) {
                ge.get(dt).currentProgram.isReady() && Ce.delete(dt);
              }),
              Ce.size === 0)
            ) {
              Se(J);
              return;
            }
            setTimeout(et, 10);
          }
          he.get("KHR_parallel_shader_compile") !== null
            ? et()
            : setTimeout(et, 10);
        });
      });
    let ot = null;
    function Tt(J) {
      ot && ot(J);
    }
    function St() {
      qt.stop();
    }
    function ht() {
      qt.start();
    }
    const qt = new DO();
    qt.setAnimationLoop(Tt),
      typeof self < "u" && qt.setContext(self),
      (this.setAnimationLoop = function (J) {
        (ot = J), De.setAnimationLoop(J), J === null ? qt.stop() : qt.start();
      }),
      De.addEventListener("sessionstart", St),
      De.addEventListener("sessionend", ht),
      (this.render = function (J, pe) {
        if (pe !== void 0 && pe.isCamera !== !0) {
          console.error(
            "THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera."
          );
          return;
        }
        if (b === !0) return;
        J.matrixWorldAutoUpdate === !0 && J.updateMatrixWorld(),
          pe.parent === null &&
            pe.matrixWorldAutoUpdate === !0 &&
            pe.updateMatrixWorld(),
          De.enabled === !0 &&
            De.isPresenting === !0 &&
            (De.cameraAutoUpdate === !0 && De.updateCamera(pe),
            (pe = De.getCamera())),
          J.isScene === !0 && J.onBeforeRender(_, J, pe, C),
          (x = Ne.get(J, y.length)),
          x.init(),
          y.push(x),
          oe.multiplyMatrices(pe.projectionMatrix, pe.matrixWorldInverse),
          Q.setFromProjectionMatrix(oe),
          (re = this.localClippingEnabled),
          (te = ze.init(this.clippingPlanes, re)),
          (S = Be.get(J, g.length)),
          S.init(),
          g.push(S),
          Jt(J, pe, 0, _.sortObjects),
          S.finish(),
          _.sortObjects === !0 && S.sort(N, V),
          this.info.render.frame++,
          te === !0 && ze.beginShadows();
        const we = x.state.shadowsArray;
        if (
          (Ee.render(we, J, pe),
          te === !0 && ze.endShadows(),
          this.info.autoReset === !0 && this.info.reset(),
          Je.render(S, J),
          x.setupLights(_._useLegacyLights),
          pe.isArrayCamera)
        ) {
          const Ce = pe.cameras;
          for (let Se = 0, et = Ce.length; Se < et; Se++) {
            const dt = Ce[Se];
            kt(S, J, dt, dt.viewport);
          }
        } else kt(S, J, pe);
        C !== null &&
          (H.updateMultisampleRenderTarget(C), H.updateRenderTargetMipmap(C)),
          J.isScene === !0 && J.onAfterRender(_, J, pe),
          ne.resetDefaultState(),
          (L = -1),
          (A = null),
          y.pop(),
          y.length > 0 ? (x = y[y.length - 1]) : (x = null),
          g.pop(),
          g.length > 0 ? (S = g[g.length - 1]) : (S = null);
      });
    function Jt(J, pe, we, Ce) {
      if (J.visible === !1) return;
      if (J.layers.test(pe.layers)) {
        if (J.isGroup) we = J.renderOrder;
        else if (J.isLOD) J.autoUpdate === !0 && J.update(pe);
        else if (J.isLight) x.pushLight(J), J.castShadow && x.pushShadow(J);
        else if (J.isSprite) {
          if (!J.frustumCulled || Q.intersectsSprite(J)) {
            Ce && Ae.setFromMatrixPosition(J.matrixWorld).applyMatrix4(oe);
            const dt = de.update(J),
              gt = J.material;
            gt.visible && S.push(J, dt, gt, we, Ae.z, null);
          }
        } else if (
          (J.isMesh || J.isLine || J.isPoints) &&
          (!J.frustumCulled || Q.intersectsObject(J))
        ) {
          const dt = de.update(J),
            gt = J.material;
          if (
            (Ce &&
              (J.boundingSphere !== void 0
                ? (J.boundingSphere === null && J.computeBoundingSphere(),
                  Ae.copy(J.boundingSphere.center))
                : (dt.boundingSphere === null && dt.computeBoundingSphere(),
                  Ae.copy(dt.boundingSphere.center)),
              Ae.applyMatrix4(J.matrixWorld).applyMatrix4(oe)),
            Array.isArray(gt))
          ) {
            const He = dt.groups;
            for (let wt = 0, Et = He.length; wt < Et; wt++) {
              const xt = He[wt],
                sn = gt[xt.materialIndex];
              sn && sn.visible && S.push(J, dt, sn, we, Ae.z, xt);
            }
          } else gt.visible && S.push(J, dt, gt, we, Ae.z, null);
        }
      }
      const et = J.children;
      for (let dt = 0, gt = et.length; dt < gt; dt++) Jt(et[dt], pe, we, Ce);
    }
    function kt(J, pe, we, Ce) {
      const Se = J.opaque,
        et = J.transmissive,
        dt = J.transparent;
      x.setupLightsView(we),
        te === !0 && ze.setGlobalState(_.clippingPlanes, we),
        et.length > 0 && gn(Se, et, pe, we),
        Ce && fe.viewport(P.copy(Ce)),
        Se.length > 0 && zn(Se, pe, we),
        et.length > 0 && zn(et, pe, we),
        dt.length > 0 && zn(dt, pe, we),
        fe.buffers.depth.setTest(!0),
        fe.buffers.depth.setMask(!0),
        fe.buffers.color.setMask(!0),
        fe.setPolygonOffset(!1);
    }
    function gn(J, pe, we, Ce) {
      if ((we.isScene === !0 ? we.overrideMaterial : null) !== null) return;
      const et = me.isWebGL2;
      le === null &&
        (le = new Yo(1, 1, {
          generateMipmaps: !0,
          type: he.has("EXT_color_buffer_half_float") ? Mf : xs,
          minFilter: ol,
          samples: et ? 4 : 0,
        })),
        _.getDrawingBufferSize(ve),
        et ? le.setSize(ve.x, ve.y) : le.setSize(p0(ve.x), p0(ve.y));
      const dt = _.getRenderTarget();
      _.setRenderTarget(le),
        _.getClearColor($),
        (D = _.getClearAlpha()),
        D < 1 && _.setClearColor(16777215, 0.5),
        _.clear();
      const gt = _.toneMapping;
      (_.toneMapping = ys),
        zn(J, we, Ce),
        H.updateMultisampleRenderTarget(le),
        H.updateRenderTargetMipmap(le);
      let He = !1;
      for (let wt = 0, Et = pe.length; wt < Et; wt++) {
        const xt = pe[wt],
          sn = xt.object,
          Yn = xt.geometry,
          tn = xt.material,
          wn = xt.group;
        if (tn.side === mo && sn.layers.test(Ce.layers)) {
          const vt = tn.side;
          (tn.side = Vr),
            (tn.needsUpdate = !0),
            cn(sn, we, Ce, Yn, tn, wn),
            (tn.side = vt),
            (tn.needsUpdate = !0),
            (He = !0);
        }
      }
      He === !0 &&
        (H.updateMultisampleRenderTarget(le), H.updateRenderTargetMipmap(le)),
        _.setRenderTarget(dt),
        _.setClearColor($, D),
        (_.toneMapping = gt);
    }
    function zn(J, pe, we) {
      const Ce = pe.isScene === !0 ? pe.overrideMaterial : null;
      for (let Se = 0, et = J.length; Se < et; Se++) {
        const dt = J[Se],
          gt = dt.object,
          He = dt.geometry,
          wt = Ce === null ? dt.material : Ce,
          Et = dt.group;
        gt.layers.test(we.layers) && cn(gt, pe, we, He, wt, Et);
      }
    }
    function cn(J, pe, we, Ce, Se, et) {
      J.onBeforeRender(_, pe, we, Ce, Se, et),
        J.modelViewMatrix.multiplyMatrices(
          we.matrixWorldInverse,
          J.matrixWorld
        ),
        J.normalMatrix.getNormalMatrix(J.modelViewMatrix),
        Se.onBeforeRender(_, pe, we, Ce, J, et),
        Se.transparent === !0 && Se.side === mo && Se.forceSinglePass === !1
          ? ((Se.side = Vr),
            (Se.needsUpdate = !0),
            _.renderBufferDirect(we, pe, Ce, Se, J, et),
            (Se.side = Ss),
            (Se.needsUpdate = !0),
            _.renderBufferDirect(we, pe, Ce, Se, J, et),
            (Se.side = mo))
          : _.renderBufferDirect(we, pe, Ce, Se, J, et),
        J.onAfterRender(_, pe, we, Ce, Se, et);
    }
    function jt(J, pe, we) {
      pe.isScene !== !0 && (pe = Re);
      const Ce = ge.get(J),
        Se = x.state.lights,
        et = x.state.shadowsArray,
        dt = Se.state.version,
        gt = Pe.getParameters(J, Se.state, et, pe, we),
        He = Pe.getProgramCacheKey(gt);
      let wt = Ce.programs;
      (Ce.environment = J.isMeshStandardMaterial ? pe.environment : null),
        (Ce.fog = pe.fog),
        (Ce.envMap = (J.isMeshStandardMaterial ? K : F).get(
          J.envMap || Ce.environment
        )),
        wt === void 0 &&
          (J.addEventListener("dispose", Ke),
          (wt = new Map()),
          (Ce.programs = wt));
      let Et = wt.get(He);
      if (Et !== void 0) {
        if (Ce.currentProgram === Et && Ce.lightsStateVersion === dt)
          return Ei(J, gt), Et;
      } else
        (gt.uniforms = Pe.getUniforms(J)),
          J.onBuild(we, gt, _),
          J.onBeforeCompile(gt, _),
          (Et = Pe.acquireProgram(gt, He)),
          wt.set(He, Et),
          (Ce.uniforms = gt.uniforms);
      const xt = Ce.uniforms;
      return (
        ((!J.isShaderMaterial && !J.isRawShaderMaterial) ||
          J.clipping === !0) &&
          (xt.clippingPlanes = ze.uniform),
        Ei(J, gt),
        (Ce.needsLights = $f(J)),
        (Ce.lightsStateVersion = dt),
        Ce.needsLights &&
          ((xt.ambientLightColor.value = Se.state.ambient),
          (xt.lightProbe.value = Se.state.probe),
          (xt.directionalLights.value = Se.state.directional),
          (xt.directionalLightShadows.value = Se.state.directionalShadow),
          (xt.spotLights.value = Se.state.spot),
          (xt.spotLightShadows.value = Se.state.spotShadow),
          (xt.rectAreaLights.value = Se.state.rectArea),
          (xt.ltc_1.value = Se.state.rectAreaLTC1),
          (xt.ltc_2.value = Se.state.rectAreaLTC2),
          (xt.pointLights.value = Se.state.point),
          (xt.pointLightShadows.value = Se.state.pointShadow),
          (xt.hemisphereLights.value = Se.state.hemi),
          (xt.directionalShadowMap.value = Se.state.directionalShadowMap),
          (xt.directionalShadowMatrix.value = Se.state.directionalShadowMatrix),
          (xt.spotShadowMap.value = Se.state.spotShadowMap),
          (xt.spotLightMatrix.value = Se.state.spotLightMatrix),
          (xt.spotLightMap.value = Se.state.spotLightMap),
          (xt.pointShadowMap.value = Se.state.pointShadowMap),
          (xt.pointShadowMatrix.value = Se.state.pointShadowMatrix)),
        (Ce.currentProgram = Et),
        (Ce.uniformsList = null),
        Et
      );
    }
    function qn(J) {
      if (J.uniformsList === null) {
        const pe = J.currentProgram.getUniforms();
        J.uniformsList = Av.seqWithValue(pe.seq, J.uniforms);
      }
      return J.uniformsList;
    }
    function Ei(J, pe) {
      const we = ge.get(J);
      (we.outputColorSpace = pe.outputColorSpace),
        (we.batching = pe.batching),
        (we.instancing = pe.instancing),
        (we.instancingColor = pe.instancingColor),
        (we.skinning = pe.skinning),
        (we.morphTargets = pe.morphTargets),
        (we.morphNormals = pe.morphNormals),
        (we.morphColors = pe.morphColors),
        (we.morphTargetsCount = pe.morphTargetsCount),
        (we.numClippingPlanes = pe.numClippingPlanes),
        (we.numIntersection = pe.numClipIntersection),
        (we.vertexAlphas = pe.vertexAlphas),
        (we.vertexTangents = pe.vertexTangents),
        (we.toneMapping = pe.toneMapping);
    }
    function $r(J, pe, we, Ce, Se) {
      pe.isScene !== !0 && (pe = Re), H.resetTextureUnits();
      const et = pe.fog,
        dt = Ce.isMeshStandardMaterial ? pe.environment : null,
        gt =
          C === null
            ? _.outputColorSpace
            : C.isXRRenderTarget === !0
            ? C.texture.colorSpace
            : ws,
        He = (Ce.isMeshStandardMaterial ? K : F).get(Ce.envMap || dt),
        wt =
          Ce.vertexColors === !0 &&
          !!we.attributes.color &&
          we.attributes.color.itemSize === 4,
        Et = !!we.attributes.tangent && (!!Ce.normalMap || Ce.anisotropy > 0),
        xt = !!we.morphAttributes.position,
        sn = !!we.morphAttributes.normal,
        Yn = !!we.morphAttributes.color;
      let tn = ys;
      Ce.toneMapped &&
        (C === null || C.isXRRenderTarget === !0) &&
        (tn = _.toneMapping);
      const wn =
          we.morphAttributes.position ||
          we.morphAttributes.normal ||
          we.morphAttributes.color,
        vt = wn !== void 0 ? wn.length : 0,
        st = ge.get(Ce),
        yr = x.state.lights;
      if (te === !0 && (re === !0 || J !== A)) {
        const kn = J === A && Ce.id === L;
        ze.setState(Ce, J, kn);
      }
      let Pt = !1;
      Ce.version === st.__version
        ? ((st.needsLights && st.lightsStateVersion !== yr.state.version) ||
            st.outputColorSpace !== gt ||
            (Se.isBatchedMesh && st.batching === !1) ||
            (!Se.isBatchedMesh && st.batching === !0) ||
            (Se.isInstancedMesh && st.instancing === !1) ||
            (!Se.isInstancedMesh && st.instancing === !0) ||
            (Se.isSkinnedMesh && st.skinning === !1) ||
            (!Se.isSkinnedMesh && st.skinning === !0) ||
            (Se.isInstancedMesh &&
              st.instancingColor === !0 &&
              Se.instanceColor === null) ||
            (Se.isInstancedMesh &&
              st.instancingColor === !1 &&
              Se.instanceColor !== null) ||
            st.envMap !== He ||
            (Ce.fog === !0 && st.fog !== et) ||
            (st.numClippingPlanes !== void 0 &&
              (st.numClippingPlanes !== ze.numPlanes ||
                st.numIntersection !== ze.numIntersection)) ||
            st.vertexAlphas !== wt ||
            st.vertexTangents !== Et ||
            st.morphTargets !== xt ||
            st.morphNormals !== sn ||
            st.morphColors !== Yn ||
            st.toneMapping !== tn ||
            (me.isWebGL2 === !0 && st.morphTargetsCount !== vt)) &&
          (Pt = !0)
        : ((Pt = !0), (st.__version = Ce.version));
      let fn = st.currentProgram;
      Pt === !0 && (fn = jt(Ce, pe, Se));
      let Mi = !1,
        ur = !1,
        In = !1;
      const an = fn.getUniforms(),
        ci = st.uniforms;
      if (
        (fe.useProgram(fn.program) && ((Mi = !0), (ur = !0), (In = !0)),
        Ce.id !== L && ((L = Ce.id), (ur = !0)),
        Mi || A !== J)
      ) {
        an.setValue(q, "projectionMatrix", J.projectionMatrix),
          an.setValue(q, "viewMatrix", J.matrixWorldInverse);
        const kn = an.map.cameraPosition;
        kn !== void 0 &&
          kn.setValue(q, Ae.setFromMatrixPosition(J.matrixWorld)),
          me.logarithmicDepthBuffer &&
            an.setValue(
              q,
              "logDepthBufFC",
              2 / (Math.log(J.far + 1) / Math.LN2)
            ),
          (Ce.isMeshPhongMaterial ||
            Ce.isMeshToonMaterial ||
            Ce.isMeshLambertMaterial ||
            Ce.isMeshBasicMaterial ||
            Ce.isMeshStandardMaterial ||
            Ce.isShaderMaterial) &&
            an.setValue(q, "isOrthographic", J.isOrthographicCamera === !0),
          A !== J && ((A = J), (ur = !0), (In = !0));
      }
      if (Se.isSkinnedMesh) {
        an.setOptional(q, Se, "bindMatrix"),
          an.setOptional(q, Se, "bindMatrixInverse");
        const kn = Se.skeleton;
        kn &&
          (me.floatVertexTextures
            ? (kn.boneTexture === null && kn.computeBoneTexture(),
              an.setValue(q, "boneTexture", kn.boneTexture, H))
            : console.warn(
                "THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."
              ));
      }
      Se.isBatchedMesh &&
        (an.setOptional(q, Se, "batchingTexture"),
        an.setValue(q, "batchingTexture", Se._matricesTexture, H));
      const es = we.morphAttributes;
      if (
        ((es.position !== void 0 ||
          es.normal !== void 0 ||
          (es.color !== void 0 && me.isWebGL2 === !0)) &&
          qe.update(Se, we, fn),
        (ur || st.receiveShadow !== Se.receiveShadow) &&
          ((st.receiveShadow = Se.receiveShadow),
          an.setValue(q, "receiveShadow", Se.receiveShadow)),
        Ce.isMeshGouraudMaterial &&
          Ce.envMap !== null &&
          ((ci.envMap.value = He),
          (ci.flipEnvMap.value =
            He.isCubeTexture && He.isRenderTargetTexture === !1 ? -1 : 1)),
        ur &&
          (an.setValue(q, "toneMappingExposure", _.toneMappingExposure),
          st.needsLights && Mo(ci, In),
          et && Ce.fog === !0 && ke.refreshFogUniforms(ci, et),
          ke.refreshMaterialUniforms(ci, Ce, Y, j, le),
          Av.upload(q, qn(st), ci, H)),
        Ce.isShaderMaterial &&
          Ce.uniformsNeedUpdate === !0 &&
          (Av.upload(q, qn(st), ci, H), (Ce.uniformsNeedUpdate = !1)),
        Ce.isSpriteMaterial && an.setValue(q, "center", Se.center),
        an.setValue(q, "modelViewMatrix", Se.modelViewMatrix),
        an.setValue(q, "normalMatrix", Se.normalMatrix),
        an.setValue(q, "modelMatrix", Se.matrixWorld),
        Ce.isShaderMaterial || Ce.isRawShaderMaterial)
      ) {
        const kn = Ce.uniformsGroups;
        for (let xr = 0, Xr = kn.length; xr < Xr; xr++)
          if (me.isWebGL2) {
            const Ts = kn[xr];
            be.update(Ts, fn), be.bind(Ts, fn);
          } else
            console.warn(
              "THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2."
            );
      }
      return fn;
    }
    function Mo(J, pe) {
      (J.ambientLightColor.needsUpdate = pe),
        (J.lightProbe.needsUpdate = pe),
        (J.directionalLights.needsUpdate = pe),
        (J.directionalLightShadows.needsUpdate = pe),
        (J.pointLights.needsUpdate = pe),
        (J.pointLightShadows.needsUpdate = pe),
        (J.spotLights.needsUpdate = pe),
        (J.spotLightShadows.needsUpdate = pe),
        (J.rectAreaLights.needsUpdate = pe),
        (J.hemisphereLights.needsUpdate = pe);
    }
    function $f(J) {
      return (
        J.isMeshLambertMaterial ||
        J.isMeshToonMaterial ||
        J.isMeshPhongMaterial ||
        J.isMeshStandardMaterial ||
        J.isShadowMaterial ||
        (J.isShaderMaterial && J.lights === !0)
      );
    }
    (this.getActiveCubeFace = function () {
      return T;
    }),
      (this.getActiveMipmapLevel = function () {
        return M;
      }),
      (this.getRenderTarget = function () {
        return C;
      }),
      (this.setRenderTargetTextures = function (J, pe, we) {
        (ge.get(J.texture).__webglTexture = pe),
          (ge.get(J.depthTexture).__webglTexture = we);
        const Ce = ge.get(J);
        (Ce.__hasExternalTextures = !0),
          Ce.__hasExternalTextures &&
            ((Ce.__autoAllocateDepthBuffer = we === void 0),
            Ce.__autoAllocateDepthBuffer ||
              (he.has("WEBGL_multisampled_render_to_texture") === !0 &&
                (console.warn(
                  "THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"
                ),
                (Ce.__useRenderToTexture = !1))));
      }),
      (this.setRenderTargetFramebuffer = function (J, pe) {
        const we = ge.get(J);
        (we.__webglFramebuffer = pe),
          (we.__useDefaultFramebuffer = pe === void 0);
      }),
      (this.setRenderTarget = function (J, pe = 0, we = 0) {
        (C = J), (T = pe), (M = we);
        let Ce = !0,
          Se = null,
          et = !1,
          dt = !1;
        if (J) {
          const He = ge.get(J);
          He.__useDefaultFramebuffer !== void 0
            ? (fe.bindFramebuffer(q.FRAMEBUFFER, null), (Ce = !1))
            : He.__webglFramebuffer === void 0
            ? H.setupRenderTarget(J)
            : He.__hasExternalTextures &&
              H.rebindTextures(
                J,
                ge.get(J.texture).__webglTexture,
                ge.get(J.depthTexture).__webglTexture
              );
          const wt = J.texture;
          (wt.isData3DTexture ||
            wt.isDataArrayTexture ||
            wt.isCompressedArrayTexture) &&
            (dt = !0);
          const Et = ge.get(J).__webglFramebuffer;
          J.isWebGLCubeRenderTarget
            ? (Array.isArray(Et[pe]) ? (Se = Et[pe][we]) : (Se = Et[pe]),
              (et = !0))
            : me.isWebGL2 && J.samples > 0 && H.useMultisampledRTT(J) === !1
            ? (Se = ge.get(J).__webglMultisampledFramebuffer)
            : Array.isArray(Et)
            ? (Se = Et[we])
            : (Se = Et),
            P.copy(J.viewport),
            k.copy(J.scissor),
            (B = J.scissorTest);
        } else
          P.copy(G).multiplyScalar(Y).floor(),
            k.copy(U).multiplyScalar(Y).floor(),
            (B = Z);
        if (
          (fe.bindFramebuffer(q.FRAMEBUFFER, Se) &&
            me.drawBuffers &&
            Ce &&
            fe.drawBuffers(J, Se),
          fe.viewport(P),
          fe.scissor(k),
          fe.setScissorTest(B),
          et)
        ) {
          const He = ge.get(J.texture);
          q.framebufferTexture2D(
            q.FRAMEBUFFER,
            q.COLOR_ATTACHMENT0,
            q.TEXTURE_CUBE_MAP_POSITIVE_X + pe,
            He.__webglTexture,
            we
          );
        } else if (dt) {
          const He = ge.get(J.texture),
            wt = pe || 0;
          q.framebufferTextureLayer(
            q.FRAMEBUFFER,
            q.COLOR_ATTACHMENT0,
            He.__webglTexture,
            we || 0,
            wt
          );
        }
        L = -1;
      }),
      (this.readRenderTargetPixels = function (J, pe, we, Ce, Se, et, dt) {
        if (!(J && J.isWebGLRenderTarget)) {
          console.error(
            "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget."
          );
          return;
        }
        let gt = ge.get(J).__webglFramebuffer;
        if ((J.isWebGLCubeRenderTarget && dt !== void 0 && (gt = gt[dt]), gt)) {
          fe.bindFramebuffer(q.FRAMEBUFFER, gt);
          try {
            const He = J.texture,
              wt = He.format,
              Et = He.type;
            if (
              wt !== ri &&
              Oe.convert(wt) !==
                q.getParameter(q.IMPLEMENTATION_COLOR_READ_FORMAT)
            ) {
              console.error(
                "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format."
              );
              return;
            }
            const xt =
              Et === Mf &&
              (he.has("EXT_color_buffer_half_float") ||
                (me.isWebGL2 && he.has("EXT_color_buffer_float")));
            if (
              Et !== xs &&
              Oe.convert(Et) !==
                q.getParameter(q.IMPLEMENTATION_COLOR_READ_TYPE) &&
              !(
                Et === Vo &&
                (me.isWebGL2 ||
                  he.has("OES_texture_float") ||
                  he.has("WEBGL_color_buffer_float"))
              ) &&
              !xt
            ) {
              console.error(
                "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type."
              );
              return;
            }
            pe >= 0 &&
              pe <= J.width - Ce &&
              we >= 0 &&
              we <= J.height - Se &&
              q.readPixels(pe, we, Ce, Se, Oe.convert(wt), Oe.convert(Et), et);
          } finally {
            const He = C !== null ? ge.get(C).__webglFramebuffer : null;
            fe.bindFramebuffer(q.FRAMEBUFFER, He);
          }
        }
      }),
      (this.copyFramebufferToTexture = function (J, pe, we = 0) {
        const Ce = Math.pow(2, -we),
          Se = Math.floor(pe.image.width * Ce),
          et = Math.floor(pe.image.height * Ce);
        H.setTexture2D(pe, 0),
          q.copyTexSubImage2D(q.TEXTURE_2D, we, 0, 0, J.x, J.y, Se, et),
          fe.unbindTexture();
      }),
      (this.copyTextureToTexture = function (J, pe, we, Ce = 0) {
        const Se = pe.image.width,
          et = pe.image.height,
          dt = Oe.convert(we.format),
          gt = Oe.convert(we.type);
        H.setTexture2D(we, 0),
          q.pixelStorei(q.UNPACK_FLIP_Y_WEBGL, we.flipY),
          q.pixelStorei(q.UNPACK_PREMULTIPLY_ALPHA_WEBGL, we.premultiplyAlpha),
          q.pixelStorei(q.UNPACK_ALIGNMENT, we.unpackAlignment),
          pe.isDataTexture
            ? q.texSubImage2D(
                q.TEXTURE_2D,
                Ce,
                J.x,
                J.y,
                Se,
                et,
                dt,
                gt,
                pe.image.data
              )
            : pe.isCompressedTexture
            ? q.compressedTexSubImage2D(
                q.TEXTURE_2D,
                Ce,
                J.x,
                J.y,
                pe.mipmaps[0].width,
                pe.mipmaps[0].height,
                dt,
                pe.mipmaps[0].data
              )
            : q.texSubImage2D(q.TEXTURE_2D, Ce, J.x, J.y, dt, gt, pe.image),
          Ce === 0 && we.generateMipmaps && q.generateMipmap(q.TEXTURE_2D),
          fe.unbindTexture();
      }),
      (this.copyTextureToTexture3D = function (J, pe, we, Ce, Se = 0) {
        if (_.isWebGL1Renderer) {
          console.warn(
            "THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2."
          );
          return;
        }
        const et = J.max.x - J.min.x + 1,
          dt = J.max.y - J.min.y + 1,
          gt = J.max.z - J.min.z + 1,
          He = Oe.convert(Ce.format),
          wt = Oe.convert(Ce.type);
        let Et;
        if (Ce.isData3DTexture) H.setTexture3D(Ce, 0), (Et = q.TEXTURE_3D);
        else if (Ce.isDataArrayTexture || Ce.isCompressedArrayTexture)
          H.setTexture2DArray(Ce, 0), (Et = q.TEXTURE_2D_ARRAY);
        else {
          console.warn(
            "THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray."
          );
          return;
        }
        q.pixelStorei(q.UNPACK_FLIP_Y_WEBGL, Ce.flipY),
          q.pixelStorei(q.UNPACK_PREMULTIPLY_ALPHA_WEBGL, Ce.premultiplyAlpha),
          q.pixelStorei(q.UNPACK_ALIGNMENT, Ce.unpackAlignment);
        const xt = q.getParameter(q.UNPACK_ROW_LENGTH),
          sn = q.getParameter(q.UNPACK_IMAGE_HEIGHT),
          Yn = q.getParameter(q.UNPACK_SKIP_PIXELS),
          tn = q.getParameter(q.UNPACK_SKIP_ROWS),
          wn = q.getParameter(q.UNPACK_SKIP_IMAGES),
          vt = we.isCompressedTexture ? we.mipmaps[Se] : we.image;
        q.pixelStorei(q.UNPACK_ROW_LENGTH, vt.width),
          q.pixelStorei(q.UNPACK_IMAGE_HEIGHT, vt.height),
          q.pixelStorei(q.UNPACK_SKIP_PIXELS, J.min.x),
          q.pixelStorei(q.UNPACK_SKIP_ROWS, J.min.y),
          q.pixelStorei(q.UNPACK_SKIP_IMAGES, J.min.z),
          we.isDataTexture || we.isData3DTexture
            ? q.texSubImage3D(
                Et,
                Se,
                pe.x,
                pe.y,
                pe.z,
                et,
                dt,
                gt,
                He,
                wt,
                vt.data
              )
            : we.isCompressedArrayTexture
            ? (console.warn(
                "THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."
              ),
              q.compressedTexSubImage3D(
                Et,
                Se,
                pe.x,
                pe.y,
                pe.z,
                et,
                dt,
                gt,
                He,
                vt.data
              ))
            : q.texSubImage3D(Et, Se, pe.x, pe.y, pe.z, et, dt, gt, He, wt, vt),
          q.pixelStorei(q.UNPACK_ROW_LENGTH, xt),
          q.pixelStorei(q.UNPACK_IMAGE_HEIGHT, sn),
          q.pixelStorei(q.UNPACK_SKIP_PIXELS, Yn),
          q.pixelStorei(q.UNPACK_SKIP_ROWS, tn),
          q.pixelStorei(q.UNPACK_SKIP_IMAGES, wn),
          Se === 0 && Ce.generateMipmaps && q.generateMipmap(Et),
          fe.unbindTexture();
      }),
      (this.initTexture = function (J) {
        J.isCubeTexture
          ? H.setTextureCube(J, 0)
          : J.isData3DTexture
          ? H.setTexture3D(J, 0)
          : J.isDataArrayTexture || J.isCompressedArrayTexture
          ? H.setTexture2DArray(J, 0)
          : H.setTexture2D(J, 0),
          fe.unbindTexture();
      }),
      (this.resetState = function () {
        (T = 0), (M = 0), (C = null), fe.reset(), ne.reset();
      }),
      typeof __THREE_DEVTOOLS__ < "u" &&
        __THREE_DEVTOOLS__.dispatchEvent(
          new CustomEvent("observe", { detail: this })
        );
  }
  get coordinateSystem() {
    return Go;
  }
  get outputColorSpace() {
    return this._outputColorSpace;
  }
  set outputColorSpace(e) {
    this._outputColorSpace = e;
    const n = this.getContext();
    (n.drawingBufferColorSpace = e === ty ? "display-p3" : "srgb"),
      (n.unpackColorSpace =
        nn.workingColorSpace === vp ? "display-p3" : "srgb");
  }
  get outputEncoding() {
    return (
      console.warn(
        "THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."
      ),
      this.outputColorSpace === rr ? el : DE
    );
  }
  set outputEncoding(e) {
    console.warn(
      "THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."
    ),
      (this.outputColorSpace = e === el ? rr : ws);
  }
  get useLegacyLights() {
    return (
      console.warn(
        "THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."
      ),
      this._useLegacyLights
    );
  }
  set useLegacyLights(e) {
    console.warn(
      "THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."
    ),
      (this._useLegacyLights = e);
  }
}
class jO extends $E {}
jO.prototype.isWebGL1Renderer = !0;
class sy {
  constructor(e, n = 25e-5) {
    (this.isFogExp2 = !0),
      (this.name = ""),
      (this.color = new nt(e)),
      (this.density = n);
  }
  clone() {
    return new sy(this.color, this.density);
  }
  toJSON() {
    return {
      type: "FogExp2",
      name: this.name,
      color: this.color.getHex(),
      density: this.density,
    };
  }
}
class ay {
  constructor(e, n = 1, r = 1e3) {
    (this.isFog = !0),
      (this.name = ""),
      (this.color = new nt(e)),
      (this.near = n),
      (this.far = r);
  }
  clone() {
    return new ay(this.color, this.near, this.far);
  }
  toJSON() {
    return {
      type: "Fog",
      name: this.name,
      color: this.color.getHex(),
      near: this.near,
      far: this.far,
    };
  }
}
class m0 extends Zt {
  constructor() {
    super(),
      (this.isScene = !0),
      (this.type = "Scene"),
      (this.background = null),
      (this.environment = null),
      (this.fog = null),
      (this.backgroundBlurriness = 0),
      (this.backgroundIntensity = 1),
      (this.overrideMaterial = null),
      typeof __THREE_DEVTOOLS__ < "u" &&
        __THREE_DEVTOOLS__.dispatchEvent(
          new CustomEvent("observe", { detail: this })
        );
  }
  copy(e, n) {
    return (
      super.copy(e, n),
      e.background !== null && (this.background = e.background.clone()),
      e.environment !== null && (this.environment = e.environment.clone()),
      e.fog !== null && (this.fog = e.fog.clone()),
      (this.backgroundBlurriness = e.backgroundBlurriness),
      (this.backgroundIntensity = e.backgroundIntensity),
      e.overrideMaterial !== null &&
        (this.overrideMaterial = e.overrideMaterial.clone()),
      (this.matrixAutoUpdate = e.matrixAutoUpdate),
      this
    );
  }
  toJSON(e) {
    const n = super.toJSON(e);
    return (
      this.fog !== null && (n.object.fog = this.fog.toJSON()),
      this.backgroundBlurriness > 0 &&
        (n.object.backgroundBlurriness = this.backgroundBlurriness),
      this.backgroundIntensity !== 1 &&
        (n.object.backgroundIntensity = this.backgroundIntensity),
      n
    );
  }
}
class ly {
  constructor(e, n) {
    (this.isInterleavedBuffer = !0),
      (this.array = e),
      (this.stride = n),
      (this.count = e !== void 0 ? e.length / n : 0),
      (this.usage = Gh),
      (this._updateRange = { offset: 0, count: -1 }),
      (this.updateRanges = []),
      (this.version = 0),
      (this.uuid = Xi());
  }
  onUploadCallback() {}
  set needsUpdate(e) {
    e === !0 && this.version++;
  }
  get updateRange() {
    return (
      console.warn(
        "THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."
      ),
      this._updateRange
    );
  }
  setUsage(e) {
    return (this.usage = e), this;
  }
  addUpdateRange(e, n) {
    this.updateRanges.push({ start: e, count: n });
  }
  clearUpdateRanges() {
    this.updateRanges.length = 0;
  }
  copy(e) {
    return (
      (this.array = new e.array.constructor(e.array)),
      (this.count = e.count),
      (this.stride = e.stride),
      (this.usage = e.usage),
      this
    );
  }
  copyAt(e, n, r) {
    (e *= this.stride), (r *= n.stride);
    for (let i = 0, o = this.stride; i < o; i++)
      this.array[e + i] = n.array[r + i];
    return this;
  }
  set(e, n = 0) {
    return this.array.set(e, n), this;
  }
  clone(e) {
    e.arrayBuffers === void 0 && (e.arrayBuffers = {}),
      this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = Xi()),
      e.arrayBuffers[this.array.buffer._uuid] === void 0 &&
        (e.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer);
    const n = new this.array.constructor(
        e.arrayBuffers[this.array.buffer._uuid]
      ),
      r = new this.constructor(n, this.stride);
    return r.setUsage(this.usage), r;
  }
  onUpload(e) {
    return (this.onUploadCallback = e), this;
  }
  toJSON(e) {
    return (
      e.arrayBuffers === void 0 && (e.arrayBuffers = {}),
      this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = Xi()),
      e.arrayBuffers[this.array.buffer._uuid] === void 0 &&
        (e.arrayBuffers[this.array.buffer._uuid] = Array.from(
          new Uint32Array(this.array.buffer)
        )),
      {
        uuid: this.uuid,
        buffer: this.array.buffer._uuid,
        type: this.array.constructor.name,
        stride: this.stride,
      }
    );
  }
}
const ei = new W();
class Vi {
  constructor(e, n, r, i = !1) {
    (this.isInterleavedBufferAttribute = !0),
      (this.name = ""),
      (this.data = e),
      (this.itemSize = n),
      (this.offset = r),
      (this.normalized = i);
  }
  get count() {
    return this.data.count;
  }
  get array() {
    return this.data.array;
  }
  set needsUpdate(e) {
    this.data.needsUpdate = e;
  }
  applyMatrix4(e) {
    for (let n = 0, r = this.data.count; n < r; n++)
      ei.fromBufferAttribute(this, n),
        ei.applyMatrix4(e),
        this.setXYZ(n, ei.x, ei.y, ei.z);
    return this;
  }
  applyNormalMatrix(e) {
    for (let n = 0, r = this.count; n < r; n++)
      ei.fromBufferAttribute(this, n),
        ei.applyNormalMatrix(e),
        this.setXYZ(n, ei.x, ei.y, ei.z);
    return this;
  }
  transformDirection(e) {
    for (let n = 0, r = this.count; n < r; n++)
      ei.fromBufferAttribute(this, n),
        ei.transformDirection(e),
        this.setXYZ(n, ei.x, ei.y, ei.z);
    return this;
  }
  setX(e, n) {
    return (
      this.normalized && (n = Ft(n, this.array)),
      (this.data.array[e * this.data.stride + this.offset] = n),
      this
    );
  }
  setY(e, n) {
    return (
      this.normalized && (n = Ft(n, this.array)),
      (this.data.array[e * this.data.stride + this.offset + 1] = n),
      this
    );
  }
  setZ(e, n) {
    return (
      this.normalized && (n = Ft(n, this.array)),
      (this.data.array[e * this.data.stride + this.offset + 2] = n),
      this
    );
  }
  setW(e, n) {
    return (
      this.normalized && (n = Ft(n, this.array)),
      (this.data.array[e * this.data.stride + this.offset + 3] = n),
      this
    );
  }
  getX(e) {
    let n = this.data.array[e * this.data.stride + this.offset];
    return this.normalized && (n = vi(n, this.array)), n;
  }
  getY(e) {
    let n = this.data.array[e * this.data.stride + this.offset + 1];
    return this.normalized && (n = vi(n, this.array)), n;
  }
  getZ(e) {
    let n = this.data.array[e * this.data.stride + this.offset + 2];
    return this.normalized && (n = vi(n, this.array)), n;
  }
  getW(e) {
    let n = this.data.array[e * this.data.stride + this.offset + 3];
    return this.normalized && (n = vi(n, this.array)), n;
  }
  setXY(e, n, r) {
    return (
      (e = e * this.data.stride + this.offset),
      this.normalized && ((n = Ft(n, this.array)), (r = Ft(r, this.array))),
      (this.data.array[e + 0] = n),
      (this.data.array[e + 1] = r),
      this
    );
  }
  setXYZ(e, n, r, i) {
    return (
      (e = e * this.data.stride + this.offset),
      this.normalized &&
        ((n = Ft(n, this.array)),
        (r = Ft(r, this.array)),
        (i = Ft(i, this.array))),
      (this.data.array[e + 0] = n),
      (this.data.array[e + 1] = r),
      (this.data.array[e + 2] = i),
      this
    );
  }
  setXYZW(e, n, r, i, o) {
    return (
      (e = e * this.data.stride + this.offset),
      this.normalized &&
        ((n = Ft(n, this.array)),
        (r = Ft(r, this.array)),
        (i = Ft(i, this.array)),
        (o = Ft(o, this.array))),
      (this.data.array[e + 0] = n),
      (this.data.array[e + 1] = r),
      (this.data.array[e + 2] = i),
      (this.data.array[e + 3] = o),
      this
    );
  }
  clone(e) {
    if (e === void 0) {
      console.log(
        "THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data."
      );
      const n = [];
      for (let r = 0; r < this.count; r++) {
        const i = r * this.data.stride + this.offset;
        for (let o = 0; o < this.itemSize; o++) n.push(this.data.array[i + o]);
      }
      return new en(
        new this.array.constructor(n),
        this.itemSize,
        this.normalized
      );
    } else
      return (
        e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}),
        e.interleavedBuffers[this.data.uuid] === void 0 &&
          (e.interleavedBuffers[this.data.uuid] = this.data.clone(e)),
        new Vi(
          e.interleavedBuffers[this.data.uuid],
          this.itemSize,
          this.offset,
          this.normalized
        )
      );
  }
  toJSON(e) {
    if (e === void 0) {
      console.log(
        "THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data."
      );
      const n = [];
      for (let r = 0; r < this.count; r++) {
        const i = r * this.data.stride + this.offset;
        for (let o = 0; o < this.itemSize; o++) n.push(this.data.array[i + o]);
      }
      return {
        itemSize: this.itemSize,
        type: this.array.constructor.name,
        array: n,
        normalized: this.normalized,
      };
    } else
      return (
        e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}),
        e.interleavedBuffers[this.data.uuid] === void 0 &&
          (e.interleavedBuffers[this.data.uuid] = this.data.toJSON(e)),
        {
          isInterleavedBufferAttribute: !0,
          itemSize: this.itemSize,
          data: this.data.uuid,
          offset: this.offset,
          normalized: this.normalized,
        }
      );
  }
}
class XE extends Rr {
  constructor(e) {
    super(),
      (this.isSpriteMaterial = !0),
      (this.type = "SpriteMaterial"),
      (this.color = new nt(16777215)),
      (this.map = null),
      (this.alphaMap = null),
      (this.rotation = 0),
      (this.sizeAttenuation = !0),
      (this.transparent = !0),
      (this.fog = !0),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      this.color.copy(e.color),
      (this.map = e.map),
      (this.alphaMap = e.alphaMap),
      (this.rotation = e.rotation),
      (this.sizeAttenuation = e.sizeAttenuation),
      (this.fog = e.fog),
      this
    );
  }
}
let wu;
const Rd = new W(),
  bu = new W(),
  Eu = new W(),
  Mu = new Fe(),
  Pd = new Fe(),
  WO = new bt(),
  hg = new W(),
  Ld = new W(),
  pg = new W(),
  wA = new Fe(),
  j1 = new Fe(),
  bA = new Fe();
class $O extends Zt {
  constructor(e = new XE()) {
    if (
      (super(), (this.isSprite = !0), (this.type = "Sprite"), wu === void 0)
    ) {
      wu = new It();
      const n = new Float32Array([
          -0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5,
          0, 0, 1,
        ]),
        r = new ly(n, 5);
      wu.setIndex([0, 1, 2, 0, 2, 3]),
        wu.setAttribute("position", new Vi(r, 3, 0, !1)),
        wu.setAttribute("uv", new Vi(r, 2, 3, !1));
    }
    (this.geometry = wu), (this.material = e), (this.center = new Fe(0.5, 0.5));
  }
  raycast(e, n) {
    e.camera === null &&
      console.error(
        'THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'
      ),
      bu.setFromMatrixScale(this.matrixWorld),
      WO.copy(e.camera.matrixWorld),
      this.modelViewMatrix.multiplyMatrices(
        e.camera.matrixWorldInverse,
        this.matrixWorld
      ),
      Eu.setFromMatrixPosition(this.modelViewMatrix),
      e.camera.isPerspectiveCamera &&
        this.material.sizeAttenuation === !1 &&
        bu.multiplyScalar(-Eu.z);
    const r = this.material.rotation;
    let i, o;
    r !== 0 && ((o = Math.cos(r)), (i = Math.sin(r)));
    const s = this.center;
    mg(hg.set(-0.5, -0.5, 0), Eu, s, bu, i, o),
      mg(Ld.set(0.5, -0.5, 0), Eu, s, bu, i, o),
      mg(pg.set(0.5, 0.5, 0), Eu, s, bu, i, o),
      wA.set(0, 0),
      j1.set(1, 0),
      bA.set(1, 1);
    let a = e.ray.intersectTriangle(hg, Ld, pg, !1, Rd);
    if (
      a === null &&
      (mg(Ld.set(-0.5, 0.5, 0), Eu, s, bu, i, o),
      j1.set(0, 1),
      (a = e.ray.intersectTriangle(hg, pg, Ld, !1, Rd)),
      a === null)
    )
      return;
    const l = e.ray.origin.distanceTo(Rd);
    l < e.near ||
      l > e.far ||
      n.push({
        distance: l,
        point: Rd.clone(),
        uv: gi.getInterpolation(Rd, hg, Ld, pg, wA, j1, bA, new Fe()),
        face: null,
        object: this,
      });
  }
  copy(e, n) {
    return (
      super.copy(e, n),
      e.center !== void 0 && this.center.copy(e.center),
      (this.material = e.material),
      this
    );
  }
}
function mg(t, e, n, r, i, o) {
  Mu.subVectors(t, n).addScalar(0.5).multiply(r),
    i !== void 0
      ? ((Pd.x = o * Mu.x - i * Mu.y), (Pd.y = i * Mu.x + o * Mu.y))
      : Pd.copy(Mu),
    t.copy(e),
    (t.x += Pd.x),
    (t.y += Pd.y),
    t.applyMatrix4(WO);
}
const gg = new W(),
  EA = new W();
class XO extends Zt {
  constructor() {
    super(),
      (this._currentLevel = 0),
      (this.type = "LOD"),
      Object.defineProperties(this, {
        levels: { enumerable: !0, value: [] },
        isLOD: { value: !0 },
      }),
      (this.autoUpdate = !0);
  }
  copy(e) {
    super.copy(e, !1);
    const n = e.levels;
    for (let r = 0, i = n.length; r < i; r++) {
      const o = n[r];
      this.addLevel(o.object.clone(), o.distance, o.hysteresis);
    }
    return (this.autoUpdate = e.autoUpdate), this;
  }
  addLevel(e, n = 0, r = 0) {
    n = Math.abs(n);
    const i = this.levels;
    let o;
    for (o = 0; o < i.length && !(n < i[o].distance); o++);
    return (
      i.splice(o, 0, { distance: n, hysteresis: r, object: e }),
      this.add(e),
      this
    );
  }
  getCurrentLevel() {
    return this._currentLevel;
  }
  getObjectForDistance(e) {
    const n = this.levels;
    if (n.length > 0) {
      let r, i;
      for (r = 1, i = n.length; r < i; r++) {
        let o = n[r].distance;
        if ((n[r].object.visible && (o -= o * n[r].hysteresis), e < o)) break;
      }
      return n[r - 1].object;
    }
    return null;
  }
  raycast(e, n) {
    if (this.levels.length > 0) {
      gg.setFromMatrixPosition(this.matrixWorld);
      const i = e.ray.origin.distanceTo(gg);
      this.getObjectForDistance(i).raycast(e, n);
    }
  }
  update(e) {
    const n = this.levels;
    if (n.length > 1) {
      gg.setFromMatrixPosition(e.matrixWorld),
        EA.setFromMatrixPosition(this.matrixWorld);
      const r = gg.distanceTo(EA) / e.zoom;
      n[0].object.visible = !0;
      let i, o;
      for (i = 1, o = n.length; i < o; i++) {
        let s = n[i].distance;
        if ((n[i].object.visible && (s -= s * n[i].hysteresis), r >= s))
          (n[i - 1].object.visible = !1), (n[i].object.visible = !0);
        else break;
      }
      for (this._currentLevel = i - 1; i < o; i++) n[i].object.visible = !1;
    }
  }
  toJSON(e) {
    const n = super.toJSON(e);
    this.autoUpdate === !1 && (n.object.autoUpdate = !1),
      (n.object.levels = []);
    const r = this.levels;
    for (let i = 0, o = r.length; i < o; i++) {
      const s = r[i];
      n.object.levels.push({
        object: s.object.uuid,
        distance: s.distance,
        hysteresis: s.hysteresis,
      });
    }
    return n;
  }
}
const MA = new W(),
  CA = new Ht(),
  TA = new Ht(),
  H8 = new W(),
  AA = new bt(),
  vg = new W(),
  W1 = new sr(),
  RA = new bt(),
  $1 = new Uc();
class qO extends An {
  constructor(e, n) {
    super(e, n),
      (this.isSkinnedMesh = !0),
      (this.type = "SkinnedMesh"),
      (this.bindMode = WS),
      (this.bindMatrix = new bt()),
      (this.bindMatrixInverse = new bt()),
      (this.boundingBox = null),
      (this.boundingSphere = null);
  }
  computeBoundingBox() {
    const e = this.geometry;
    this.boundingBox === null && (this.boundingBox = new or()),
      this.boundingBox.makeEmpty();
    const n = e.getAttribute("position");
    for (let r = 0; r < n.count; r++)
      this.getVertexPosition(r, vg), this.boundingBox.expandByPoint(vg);
  }
  computeBoundingSphere() {
    const e = this.geometry;
    this.boundingSphere === null && (this.boundingSphere = new sr()),
      this.boundingSphere.makeEmpty();
    const n = e.getAttribute("position");
    for (let r = 0; r < n.count; r++)
      this.getVertexPosition(r, vg), this.boundingSphere.expandByPoint(vg);
  }
  copy(e, n) {
    return (
      super.copy(e, n),
      (this.bindMode = e.bindMode),
      this.bindMatrix.copy(e.bindMatrix),
      this.bindMatrixInverse.copy(e.bindMatrixInverse),
      (this.skeleton = e.skeleton),
      e.boundingBox !== null && (this.boundingBox = e.boundingBox.clone()),
      e.boundingSphere !== null &&
        (this.boundingSphere = e.boundingSphere.clone()),
      this
    );
  }
  raycast(e, n) {
    const r = this.material,
      i = this.matrixWorld;
    r !== void 0 &&
      (this.boundingSphere === null && this.computeBoundingSphere(),
      W1.copy(this.boundingSphere),
      W1.applyMatrix4(i),
      e.ray.intersectsSphere(W1) !== !1 &&
        (RA.copy(i).invert(),
        $1.copy(e.ray).applyMatrix4(RA),
        !(
          this.boundingBox !== null && $1.intersectsBox(this.boundingBox) === !1
        ) && this._computeIntersections(e, n, $1)));
  }
  getVertexPosition(e, n) {
    return super.getVertexPosition(e, n), this.applyBoneTransform(e, n), n;
  }
  bind(e, n) {
    (this.skeleton = e),
      n === void 0 &&
        (this.updateMatrixWorld(!0),
        this.skeleton.calculateInverses(),
        (n = this.matrixWorld)),
      this.bindMatrix.copy(n),
      this.bindMatrixInverse.copy(n).invert();
  }
  pose() {
    this.skeleton.pose();
  }
  normalizeSkinWeights() {
    const e = new Ht(),
      n = this.geometry.attributes.skinWeight;
    for (let r = 0, i = n.count; r < i; r++) {
      e.fromBufferAttribute(n, r);
      const o = 1 / e.manhattanLength();
      o !== 1 / 0 ? e.multiplyScalar(o) : e.set(1, 0, 0, 0),
        n.setXYZW(r, e.x, e.y, e.z, e.w);
    }
  }
  updateMatrixWorld(e) {
    super.updateMatrixWorld(e),
      this.bindMode === WS
        ? this.bindMatrixInverse.copy(this.matrixWorld).invert()
        : this.bindMode === aO
        ? this.bindMatrixInverse.copy(this.bindMatrix).invert()
        : console.warn(
            "THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode
          );
  }
  applyBoneTransform(e, n) {
    const r = this.skeleton,
      i = this.geometry;
    CA.fromBufferAttribute(i.attributes.skinIndex, e),
      TA.fromBufferAttribute(i.attributes.skinWeight, e),
      MA.copy(n).applyMatrix4(this.bindMatrix),
      n.set(0, 0, 0);
    for (let o = 0; o < 4; o++) {
      const s = TA.getComponent(o);
      if (s !== 0) {
        const a = CA.getComponent(o);
        AA.multiplyMatrices(r.bones[a].matrixWorld, r.boneInverses[a]),
          n.addScaledVector(H8.copy(MA).applyMatrix4(AA), s);
      }
    }
    return n.applyMatrix4(this.bindMatrixInverse);
  }
  boneTransform(e, n) {
    return (
      console.warn(
        "THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."
      ),
      this.applyBoneTransform(e, n)
    );
  }
}
class qE extends Zt {
  constructor() {
    super(), (this.isBone = !0), (this.type = "Bone");
  }
}
class gc extends Pn {
  constructor(e = null, n = 1, r = 1, i, o, s, a, l, c = Wn, u = Wn, h, p) {
    super(null, s, a, l, c, u, i, o, h, p),
      (this.isDataTexture = !0),
      (this.image = { data: e, width: n, height: r }),
      (this.generateMipmaps = !1),
      (this.flipY = !1),
      (this.unpackAlignment = 1);
  }
}
const PA = new bt(),
  V8 = new bt();
class cy {
  constructor(e = [], n = []) {
    (this.uuid = Xi()),
      (this.bones = e.slice(0)),
      (this.boneInverses = n),
      (this.boneMatrices = null),
      (this.boneTexture = null),
      this.init();
  }
  init() {
    const e = this.bones,
      n = this.boneInverses;
    if (((this.boneMatrices = new Float32Array(e.length * 16)), n.length === 0))
      this.calculateInverses();
    else if (e.length !== n.length) {
      console.warn(
        "THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."
      ),
        (this.boneInverses = []);
      for (let r = 0, i = this.bones.length; r < i; r++)
        this.boneInverses.push(new bt());
    }
  }
  calculateInverses() {
    this.boneInverses.length = 0;
    for (let e = 0, n = this.bones.length; e < n; e++) {
      const r = new bt();
      this.bones[e] && r.copy(this.bones[e].matrixWorld).invert(),
        this.boneInverses.push(r);
    }
  }
  pose() {
    for (let e = 0, n = this.bones.length; e < n; e++) {
      const r = this.bones[e];
      r && r.matrixWorld.copy(this.boneInverses[e]).invert();
    }
    for (let e = 0, n = this.bones.length; e < n; e++) {
      const r = this.bones[e];
      r &&
        (r.parent && r.parent.isBone
          ? (r.matrix.copy(r.parent.matrixWorld).invert(),
            r.matrix.multiply(r.matrixWorld))
          : r.matrix.copy(r.matrixWorld),
        r.matrix.decompose(r.position, r.quaternion, r.scale));
    }
  }
  update() {
    const e = this.bones,
      n = this.boneInverses,
      r = this.boneMatrices,
      i = this.boneTexture;
    for (let o = 0, s = e.length; o < s; o++) {
      const a = e[o] ? e[o].matrixWorld : V8;
      PA.multiplyMatrices(a, n[o]), PA.toArray(r, o * 16);
    }
    i !== null && (i.needsUpdate = !0);
  }
  clone() {
    return new cy(this.bones, this.boneInverses);
  }
  computeBoneTexture() {
    let e = Math.sqrt(this.bones.length * 4);
    (e = Math.ceil(e / 4) * 4), (e = Math.max(e, 4));
    const n = new Float32Array(e * e * 4);
    n.set(this.boneMatrices);
    const r = new gc(n, e, e, ri, Vo);
    return (
      (r.needsUpdate = !0),
      (this.boneMatrices = n),
      (this.boneTexture = r),
      this
    );
  }
  getBoneByName(e) {
    for (let n = 0, r = this.bones.length; n < r; n++) {
      const i = this.bones[n];
      if (i.name === e) return i;
    }
  }
  dispose() {
    this.boneTexture !== null &&
      (this.boneTexture.dispose(), (this.boneTexture = null));
  }
  fromJSON(e, n) {
    this.uuid = e.uuid;
    for (let r = 0, i = e.bones.length; r < i; r++) {
      const o = e.bones[r];
      let s = n[o];
      s === void 0 &&
        (console.warn("THREE.Skeleton: No bone found with UUID:", o),
        (s = new qE())),
        this.bones.push(s),
        this.boneInverses.push(new bt().fromArray(e.boneInverses[r]));
    }
    return this.init(), this;
  }
  toJSON() {
    const e = {
      metadata: {
        version: 4.6,
        type: "Skeleton",
        generator: "Skeleton.toJSON",
      },
      bones: [],
      boneInverses: [],
    };
    e.uuid = this.uuid;
    const n = this.bones,
      r = this.boneInverses;
    for (let i = 0, o = n.length; i < o; i++) {
      const s = n[i];
      e.bones.push(s.uuid);
      const a = r[i];
      e.boneInverses.push(a.toArray());
    }
    return e;
  }
}
class Ac extends en {
  constructor(e, n, r, i = 1) {
    super(e, n, r),
      (this.isInstancedBufferAttribute = !0),
      (this.meshPerAttribute = i);
  }
  copy(e) {
    return super.copy(e), (this.meshPerAttribute = e.meshPerAttribute), this;
  }
  toJSON() {
    const e = super.toJSON();
    return (
      (e.meshPerAttribute = this.meshPerAttribute),
      (e.isInstancedBufferAttribute = !0),
      e
    );
  }
}
const Cu = new bt(),
  LA = new bt(),
  yg = [],
  IA = new or(),
  G8 = new bt(),
  Id = new An(),
  Od = new sr();
class YO extends An {
  constructor(e, n, r) {
    super(e, n),
      (this.isInstancedMesh = !0),
      (this.instanceMatrix = new Ac(new Float32Array(r * 16), 16)),
      (this.instanceColor = null),
      (this.count = r),
      (this.boundingBox = null),
      (this.boundingSphere = null);
    for (let i = 0; i < r; i++) this.setMatrixAt(i, G8);
  }
  computeBoundingBox() {
    const e = this.geometry,
      n = this.count;
    this.boundingBox === null && (this.boundingBox = new or()),
      e.boundingBox === null && e.computeBoundingBox(),
      this.boundingBox.makeEmpty();
    for (let r = 0; r < n; r++)
      this.getMatrixAt(r, Cu),
        IA.copy(e.boundingBox).applyMatrix4(Cu),
        this.boundingBox.union(IA);
  }
  computeBoundingSphere() {
    const e = this.geometry,
      n = this.count;
    this.boundingSphere === null && (this.boundingSphere = new sr()),
      e.boundingSphere === null && e.computeBoundingSphere(),
      this.boundingSphere.makeEmpty();
    for (let r = 0; r < n; r++)
      this.getMatrixAt(r, Cu),
        Od.copy(e.boundingSphere).applyMatrix4(Cu),
        this.boundingSphere.union(Od);
  }
  copy(e, n) {
    return (
      super.copy(e, n),
      this.instanceMatrix.copy(e.instanceMatrix),
      e.instanceColor !== null &&
        (this.instanceColor = e.instanceColor.clone()),
      (this.count = e.count),
      e.boundingBox !== null && (this.boundingBox = e.boundingBox.clone()),
      e.boundingSphere !== null &&
        (this.boundingSphere = e.boundingSphere.clone()),
      this
    );
  }
  getColorAt(e, n) {
    n.fromArray(this.instanceColor.array, e * 3);
  }
  getMatrixAt(e, n) {
    n.fromArray(this.instanceMatrix.array, e * 16);
  }
  raycast(e, n) {
    const r = this.matrixWorld,
      i = this.count;
    if (
      ((Id.geometry = this.geometry),
      (Id.material = this.material),
      Id.material !== void 0 &&
        (this.boundingSphere === null && this.computeBoundingSphere(),
        Od.copy(this.boundingSphere),
        Od.applyMatrix4(r),
        e.ray.intersectsSphere(Od) !== !1))
    )
      for (let o = 0; o < i; o++) {
        this.getMatrixAt(o, Cu),
          LA.multiplyMatrices(r, Cu),
          (Id.matrixWorld = LA),
          Id.raycast(e, yg);
        for (let s = 0, a = yg.length; s < a; s++) {
          const l = yg[s];
          (l.instanceId = o), (l.object = this), n.push(l);
        }
        yg.length = 0;
      }
  }
  setColorAt(e, n) {
    this.instanceColor === null &&
      (this.instanceColor = new Ac(
        new Float32Array(this.instanceMatrix.count * 3),
        3
      )),
      n.toArray(this.instanceColor.array, e * 3);
  }
  setMatrixAt(e, n) {
    n.toArray(this.instanceMatrix.array, e * 16);
  }
  updateMorphTargets() {}
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
}
function j8(t, e) {
  return t.z - e.z;
}
function W8(t, e) {
  return e.z - t.z;
}
class $8 {
  constructor() {
    (this.index = 0), (this.pool = []), (this.list = []);
  }
  push(e, n) {
    const r = this.pool,
      i = this.list;
    this.index >= r.length && r.push({ start: -1, count: -1, z: -1 });
    const o = r[this.index];
    i.push(o),
      this.index++,
      (o.start = e.start),
      (o.count = e.count),
      (o.z = n);
  }
  reset() {
    (this.list.length = 0), (this.index = 0);
  }
}
const Tu = "batchId",
  La = new bt(),
  OA = new bt(),
  X8 = new bt(),
  FA = new bt(),
  X1 = new Sp(),
  xg = new or(),
  zl = new sr(),
  Fd = new W(),
  q1 = new $8(),
  zr = new An(),
  _g = [];
function q8(t, e, n = 0) {
  const r = e.itemSize;
  if (
    t.isInterleavedBufferAttribute ||
    t.array.constructor !== e.array.constructor
  ) {
    const i = t.count;
    for (let o = 0; o < i; o++)
      for (let s = 0; s < r; s++)
        e.setComponent(o + n, s, t.getComponent(o, s));
  } else e.array.set(t.array, n * r);
  e.needsUpdate = !0;
}
class KO extends An {
  get maxGeometryCount() {
    return this._maxGeometryCount;
  }
  constructor(e, n, r = n * 2, i) {
    super(new It(), i),
      (this.isBatchedMesh = !0),
      (this.perObjectFrustumCulled = !0),
      (this.sortObjects = !0),
      (this.boundingBox = null),
      (this.boundingSphere = null),
      (this.customSort = null),
      (this._drawRanges = []),
      (this._reservedRanges = []),
      (this._visibility = []),
      (this._active = []),
      (this._bounds = []),
      (this._maxGeometryCount = e),
      (this._maxVertexCount = n),
      (this._maxIndexCount = r),
      (this._geometryInitialized = !1),
      (this._geometryCount = 0),
      (this._multiDrawCounts = new Int32Array(e)),
      (this._multiDrawStarts = new Int32Array(e)),
      (this._multiDrawCount = 0),
      (this._visibilityChanged = !0),
      (this._matricesTexture = null),
      this._initMatricesTexture();
  }
  _initMatricesTexture() {
    let e = Math.sqrt(this._maxGeometryCount * 4);
    (e = Math.ceil(e / 4) * 4), (e = Math.max(e, 4));
    const n = new Float32Array(e * e * 4),
      r = new gc(n, e, e, ri, Vo);
    this._matricesTexture = r;
  }
  _initializeGeometry(e) {
    const n = this.geometry,
      r = this._maxVertexCount,
      i = this._maxGeometryCount,
      o = this._maxIndexCount;
    if (this._geometryInitialized === !1) {
      for (const a in e.attributes) {
        const l = e.getAttribute(a),
          { array: c, itemSize: u, normalized: h } = l,
          p = new c.constructor(r * u),
          m = new l.constructor(p, u, h);
        m.setUsage(l.usage), n.setAttribute(a, m);
      }
      if (e.getIndex() !== null) {
        const a = r > 65536 ? new Uint32Array(o) : new Uint16Array(o);
        n.setIndex(new en(a, 1));
      }
      const s = i > 65536 ? new Uint32Array(r) : new Uint16Array(r);
      n.setAttribute(Tu, new en(s, 1)), (this._geometryInitialized = !0);
    }
  }
  _validateGeometry(e) {
    if (e.getAttribute(Tu))
      throw new Error(`BatchedMesh: Geometry cannot use attribute "${Tu}"`);
    const n = this.geometry;
    if (!!e.getIndex() != !!n.getIndex())
      throw new Error(
        'BatchedMesh: All geometries must consistently have "index".'
      );
    for (const r in n.attributes) {
      if (r === Tu) continue;
      if (!e.hasAttribute(r))
        throw new Error(
          `BatchedMesh: Added geometry missing "${r}". All geometries must have consistent attributes.`
        );
      const i = e.getAttribute(r),
        o = n.getAttribute(r);
      if (i.itemSize !== o.itemSize || i.normalized !== o.normalized)
        throw new Error(
          "BatchedMesh: All attributes must have a consistent itemSize and normalized value."
        );
    }
  }
  setCustomSort(e) {
    return (this.customSort = e), this;
  }
  computeBoundingBox() {
    this.boundingBox === null && (this.boundingBox = new or());
    const e = this._geometryCount,
      n = this.boundingBox,
      r = this._active;
    n.makeEmpty();
    for (let i = 0; i < e; i++)
      r[i] !== !1 &&
        (this.getMatrixAt(i, La),
        this.getBoundingBoxAt(i, xg).applyMatrix4(La),
        n.union(xg));
  }
  computeBoundingSphere() {
    this.boundingSphere === null && (this.boundingSphere = new sr());
    const e = this._geometryCount,
      n = this.boundingSphere,
      r = this._active;
    n.makeEmpty();
    for (let i = 0; i < e; i++)
      r[i] !== !1 &&
        (this.getMatrixAt(i, La),
        this.getBoundingSphereAt(i, zl).applyMatrix4(La),
        n.union(zl));
  }
  addGeometry(e, n = -1, r = -1) {
    if (
      (this._initializeGeometry(e),
      this._validateGeometry(e),
      this._geometryCount >= this._maxGeometryCount)
    )
      throw new Error("BatchedMesh: Maximum geometry count reached.");
    const i = {
      vertexStart: -1,
      vertexCount: -1,
      indexStart: -1,
      indexCount: -1,
    };
    let o = null;
    const s = this._reservedRanges,
      a = this._drawRanges,
      l = this._bounds;
    this._geometryCount !== 0 && (o = s[s.length - 1]),
      n === -1
        ? (i.vertexCount = e.getAttribute("position").count)
        : (i.vertexCount = n),
      o === null
        ? (i.vertexStart = 0)
        : (i.vertexStart = o.vertexStart + o.vertexCount);
    const c = e.getIndex(),
      u = c !== null;
    if (
      (u &&
        (r === -1 ? (i.indexCount = c.count) : (i.indexCount = r),
        o === null
          ? (i.indexStart = 0)
          : (i.indexStart = o.indexStart + o.indexCount)),
      (i.indexStart !== -1 &&
        i.indexStart + i.indexCount > this._maxIndexCount) ||
        i.vertexStart + i.vertexCount > this._maxVertexCount)
    )
      throw new Error(
        "BatchedMesh: Reserved space request exceeds the maximum buffer size."
      );
    const h = this._visibility,
      p = this._active,
      m = this._matricesTexture,
      v = this._matricesTexture.image.data;
    h.push(!0), p.push(!0);
    const S = this._geometryCount;
    this._geometryCount++,
      X8.toArray(v, S * 16),
      (m.needsUpdate = !0),
      s.push(i),
      a.push({ start: u ? i.indexStart : i.vertexStart, count: -1 }),
      l.push({
        boxInitialized: !1,
        box: new or(),
        sphereInitialized: !1,
        sphere: new sr(),
      });
    const x = this.geometry.getAttribute(Tu);
    for (let g = 0; g < i.vertexCount; g++) x.setX(i.vertexStart + g, S);
    return (x.needsUpdate = !0), this.setGeometryAt(S, e), S;
  }
  setGeometryAt(e, n) {
    if (e >= this._geometryCount)
      throw new Error("BatchedMesh: Maximum geometry count reached.");
    this._validateGeometry(n);
    const r = this.geometry,
      i = r.getIndex() !== null,
      o = r.getIndex(),
      s = n.getIndex(),
      a = this._reservedRanges[e];
    if (
      (i && s.count > a.indexCount) ||
      n.attributes.position.count > a.vertexCount
    )
      throw new Error(
        "BatchedMesh: Reserved space not large enough for provided geometry."
      );
    const l = a.vertexStart,
      c = a.vertexCount;
    for (const m in r.attributes) {
      if (m === Tu) continue;
      const v = n.getAttribute(m),
        S = r.getAttribute(m);
      q8(v, S, l);
      const x = v.itemSize;
      for (let g = v.count, y = c; g < y; g++) {
        const _ = l + g;
        for (let b = 0; b < x; b++) S.setComponent(_, b, 0);
      }
      S.needsUpdate = !0;
    }
    if (i) {
      const m = a.indexStart;
      for (let v = 0; v < s.count; v++) o.setX(m + v, l + s.getX(v));
      for (let v = s.count, S = a.indexCount; v < S; v++) o.setX(m + v, l);
      o.needsUpdate = !0;
    }
    const u = this._bounds[e];
    n.boundingBox !== null
      ? (u.box.copy(n.boundingBox), (u.boxInitialized = !0))
      : (u.boxInitialized = !1),
      n.boundingSphere !== null
        ? (u.sphere.copy(n.boundingSphere), (u.sphereInitialized = !0))
        : (u.sphereInitialized = !1);
    const h = this._drawRanges[e],
      p = n.getAttribute("position");
    return (h.count = i ? s.count : p.count), (this._visibilityChanged = !0), e;
  }
  deleteGeometry(e) {
    const n = this._active;
    return e >= n.length || n[e] === !1
      ? this
      : ((n[e] = !1), (this._visibilityChanged = !0), this);
  }
  getBoundingBoxAt(e, n) {
    if (this._active[e] === !1) return this;
    const i = this._bounds[e],
      o = i.box,
      s = this.geometry;
    if (i.boxInitialized === !1) {
      o.makeEmpty();
      const a = s.index,
        l = s.attributes.position,
        c = this._drawRanges[e];
      for (let u = c.start, h = c.start + c.count; u < h; u++) {
        let p = u;
        a && (p = a.getX(p)), o.expandByPoint(Fd.fromBufferAttribute(l, p));
      }
      i.boxInitialized = !0;
    }
    return n.copy(o), n;
  }
  getBoundingSphereAt(e, n) {
    if (this._active[e] === !1) return this;
    const i = this._bounds[e],
      o = i.sphere,
      s = this.geometry;
    if (i.sphereInitialized === !1) {
      o.makeEmpty(), this.getBoundingBoxAt(e, xg), xg.getCenter(o.center);
      const a = s.index,
        l = s.attributes.position,
        c = this._drawRanges[e];
      let u = 0;
      for (let h = c.start, p = c.start + c.count; h < p; h++) {
        let m = h;
        a && (m = a.getX(m)),
          Fd.fromBufferAttribute(l, m),
          (u = Math.max(u, o.center.distanceToSquared(Fd)));
      }
      (o.radius = Math.sqrt(u)), (i.sphereInitialized = !0);
    }
    return n.copy(o), n;
  }
  setMatrixAt(e, n) {
    const r = this._active,
      i = this._matricesTexture,
      o = this._matricesTexture.image.data,
      s = this._geometryCount;
    return e >= s || r[e] === !1
      ? this
      : (n.toArray(o, e * 16), (i.needsUpdate = !0), this);
  }
  getMatrixAt(e, n) {
    const r = this._active,
      i = this._matricesTexture.image.data,
      o = this._geometryCount;
    return e >= o || r[e] === !1 ? null : n.fromArray(i, e * 16);
  }
  setVisibleAt(e, n) {
    const r = this._visibility,
      i = this._active,
      o = this._geometryCount;
    return e >= o || i[e] === !1 || r[e] === n
      ? this
      : ((r[e] = n), (this._visibilityChanged = !0), this);
  }
  getVisibleAt(e) {
    const n = this._visibility,
      r = this._active,
      i = this._geometryCount;
    return e >= i || r[e] === !1 ? !1 : n[e];
  }
  raycast(e, n) {
    const r = this._visibility,
      i = this._active,
      o = this._drawRanges,
      s = this._geometryCount,
      a = this.matrixWorld,
      l = this.geometry;
    (zr.material = this.material),
      (zr.geometry.index = l.index),
      (zr.geometry.attributes = l.attributes),
      zr.geometry.boundingBox === null && (zr.geometry.boundingBox = new or()),
      zr.geometry.boundingSphere === null &&
        (zr.geometry.boundingSphere = new sr());
    for (let c = 0; c < s; c++) {
      if (!r[c] || !i[c]) continue;
      const u = o[c];
      zr.geometry.setDrawRange(u.start, u.count),
        this.getMatrixAt(c, zr.matrixWorld).premultiply(a),
        this.getBoundingBoxAt(c, zr.geometry.boundingBox),
        this.getBoundingSphereAt(c, zr.geometry.boundingSphere),
        zr.raycast(e, _g);
      for (let h = 0, p = _g.length; h < p; h++) {
        const m = _g[h];
        (m.object = this), (m.batchId = c), n.push(m);
      }
      _g.length = 0;
    }
    (zr.material = null),
      (zr.geometry.index = null),
      (zr.geometry.attributes = {}),
      zr.geometry.setDrawRange(0, 1 / 0);
  }
  copy(e) {
    return (
      super.copy(e),
      (this.geometry = e.geometry.clone()),
      (this.perObjectFrustumCulled = e.perObjectFrustumCulled),
      (this.sortObjects = e.sortObjects),
      (this.boundingBox =
        e.boundingBox !== null ? e.boundingBox.clone() : null),
      (this.boundingSphere =
        e.boundingSphere !== null ? e.boundingSphere.clone() : null),
      (this._drawRanges = e._drawRanges.map((n) => ({ ...n }))),
      (this._reservedRanges = e._reservedRanges.map((n) => ({ ...n }))),
      (this._visibility = e._visibility.slice()),
      (this._active = e._active.slice()),
      (this._bounds = e._bounds.map((n) => ({
        boxInitialized: n.boxInitialized,
        box: n.box.clone(),
        sphereInitialized: n.sphereInitialized,
        sphere: n.sphere.clone(),
      }))),
      (this._maxGeometryCount = e._maxGeometryCount),
      (this._maxVertexCount = e._maxVertexCount),
      (this._maxIndexCount = e._maxIndexCount),
      (this._geometryInitialized = e._geometryInitialized),
      (this._geometryCount = e._geometryCount),
      (this._multiDrawCounts = e._multiDrawCounts.slice()),
      (this._multiDrawStarts = e._multiDrawStarts.slice()),
      (this._matricesTexture = e._matricesTexture.clone()),
      (this._matricesTexture.image.data = this._matricesTexture.image.slice()),
      this
    );
  }
  dispose() {
    return (
      this.geometry.dispose(),
      this._matricesTexture.dispose(),
      (this._matricesTexture = null),
      this
    );
  }
  onBeforeRender(e, n, r, i, o) {
    if (
      !this._visibilityChanged &&
      !this.perObjectFrustumCulled &&
      !this.sortObjects
    )
      return;
    const s = i.getIndex(),
      a = s === null ? 1 : s.array.BYTES_PER_ELEMENT,
      l = this._visibility,
      c = this._multiDrawStarts,
      u = this._multiDrawCounts,
      h = this._drawRanges,
      p = this.perObjectFrustumCulled;
    p &&
      (FA.multiplyMatrices(r.projectionMatrix, r.matrixWorldInverse).multiply(
        this.matrixWorld
      ),
      X1.setFromProjectionMatrix(FA, e.isWebGPURenderer ? Cf : Go));
    let m = 0;
    if (this.sortObjects) {
      OA.copy(this.matrixWorld).invert(),
        Fd.setFromMatrixPosition(r.matrixWorld).applyMatrix4(OA);
      for (let x = 0, g = l.length; x < g; x++)
        if (l[x]) {
          this.getMatrixAt(x, La),
            this.getBoundingSphereAt(x, zl).applyMatrix4(La);
          let y = !1;
          if ((p && (y = !X1.intersectsSphere(zl)), !y)) {
            const _ = Fd.distanceTo(zl.center);
            q1.push(h[x], _);
          }
        }
      const v = q1.list,
        S = this.customSort;
      S === null ? v.sort(o.transparent ? W8 : j8) : S.call(this, v, r);
      for (let x = 0, g = v.length; x < g; x++) {
        const y = v[x];
        (c[m] = y.start * a), (u[m] = y.count), m++;
      }
      q1.reset();
    } else
      for (let v = 0, S = l.length; v < S; v++)
        if (l[v]) {
          let x = !1;
          if (
            (p &&
              (this.getMatrixAt(v, La),
              this.getBoundingSphereAt(v, zl).applyMatrix4(La),
              (x = !X1.intersectsSphere(zl))),
            !x)
          ) {
            const g = h[v];
            (c[m] = g.start * a), (u[m] = g.count), m++;
          }
        }
    (this._multiDrawCount = m), (this._visibilityChanged = !1);
  }
  onBeforeShadow(e, n, r, i, o, s) {
    this.onBeforeRender(e, null, i, o, s);
  }
}
class li extends Rr {
  constructor(e) {
    super(),
      (this.isLineBasicMaterial = !0),
      (this.type = "LineBasicMaterial"),
      (this.color = new nt(16777215)),
      (this.map = null),
      (this.linewidth = 1),
      (this.linecap = "round"),
      (this.linejoin = "round"),
      (this.fog = !0),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      this.color.copy(e.color),
      (this.map = e.map),
      (this.linewidth = e.linewidth),
      (this.linecap = e.linecap),
      (this.linejoin = e.linejoin),
      (this.fog = e.fog),
      this
    );
  }
}
const NA = new W(),
  DA = new W(),
  UA = new bt(),
  Y1 = new Uc(),
  Sg = new sr();
let sl = class extends Zt {
  constructor(e = new It(), n = new li()) {
    super(),
      (this.isLine = !0),
      (this.type = "Line"),
      (this.geometry = e),
      (this.material = n),
      this.updateMorphTargets();
  }
  copy(e, n) {
    return (
      super.copy(e, n),
      (this.material = Array.isArray(e.material)
        ? e.material.slice()
        : e.material),
      (this.geometry = e.geometry),
      this
    );
  }
  computeLineDistances() {
    const e = this.geometry;
    if (e.index === null) {
      const n = e.attributes.position,
        r = [0];
      for (let i = 1, o = n.count; i < o; i++)
        NA.fromBufferAttribute(n, i - 1),
          DA.fromBufferAttribute(n, i),
          (r[i] = r[i - 1]),
          (r[i] += NA.distanceTo(DA));
      e.setAttribute("lineDistance", new ut(r, 1));
    } else
      console.warn(
        "THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry."
      );
    return this;
  }
  raycast(e, n) {
    const r = this.geometry,
      i = this.matrixWorld,
      o = e.params.Line.threshold,
      s = r.drawRange;
    if (
      (r.boundingSphere === null && r.computeBoundingSphere(),
      Sg.copy(r.boundingSphere),
      Sg.applyMatrix4(i),
      (Sg.radius += o),
      e.ray.intersectsSphere(Sg) === !1)
    )
      return;
    UA.copy(i).invert(), Y1.copy(e.ray).applyMatrix4(UA);
    const a = o / ((this.scale.x + this.scale.y + this.scale.z) / 3),
      l = a * a,
      c = new W(),
      u = new W(),
      h = new W(),
      p = new W(),
      m = this.isLineSegments ? 2 : 1,
      v = r.index,
      x = r.attributes.position;
    if (v !== null) {
      const g = Math.max(0, s.start),
        y = Math.min(v.count, s.start + s.count);
      for (let _ = g, b = y - 1; _ < b; _ += m) {
        const T = v.getX(_),
          M = v.getX(_ + 1);
        if (
          (c.fromBufferAttribute(x, T),
          u.fromBufferAttribute(x, M),
          Y1.distanceSqToSegment(c, u, p, h) > l)
        )
          continue;
        p.applyMatrix4(this.matrixWorld);
        const L = e.ray.origin.distanceTo(p);
        L < e.near ||
          L > e.far ||
          n.push({
            distance: L,
            point: h.clone().applyMatrix4(this.matrixWorld),
            index: _,
            face: null,
            faceIndex: null,
            object: this,
          });
      }
    } else {
      const g = Math.max(0, s.start),
        y = Math.min(x.count, s.start + s.count);
      for (let _ = g, b = y - 1; _ < b; _ += m) {
        if (
          (c.fromBufferAttribute(x, _),
          u.fromBufferAttribute(x, _ + 1),
          Y1.distanceSqToSegment(c, u, p, h) > l)
        )
          continue;
        p.applyMatrix4(this.matrixWorld);
        const M = e.ray.origin.distanceTo(p);
        M < e.near ||
          M > e.far ||
          n.push({
            distance: M,
            point: h.clone().applyMatrix4(this.matrixWorld),
            index: _,
            face: null,
            faceIndex: null,
            object: this,
          });
      }
    }
  }
  updateMorphTargets() {
    const n = this.geometry.morphAttributes,
      r = Object.keys(n);
    if (r.length > 0) {
      const i = n[r[0]];
      if (i !== void 0) {
        (this.morphTargetInfluences = []), (this.morphTargetDictionary = {});
        for (let o = 0, s = i.length; o < s; o++) {
          const a = i[o].name || String(o);
          this.morphTargetInfluences.push(0),
            (this.morphTargetDictionary[a] = o);
        }
      }
    }
  }
};
const zA = new W(),
  kA = new W();
class Es extends sl {
  constructor(e, n) {
    super(e, n), (this.isLineSegments = !0), (this.type = "LineSegments");
  }
  computeLineDistances() {
    const e = this.geometry;
    if (e.index === null) {
      const n = e.attributes.position,
        r = [];
      for (let i = 0, o = n.count; i < o; i += 2)
        zA.fromBufferAttribute(n, i),
          kA.fromBufferAttribute(n, i + 1),
          (r[i] = i === 0 ? 0 : r[i - 1]),
          (r[i + 1] = r[i] + zA.distanceTo(kA));
      e.setAttribute("lineDistance", new ut(r, 1));
    } else
      console.warn(
        "THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry."
      );
    return this;
  }
}
class ZO extends sl {
  constructor(e, n) {
    super(e, n), (this.isLineLoop = !0), (this.type = "LineLoop");
  }
}
class YE extends Rr {
  constructor(e) {
    super(),
      (this.isPointsMaterial = !0),
      (this.type = "PointsMaterial"),
      (this.color = new nt(16777215)),
      (this.map = null),
      (this.alphaMap = null),
      (this.size = 1),
      (this.sizeAttenuation = !0),
      (this.fog = !0),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      this.color.copy(e.color),
      (this.map = e.map),
      (this.alphaMap = e.alphaMap),
      (this.size = e.size),
      (this.sizeAttenuation = e.sizeAttenuation),
      (this.fog = e.fog),
      this
    );
  }
}
const BA = new bt(),
  ww = new Uc(),
  wg = new sr(),
  bg = new W();
class QO extends Zt {
  constructor(e = new It(), n = new YE()) {
    super(),
      (this.isPoints = !0),
      (this.type = "Points"),
      (this.geometry = e),
      (this.material = n),
      this.updateMorphTargets();
  }
  copy(e, n) {
    return (
      super.copy(e, n),
      (this.material = Array.isArray(e.material)
        ? e.material.slice()
        : e.material),
      (this.geometry = e.geometry),
      this
    );
  }
  raycast(e, n) {
    const r = this.geometry,
      i = this.matrixWorld,
      o = e.params.Points.threshold,
      s = r.drawRange;
    if (
      (r.boundingSphere === null && r.computeBoundingSphere(),
      wg.copy(r.boundingSphere),
      wg.applyMatrix4(i),
      (wg.radius += o),
      e.ray.intersectsSphere(wg) === !1)
    )
      return;
    BA.copy(i).invert(), ww.copy(e.ray).applyMatrix4(BA);
    const a = o / ((this.scale.x + this.scale.y + this.scale.z) / 3),
      l = a * a,
      c = r.index,
      h = r.attributes.position;
    if (c !== null) {
      const p = Math.max(0, s.start),
        m = Math.min(c.count, s.start + s.count);
      for (let v = p, S = m; v < S; v++) {
        const x = c.getX(v);
        bg.fromBufferAttribute(h, x), HA(bg, x, l, i, e, n, this);
      }
    } else {
      const p = Math.max(0, s.start),
        m = Math.min(h.count, s.start + s.count);
      for (let v = p, S = m; v < S; v++)
        bg.fromBufferAttribute(h, v), HA(bg, v, l, i, e, n, this);
    }
  }
  updateMorphTargets() {
    const n = this.geometry.morphAttributes,
      r = Object.keys(n);
    if (r.length > 0) {
      const i = n[r[0]];
      if (i !== void 0) {
        (this.morphTargetInfluences = []), (this.morphTargetDictionary = {});
        for (let o = 0, s = i.length; o < s; o++) {
          const a = i[o].name || String(o);
          this.morphTargetInfluences.push(0),
            (this.morphTargetDictionary[a] = o);
        }
      }
    }
  }
}
function HA(t, e, n, r, i, o, s) {
  const a = ww.distanceSqToPoint(t);
  if (a < n) {
    const l = new W();
    ww.closestPointToPoint(t, l), l.applyMatrix4(r);
    const c = i.ray.origin.distanceTo(l);
    if (c < i.near || c > i.far) return;
    o.push({
      distance: c,
      distanceToRay: Math.sqrt(a),
      point: l,
      index: e,
      face: null,
      object: s,
    });
  }
}
class Y8 extends Pn {
  constructor(e, n, r, i, o, s, a, l, c) {
    super(e, n, r, i, o, s, a, l, c),
      (this.isVideoTexture = !0),
      (this.minFilter = s !== void 0 ? s : Cn),
      (this.magFilter = o !== void 0 ? o : Cn),
      (this.generateMipmaps = !1);
    const u = this;
    function h() {
      (u.needsUpdate = !0), e.requestVideoFrameCallback(h);
    }
    "requestVideoFrameCallback" in e && e.requestVideoFrameCallback(h);
  }
  clone() {
    return new this.constructor(this.image).copy(this);
  }
  update() {
    const e = this.image;
    "requestVideoFrameCallback" in e === !1 &&
      e.readyState >= e.HAVE_CURRENT_DATA &&
      (this.needsUpdate = !0);
  }
}
class K8 extends Pn {
  constructor(e, n) {
    super({ width: e, height: n }),
      (this.isFramebufferTexture = !0),
      (this.magFilter = Wn),
      (this.minFilter = Wn),
      (this.generateMipmaps = !1),
      (this.needsUpdate = !0);
  }
}
class uy extends Pn {
  constructor(e, n, r, i, o, s, a, l, c, u, h, p) {
    super(null, s, a, l, c, u, i, o, h, p),
      (this.isCompressedTexture = !0),
      (this.image = { width: n, height: r }),
      (this.mipmaps = e),
      (this.flipY = !1),
      (this.generateMipmaps = !1);
  }
}
class Z8 extends uy {
  constructor(e, n, r, i, o, s) {
    super(e, n, r, o, s),
      (this.isCompressedArrayTexture = !0),
      (this.image.depth = i),
      (this.wrapR = Hr);
  }
}
class Q8 extends uy {
  constructor(e, n, r) {
    super(void 0, e[0].width, e[0].height, n, r, la),
      (this.isCompressedCubeTexture = !0),
      (this.isCubeTexture = !0),
      (this.image = e);
  }
}
class J8 extends Pn {
  constructor(e, n, r, i, o, s, a, l, c) {
    super(e, n, r, i, o, s, a, l, c),
      (this.isCanvasTexture = !0),
      (this.needsUpdate = !0);
  }
}
class Zo {
  constructor() {
    (this.type = "Curve"), (this.arcLengthDivisions = 200);
  }
  getPoint() {
    return console.warn("THREE.Curve: .getPoint() not implemented."), null;
  }
  getPointAt(e, n) {
    const r = this.getUtoTmapping(e);
    return this.getPoint(r, n);
  }
  getPoints(e = 5) {
    const n = [];
    for (let r = 0; r <= e; r++) n.push(this.getPoint(r / e));
    return n;
  }
  getSpacedPoints(e = 5) {
    const n = [];
    for (let r = 0; r <= e; r++) n.push(this.getPointAt(r / e));
    return n;
  }
  getLength() {
    const e = this.getLengths();
    return e[e.length - 1];
  }
  getLengths(e = this.arcLengthDivisions) {
    if (
      this.cacheArcLengths &&
      this.cacheArcLengths.length === e + 1 &&
      !this.needsUpdate
    )
      return this.cacheArcLengths;
    this.needsUpdate = !1;
    const n = [];
    let r,
      i = this.getPoint(0),
      o = 0;
    n.push(0);
    for (let s = 1; s <= e; s++)
      (r = this.getPoint(s / e)), (o += r.distanceTo(i)), n.push(o), (i = r);
    return (this.cacheArcLengths = n), n;
  }
  updateArcLengths() {
    (this.needsUpdate = !0), this.getLengths();
  }
  getUtoTmapping(e, n) {
    const r = this.getLengths();
    let i = 0;
    const o = r.length;
    let s;
    n ? (s = n) : (s = e * r[o - 1]);
    let a = 0,
      l = o - 1,
      c;
    for (; a <= l; )
      if (((i = Math.floor(a + (l - a) / 2)), (c = r[i] - s), c < 0)) a = i + 1;
      else if (c > 0) l = i - 1;
      else {
        l = i;
        break;
      }
    if (((i = l), r[i] === s)) return i / (o - 1);
    const u = r[i],
      p = r[i + 1] - u,
      m = (s - u) / p;
    return (i + m) / (o - 1);
  }
  getTangent(e, n) {
    let i = e - 1e-4,
      o = e + 1e-4;
    i < 0 && (i = 0), o > 1 && (o = 1);
    const s = this.getPoint(i),
      a = this.getPoint(o),
      l = n || (s.isVector2 ? new Fe() : new W());
    return l.copy(a).sub(s).normalize(), l;
  }
  getTangentAt(e, n) {
    const r = this.getUtoTmapping(e);
    return this.getTangent(r, n);
  }
  computeFrenetFrames(e, n) {
    const r = new W(),
      i = [],
      o = [],
      s = [],
      a = new W(),
      l = new bt();
    for (let m = 0; m <= e; m++) {
      const v = m / e;
      i[m] = this.getTangentAt(v, new W());
    }
    (o[0] = new W()), (s[0] = new W());
    let c = Number.MAX_VALUE;
    const u = Math.abs(i[0].x),
      h = Math.abs(i[0].y),
      p = Math.abs(i[0].z);
    u <= c && ((c = u), r.set(1, 0, 0)),
      h <= c && ((c = h), r.set(0, 1, 0)),
      p <= c && r.set(0, 0, 1),
      a.crossVectors(i[0], r).normalize(),
      o[0].crossVectors(i[0], a),
      s[0].crossVectors(i[0], o[0]);
    for (let m = 1; m <= e; m++) {
      if (
        ((o[m] = o[m - 1].clone()),
        (s[m] = s[m - 1].clone()),
        a.crossVectors(i[m - 1], i[m]),
        a.length() > Number.EPSILON)
      ) {
        a.normalize();
        const v = Math.acos(Dn(i[m - 1].dot(i[m]), -1, 1));
        o[m].applyMatrix4(l.makeRotationAxis(a, v));
      }
      s[m].crossVectors(i[m], o[m]);
    }
    if (n === !0) {
      let m = Math.acos(Dn(o[0].dot(o[e]), -1, 1));
      (m /= e), i[0].dot(a.crossVectors(o[0], o[e])) > 0 && (m = -m);
      for (let v = 1; v <= e; v++)
        o[v].applyMatrix4(l.makeRotationAxis(i[v], m * v)),
          s[v].crossVectors(i[v], o[v]);
    }
    return { tangents: i, normals: o, binormals: s };
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return (this.arcLengthDivisions = e.arcLengthDivisions), this;
  }
  toJSON() {
    const e = {
      metadata: { version: 4.6, type: "Curve", generator: "Curve.toJSON" },
    };
    return (
      (e.arcLengthDivisions = this.arcLengthDivisions), (e.type = this.type), e
    );
  }
  fromJSON(e) {
    return (this.arcLengthDivisions = e.arcLengthDivisions), this;
  }
}
class fy extends Zo {
  constructor(
    e = 0,
    n = 0,
    r = 1,
    i = 1,
    o = 0,
    s = Math.PI * 2,
    a = !1,
    l = 0
  ) {
    super(),
      (this.isEllipseCurve = !0),
      (this.type = "EllipseCurve"),
      (this.aX = e),
      (this.aY = n),
      (this.xRadius = r),
      (this.yRadius = i),
      (this.aStartAngle = o),
      (this.aEndAngle = s),
      (this.aClockwise = a),
      (this.aRotation = l);
  }
  getPoint(e, n) {
    const r = n || new Fe(),
      i = Math.PI * 2;
    let o = this.aEndAngle - this.aStartAngle;
    const s = Math.abs(o) < Number.EPSILON;
    for (; o < 0; ) o += i;
    for (; o > i; ) o -= i;
    o < Number.EPSILON && (s ? (o = 0) : (o = i)),
      this.aClockwise === !0 && !s && (o === i ? (o = -i) : (o = o - i));
    const a = this.aStartAngle + e * o;
    let l = this.aX + this.xRadius * Math.cos(a),
      c = this.aY + this.yRadius * Math.sin(a);
    if (this.aRotation !== 0) {
      const u = Math.cos(this.aRotation),
        h = Math.sin(this.aRotation),
        p = l - this.aX,
        m = c - this.aY;
      (l = p * u - m * h + this.aX), (c = p * h + m * u + this.aY);
    }
    return r.set(l, c);
  }
  copy(e) {
    return (
      super.copy(e),
      (this.aX = e.aX),
      (this.aY = e.aY),
      (this.xRadius = e.xRadius),
      (this.yRadius = e.yRadius),
      (this.aStartAngle = e.aStartAngle),
      (this.aEndAngle = e.aEndAngle),
      (this.aClockwise = e.aClockwise),
      (this.aRotation = e.aRotation),
      this
    );
  }
  toJSON() {
    const e = super.toJSON();
    return (
      (e.aX = this.aX),
      (e.aY = this.aY),
      (e.xRadius = this.xRadius),
      (e.yRadius = this.yRadius),
      (e.aStartAngle = this.aStartAngle),
      (e.aEndAngle = this.aEndAngle),
      (e.aClockwise = this.aClockwise),
      (e.aRotation = this.aRotation),
      e
    );
  }
  fromJSON(e) {
    return (
      super.fromJSON(e),
      (this.aX = e.aX),
      (this.aY = e.aY),
      (this.xRadius = e.xRadius),
      (this.yRadius = e.yRadius),
      (this.aStartAngle = e.aStartAngle),
      (this.aEndAngle = e.aEndAngle),
      (this.aClockwise = e.aClockwise),
      (this.aRotation = e.aRotation),
      this
    );
  }
}
class JO extends fy {
  constructor(e, n, r, i, o, s) {
    super(e, n, r, r, i, o, s),
      (this.isArcCurve = !0),
      (this.type = "ArcCurve");
  }
}
function KE() {
  let t = 0,
    e = 0,
    n = 0,
    r = 0;
  function i(o, s, a, l) {
    (t = o),
      (e = a),
      (n = -3 * o + 3 * s - 2 * a - l),
      (r = 2 * o - 2 * s + a + l);
  }
  return {
    initCatmullRom: function (o, s, a, l, c) {
      i(s, a, c * (a - o), c * (l - s));
    },
    initNonuniformCatmullRom: function (o, s, a, l, c, u, h) {
      let p = (s - o) / c - (a - o) / (c + u) + (a - s) / u,
        m = (a - s) / u - (l - s) / (u + h) + (l - a) / h;
      (p *= u), (m *= u), i(s, a, p, m);
    },
    calc: function (o) {
      const s = o * o,
        a = s * o;
      return t + e * o + n * s + r * a;
    },
  };
}
const Eg = new W(),
  K1 = new KE(),
  Z1 = new KE(),
  Q1 = new KE();
class eF extends Zo {
  constructor(e = [], n = !1, r = "centripetal", i = 0.5) {
    super(),
      (this.isCatmullRomCurve3 = !0),
      (this.type = "CatmullRomCurve3"),
      (this.points = e),
      (this.closed = n),
      (this.curveType = r),
      (this.tension = i);
  }
  getPoint(e, n = new W()) {
    const r = n,
      i = this.points,
      o = i.length,
      s = (o - (this.closed ? 0 : 1)) * e;
    let a = Math.floor(s),
      l = s - a;
    this.closed
      ? (a += a > 0 ? 0 : (Math.floor(Math.abs(a) / o) + 1) * o)
      : l === 0 && a === o - 1 && ((a = o - 2), (l = 1));
    let c, u;
    this.closed || a > 0
      ? (c = i[(a - 1) % o])
      : (Eg.subVectors(i[0], i[1]).add(i[0]), (c = Eg));
    const h = i[a % o],
      p = i[(a + 1) % o];
    if (
      (this.closed || a + 2 < o
        ? (u = i[(a + 2) % o])
        : (Eg.subVectors(i[o - 1], i[o - 2]).add(i[o - 1]), (u = Eg)),
      this.curveType === "centripetal" || this.curveType === "chordal")
    ) {
      const m = this.curveType === "chordal" ? 0.5 : 0.25;
      let v = Math.pow(c.distanceToSquared(h), m),
        S = Math.pow(h.distanceToSquared(p), m),
        x = Math.pow(p.distanceToSquared(u), m);
      S < 1e-4 && (S = 1),
        v < 1e-4 && (v = S),
        x < 1e-4 && (x = S),
        K1.initNonuniformCatmullRom(c.x, h.x, p.x, u.x, v, S, x),
        Z1.initNonuniformCatmullRom(c.y, h.y, p.y, u.y, v, S, x),
        Q1.initNonuniformCatmullRom(c.z, h.z, p.z, u.z, v, S, x);
    } else
      this.curveType === "catmullrom" &&
        (K1.initCatmullRom(c.x, h.x, p.x, u.x, this.tension),
        Z1.initCatmullRom(c.y, h.y, p.y, u.y, this.tension),
        Q1.initCatmullRom(c.z, h.z, p.z, u.z, this.tension));
    return r.set(K1.calc(l), Z1.calc(l), Q1.calc(l)), r;
  }
  copy(e) {
    super.copy(e), (this.points = []);
    for (let n = 0, r = e.points.length; n < r; n++) {
      const i = e.points[n];
      this.points.push(i.clone());
    }
    return (
      (this.closed = e.closed),
      (this.curveType = e.curveType),
      (this.tension = e.tension),
      this
    );
  }
  toJSON() {
    const e = super.toJSON();
    e.points = [];
    for (let n = 0, r = this.points.length; n < r; n++) {
      const i = this.points[n];
      e.points.push(i.toArray());
    }
    return (
      (e.closed = this.closed),
      (e.curveType = this.curveType),
      (e.tension = this.tension),
      e
    );
  }
  fromJSON(e) {
    super.fromJSON(e), (this.points = []);
    for (let n = 0, r = e.points.length; n < r; n++) {
      const i = e.points[n];
      this.points.push(new W().fromArray(i));
    }
    return (
      (this.closed = e.closed),
      (this.curveType = e.curveType),
      (this.tension = e.tension),
      this
    );
  }
}
function VA(t, e, n, r, i) {
  const o = (r - e) * 0.5,
    s = (i - n) * 0.5,
    a = t * t,
    l = t * a;
  return (
    (2 * n - 2 * r + o + s) * l + (-3 * n + 3 * r - 2 * o - s) * a + o * t + n
  );
}
function eG(t, e) {
  const n = 1 - t;
  return n * n * e;
}
function tG(t, e) {
  return 2 * (1 - t) * t * e;
}
function nG(t, e) {
  return t * t * e;
}
function ah(t, e, n, r) {
  return eG(t, e) + tG(t, n) + nG(t, r);
}
function rG(t, e) {
  const n = 1 - t;
  return n * n * n * e;
}
function iG(t, e) {
  const n = 1 - t;
  return 3 * n * n * t * e;
}
function oG(t, e) {
  return 3 * (1 - t) * t * t * e;
}
function sG(t, e) {
  return t * t * t * e;
}
function lh(t, e, n, r, i) {
  return rG(t, e) + iG(t, n) + oG(t, r) + sG(t, i);
}
class ZE extends Zo {
  constructor(e = new Fe(), n = new Fe(), r = new Fe(), i = new Fe()) {
    super(),
      (this.isCubicBezierCurve = !0),
      (this.type = "CubicBezierCurve"),
      (this.v0 = e),
      (this.v1 = n),
      (this.v2 = r),
      (this.v3 = i);
  }
  getPoint(e, n = new Fe()) {
    const r = n,
      i = this.v0,
      o = this.v1,
      s = this.v2,
      a = this.v3;
    return r.set(lh(e, i.x, o.x, s.x, a.x), lh(e, i.y, o.y, s.y, a.y)), r;
  }
  copy(e) {
    return (
      super.copy(e),
      this.v0.copy(e.v0),
      this.v1.copy(e.v1),
      this.v2.copy(e.v2),
      this.v3.copy(e.v3),
      this
    );
  }
  toJSON() {
    const e = super.toJSON();
    return (
      (e.v0 = this.v0.toArray()),
      (e.v1 = this.v1.toArray()),
      (e.v2 = this.v2.toArray()),
      (e.v3 = this.v3.toArray()),
      e
    );
  }
  fromJSON(e) {
    return (
      super.fromJSON(e),
      this.v0.fromArray(e.v0),
      this.v1.fromArray(e.v1),
      this.v2.fromArray(e.v2),
      this.v3.fromArray(e.v3),
      this
    );
  }
}
class tF extends Zo {
  constructor(e = new W(), n = new W(), r = new W(), i = new W()) {
    super(),
      (this.isCubicBezierCurve3 = !0),
      (this.type = "CubicBezierCurve3"),
      (this.v0 = e),
      (this.v1 = n),
      (this.v2 = r),
      (this.v3 = i);
  }
  getPoint(e, n = new W()) {
    const r = n,
      i = this.v0,
      o = this.v1,
      s = this.v2,
      a = this.v3;
    return (
      r.set(
        lh(e, i.x, o.x, s.x, a.x),
        lh(e, i.y, o.y, s.y, a.y),
        lh(e, i.z, o.z, s.z, a.z)
      ),
      r
    );
  }
  copy(e) {
    return (
      super.copy(e),
      this.v0.copy(e.v0),
      this.v1.copy(e.v1),
      this.v2.copy(e.v2),
      this.v3.copy(e.v3),
      this
    );
  }
  toJSON() {
    const e = super.toJSON();
    return (
      (e.v0 = this.v0.toArray()),
      (e.v1 = this.v1.toArray()),
      (e.v2 = this.v2.toArray()),
      (e.v3 = this.v3.toArray()),
      e
    );
  }
  fromJSON(e) {
    return (
      super.fromJSON(e),
      this.v0.fromArray(e.v0),
      this.v1.fromArray(e.v1),
      this.v2.fromArray(e.v2),
      this.v3.fromArray(e.v3),
      this
    );
  }
}
class QE extends Zo {
  constructor(e = new Fe(), n = new Fe()) {
    super(),
      (this.isLineCurve = !0),
      (this.type = "LineCurve"),
      (this.v1 = e),
      (this.v2 = n);
  }
  getPoint(e, n = new Fe()) {
    const r = n;
    return (
      e === 1
        ? r.copy(this.v2)
        : (r.copy(this.v2).sub(this.v1), r.multiplyScalar(e).add(this.v1)),
      r
    );
  }
  getPointAt(e, n) {
    return this.getPoint(e, n);
  }
  getTangent(e, n = new Fe()) {
    return n.subVectors(this.v2, this.v1).normalize();
  }
  getTangentAt(e, n) {
    return this.getTangent(e, n);
  }
  copy(e) {
    return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
  }
  toJSON() {
    const e = super.toJSON();
    return (e.v1 = this.v1.toArray()), (e.v2 = this.v2.toArray()), e;
  }
  fromJSON(e) {
    return (
      super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this
    );
  }
}
class nF extends Zo {
  constructor(e = new W(), n = new W()) {
    super(),
      (this.isLineCurve3 = !0),
      (this.type = "LineCurve3"),
      (this.v1 = e),
      (this.v2 = n);
  }
  getPoint(e, n = new W()) {
    const r = n;
    return (
      e === 1
        ? r.copy(this.v2)
        : (r.copy(this.v2).sub(this.v1), r.multiplyScalar(e).add(this.v1)),
      r
    );
  }
  getPointAt(e, n) {
    return this.getPoint(e, n);
  }
  getTangent(e, n = new W()) {
    return n.subVectors(this.v2, this.v1).normalize();
  }
  getTangentAt(e, n) {
    return this.getTangent(e, n);
  }
  copy(e) {
    return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
  }
  toJSON() {
    const e = super.toJSON();
    return (e.v1 = this.v1.toArray()), (e.v2 = this.v2.toArray()), e;
  }
  fromJSON(e) {
    return (
      super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this
    );
  }
}
class JE extends Zo {
  constructor(e = new Fe(), n = new Fe(), r = new Fe()) {
    super(),
      (this.isQuadraticBezierCurve = !0),
      (this.type = "QuadraticBezierCurve"),
      (this.v0 = e),
      (this.v1 = n),
      (this.v2 = r);
  }
  getPoint(e, n = new Fe()) {
    const r = n,
      i = this.v0,
      o = this.v1,
      s = this.v2;
    return r.set(ah(e, i.x, o.x, s.x), ah(e, i.y, o.y, s.y)), r;
  }
  copy(e) {
    return (
      super.copy(e),
      this.v0.copy(e.v0),
      this.v1.copy(e.v1),
      this.v2.copy(e.v2),
      this
    );
  }
  toJSON() {
    const e = super.toJSON();
    return (
      (e.v0 = this.v0.toArray()),
      (e.v1 = this.v1.toArray()),
      (e.v2 = this.v2.toArray()),
      e
    );
  }
  fromJSON(e) {
    return (
      super.fromJSON(e),
      this.v0.fromArray(e.v0),
      this.v1.fromArray(e.v1),
      this.v2.fromArray(e.v2),
      this
    );
  }
}
class eM extends Zo {
  constructor(e = new W(), n = new W(), r = new W()) {
    super(),
      (this.isQuadraticBezierCurve3 = !0),
      (this.type = "QuadraticBezierCurve3"),
      (this.v0 = e),
      (this.v1 = n),
      (this.v2 = r);
  }
  getPoint(e, n = new W()) {
    const r = n,
      i = this.v0,
      o = this.v1,
      s = this.v2;
    return (
      r.set(ah(e, i.x, o.x, s.x), ah(e, i.y, o.y, s.y), ah(e, i.z, o.z, s.z)), r
    );
  }
  copy(e) {
    return (
      super.copy(e),
      this.v0.copy(e.v0),
      this.v1.copy(e.v1),
      this.v2.copy(e.v2),
      this
    );
  }
  toJSON() {
    const e = super.toJSON();
    return (
      (e.v0 = this.v0.toArray()),
      (e.v1 = this.v1.toArray()),
      (e.v2 = this.v2.toArray()),
      e
    );
  }
  fromJSON(e) {
    return (
      super.fromJSON(e),
      this.v0.fromArray(e.v0),
      this.v1.fromArray(e.v1),
      this.v2.fromArray(e.v2),
      this
    );
  }
}
class tM extends Zo {
  constructor(e = []) {
    super(),
      (this.isSplineCurve = !0),
      (this.type = "SplineCurve"),
      (this.points = e);
  }
  getPoint(e, n = new Fe()) {
    const r = n,
      i = this.points,
      o = (i.length - 1) * e,
      s = Math.floor(o),
      a = o - s,
      l = i[s === 0 ? s : s - 1],
      c = i[s],
      u = i[s > i.length - 2 ? i.length - 1 : s + 1],
      h = i[s > i.length - 3 ? i.length - 1 : s + 2];
    return r.set(VA(a, l.x, c.x, u.x, h.x), VA(a, l.y, c.y, u.y, h.y)), r;
  }
  copy(e) {
    super.copy(e), (this.points = []);
    for (let n = 0, r = e.points.length; n < r; n++) {
      const i = e.points[n];
      this.points.push(i.clone());
    }
    return this;
  }
  toJSON() {
    const e = super.toJSON();
    e.points = [];
    for (let n = 0, r = this.points.length; n < r; n++) {
      const i = this.points[n];
      e.points.push(i.toArray());
    }
    return e;
  }
  fromJSON(e) {
    super.fromJSON(e), (this.points = []);
    for (let n = 0, r = e.points.length; n < r; n++) {
      const i = e.points[n];
      this.points.push(new Fe().fromArray(i));
    }
    return this;
  }
}
var g0 = Object.freeze({
  __proto__: null,
  ArcCurve: JO,
  CatmullRomCurve3: eF,
  CubicBezierCurve: ZE,
  CubicBezierCurve3: tF,
  EllipseCurve: fy,
  LineCurve: QE,
  LineCurve3: nF,
  QuadraticBezierCurve: JE,
  QuadraticBezierCurve3: eM,
  SplineCurve: tM,
});
class rF extends Zo {
  constructor() {
    super(),
      (this.type = "CurvePath"),
      (this.curves = []),
      (this.autoClose = !1);
  }
  add(e) {
    this.curves.push(e);
  }
  closePath() {
    const e = this.curves[0].getPoint(0),
      n = this.curves[this.curves.length - 1].getPoint(1);
    if (!e.equals(n)) {
      const r = e.isVector2 === !0 ? "LineCurve" : "LineCurve3";
      this.curves.push(new g0[r](n, e));
    }
    return this;
  }
  getPoint(e, n) {
    const r = e * this.getLength(),
      i = this.getCurveLengths();
    let o = 0;
    for (; o < i.length; ) {
      if (i[o] >= r) {
        const s = i[o] - r,
          a = this.curves[o],
          l = a.getLength(),
          c = l === 0 ? 0 : 1 - s / l;
        return a.getPointAt(c, n);
      }
      o++;
    }
    return null;
  }
  getLength() {
    const e = this.getCurveLengths();
    return e[e.length - 1];
  }
  updateArcLengths() {
    (this.needsUpdate = !0), (this.cacheLengths = null), this.getCurveLengths();
  }
  getCurveLengths() {
    if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
      return this.cacheLengths;
    const e = [];
    let n = 0;
    for (let r = 0, i = this.curves.length; r < i; r++)
      (n += this.curves[r].getLength()), e.push(n);
    return (this.cacheLengths = e), e;
  }
  getSpacedPoints(e = 40) {
    const n = [];
    for (let r = 0; r <= e; r++) n.push(this.getPoint(r / e));
    return this.autoClose && n.push(n[0]), n;
  }
  getPoints(e = 12) {
    const n = [];
    let r;
    for (let i = 0, o = this.curves; i < o.length; i++) {
      const s = o[i],
        a = s.isEllipseCurve
          ? e * 2
          : s.isLineCurve || s.isLineCurve3
          ? 1
          : s.isSplineCurve
          ? e * s.points.length
          : e,
        l = s.getPoints(a);
      for (let c = 0; c < l.length; c++) {
        const u = l[c];
        (r && r.equals(u)) || (n.push(u), (r = u));
      }
    }
    return (
      this.autoClose &&
        n.length > 1 &&
        !n[n.length - 1].equals(n[0]) &&
        n.push(n[0]),
      n
    );
  }
  copy(e) {
    super.copy(e), (this.curves = []);
    for (let n = 0, r = e.curves.length; n < r; n++) {
      const i = e.curves[n];
      this.curves.push(i.clone());
    }
    return (this.autoClose = e.autoClose), this;
  }
  toJSON() {
    const e = super.toJSON();
    (e.autoClose = this.autoClose), (e.curves = []);
    for (let n = 0, r = this.curves.length; n < r; n++) {
      const i = this.curves[n];
      e.curves.push(i.toJSON());
    }
    return e;
  }
  fromJSON(e) {
    super.fromJSON(e), (this.autoClose = e.autoClose), (this.curves = []);
    for (let n = 0, r = e.curves.length; n < r; n++) {
      const i = e.curves[n];
      this.curves.push(new g0[i.type]().fromJSON(i));
    }
    return this;
  }
}
class $h extends rF {
  constructor(e) {
    super(),
      (this.type = "Path"),
      (this.currentPoint = new Fe()),
      e && this.setFromPoints(e);
  }
  setFromPoints(e) {
    this.moveTo(e[0].x, e[0].y);
    for (let n = 1, r = e.length; n < r; n++) this.lineTo(e[n].x, e[n].y);
    return this;
  }
  moveTo(e, n) {
    return this.currentPoint.set(e, n), this;
  }
  lineTo(e, n) {
    const r = new QE(this.currentPoint.clone(), new Fe(e, n));
    return this.curves.push(r), this.currentPoint.set(e, n), this;
  }
  quadraticCurveTo(e, n, r, i) {
    const o = new JE(this.currentPoint.clone(), new Fe(e, n), new Fe(r, i));
    return this.curves.push(o), this.currentPoint.set(r, i), this;
  }
  bezierCurveTo(e, n, r, i, o, s) {
    const a = new ZE(
      this.currentPoint.clone(),
      new Fe(e, n),
      new Fe(r, i),
      new Fe(o, s)
    );
    return this.curves.push(a), this.currentPoint.set(o, s), this;
  }
  splineThru(e) {
    const n = [this.currentPoint.clone()].concat(e),
      r = new tM(n);
    return this.curves.push(r), this.currentPoint.copy(e[e.length - 1]), this;
  }
  arc(e, n, r, i, o, s) {
    const a = this.currentPoint.x,
      l = this.currentPoint.y;
    return this.absarc(e + a, n + l, r, i, o, s), this;
  }
  absarc(e, n, r, i, o, s) {
    return this.absellipse(e, n, r, r, i, o, s), this;
  }
  ellipse(e, n, r, i, o, s, a, l) {
    const c = this.currentPoint.x,
      u = this.currentPoint.y;
    return this.absellipse(e + c, n + u, r, i, o, s, a, l), this;
  }
  absellipse(e, n, r, i, o, s, a, l) {
    const c = new fy(e, n, r, i, o, s, a, l);
    if (this.curves.length > 0) {
      const h = c.getPoint(0);
      h.equals(this.currentPoint) || this.lineTo(h.x, h.y);
    }
    this.curves.push(c);
    const u = c.getPoint(1);
    return this.currentPoint.copy(u), this;
  }
  copy(e) {
    return super.copy(e), this.currentPoint.copy(e.currentPoint), this;
  }
  toJSON() {
    const e = super.toJSON();
    return (e.currentPoint = this.currentPoint.toArray()), e;
  }
  fromJSON(e) {
    return super.fromJSON(e), this.currentPoint.fromArray(e.currentPoint), this;
  }
}
class wp extends It {
  constructor(
    e = [new Fe(0, -0.5), new Fe(0.5, 0), new Fe(0, 0.5)],
    n = 12,
    r = 0,
    i = Math.PI * 2
  ) {
    super(),
      (this.type = "LatheGeometry"),
      (this.parameters = { points: e, segments: n, phiStart: r, phiLength: i }),
      (n = Math.floor(n)),
      (i = Dn(i, 0, Math.PI * 2));
    const o = [],
      s = [],
      a = [],
      l = [],
      c = [],
      u = 1 / n,
      h = new W(),
      p = new Fe(),
      m = new W(),
      v = new W(),
      S = new W();
    let x = 0,
      g = 0;
    for (let y = 0; y <= e.length - 1; y++)
      switch (y) {
        case 0:
          (x = e[y + 1].x - e[y].x),
            (g = e[y + 1].y - e[y].y),
            (m.x = g * 1),
            (m.y = -x),
            (m.z = g * 0),
            S.copy(m),
            m.normalize(),
            l.push(m.x, m.y, m.z);
          break;
        case e.length - 1:
          l.push(S.x, S.y, S.z);
          break;
        default:
          (x = e[y + 1].x - e[y].x),
            (g = e[y + 1].y - e[y].y),
            (m.x = g * 1),
            (m.y = -x),
            (m.z = g * 0),
            v.copy(m),
            (m.x += S.x),
            (m.y += S.y),
            (m.z += S.z),
            m.normalize(),
            l.push(m.x, m.y, m.z),
            S.copy(v);
      }
    for (let y = 0; y <= n; y++) {
      const _ = r + y * u * i,
        b = Math.sin(_),
        T = Math.cos(_);
      for (let M = 0; M <= e.length - 1; M++) {
        (h.x = e[M].x * b),
          (h.y = e[M].y),
          (h.z = e[M].x * T),
          s.push(h.x, h.y, h.z),
          (p.x = y / n),
          (p.y = M / (e.length - 1)),
          a.push(p.x, p.y);
        const C = l[3 * M + 0] * b,
          L = l[3 * M + 1],
          A = l[3 * M + 0] * T;
        c.push(C, L, A);
      }
    }
    for (let y = 0; y < n; y++)
      for (let _ = 0; _ < e.length - 1; _++) {
        const b = _ + y * e.length,
          T = b,
          M = b + e.length,
          C = b + e.length + 1,
          L = b + 1;
        o.push(T, M, L), o.push(C, L, M);
      }
    this.setIndex(o),
      this.setAttribute("position", new ut(s, 3)),
      this.setAttribute("uv", new ut(a, 2)),
      this.setAttribute("normal", new ut(c, 3));
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  static fromJSON(e) {
    return new wp(e.points, e.segments, e.phiStart, e.phiLength);
  }
}
class dy extends wp {
  constructor(e = 1, n = 1, r = 4, i = 8) {
    const o = new $h();
    o.absarc(0, -n / 2, e, Math.PI * 1.5, 0),
      o.absarc(0, n / 2, e, 0, Math.PI * 0.5),
      super(o.getPoints(r), i),
      (this.type = "CapsuleGeometry"),
      (this.parameters = {
        radius: e,
        length: n,
        capSegments: r,
        radialSegments: i,
      });
  }
  static fromJSON(e) {
    return new dy(e.radius, e.length, e.capSegments, e.radialSegments);
  }
}
class hy extends It {
  constructor(e = 1, n = 32, r = 0, i = Math.PI * 2) {
    super(),
      (this.type = "CircleGeometry"),
      (this.parameters = {
        radius: e,
        segments: n,
        thetaStart: r,
        thetaLength: i,
      }),
      (n = Math.max(3, n));
    const o = [],
      s = [],
      a = [],
      l = [],
      c = new W(),
      u = new Fe();
    s.push(0, 0, 0), a.push(0, 0, 1), l.push(0.5, 0.5);
    for (let h = 0, p = 3; h <= n; h++, p += 3) {
      const m = r + (h / n) * i;
      (c.x = e * Math.cos(m)),
        (c.y = e * Math.sin(m)),
        s.push(c.x, c.y, c.z),
        a.push(0, 0, 1),
        (u.x = (s[p] / e + 1) / 2),
        (u.y = (s[p + 1] / e + 1) / 2),
        l.push(u.x, u.y);
    }
    for (let h = 1; h <= n; h++) o.push(h, h + 1, 0);
    this.setIndex(o),
      this.setAttribute("position", new ut(s, 3)),
      this.setAttribute("normal", new ut(a, 3)),
      this.setAttribute("uv", new ut(l, 2));
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  static fromJSON(e) {
    return new hy(e.radius, e.segments, e.thetaStart, e.thetaLength);
  }
}
class Hf extends It {
  constructor(
    e = 1,
    n = 1,
    r = 1,
    i = 32,
    o = 1,
    s = !1,
    a = 0,
    l = Math.PI * 2
  ) {
    super(),
      (this.type = "CylinderGeometry"),
      (this.parameters = {
        radiusTop: e,
        radiusBottom: n,
        height: r,
        radialSegments: i,
        heightSegments: o,
        openEnded: s,
        thetaStart: a,
        thetaLength: l,
      });
    const c = this;
    (i = Math.floor(i)), (o = Math.floor(o));
    const u = [],
      h = [],
      p = [],
      m = [];
    let v = 0;
    const S = [],
      x = r / 2;
    let g = 0;
    y(),
      s === !1 && (e > 0 && _(!0), n > 0 && _(!1)),
      this.setIndex(u),
      this.setAttribute("position", new ut(h, 3)),
      this.setAttribute("normal", new ut(p, 3)),
      this.setAttribute("uv", new ut(m, 2));
    function y() {
      const b = new W(),
        T = new W();
      let M = 0;
      const C = (n - e) / r;
      for (let L = 0; L <= o; L++) {
        const A = [],
          P = L / o,
          k = P * (n - e) + e;
        for (let B = 0; B <= i; B++) {
          const $ = B / i,
            D = $ * l + a,
            X = Math.sin(D),
            j = Math.cos(D);
          (T.x = k * X),
            (T.y = -P * r + x),
            (T.z = k * j),
            h.push(T.x, T.y, T.z),
            b.set(X, C, j).normalize(),
            p.push(b.x, b.y, b.z),
            m.push($, 1 - P),
            A.push(v++);
        }
        S.push(A);
      }
      for (let L = 0; L < i; L++)
        for (let A = 0; A < o; A++) {
          const P = S[A][L],
            k = S[A + 1][L],
            B = S[A + 1][L + 1],
            $ = S[A][L + 1];
          u.push(P, k, $), u.push(k, B, $), (M += 6);
        }
      c.addGroup(g, M, 0), (g += M);
    }
    function _(b) {
      const T = v,
        M = new Fe(),
        C = new W();
      let L = 0;
      const A = b === !0 ? e : n,
        P = b === !0 ? 1 : -1;
      for (let B = 1; B <= i; B++)
        h.push(0, x * P, 0), p.push(0, P, 0), m.push(0.5, 0.5), v++;
      const k = v;
      for (let B = 0; B <= i; B++) {
        const D = (B / i) * l + a,
          X = Math.cos(D),
          j = Math.sin(D);
        (C.x = A * j),
          (C.y = x * P),
          (C.z = A * X),
          h.push(C.x, C.y, C.z),
          p.push(0, P, 0),
          (M.x = X * 0.5 + 0.5),
          (M.y = j * 0.5 * P + 0.5),
          m.push(M.x, M.y),
          v++;
      }
      for (let B = 0; B < i; B++) {
        const $ = T + B,
          D = k + B;
        b === !0 ? u.push(D, D + 1, $) : u.push(D + 1, D, $), (L += 3);
      }
      c.addGroup(g, L, b === !0 ? 1 : 2), (g += L);
    }
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  static fromJSON(e) {
    return new Hf(
      e.radiusTop,
      e.radiusBottom,
      e.height,
      e.radialSegments,
      e.heightSegments,
      e.openEnded,
      e.thetaStart,
      e.thetaLength
    );
  }
}
class py extends Hf {
  constructor(e = 1, n = 1, r = 32, i = 1, o = !1, s = 0, a = Math.PI * 2) {
    super(0, e, n, r, i, o, s, a),
      (this.type = "ConeGeometry"),
      (this.parameters = {
        radius: e,
        height: n,
        radialSegments: r,
        heightSegments: i,
        openEnded: o,
        thetaStart: s,
        thetaLength: a,
      });
  }
  static fromJSON(e) {
    return new py(
      e.radius,
      e.height,
      e.radialSegments,
      e.heightSegments,
      e.openEnded,
      e.thetaStart,
      e.thetaLength
    );
  }
}
class gl extends It {
  constructor(e = [], n = [], r = 1, i = 0) {
    super(),
      (this.type = "PolyhedronGeometry"),
      (this.parameters = { vertices: e, indices: n, radius: r, detail: i });
    const o = [],
      s = [];
    a(i),
      c(r),
      u(),
      this.setAttribute("position", new ut(o, 3)),
      this.setAttribute("normal", new ut(o.slice(), 3)),
      this.setAttribute("uv", new ut(s, 2)),
      i === 0 ? this.computeVertexNormals() : this.normalizeNormals();
    function a(y) {
      const _ = new W(),
        b = new W(),
        T = new W();
      for (let M = 0; M < n.length; M += 3)
        m(n[M + 0], _), m(n[M + 1], b), m(n[M + 2], T), l(_, b, T, y);
    }
    function l(y, _, b, T) {
      const M = T + 1,
        C = [];
      for (let L = 0; L <= M; L++) {
        C[L] = [];
        const A = y.clone().lerp(b, L / M),
          P = _.clone().lerp(b, L / M),
          k = M - L;
        for (let B = 0; B <= k; B++)
          B === 0 && L === M
            ? (C[L][B] = A)
            : (C[L][B] = A.clone().lerp(P, B / k));
      }
      for (let L = 0; L < M; L++)
        for (let A = 0; A < 2 * (M - L) - 1; A++) {
          const P = Math.floor(A / 2);
          A % 2 === 0
            ? (p(C[L][P + 1]), p(C[L + 1][P]), p(C[L][P]))
            : (p(C[L][P + 1]), p(C[L + 1][P + 1]), p(C[L + 1][P]));
        }
    }
    function c(y) {
      const _ = new W();
      for (let b = 0; b < o.length; b += 3)
        (_.x = o[b + 0]),
          (_.y = o[b + 1]),
          (_.z = o[b + 2]),
          _.normalize().multiplyScalar(y),
          (o[b + 0] = _.x),
          (o[b + 1] = _.y),
          (o[b + 2] = _.z);
    }
    function u() {
      const y = new W();
      for (let _ = 0; _ < o.length; _ += 3) {
        (y.x = o[_ + 0]), (y.y = o[_ + 1]), (y.z = o[_ + 2]);
        const b = x(y) / 2 / Math.PI + 0.5,
          T = g(y) / Math.PI + 0.5;
        s.push(b, 1 - T);
      }
      v(), h();
    }
    function h() {
      for (let y = 0; y < s.length; y += 6) {
        const _ = s[y + 0],
          b = s[y + 2],
          T = s[y + 4],
          M = Math.max(_, b, T),
          C = Math.min(_, b, T);
        M > 0.9 &&
          C < 0.1 &&
          (_ < 0.2 && (s[y + 0] += 1),
          b < 0.2 && (s[y + 2] += 1),
          T < 0.2 && (s[y + 4] += 1));
      }
    }
    function p(y) {
      o.push(y.x, y.y, y.z);
    }
    function m(y, _) {
      const b = y * 3;
      (_.x = e[b + 0]), (_.y = e[b + 1]), (_.z = e[b + 2]);
    }
    function v() {
      const y = new W(),
        _ = new W(),
        b = new W(),
        T = new W(),
        M = new Fe(),
        C = new Fe(),
        L = new Fe();
      for (let A = 0, P = 0; A < o.length; A += 9, P += 6) {
        y.set(o[A + 0], o[A + 1], o[A + 2]),
          _.set(o[A + 3], o[A + 4], o[A + 5]),
          b.set(o[A + 6], o[A + 7], o[A + 8]),
          M.set(s[P + 0], s[P + 1]),
          C.set(s[P + 2], s[P + 3]),
          L.set(s[P + 4], s[P + 5]),
          T.copy(y).add(_).add(b).divideScalar(3);
        const k = x(T);
        S(M, P + 0, y, k), S(C, P + 2, _, k), S(L, P + 4, b, k);
      }
    }
    function S(y, _, b, T) {
      T < 0 && y.x === 1 && (s[_] = y.x - 1),
        b.x === 0 && b.z === 0 && (s[_] = T / 2 / Math.PI + 0.5);
    }
    function x(y) {
      return Math.atan2(y.z, -y.x);
    }
    function g(y) {
      return Math.atan2(-y.y, Math.sqrt(y.x * y.x + y.z * y.z));
    }
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  static fromJSON(e) {
    return new gl(e.vertices, e.indices, e.radius, e.details);
  }
}
class my extends gl {
  constructor(e = 1, n = 0) {
    const r = (1 + Math.sqrt(5)) / 2,
      i = 1 / r,
      o = [
        -1,
        -1,
        -1,
        -1,
        -1,
        1,
        -1,
        1,
        -1,
        -1,
        1,
        1,
        1,
        -1,
        -1,
        1,
        -1,
        1,
        1,
        1,
        -1,
        1,
        1,
        1,
        0,
        -i,
        -r,
        0,
        -i,
        r,
        0,
        i,
        -r,
        0,
        i,
        r,
        -i,
        -r,
        0,
        -i,
        r,
        0,
        i,
        -r,
        0,
        i,
        r,
        0,
        -r,
        0,
        -i,
        r,
        0,
        -i,
        -r,
        0,
        i,
        r,
        0,
        i,
      ],
      s = [
        3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8,
        17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18,
        0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13,
        18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5,
        11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14,
        5, 1, 5, 9,
      ];
    super(o, s, e, n),
      (this.type = "DodecahedronGeometry"),
      (this.parameters = { radius: e, detail: n });
  }
  static fromJSON(e) {
    return new my(e.radius, e.detail);
  }
}
const Mg = new W(),
  Cg = new W(),
  J1 = new W(),
  Tg = new gi();
class iF extends It {
  constructor(e = null, n = 1) {
    if (
      (super(),
      (this.type = "EdgesGeometry"),
      (this.parameters = { geometry: e, thresholdAngle: n }),
      e !== null)
    ) {
      const i = Math.pow(10, 4),
        o = Math.cos(pc * n),
        s = e.getIndex(),
        a = e.getAttribute("position"),
        l = s ? s.count : a.count,
        c = [0, 0, 0],
        u = ["a", "b", "c"],
        h = new Array(3),
        p = {},
        m = [];
      for (let v = 0; v < l; v += 3) {
        s
          ? ((c[0] = s.getX(v)), (c[1] = s.getX(v + 1)), (c[2] = s.getX(v + 2)))
          : ((c[0] = v), (c[1] = v + 1), (c[2] = v + 2));
        const { a: S, b: x, c: g } = Tg;
        if (
          (S.fromBufferAttribute(a, c[0]),
          x.fromBufferAttribute(a, c[1]),
          g.fromBufferAttribute(a, c[2]),
          Tg.getNormal(J1),
          (h[0] = `${Math.round(S.x * i)},${Math.round(S.y * i)},${Math.round(
            S.z * i
          )}`),
          (h[1] = `${Math.round(x.x * i)},${Math.round(x.y * i)},${Math.round(
            x.z * i
          )}`),
          (h[2] = `${Math.round(g.x * i)},${Math.round(g.y * i)},${Math.round(
            g.z * i
          )}`),
          !(h[0] === h[1] || h[1] === h[2] || h[2] === h[0]))
        )
          for (let y = 0; y < 3; y++) {
            const _ = (y + 1) % 3,
              b = h[y],
              T = h[_],
              M = Tg[u[y]],
              C = Tg[u[_]],
              L = `${b}_${T}`,
              A = `${T}_${b}`;
            A in p && p[A]
              ? (J1.dot(p[A].normal) <= o &&
                  (m.push(M.x, M.y, M.z), m.push(C.x, C.y, C.z)),
                (p[A] = null))
              : L in p ||
                (p[L] = { index0: c[y], index1: c[_], normal: J1.clone() });
          }
      }
      for (const v in p)
        if (p[v]) {
          const { index0: S, index1: x } = p[v];
          Mg.fromBufferAttribute(a, S),
            Cg.fromBufferAttribute(a, x),
            m.push(Mg.x, Mg.y, Mg.z),
            m.push(Cg.x, Cg.y, Cg.z);
        }
      this.setAttribute("position", new ut(m, 3));
    }
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
}
class tl extends $h {
  constructor(e) {
    super(e), (this.uuid = Xi()), (this.type = "Shape"), (this.holes = []);
  }
  getPointsHoles(e) {
    const n = [];
    for (let r = 0, i = this.holes.length; r < i; r++)
      n[r] = this.holes[r].getPoints(e);
    return n;
  }
  extractPoints(e) {
    return { shape: this.getPoints(e), holes: this.getPointsHoles(e) };
  }
  copy(e) {
    super.copy(e), (this.holes = []);
    for (let n = 0, r = e.holes.length; n < r; n++) {
      const i = e.holes[n];
      this.holes.push(i.clone());
    }
    return this;
  }
  toJSON() {
    const e = super.toJSON();
    (e.uuid = this.uuid), (e.holes = []);
    for (let n = 0, r = this.holes.length; n < r; n++) {
      const i = this.holes[n];
      e.holes.push(i.toJSON());
    }
    return e;
  }
  fromJSON(e) {
    super.fromJSON(e), (this.uuid = e.uuid), (this.holes = []);
    for (let n = 0, r = e.holes.length; n < r; n++) {
      const i = e.holes[n];
      this.holes.push(new $h().fromJSON(i));
    }
    return this;
  }
}
const aG = {
  triangulate: function (t, e, n = 2) {
    const r = e && e.length,
      i = r ? e[0] * n : t.length;
    let o = oF(t, 0, i, n, !0);
    const s = [];
    if (!o || o.next === o.prev) return s;
    let a, l, c, u, h, p, m;
    if ((r && (o = dG(t, e, o, n)), t.length > 80 * n)) {
      (a = c = t[0]), (l = u = t[1]);
      for (let v = n; v < i; v += n)
        (h = t[v]),
          (p = t[v + 1]),
          h < a && (a = h),
          p < l && (l = p),
          h > c && (c = h),
          p > u && (u = p);
      (m = Math.max(c - a, u - l)), (m = m !== 0 ? 32767 / m : 0);
    }
    return Xh(o, s, n, a, l, m, 0), s;
  },
};
function oF(t, e, n, r, i) {
  let o, s;
  if (i === bG(t, e, n, r) > 0)
    for (o = e; o < n; o += r) s = GA(o, t[o], t[o + 1], s);
  else for (o = n - r; o >= e; o -= r) s = GA(o, t[o], t[o + 1], s);
  return s && gy(s, s.next) && (Yh(s), (s = s.next)), s;
}
function Rc(t, e) {
  if (!t) return t;
  e || (e = t);
  let n = t,
    r;
  do
    if (
      ((r = !1), !n.steiner && (gy(n, n.next) || Tn(n.prev, n, n.next) === 0))
    ) {
      if ((Yh(n), (n = e = n.prev), n === n.next)) break;
      r = !0;
    } else n = n.next;
  while (r || n !== e);
  return e;
}
function Xh(t, e, n, r, i, o, s) {
  if (!t) return;
  !s && o && vG(t, r, i, o);
  let a = t,
    l,
    c;
  for (; t.prev !== t.next; ) {
    if (((l = t.prev), (c = t.next), o ? cG(t, r, i, o) : lG(t))) {
      e.push((l.i / n) | 0),
        e.push((t.i / n) | 0),
        e.push((c.i / n) | 0),
        Yh(t),
        (t = c.next),
        (a = c.next);
      continue;
    }
    if (((t = c), t === a)) {
      s
        ? s === 1
          ? ((t = uG(Rc(t), e, n)), Xh(t, e, n, r, i, o, 2))
          : s === 2 && fG(t, e, n, r, i, o)
        : Xh(Rc(t), e, n, r, i, o, 1);
      break;
    }
  }
}
function lG(t) {
  const e = t.prev,
    n = t,
    r = t.next;
  if (Tn(e, n, r) >= 0) return !1;
  const i = e.x,
    o = n.x,
    s = r.x,
    a = e.y,
    l = n.y,
    c = r.y,
    u = i < o ? (i < s ? i : s) : o < s ? o : s,
    h = a < l ? (a < c ? a : c) : l < c ? l : c,
    p = i > o ? (i > s ? i : s) : o > s ? o : s,
    m = a > l ? (a > c ? a : c) : l > c ? l : c;
  let v = r.next;
  for (; v !== e; ) {
    if (
      v.x >= u &&
      v.x <= p &&
      v.y >= h &&
      v.y <= m &&
      tf(i, a, o, l, s, c, v.x, v.y) &&
      Tn(v.prev, v, v.next) >= 0
    )
      return !1;
    v = v.next;
  }
  return !0;
}
function cG(t, e, n, r) {
  const i = t.prev,
    o = t,
    s = t.next;
  if (Tn(i, o, s) >= 0) return !1;
  const a = i.x,
    l = o.x,
    c = s.x,
    u = i.y,
    h = o.y,
    p = s.y,
    m = a < l ? (a < c ? a : c) : l < c ? l : c,
    v = u < h ? (u < p ? u : p) : h < p ? h : p,
    S = a > l ? (a > c ? a : c) : l > c ? l : c,
    x = u > h ? (u > p ? u : p) : h > p ? h : p,
    g = bw(m, v, e, n, r),
    y = bw(S, x, e, n, r);
  let _ = t.prevZ,
    b = t.nextZ;
  for (; _ && _.z >= g && b && b.z <= y; ) {
    if (
      (_.x >= m &&
        _.x <= S &&
        _.y >= v &&
        _.y <= x &&
        _ !== i &&
        _ !== s &&
        tf(a, u, l, h, c, p, _.x, _.y) &&
        Tn(_.prev, _, _.next) >= 0) ||
      ((_ = _.prevZ),
      b.x >= m &&
        b.x <= S &&
        b.y >= v &&
        b.y <= x &&
        b !== i &&
        b !== s &&
        tf(a, u, l, h, c, p, b.x, b.y) &&
        Tn(b.prev, b, b.next) >= 0)
    )
      return !1;
    b = b.nextZ;
  }
  for (; _ && _.z >= g; ) {
    if (
      _.x >= m &&
      _.x <= S &&
      _.y >= v &&
      _.y <= x &&
      _ !== i &&
      _ !== s &&
      tf(a, u, l, h, c, p, _.x, _.y) &&
      Tn(_.prev, _, _.next) >= 0
    )
      return !1;
    _ = _.prevZ;
  }
  for (; b && b.z <= y; ) {
    if (
      b.x >= m &&
      b.x <= S &&
      b.y >= v &&
      b.y <= x &&
      b !== i &&
      b !== s &&
      tf(a, u, l, h, c, p, b.x, b.y) &&
      Tn(b.prev, b, b.next) >= 0
    )
      return !1;
    b = b.nextZ;
  }
  return !0;
}
function uG(t, e, n) {
  let r = t;
  do {
    const i = r.prev,
      o = r.next.next;
    !gy(i, o) &&
      sF(i, r, r.next, o) &&
      qh(i, o) &&
      qh(o, i) &&
      (e.push((i.i / n) | 0),
      e.push((r.i / n) | 0),
      e.push((o.i / n) | 0),
      Yh(r),
      Yh(r.next),
      (r = t = o)),
      (r = r.next);
  } while (r !== t);
  return Rc(r);
}
function fG(t, e, n, r, i, o) {
  let s = t;
  do {
    let a = s.next.next;
    for (; a !== s.prev; ) {
      if (s.i !== a.i && _G(s, a)) {
        let l = aF(s, a);
        (s = Rc(s, s.next)),
          (l = Rc(l, l.next)),
          Xh(s, e, n, r, i, o, 0),
          Xh(l, e, n, r, i, o, 0);
        return;
      }
      a = a.next;
    }
    s = s.next;
  } while (s !== t);
}
function dG(t, e, n, r) {
  const i = [];
  let o, s, a, l, c;
  for (o = 0, s = e.length; o < s; o++)
    (a = e[o] * r),
      (l = o < s - 1 ? e[o + 1] * r : t.length),
      (c = oF(t, a, l, r, !1)),
      c === c.next && (c.steiner = !0),
      i.push(xG(c));
  for (i.sort(hG), o = 0; o < i.length; o++) n = pG(i[o], n);
  return n;
}
function hG(t, e) {
  return t.x - e.x;
}
function pG(t, e) {
  const n = mG(t, e);
  if (!n) return e;
  const r = aF(n, t);
  return Rc(r, r.next), Rc(n, n.next);
}
function mG(t, e) {
  let n = e,
    r = -1 / 0,
    i;
  const o = t.x,
    s = t.y;
  do {
    if (s <= n.y && s >= n.next.y && n.next.y !== n.y) {
      const p = n.x + ((s - n.y) * (n.next.x - n.x)) / (n.next.y - n.y);
      if (
        p <= o &&
        p > r &&
        ((r = p), (i = n.x < n.next.x ? n : n.next), p === o)
      )
        return i;
    }
    n = n.next;
  } while (n !== e);
  if (!i) return null;
  const a = i,
    l = i.x,
    c = i.y;
  let u = 1 / 0,
    h;
  n = i;
  do
    o >= n.x &&
      n.x >= l &&
      o !== n.x &&
      tf(s < c ? o : r, s, l, c, s < c ? r : o, s, n.x, n.y) &&
      ((h = Math.abs(s - n.y) / (o - n.x)),
      qh(n, t) &&
        (h < u || (h === u && (n.x > i.x || (n.x === i.x && gG(i, n))))) &&
        ((i = n), (u = h))),
      (n = n.next);
  while (n !== a);
  return i;
}
function gG(t, e) {
  return Tn(t.prev, t, e.prev) < 0 && Tn(e.next, t, t.next) < 0;
}
function vG(t, e, n, r) {
  let i = t;
  do
    i.z === 0 && (i.z = bw(i.x, i.y, e, n, r)),
      (i.prevZ = i.prev),
      (i.nextZ = i.next),
      (i = i.next);
  while (i !== t);
  (i.prevZ.nextZ = null), (i.prevZ = null), yG(i);
}
function yG(t) {
  let e,
    n,
    r,
    i,
    o,
    s,
    a,
    l,
    c = 1;
  do {
    for (n = t, t = null, o = null, s = 0; n; ) {
      for (s++, r = n, a = 0, e = 0; e < c && (a++, (r = r.nextZ), !!r); e++);
      for (l = c; a > 0 || (l > 0 && r); )
        a !== 0 && (l === 0 || !r || n.z <= r.z)
          ? ((i = n), (n = n.nextZ), a--)
          : ((i = r), (r = r.nextZ), l--),
          o ? (o.nextZ = i) : (t = i),
          (i.prevZ = o),
          (o = i);
      n = r;
    }
    (o.nextZ = null), (c *= 2);
  } while (s > 1);
  return t;
}
function bw(t, e, n, r, i) {
  return (
    (t = ((t - n) * i) | 0),
    (e = ((e - r) * i) | 0),
    (t = (t | (t << 8)) & 16711935),
    (t = (t | (t << 4)) & 252645135),
    (t = (t | (t << 2)) & 858993459),
    (t = (t | (t << 1)) & 1431655765),
    (e = (e | (e << 8)) & 16711935),
    (e = (e | (e << 4)) & 252645135),
    (e = (e | (e << 2)) & 858993459),
    (e = (e | (e << 1)) & 1431655765),
    t | (e << 1)
  );
}
function xG(t) {
  let e = t,
    n = t;
  do (e.x < n.x || (e.x === n.x && e.y < n.y)) && (n = e), (e = e.next);
  while (e !== t);
  return n;
}
function tf(t, e, n, r, i, o, s, a) {
  return (
    (i - s) * (e - a) >= (t - s) * (o - a) &&
    (t - s) * (r - a) >= (n - s) * (e - a) &&
    (n - s) * (o - a) >= (i - s) * (r - a)
  );
}
function _G(t, e) {
  return (
    t.next.i !== e.i &&
    t.prev.i !== e.i &&
    !SG(t, e) &&
    ((qh(t, e) &&
      qh(e, t) &&
      wG(t, e) &&
      (Tn(t.prev, t, e.prev) || Tn(t, e.prev, e))) ||
      (gy(t, e) && Tn(t.prev, t, t.next) > 0 && Tn(e.prev, e, e.next) > 0))
  );
}
function Tn(t, e, n) {
  return (e.y - t.y) * (n.x - e.x) - (e.x - t.x) * (n.y - e.y);
}
function gy(t, e) {
  return t.x === e.x && t.y === e.y;
}
function sF(t, e, n, r) {
  const i = Rg(Tn(t, e, n)),
    o = Rg(Tn(t, e, r)),
    s = Rg(Tn(n, r, t)),
    a = Rg(Tn(n, r, e));
  return !!(
    (i !== o && s !== a) ||
    (i === 0 && Ag(t, n, e)) ||
    (o === 0 && Ag(t, r, e)) ||
    (s === 0 && Ag(n, t, r)) ||
    (a === 0 && Ag(n, e, r))
  );
}
function Ag(t, e, n) {
  return (
    e.x <= Math.max(t.x, n.x) &&
    e.x >= Math.min(t.x, n.x) &&
    e.y <= Math.max(t.y, n.y) &&
    e.y >= Math.min(t.y, n.y)
  );
}
function Rg(t) {
  return t > 0 ? 1 : t < 0 ? -1 : 0;
}
function SG(t, e) {
  let n = t;
  do {
    if (
      n.i !== t.i &&
      n.next.i !== t.i &&
      n.i !== e.i &&
      n.next.i !== e.i &&
      sF(n, n.next, t, e)
    )
      return !0;
    n = n.next;
  } while (n !== t);
  return !1;
}
function qh(t, e) {
  return Tn(t.prev, t, t.next) < 0
    ? Tn(t, e, t.next) >= 0 && Tn(t, t.prev, e) >= 0
    : Tn(t, e, t.prev) < 0 || Tn(t, t.next, e) < 0;
}
function wG(t, e) {
  let n = t,
    r = !1;
  const i = (t.x + e.x) / 2,
    o = (t.y + e.y) / 2;
  do
    n.y > o != n.next.y > o &&
      n.next.y !== n.y &&
      i < ((n.next.x - n.x) * (o - n.y)) / (n.next.y - n.y) + n.x &&
      (r = !r),
      (n = n.next);
  while (n !== t);
  return r;
}
function aF(t, e) {
  const n = new Ew(t.i, t.x, t.y),
    r = new Ew(e.i, e.x, e.y),
    i = t.next,
    o = e.prev;
  return (
    (t.next = e),
    (e.prev = t),
    (n.next = i),
    (i.prev = n),
    (r.next = n),
    (n.prev = r),
    (o.next = r),
    (r.prev = o),
    r
  );
}
function GA(t, e, n, r) {
  const i = new Ew(t, e, n);
  return (
    r
      ? ((i.next = r.next), (i.prev = r), (r.next.prev = i), (r.next = i))
      : ((i.prev = i), (i.next = i)),
    i
  );
}
function Yh(t) {
  (t.next.prev = t.prev),
    (t.prev.next = t.next),
    t.prevZ && (t.prevZ.nextZ = t.nextZ),
    t.nextZ && (t.nextZ.prevZ = t.prevZ);
}
function Ew(t, e, n) {
  (this.i = t),
    (this.x = e),
    (this.y = n),
    (this.prev = null),
    (this.next = null),
    (this.z = 0),
    (this.prevZ = null),
    (this.nextZ = null),
    (this.steiner = !1);
}
function bG(t, e, n, r) {
  let i = 0;
  for (let o = e, s = n - r; o < n; o += r)
    (i += (t[s] - t[o]) * (t[o + 1] + t[s + 1])), (s = o);
  return i;
}
class _s {
  static area(e) {
    const n = e.length;
    let r = 0;
    for (let i = n - 1, o = 0; o < n; i = o++)
      r += e[i].x * e[o].y - e[o].x * e[i].y;
    return r * 0.5;
  }
  static isClockWise(e) {
    return _s.area(e) < 0;
  }
  static triangulateShape(e, n) {
    const r = [],
      i = [],
      o = [];
    jA(e), WA(r, e);
    let s = e.length;
    n.forEach(jA);
    for (let l = 0; l < n.length; l++)
      i.push(s), (s += n[l].length), WA(r, n[l]);
    const a = aG.triangulate(r, i);
    for (let l = 0; l < a.length; l += 3) o.push(a.slice(l, l + 3));
    return o;
  }
}
function jA(t) {
  const e = t.length;
  e > 2 && t[e - 1].equals(t[0]) && t.pop();
}
function WA(t, e) {
  for (let n = 0; n < e.length; n++) t.push(e[n].x), t.push(e[n].y);
}
class vy extends It {
  constructor(
    e = new tl([
      new Fe(0.5, 0.5),
      new Fe(-0.5, 0.5),
      new Fe(-0.5, -0.5),
      new Fe(0.5, -0.5),
    ]),
    n = {}
  ) {
    super(),
      (this.type = "ExtrudeGeometry"),
      (this.parameters = { shapes: e, options: n }),
      (e = Array.isArray(e) ? e : [e]);
    const r = this,
      i = [],
      o = [];
    for (let a = 0, l = e.length; a < l; a++) {
      const c = e[a];
      s(c);
    }
    this.setAttribute("position", new ut(i, 3)),
      this.setAttribute("uv", new ut(o, 2)),
      this.computeVertexNormals();
    function s(a) {
      const l = [],
        c = n.curveSegments !== void 0 ? n.curveSegments : 12,
        u = n.steps !== void 0 ? n.steps : 1,
        h = n.depth !== void 0 ? n.depth : 1;
      let p = n.bevelEnabled !== void 0 ? n.bevelEnabled : !0,
        m = n.bevelThickness !== void 0 ? n.bevelThickness : 0.2,
        v = n.bevelSize !== void 0 ? n.bevelSize : m - 0.1,
        S = n.bevelOffset !== void 0 ? n.bevelOffset : 0,
        x = n.bevelSegments !== void 0 ? n.bevelSegments : 3;
      const g = n.extrudePath,
        y = n.UVGenerator !== void 0 ? n.UVGenerator : EG;
      let _,
        b = !1,
        T,
        M,
        C,
        L;
      g &&
        ((_ = g.getSpacedPoints(u)),
        (b = !0),
        (p = !1),
        (T = g.computeFrenetFrames(u, !1)),
        (M = new W()),
        (C = new W()),
        (L = new W())),
        p || ((x = 0), (m = 0), (v = 0), (S = 0));
      const A = a.extractPoints(c);
      let P = A.shape;
      const k = A.holes;
      if (!_s.isClockWise(P)) {
        P = P.reverse();
        for (let q = 0, xe = k.length; q < xe; q++) {
          const he = k[q];
          _s.isClockWise(he) && (k[q] = he.reverse());
        }
      }
      const $ = _s.triangulateShape(P, k),
        D = P;
      for (let q = 0, xe = k.length; q < xe; q++) {
        const he = k[q];
        P = P.concat(he);
      }
      function X(q, xe, he) {
        return (
          xe || console.error("THREE.ExtrudeGeometry: vec does not exist"),
          q.clone().addScaledVector(xe, he)
        );
      }
      const j = P.length,
        Y = $.length;
      function N(q, xe, he) {
        let me, fe, Ve;
        const ge = q.x - xe.x,
          H = q.y - xe.y,
          F = he.x - q.x,
          K = he.y - q.y,
          ae = ge * ge + H * H,
          se = ge * K - H * F;
        if (Math.abs(se) > Number.EPSILON) {
          const de = Math.sqrt(ae),
            Pe = Math.sqrt(F * F + K * K),
            ke = xe.x - H / de,
            Be = xe.y + ge / de,
            Ne = he.x - K / Pe,
            ze = he.y + F / Pe,
            Ee = ((Ne - ke) * K - (ze - Be) * F) / (ge * K - H * F);
          (me = ke + ge * Ee - q.x), (fe = Be + H * Ee - q.y);
          const Je = me * me + fe * fe;
          if (Je <= 2) return new Fe(me, fe);
          Ve = Math.sqrt(Je / 2);
        } else {
          let de = !1;
          ge > Number.EPSILON
            ? F > Number.EPSILON && (de = !0)
            : ge < -Number.EPSILON
            ? F < -Number.EPSILON && (de = !0)
            : Math.sign(H) === Math.sign(K) && (de = !0),
            de
              ? ((me = -H), (fe = ge), (Ve = Math.sqrt(ae)))
              : ((me = ge), (fe = H), (Ve = Math.sqrt(ae / 2)));
        }
        return new Fe(me / Ve, fe / Ve);
      }
      const V = [];
      for (
        let q = 0, xe = D.length, he = xe - 1, me = q + 1;
        q < xe;
        q++, he++, me++
      )
        he === xe && (he = 0),
          me === xe && (me = 0),
          (V[q] = N(D[q], D[he], D[me]));
      const G = [];
      let U,
        Z = V.concat();
      for (let q = 0, xe = k.length; q < xe; q++) {
        const he = k[q];
        U = [];
        for (
          let me = 0, fe = he.length, Ve = fe - 1, ge = me + 1;
          me < fe;
          me++, Ve++, ge++
        )
          Ve === fe && (Ve = 0),
            ge === fe && (ge = 0),
            (U[me] = N(he[me], he[Ve], he[ge]));
        G.push(U), (Z = Z.concat(U));
      }
      for (let q = 0; q < x; q++) {
        const xe = q / x,
          he = m * Math.cos((xe * Math.PI) / 2),
          me = v * Math.sin((xe * Math.PI) / 2) + S;
        for (let fe = 0, Ve = D.length; fe < Ve; fe++) {
          const ge = X(D[fe], V[fe], me);
          oe(ge.x, ge.y, -he);
        }
        for (let fe = 0, Ve = k.length; fe < Ve; fe++) {
          const ge = k[fe];
          U = G[fe];
          for (let H = 0, F = ge.length; H < F; H++) {
            const K = X(ge[H], U[H], me);
            oe(K.x, K.y, -he);
          }
        }
      }
      const Q = v + S;
      for (let q = 0; q < j; q++) {
        const xe = p ? X(P[q], Z[q], Q) : P[q];
        b
          ? (C.copy(T.normals[0]).multiplyScalar(xe.x),
            M.copy(T.binormals[0]).multiplyScalar(xe.y),
            L.copy(_[0]).add(C).add(M),
            oe(L.x, L.y, L.z))
          : oe(xe.x, xe.y, 0);
      }
      for (let q = 1; q <= u; q++)
        for (let xe = 0; xe < j; xe++) {
          const he = p ? X(P[xe], Z[xe], Q) : P[xe];
          b
            ? (C.copy(T.normals[q]).multiplyScalar(he.x),
              M.copy(T.binormals[q]).multiplyScalar(he.y),
              L.copy(_[q]).add(C).add(M),
              oe(L.x, L.y, L.z))
            : oe(he.x, he.y, (h / u) * q);
        }
      for (let q = x - 1; q >= 0; q--) {
        const xe = q / x,
          he = m * Math.cos((xe * Math.PI) / 2),
          me = v * Math.sin((xe * Math.PI) / 2) + S;
        for (let fe = 0, Ve = D.length; fe < Ve; fe++) {
          const ge = X(D[fe], V[fe], me);
          oe(ge.x, ge.y, h + he);
        }
        for (let fe = 0, Ve = k.length; fe < Ve; fe++) {
          const ge = k[fe];
          U = G[fe];
          for (let H = 0, F = ge.length; H < F; H++) {
            const K = X(ge[H], U[H], me);
            b
              ? oe(K.x, K.y + _[u - 1].y, _[u - 1].x + he)
              : oe(K.x, K.y, h + he);
          }
        }
      }
      te(), re();
      function te() {
        const q = i.length / 3;
        if (p) {
          let xe = 0,
            he = j * xe;
          for (let me = 0; me < Y; me++) {
            const fe = $[me];
            ve(fe[2] + he, fe[1] + he, fe[0] + he);
          }
          (xe = u + x * 2), (he = j * xe);
          for (let me = 0; me < Y; me++) {
            const fe = $[me];
            ve(fe[0] + he, fe[1] + he, fe[2] + he);
          }
        } else {
          for (let xe = 0; xe < Y; xe++) {
            const he = $[xe];
            ve(he[2], he[1], he[0]);
          }
          for (let xe = 0; xe < Y; xe++) {
            const he = $[xe];
            ve(he[0] + j * u, he[1] + j * u, he[2] + j * u);
          }
        }
        r.addGroup(q, i.length / 3 - q, 0);
      }
      function re() {
        const q = i.length / 3;
        let xe = 0;
        le(D, xe), (xe += D.length);
        for (let he = 0, me = k.length; he < me; he++) {
          const fe = k[he];
          le(fe, xe), (xe += fe.length);
        }
        r.addGroup(q, i.length / 3 - q, 1);
      }
      function le(q, xe) {
        let he = q.length;
        for (; --he >= 0; ) {
          const me = he;
          let fe = he - 1;
          fe < 0 && (fe = q.length - 1);
          for (let Ve = 0, ge = u + x * 2; Ve < ge; Ve++) {
            const H = j * Ve,
              F = j * (Ve + 1),
              K = xe + me + H,
              ae = xe + fe + H,
              se = xe + fe + F,
              de = xe + me + F;
            Ae(K, ae, se, de);
          }
        }
      }
      function oe(q, xe, he) {
        l.push(q), l.push(xe), l.push(he);
      }
      function ve(q, xe, he) {
        Re(q), Re(xe), Re(he);
        const me = i.length / 3,
          fe = y.generateTopUV(r, i, me - 3, me - 2, me - 1);
        ye(fe[0]), ye(fe[1]), ye(fe[2]);
      }
      function Ae(q, xe, he, me) {
        Re(q), Re(xe), Re(me), Re(xe), Re(he), Re(me);
        const fe = i.length / 3,
          Ve = y.generateSideWallUV(r, i, fe - 6, fe - 3, fe - 2, fe - 1);
        ye(Ve[0]), ye(Ve[1]), ye(Ve[3]), ye(Ve[1]), ye(Ve[2]), ye(Ve[3]);
      }
      function Re(q) {
        i.push(l[q * 3 + 0]), i.push(l[q * 3 + 1]), i.push(l[q * 3 + 2]);
      }
      function ye(q) {
        o.push(q.x), o.push(q.y);
      }
    }
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  toJSON() {
    const e = super.toJSON(),
      n = this.parameters.shapes,
      r = this.parameters.options;
    return MG(n, r, e);
  }
  static fromJSON(e, n) {
    const r = [];
    for (let o = 0, s = e.shapes.length; o < s; o++) {
      const a = n[e.shapes[o]];
      r.push(a);
    }
    const i = e.options.extrudePath;
    return (
      i !== void 0 && (e.options.extrudePath = new g0[i.type]().fromJSON(i)),
      new vy(r, e.options)
    );
  }
}
const EG = {
  generateTopUV: function (t, e, n, r, i) {
    const o = e[n * 3],
      s = e[n * 3 + 1],
      a = e[r * 3],
      l = e[r * 3 + 1],
      c = e[i * 3],
      u = e[i * 3 + 1];
    return [new Fe(o, s), new Fe(a, l), new Fe(c, u)];
  },
  generateSideWallUV: function (t, e, n, r, i, o) {
    const s = e[n * 3],
      a = e[n * 3 + 1],
      l = e[n * 3 + 2],
      c = e[r * 3],
      u = e[r * 3 + 1],
      h = e[r * 3 + 2],
      p = e[i * 3],
      m = e[i * 3 + 1],
      v = e[i * 3 + 2],
      S = e[o * 3],
      x = e[o * 3 + 1],
      g = e[o * 3 + 2];
    return Math.abs(a - u) < Math.abs(s - c)
      ? [new Fe(s, 1 - l), new Fe(c, 1 - h), new Fe(p, 1 - v), new Fe(S, 1 - g)]
      : [
          new Fe(a, 1 - l),
          new Fe(u, 1 - h),
          new Fe(m, 1 - v),
          new Fe(x, 1 - g),
        ];
  },
};
function MG(t, e, n) {
  if (((n.shapes = []), Array.isArray(t)))
    for (let r = 0, i = t.length; r < i; r++) {
      const o = t[r];
      n.shapes.push(o.uuid);
    }
  else n.shapes.push(t.uuid);
  return (
    (n.options = Object.assign({}, e)),
    e.extrudePath !== void 0 &&
      (n.options.extrudePath = e.extrudePath.toJSON()),
    n
  );
}
class yy extends gl {
  constructor(e = 1, n = 0) {
    const r = (1 + Math.sqrt(5)) / 2,
      i = [
        -1,
        r,
        0,
        1,
        r,
        0,
        -1,
        -r,
        0,
        1,
        -r,
        0,
        0,
        -1,
        r,
        0,
        1,
        r,
        0,
        -1,
        -r,
        0,
        1,
        -r,
        r,
        0,
        -1,
        r,
        0,
        1,
        -r,
        0,
        -1,
        -r,
        0,
        1,
      ],
      o = [
        0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11,
        10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9,
        4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1,
      ];
    super(i, o, e, n),
      (this.type = "IcosahedronGeometry"),
      (this.parameters = { radius: e, detail: n });
  }
  static fromJSON(e) {
    return new yy(e.radius, e.detail);
  }
}
class bp extends gl {
  constructor(e = 1, n = 0) {
    const r = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1],
      i = [
        0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2,
      ];
    super(r, i, e, n),
      (this.type = "OctahedronGeometry"),
      (this.parameters = { radius: e, detail: n });
  }
  static fromJSON(e) {
    return new bp(e.radius, e.detail);
  }
}
class xy extends It {
  constructor(e = 0.5, n = 1, r = 32, i = 1, o = 0, s = Math.PI * 2) {
    super(),
      (this.type = "RingGeometry"),
      (this.parameters = {
        innerRadius: e,
        outerRadius: n,
        thetaSegments: r,
        phiSegments: i,
        thetaStart: o,
        thetaLength: s,
      }),
      (r = Math.max(3, r)),
      (i = Math.max(1, i));
    const a = [],
      l = [],
      c = [],
      u = [];
    let h = e;
    const p = (n - e) / i,
      m = new W(),
      v = new Fe();
    for (let S = 0; S <= i; S++) {
      for (let x = 0; x <= r; x++) {
        const g = o + (x / r) * s;
        (m.x = h * Math.cos(g)),
          (m.y = h * Math.sin(g)),
          l.push(m.x, m.y, m.z),
          c.push(0, 0, 1),
          (v.x = (m.x / n + 1) / 2),
          (v.y = (m.y / n + 1) / 2),
          u.push(v.x, v.y);
      }
      h += p;
    }
    for (let S = 0; S < i; S++) {
      const x = S * (r + 1);
      for (let g = 0; g < r; g++) {
        const y = g + x,
          _ = y,
          b = y + r + 1,
          T = y + r + 2,
          M = y + 1;
        a.push(_, b, M), a.push(b, T, M);
      }
    }
    this.setIndex(a),
      this.setAttribute("position", new ut(l, 3)),
      this.setAttribute("normal", new ut(c, 3)),
      this.setAttribute("uv", new ut(u, 2));
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  static fromJSON(e) {
    return new xy(
      e.innerRadius,
      e.outerRadius,
      e.thetaSegments,
      e.phiSegments,
      e.thetaStart,
      e.thetaLength
    );
  }
}
class _y extends It {
  constructor(
    e = new tl([new Fe(0, 0.5), new Fe(-0.5, -0.5), new Fe(0.5, -0.5)]),
    n = 12
  ) {
    super(),
      (this.type = "ShapeGeometry"),
      (this.parameters = { shapes: e, curveSegments: n });
    const r = [],
      i = [],
      o = [],
      s = [];
    let a = 0,
      l = 0;
    if (Array.isArray(e) === !1) c(e);
    else
      for (let u = 0; u < e.length; u++)
        c(e[u]), this.addGroup(a, l, u), (a += l), (l = 0);
    this.setIndex(r),
      this.setAttribute("position", new ut(i, 3)),
      this.setAttribute("normal", new ut(o, 3)),
      this.setAttribute("uv", new ut(s, 2));
    function c(u) {
      const h = i.length / 3,
        p = u.extractPoints(n);
      let m = p.shape;
      const v = p.holes;
      _s.isClockWise(m) === !1 && (m = m.reverse());
      for (let x = 0, g = v.length; x < g; x++) {
        const y = v[x];
        _s.isClockWise(y) === !0 && (v[x] = y.reverse());
      }
      const S = _s.triangulateShape(m, v);
      for (let x = 0, g = v.length; x < g; x++) {
        const y = v[x];
        m = m.concat(y);
      }
      for (let x = 0, g = m.length; x < g; x++) {
        const y = m[x];
        i.push(y.x, y.y, 0), o.push(0, 0, 1), s.push(y.x, y.y);
      }
      for (let x = 0, g = S.length; x < g; x++) {
        const y = S[x],
          _ = y[0] + h,
          b = y[1] + h,
          T = y[2] + h;
        r.push(_, b, T), (l += 3);
      }
    }
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  toJSON() {
    const e = super.toJSON(),
      n = this.parameters.shapes;
    return CG(n, e);
  }
  static fromJSON(e, n) {
    const r = [];
    for (let i = 0, o = e.shapes.length; i < o; i++) {
      const s = n[e.shapes[i]];
      r.push(s);
    }
    return new _y(r, e.curveSegments);
  }
}
function CG(t, e) {
  if (((e.shapes = []), Array.isArray(t)))
    for (let n = 0, r = t.length; n < r; n++) {
      const i = t[n];
      e.shapes.push(i.uuid);
    }
  else e.shapes.push(t.uuid);
  return e;
}
class Ep extends It {
  constructor(
    e = 1,
    n = 32,
    r = 16,
    i = 0,
    o = Math.PI * 2,
    s = 0,
    a = Math.PI
  ) {
    super(),
      (this.type = "SphereGeometry"),
      (this.parameters = {
        radius: e,
        widthSegments: n,
        heightSegments: r,
        phiStart: i,
        phiLength: o,
        thetaStart: s,
        thetaLength: a,
      }),
      (n = Math.max(3, Math.floor(n))),
      (r = Math.max(2, Math.floor(r)));
    const l = Math.min(s + a, Math.PI);
    let c = 0;
    const u = [],
      h = new W(),
      p = new W(),
      m = [],
      v = [],
      S = [],
      x = [];
    for (let g = 0; g <= r; g++) {
      const y = [],
        _ = g / r;
      let b = 0;
      g === 0 && s === 0
        ? (b = 0.5 / n)
        : g === r && l === Math.PI && (b = -0.5 / n);
      for (let T = 0; T <= n; T++) {
        const M = T / n;
        (h.x = -e * Math.cos(i + M * o) * Math.sin(s + _ * a)),
          (h.y = e * Math.cos(s + _ * a)),
          (h.z = e * Math.sin(i + M * o) * Math.sin(s + _ * a)),
          v.push(h.x, h.y, h.z),
          p.copy(h).normalize(),
          S.push(p.x, p.y, p.z),
          x.push(M + b, 1 - _),
          y.push(c++);
      }
      u.push(y);
    }
    for (let g = 0; g < r; g++)
      for (let y = 0; y < n; y++) {
        const _ = u[g][y + 1],
          b = u[g][y],
          T = u[g + 1][y],
          M = u[g + 1][y + 1];
        (g !== 0 || s > 0) && m.push(_, b, M),
          (g !== r - 1 || l < Math.PI) && m.push(b, T, M);
      }
    this.setIndex(m),
      this.setAttribute("position", new ut(v, 3)),
      this.setAttribute("normal", new ut(S, 3)),
      this.setAttribute("uv", new ut(x, 2));
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  static fromJSON(e) {
    return new Ep(
      e.radius,
      e.widthSegments,
      e.heightSegments,
      e.phiStart,
      e.phiLength,
      e.thetaStart,
      e.thetaLength
    );
  }
}
class Sy extends gl {
  constructor(e = 1, n = 0) {
    const r = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1],
      i = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];
    super(r, i, e, n),
      (this.type = "TetrahedronGeometry"),
      (this.parameters = { radius: e, detail: n });
  }
  static fromJSON(e) {
    return new Sy(e.radius, e.detail);
  }
}
class wy extends It {
  constructor(e = 1, n = 0.4, r = 12, i = 48, o = Math.PI * 2) {
    super(),
      (this.type = "TorusGeometry"),
      (this.parameters = {
        radius: e,
        tube: n,
        radialSegments: r,
        tubularSegments: i,
        arc: o,
      }),
      (r = Math.floor(r)),
      (i = Math.floor(i));
    const s = [],
      a = [],
      l = [],
      c = [],
      u = new W(),
      h = new W(),
      p = new W();
    for (let m = 0; m <= r; m++)
      for (let v = 0; v <= i; v++) {
        const S = (v / i) * o,
          x = (m / r) * Math.PI * 2;
        (h.x = (e + n * Math.cos(x)) * Math.cos(S)),
          (h.y = (e + n * Math.cos(x)) * Math.sin(S)),
          (h.z = n * Math.sin(x)),
          a.push(h.x, h.y, h.z),
          (u.x = e * Math.cos(S)),
          (u.y = e * Math.sin(S)),
          p.subVectors(h, u).normalize(),
          l.push(p.x, p.y, p.z),
          c.push(v / i),
          c.push(m / r);
      }
    for (let m = 1; m <= r; m++)
      for (let v = 1; v <= i; v++) {
        const S = (i + 1) * m + v - 1,
          x = (i + 1) * (m - 1) + v - 1,
          g = (i + 1) * (m - 1) + v,
          y = (i + 1) * m + v;
        s.push(S, x, y), s.push(x, g, y);
      }
    this.setIndex(s),
      this.setAttribute("position", new ut(a, 3)),
      this.setAttribute("normal", new ut(l, 3)),
      this.setAttribute("uv", new ut(c, 2));
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  static fromJSON(e) {
    return new wy(e.radius, e.tube, e.radialSegments, e.tubularSegments, e.arc);
  }
}
class by extends It {
  constructor(e = 1, n = 0.4, r = 64, i = 8, o = 2, s = 3) {
    super(),
      (this.type = "TorusKnotGeometry"),
      (this.parameters = {
        radius: e,
        tube: n,
        tubularSegments: r,
        radialSegments: i,
        p: o,
        q: s,
      }),
      (r = Math.floor(r)),
      (i = Math.floor(i));
    const a = [],
      l = [],
      c = [],
      u = [],
      h = new W(),
      p = new W(),
      m = new W(),
      v = new W(),
      S = new W(),
      x = new W(),
      g = new W();
    for (let _ = 0; _ <= r; ++_) {
      const b = (_ / r) * o * Math.PI * 2;
      y(b, o, s, e, m),
        y(b + 0.01, o, s, e, v),
        x.subVectors(v, m),
        g.addVectors(v, m),
        S.crossVectors(x, g),
        g.crossVectors(S, x),
        S.normalize(),
        g.normalize();
      for (let T = 0; T <= i; ++T) {
        const M = (T / i) * Math.PI * 2,
          C = -n * Math.cos(M),
          L = n * Math.sin(M);
        (h.x = m.x + (C * g.x + L * S.x)),
          (h.y = m.y + (C * g.y + L * S.y)),
          (h.z = m.z + (C * g.z + L * S.z)),
          l.push(h.x, h.y, h.z),
          p.subVectors(h, m).normalize(),
          c.push(p.x, p.y, p.z),
          u.push(_ / r),
          u.push(T / i);
      }
    }
    for (let _ = 1; _ <= r; _++)
      for (let b = 1; b <= i; b++) {
        const T = (i + 1) * (_ - 1) + (b - 1),
          M = (i + 1) * _ + (b - 1),
          C = (i + 1) * _ + b,
          L = (i + 1) * (_ - 1) + b;
        a.push(T, M, L), a.push(M, C, L);
      }
    this.setIndex(a),
      this.setAttribute("position", new ut(l, 3)),
      this.setAttribute("normal", new ut(c, 3)),
      this.setAttribute("uv", new ut(u, 2));
    function y(_, b, T, M, C) {
      const L = Math.cos(_),
        A = Math.sin(_),
        P = (T / b) * _,
        k = Math.cos(P);
      (C.x = M * (2 + k) * 0.5 * L),
        (C.y = M * (2 + k) * A * 0.5),
        (C.z = M * Math.sin(P) * 0.5);
    }
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  static fromJSON(e) {
    return new by(
      e.radius,
      e.tube,
      e.tubularSegments,
      e.radialSegments,
      e.p,
      e.q
    );
  }
}
class Ey extends It {
  constructor(
    e = new eM(new W(-1, -1, 0), new W(-1, 1, 0), new W(1, 1, 0)),
    n = 64,
    r = 1,
    i = 8,
    o = !1
  ) {
    super(),
      (this.type = "TubeGeometry"),
      (this.parameters = {
        path: e,
        tubularSegments: n,
        radius: r,
        radialSegments: i,
        closed: o,
      });
    const s = e.computeFrenetFrames(n, o);
    (this.tangents = s.tangents),
      (this.normals = s.normals),
      (this.binormals = s.binormals);
    const a = new W(),
      l = new W(),
      c = new Fe();
    let u = new W();
    const h = [],
      p = [],
      m = [],
      v = [];
    S(),
      this.setIndex(v),
      this.setAttribute("position", new ut(h, 3)),
      this.setAttribute("normal", new ut(p, 3)),
      this.setAttribute("uv", new ut(m, 2));
    function S() {
      for (let _ = 0; _ < n; _++) x(_);
      x(o === !1 ? n : 0), y(), g();
    }
    function x(_) {
      u = e.getPointAt(_ / n, u);
      const b = s.normals[_],
        T = s.binormals[_];
      for (let M = 0; M <= i; M++) {
        const C = (M / i) * Math.PI * 2,
          L = Math.sin(C),
          A = -Math.cos(C);
        (l.x = A * b.x + L * T.x),
          (l.y = A * b.y + L * T.y),
          (l.z = A * b.z + L * T.z),
          l.normalize(),
          p.push(l.x, l.y, l.z),
          (a.x = u.x + r * l.x),
          (a.y = u.y + r * l.y),
          (a.z = u.z + r * l.z),
          h.push(a.x, a.y, a.z);
      }
    }
    function g() {
      for (let _ = 1; _ <= n; _++)
        for (let b = 1; b <= i; b++) {
          const T = (i + 1) * (_ - 1) + (b - 1),
            M = (i + 1) * _ + (b - 1),
            C = (i + 1) * _ + b,
            L = (i + 1) * (_ - 1) + b;
          v.push(T, M, L), v.push(M, C, L);
        }
    }
    function y() {
      for (let _ = 0; _ <= n; _++)
        for (let b = 0; b <= i; b++)
          (c.x = _ / n), (c.y = b / i), m.push(c.x, c.y);
    }
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  toJSON() {
    const e = super.toJSON();
    return (e.path = this.parameters.path.toJSON()), e;
  }
  static fromJSON(e) {
    return new Ey(
      new g0[e.path.type]().fromJSON(e.path),
      e.tubularSegments,
      e.radius,
      e.radialSegments,
      e.closed
    );
  }
}
class nM extends It {
  constructor(e = null) {
    if (
      (super(),
      (this.type = "WireframeGeometry"),
      (this.parameters = { geometry: e }),
      e !== null)
    ) {
      const n = [],
        r = new Set(),
        i = new W(),
        o = new W();
      if (e.index !== null) {
        const s = e.attributes.position,
          a = e.index;
        let l = e.groups;
        l.length === 0 &&
          (l = [{ start: 0, count: a.count, materialIndex: 0 }]);
        for (let c = 0, u = l.length; c < u; ++c) {
          const h = l[c],
            p = h.start,
            m = h.count;
          for (let v = p, S = p + m; v < S; v += 3)
            for (let x = 0; x < 3; x++) {
              const g = a.getX(v + x),
                y = a.getX(v + ((x + 1) % 3));
              i.fromBufferAttribute(s, g),
                o.fromBufferAttribute(s, y),
                $A(i, o, r) === !0 &&
                  (n.push(i.x, i.y, i.z), n.push(o.x, o.y, o.z));
            }
        }
      } else {
        const s = e.attributes.position;
        for (let a = 0, l = s.count / 3; a < l; a++)
          for (let c = 0; c < 3; c++) {
            const u = 3 * a + c,
              h = 3 * a + ((c + 1) % 3);
            i.fromBufferAttribute(s, u),
              o.fromBufferAttribute(s, h),
              $A(i, o, r) === !0 &&
                (n.push(i.x, i.y, i.z), n.push(o.x, o.y, o.z));
          }
      }
      this.setAttribute("position", new ut(n, 3));
    }
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
}
function $A(t, e, n) {
  const r = `${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`,
    i = `${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`;
  return n.has(r) === !0 || n.has(i) === !0 ? !1 : (n.add(r), n.add(i), !0);
}
var XA = Object.freeze({
  __proto__: null,
  BoxGeometry: zc,
  CapsuleGeometry: dy,
  CircleGeometry: hy,
  ConeGeometry: py,
  CylinderGeometry: Hf,
  DodecahedronGeometry: my,
  EdgesGeometry: iF,
  ExtrudeGeometry: vy,
  IcosahedronGeometry: yy,
  LatheGeometry: wp,
  OctahedronGeometry: bp,
  PlaneGeometry: ml,
  PolyhedronGeometry: gl,
  RingGeometry: xy,
  ShapeGeometry: _y,
  SphereGeometry: Ep,
  TetrahedronGeometry: Sy,
  TorusGeometry: wy,
  TorusKnotGeometry: by,
  TubeGeometry: Ey,
  WireframeGeometry: nM,
});
class lF extends Rr {
  constructor(e) {
    super(),
      (this.isShadowMaterial = !0),
      (this.type = "ShadowMaterial"),
      (this.color = new nt(0)),
      (this.transparent = !0),
      (this.fog = !0),
      this.setValues(e);
  }
  copy(e) {
    return super.copy(e), this.color.copy(e.color), (this.fog = e.fog), this;
  }
}
class cF extends Ko {
  constructor(e) {
    super(e),
      (this.isRawShaderMaterial = !0),
      (this.type = "RawShaderMaterial");
  }
}
class rM extends Rr {
  constructor(e) {
    super(),
      (this.isMeshStandardMaterial = !0),
      (this.defines = { STANDARD: "" }),
      (this.type = "MeshStandardMaterial"),
      (this.color = new nt(16777215)),
      (this.roughness = 1),
      (this.metalness = 0),
      (this.map = null),
      (this.lightMap = null),
      (this.lightMapIntensity = 1),
      (this.aoMap = null),
      (this.aoMapIntensity = 1),
      (this.emissive = new nt(0)),
      (this.emissiveIntensity = 1),
      (this.emissiveMap = null),
      (this.bumpMap = null),
      (this.bumpScale = 1),
      (this.normalMap = null),
      (this.normalMapType = pl),
      (this.normalScale = new Fe(1, 1)),
      (this.displacementMap = null),
      (this.displacementScale = 1),
      (this.displacementBias = 0),
      (this.roughnessMap = null),
      (this.metalnessMap = null),
      (this.alphaMap = null),
      (this.envMap = null),
      (this.envMapIntensity = 1),
      (this.wireframe = !1),
      (this.wireframeLinewidth = 1),
      (this.wireframeLinecap = "round"),
      (this.wireframeLinejoin = "round"),
      (this.flatShading = !1),
      (this.fog = !0),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      (this.defines = { STANDARD: "" }),
      this.color.copy(e.color),
      (this.roughness = e.roughness),
      (this.metalness = e.metalness),
      (this.map = e.map),
      (this.lightMap = e.lightMap),
      (this.lightMapIntensity = e.lightMapIntensity),
      (this.aoMap = e.aoMap),
      (this.aoMapIntensity = e.aoMapIntensity),
      this.emissive.copy(e.emissive),
      (this.emissiveMap = e.emissiveMap),
      (this.emissiveIntensity = e.emissiveIntensity),
      (this.bumpMap = e.bumpMap),
      (this.bumpScale = e.bumpScale),
      (this.normalMap = e.normalMap),
      (this.normalMapType = e.normalMapType),
      this.normalScale.copy(e.normalScale),
      (this.displacementMap = e.displacementMap),
      (this.displacementScale = e.displacementScale),
      (this.displacementBias = e.displacementBias),
      (this.roughnessMap = e.roughnessMap),
      (this.metalnessMap = e.metalnessMap),
      (this.alphaMap = e.alphaMap),
      (this.envMap = e.envMap),
      (this.envMapIntensity = e.envMapIntensity),
      (this.wireframe = e.wireframe),
      (this.wireframeLinewidth = e.wireframeLinewidth),
      (this.wireframeLinecap = e.wireframeLinecap),
      (this.wireframeLinejoin = e.wireframeLinejoin),
      (this.flatShading = e.flatShading),
      (this.fog = e.fog),
      this
    );
  }
}
class uF extends rM {
  constructor(e) {
    super(),
      (this.isMeshPhysicalMaterial = !0),
      (this.defines = { STANDARD: "", PHYSICAL: "" }),
      (this.type = "MeshPhysicalMaterial"),
      (this.anisotropyRotation = 0),
      (this.anisotropyMap = null),
      (this.clearcoatMap = null),
      (this.clearcoatRoughness = 0),
      (this.clearcoatRoughnessMap = null),
      (this.clearcoatNormalScale = new Fe(1, 1)),
      (this.clearcoatNormalMap = null),
      (this.ior = 1.5),
      Object.defineProperty(this, "reflectivity", {
        get: function () {
          return Dn((2.5 * (this.ior - 1)) / (this.ior + 1), 0, 1);
        },
        set: function (n) {
          this.ior = (1 + 0.4 * n) / (1 - 0.4 * n);
        },
      }),
      (this.iridescenceMap = null),
      (this.iridescenceIOR = 1.3),
      (this.iridescenceThicknessRange = [100, 400]),
      (this.iridescenceThicknessMap = null),
      (this.sheenColor = new nt(0)),
      (this.sheenColorMap = null),
      (this.sheenRoughness = 1),
      (this.sheenRoughnessMap = null),
      (this.transmissionMap = null),
      (this.thickness = 0),
      (this.thicknessMap = null),
      (this.attenuationDistance = 1 / 0),
      (this.attenuationColor = new nt(1, 1, 1)),
      (this.specularIntensity = 1),
      (this.specularIntensityMap = null),
      (this.specularColor = new nt(1, 1, 1)),
      (this.specularColorMap = null),
      (this._anisotropy = 0),
      (this._clearcoat = 0),
      (this._iridescence = 0),
      (this._sheen = 0),
      (this._transmission = 0),
      this.setValues(e);
  }
  get anisotropy() {
    return this._anisotropy;
  }
  set anisotropy(e) {
    this._anisotropy > 0 != e > 0 && this.version++, (this._anisotropy = e);
  }
  get clearcoat() {
    return this._clearcoat;
  }
  set clearcoat(e) {
    this._clearcoat > 0 != e > 0 && this.version++, (this._clearcoat = e);
  }
  get iridescence() {
    return this._iridescence;
  }
  set iridescence(e) {
    this._iridescence > 0 != e > 0 && this.version++, (this._iridescence = e);
  }
  get sheen() {
    return this._sheen;
  }
  set sheen(e) {
    this._sheen > 0 != e > 0 && this.version++, (this._sheen = e);
  }
  get transmission() {
    return this._transmission;
  }
  set transmission(e) {
    this._transmission > 0 != e > 0 && this.version++, (this._transmission = e);
  }
  copy(e) {
    return (
      super.copy(e),
      (this.defines = { STANDARD: "", PHYSICAL: "" }),
      (this.anisotropy = e.anisotropy),
      (this.anisotropyRotation = e.anisotropyRotation),
      (this.anisotropyMap = e.anisotropyMap),
      (this.clearcoat = e.clearcoat),
      (this.clearcoatMap = e.clearcoatMap),
      (this.clearcoatRoughness = e.clearcoatRoughness),
      (this.clearcoatRoughnessMap = e.clearcoatRoughnessMap),
      (this.clearcoatNormalMap = e.clearcoatNormalMap),
      this.clearcoatNormalScale.copy(e.clearcoatNormalScale),
      (this.ior = e.ior),
      (this.iridescence = e.iridescence),
      (this.iridescenceMap = e.iridescenceMap),
      (this.iridescenceIOR = e.iridescenceIOR),
      (this.iridescenceThicknessRange = [...e.iridescenceThicknessRange]),
      (this.iridescenceThicknessMap = e.iridescenceThicknessMap),
      (this.sheen = e.sheen),
      this.sheenColor.copy(e.sheenColor),
      (this.sheenColorMap = e.sheenColorMap),
      (this.sheenRoughness = e.sheenRoughness),
      (this.sheenRoughnessMap = e.sheenRoughnessMap),
      (this.transmission = e.transmission),
      (this.transmissionMap = e.transmissionMap),
      (this.thickness = e.thickness),
      (this.thicknessMap = e.thicknessMap),
      (this.attenuationDistance = e.attenuationDistance),
      this.attenuationColor.copy(e.attenuationColor),
      (this.specularIntensity = e.specularIntensity),
      (this.specularIntensityMap = e.specularIntensityMap),
      this.specularColor.copy(e.specularColor),
      (this.specularColorMap = e.specularColorMap),
      this
    );
  }
}
class fF extends Rr {
  constructor(e) {
    super(),
      (this.isMeshPhongMaterial = !0),
      (this.type = "MeshPhongMaterial"),
      (this.color = new nt(16777215)),
      (this.specular = new nt(1118481)),
      (this.shininess = 30),
      (this.map = null),
      (this.lightMap = null),
      (this.lightMapIntensity = 1),
      (this.aoMap = null),
      (this.aoMapIntensity = 1),
      (this.emissive = new nt(0)),
      (this.emissiveIntensity = 1),
      (this.emissiveMap = null),
      (this.bumpMap = null),
      (this.bumpScale = 1),
      (this.normalMap = null),
      (this.normalMapType = pl),
      (this.normalScale = new Fe(1, 1)),
      (this.displacementMap = null),
      (this.displacementScale = 1),
      (this.displacementBias = 0),
      (this.specularMap = null),
      (this.alphaMap = null),
      (this.envMap = null),
      (this.combine = gp),
      (this.reflectivity = 1),
      (this.refractionRatio = 0.98),
      (this.wireframe = !1),
      (this.wireframeLinewidth = 1),
      (this.wireframeLinecap = "round"),
      (this.wireframeLinejoin = "round"),
      (this.flatShading = !1),
      (this.fog = !0),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      this.color.copy(e.color),
      this.specular.copy(e.specular),
      (this.shininess = e.shininess),
      (this.map = e.map),
      (this.lightMap = e.lightMap),
      (this.lightMapIntensity = e.lightMapIntensity),
      (this.aoMap = e.aoMap),
      (this.aoMapIntensity = e.aoMapIntensity),
      this.emissive.copy(e.emissive),
      (this.emissiveMap = e.emissiveMap),
      (this.emissiveIntensity = e.emissiveIntensity),
      (this.bumpMap = e.bumpMap),
      (this.bumpScale = e.bumpScale),
      (this.normalMap = e.normalMap),
      (this.normalMapType = e.normalMapType),
      this.normalScale.copy(e.normalScale),
      (this.displacementMap = e.displacementMap),
      (this.displacementScale = e.displacementScale),
      (this.displacementBias = e.displacementBias),
      (this.specularMap = e.specularMap),
      (this.alphaMap = e.alphaMap),
      (this.envMap = e.envMap),
      (this.combine = e.combine),
      (this.reflectivity = e.reflectivity),
      (this.refractionRatio = e.refractionRatio),
      (this.wireframe = e.wireframe),
      (this.wireframeLinewidth = e.wireframeLinewidth),
      (this.wireframeLinecap = e.wireframeLinecap),
      (this.wireframeLinejoin = e.wireframeLinejoin),
      (this.flatShading = e.flatShading),
      (this.fog = e.fog),
      this
    );
  }
}
class dF extends Rr {
  constructor(e) {
    super(),
      (this.isMeshToonMaterial = !0),
      (this.defines = { TOON: "" }),
      (this.type = "MeshToonMaterial"),
      (this.color = new nt(16777215)),
      (this.map = null),
      (this.gradientMap = null),
      (this.lightMap = null),
      (this.lightMapIntensity = 1),
      (this.aoMap = null),
      (this.aoMapIntensity = 1),
      (this.emissive = new nt(0)),
      (this.emissiveIntensity = 1),
      (this.emissiveMap = null),
      (this.bumpMap = null),
      (this.bumpScale = 1),
      (this.normalMap = null),
      (this.normalMapType = pl),
      (this.normalScale = new Fe(1, 1)),
      (this.displacementMap = null),
      (this.displacementScale = 1),
      (this.displacementBias = 0),
      (this.alphaMap = null),
      (this.wireframe = !1),
      (this.wireframeLinewidth = 1),
      (this.wireframeLinecap = "round"),
      (this.wireframeLinejoin = "round"),
      (this.fog = !0),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      this.color.copy(e.color),
      (this.map = e.map),
      (this.gradientMap = e.gradientMap),
      (this.lightMap = e.lightMap),
      (this.lightMapIntensity = e.lightMapIntensity),
      (this.aoMap = e.aoMap),
      (this.aoMapIntensity = e.aoMapIntensity),
      this.emissive.copy(e.emissive),
      (this.emissiveMap = e.emissiveMap),
      (this.emissiveIntensity = e.emissiveIntensity),
      (this.bumpMap = e.bumpMap),
      (this.bumpScale = e.bumpScale),
      (this.normalMap = e.normalMap),
      (this.normalMapType = e.normalMapType),
      this.normalScale.copy(e.normalScale),
      (this.displacementMap = e.displacementMap),
      (this.displacementScale = e.displacementScale),
      (this.displacementBias = e.displacementBias),
      (this.alphaMap = e.alphaMap),
      (this.wireframe = e.wireframe),
      (this.wireframeLinewidth = e.wireframeLinewidth),
      (this.wireframeLinecap = e.wireframeLinecap),
      (this.wireframeLinejoin = e.wireframeLinejoin),
      (this.fog = e.fog),
      this
    );
  }
}
class hF extends Rr {
  constructor(e) {
    super(),
      (this.isMeshNormalMaterial = !0),
      (this.type = "MeshNormalMaterial"),
      (this.bumpMap = null),
      (this.bumpScale = 1),
      (this.normalMap = null),
      (this.normalMapType = pl),
      (this.normalScale = new Fe(1, 1)),
      (this.displacementMap = null),
      (this.displacementScale = 1),
      (this.displacementBias = 0),
      (this.wireframe = !1),
      (this.wireframeLinewidth = 1),
      (this.flatShading = !1),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      (this.bumpMap = e.bumpMap),
      (this.bumpScale = e.bumpScale),
      (this.normalMap = e.normalMap),
      (this.normalMapType = e.normalMapType),
      this.normalScale.copy(e.normalScale),
      (this.displacementMap = e.displacementMap),
      (this.displacementScale = e.displacementScale),
      (this.displacementBias = e.displacementBias),
      (this.wireframe = e.wireframe),
      (this.wireframeLinewidth = e.wireframeLinewidth),
      (this.flatShading = e.flatShading),
      this
    );
  }
}
class pF extends Rr {
  constructor(e) {
    super(),
      (this.isMeshLambertMaterial = !0),
      (this.type = "MeshLambertMaterial"),
      (this.color = new nt(16777215)),
      (this.map = null),
      (this.lightMap = null),
      (this.lightMapIntensity = 1),
      (this.aoMap = null),
      (this.aoMapIntensity = 1),
      (this.emissive = new nt(0)),
      (this.emissiveIntensity = 1),
      (this.emissiveMap = null),
      (this.bumpMap = null),
      (this.bumpScale = 1),
      (this.normalMap = null),
      (this.normalMapType = pl),
      (this.normalScale = new Fe(1, 1)),
      (this.displacementMap = null),
      (this.displacementScale = 1),
      (this.displacementBias = 0),
      (this.specularMap = null),
      (this.alphaMap = null),
      (this.envMap = null),
      (this.combine = gp),
      (this.reflectivity = 1),
      (this.refractionRatio = 0.98),
      (this.wireframe = !1),
      (this.wireframeLinewidth = 1),
      (this.wireframeLinecap = "round"),
      (this.wireframeLinejoin = "round"),
      (this.flatShading = !1),
      (this.fog = !0),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      this.color.copy(e.color),
      (this.map = e.map),
      (this.lightMap = e.lightMap),
      (this.lightMapIntensity = e.lightMapIntensity),
      (this.aoMap = e.aoMap),
      (this.aoMapIntensity = e.aoMapIntensity),
      this.emissive.copy(e.emissive),
      (this.emissiveMap = e.emissiveMap),
      (this.emissiveIntensity = e.emissiveIntensity),
      (this.bumpMap = e.bumpMap),
      (this.bumpScale = e.bumpScale),
      (this.normalMap = e.normalMap),
      (this.normalMapType = e.normalMapType),
      this.normalScale.copy(e.normalScale),
      (this.displacementMap = e.displacementMap),
      (this.displacementScale = e.displacementScale),
      (this.displacementBias = e.displacementBias),
      (this.specularMap = e.specularMap),
      (this.alphaMap = e.alphaMap),
      (this.envMap = e.envMap),
      (this.combine = e.combine),
      (this.reflectivity = e.reflectivity),
      (this.refractionRatio = e.refractionRatio),
      (this.wireframe = e.wireframe),
      (this.wireframeLinewidth = e.wireframeLinewidth),
      (this.wireframeLinecap = e.wireframeLinecap),
      (this.wireframeLinejoin = e.wireframeLinejoin),
      (this.flatShading = e.flatShading),
      (this.fog = e.fog),
      this
    );
  }
}
class mF extends Rr {
  constructor(e) {
    super(),
      (this.isMeshMatcapMaterial = !0),
      (this.defines = { MATCAP: "" }),
      (this.type = "MeshMatcapMaterial"),
      (this.color = new nt(16777215)),
      (this.matcap = null),
      (this.map = null),
      (this.bumpMap = null),
      (this.bumpScale = 1),
      (this.normalMap = null),
      (this.normalMapType = pl),
      (this.normalScale = new Fe(1, 1)),
      (this.displacementMap = null),
      (this.displacementScale = 1),
      (this.displacementBias = 0),
      (this.alphaMap = null),
      (this.flatShading = !1),
      (this.fog = !0),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      (this.defines = { MATCAP: "" }),
      this.color.copy(e.color),
      (this.matcap = e.matcap),
      (this.map = e.map),
      (this.bumpMap = e.bumpMap),
      (this.bumpScale = e.bumpScale),
      (this.normalMap = e.normalMap),
      (this.normalMapType = e.normalMapType),
      this.normalScale.copy(e.normalScale),
      (this.displacementMap = e.displacementMap),
      (this.displacementScale = e.displacementScale),
      (this.displacementBias = e.displacementBias),
      (this.alphaMap = e.alphaMap),
      (this.flatShading = e.flatShading),
      (this.fog = e.fog),
      this
    );
  }
}
class gF extends li {
  constructor(e) {
    super(),
      (this.isLineDashedMaterial = !0),
      (this.type = "LineDashedMaterial"),
      (this.scale = 1),
      (this.dashSize = 3),
      (this.gapSize = 1),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      (this.scale = e.scale),
      (this.dashSize = e.dashSize),
      (this.gapSize = e.gapSize),
      this
    );
  }
}
function ac(t, e, n) {
  return !t || (!n && t.constructor === e)
    ? t
    : typeof e.BYTES_PER_ELEMENT == "number"
    ? new e(t)
    : Array.prototype.slice.call(t);
}
function vF(t) {
  return ArrayBuffer.isView(t) && !(t instanceof DataView);
}
function yF(t) {
  function e(i, o) {
    return t[i] - t[o];
  }
  const n = t.length,
    r = new Array(n);
  for (let i = 0; i !== n; ++i) r[i] = i;
  return r.sort(e), r;
}
function Mw(t, e, n) {
  const r = t.length,
    i = new t.constructor(r);
  for (let o = 0, s = 0; s !== r; ++o) {
    const a = n[o] * e;
    for (let l = 0; l !== e; ++l) i[s++] = t[a + l];
  }
  return i;
}
function iM(t, e, n, r) {
  let i = 1,
    o = t[0];
  for (; o !== void 0 && o[r] === void 0; ) o = t[i++];
  if (o === void 0) return;
  let s = o[r];
  if (s !== void 0)
    if (Array.isArray(s))
      do
        (s = o[r]),
          s !== void 0 && (e.push(o.time), n.push.apply(n, s)),
          (o = t[i++]);
      while (o !== void 0);
    else if (s.toArray !== void 0)
      do
        (s = o[r]),
          s !== void 0 && (e.push(o.time), s.toArray(n, n.length)),
          (o = t[i++]);
      while (o !== void 0);
    else
      do (s = o[r]), s !== void 0 && (e.push(o.time), n.push(s)), (o = t[i++]);
      while (o !== void 0);
}
function TG(t, e, n, r, i = 30) {
  const o = t.clone();
  o.name = e;
  const s = [];
  for (let l = 0; l < o.tracks.length; ++l) {
    const c = o.tracks[l],
      u = c.getValueSize(),
      h = [],
      p = [];
    for (let m = 0; m < c.times.length; ++m) {
      const v = c.times[m] * i;
      if (!(v < n || v >= r)) {
        h.push(c.times[m]);
        for (let S = 0; S < u; ++S) p.push(c.values[m * u + S]);
      }
    }
    h.length !== 0 &&
      ((c.times = ac(h, c.times.constructor)),
      (c.values = ac(p, c.values.constructor)),
      s.push(c));
  }
  o.tracks = s;
  let a = 1 / 0;
  for (let l = 0; l < o.tracks.length; ++l)
    a > o.tracks[l].times[0] && (a = o.tracks[l].times[0]);
  for (let l = 0; l < o.tracks.length; ++l) o.tracks[l].shift(-1 * a);
  return o.resetDuration(), o;
}
function AG(t, e = 0, n = t, r = 30) {
  r <= 0 && (r = 30);
  const i = n.tracks.length,
    o = e / r;
  for (let s = 0; s < i; ++s) {
    const a = n.tracks[s],
      l = a.ValueTypeName;
    if (l === "bool" || l === "string") continue;
    const c = t.tracks.find(function (g) {
      return g.name === a.name && g.ValueTypeName === l;
    });
    if (c === void 0) continue;
    let u = 0;
    const h = a.getValueSize();
    a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline &&
      (u = h / 3);
    let p = 0;
    const m = c.getValueSize();
    c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline &&
      (p = m / 3);
    const v = a.times.length - 1;
    let S;
    if (o <= a.times[0]) {
      const g = u,
        y = h - u;
      S = a.values.slice(g, y);
    } else if (o >= a.times[v]) {
      const g = v * h + u,
        y = g + h - u;
      S = a.values.slice(g, y);
    } else {
      const g = a.createInterpolant(),
        y = u,
        _ = h - u;
      g.evaluate(o), (S = g.resultBuffer.slice(y, _));
    }
    l === "quaternion" &&
      new Gr().fromArray(S).normalize().conjugate().toArray(S);
    const x = c.times.length;
    for (let g = 0; g < x; ++g) {
      const y = g * m + p;
      if (l === "quaternion")
        Gr.multiplyQuaternionsFlat(c.values, y, S, 0, c.values, y);
      else {
        const _ = m - p * 2;
        for (let b = 0; b < _; ++b) c.values[y + b] -= S[b];
      }
    }
  }
  return (t.blendMode = NE), t;
}
const RG = {
  convertArray: ac,
  isTypedArray: vF,
  getKeyframeOrder: yF,
  sortedArray: Mw,
  flattenJSON: iM,
  subclip: TG,
  makeClipAdditive: AG,
};
class Mp {
  constructor(e, n, r, i) {
    (this.parameterPositions = e),
      (this._cachedIndex = 0),
      (this.resultBuffer = i !== void 0 ? i : new n.constructor(r)),
      (this.sampleValues = n),
      (this.valueSize = r),
      (this.settings = null),
      (this.DefaultSettings_ = {});
  }
  evaluate(e) {
    const n = this.parameterPositions;
    let r = this._cachedIndex,
      i = n[r],
      o = n[r - 1];
    e: {
      t: {
        let s;
        n: {
          r: if (!(e < i)) {
            for (let a = r + 2; ; ) {
              if (i === void 0) {
                if (e < o) break r;
                return (
                  (r = n.length),
                  (this._cachedIndex = r),
                  this.copySampleValue_(r - 1)
                );
              }
              if (r === a) break;
              if (((o = i), (i = n[++r]), e < i)) break t;
            }
            s = n.length;
            break n;
          }
          if (!(e >= o)) {
            const a = n[1];
            e < a && ((r = 2), (o = a));
            for (let l = r - 2; ; ) {
              if (o === void 0)
                return (this._cachedIndex = 0), this.copySampleValue_(0);
              if (r === l) break;
              if (((i = o), (o = n[--r - 1]), e >= o)) break t;
            }
            (s = r), (r = 0);
            break n;
          }
          break e;
        }
        for (; r < s; ) {
          const a = (r + s) >>> 1;
          e < n[a] ? (s = a) : (r = a + 1);
        }
        if (((i = n[r]), (o = n[r - 1]), o === void 0))
          return (this._cachedIndex = 0), this.copySampleValue_(0);
        if (i === void 0)
          return (
            (r = n.length),
            (this._cachedIndex = r),
            this.copySampleValue_(r - 1)
          );
      }
      (this._cachedIndex = r), this.intervalChanged_(r, o, i);
    }
    return this.interpolate_(r, o, e, i);
  }
  getSettings_() {
    return this.settings || this.DefaultSettings_;
  }
  copySampleValue_(e) {
    const n = this.resultBuffer,
      r = this.sampleValues,
      i = this.valueSize,
      o = e * i;
    for (let s = 0; s !== i; ++s) n[s] = r[o + s];
    return n;
  }
  interpolate_() {
    throw new Error("call to abstract method");
  }
  intervalChanged_() {}
}
class xF extends Mp {
  constructor(e, n, r, i) {
    super(e, n, r, i),
      (this._weightPrev = -0),
      (this._offsetPrev = -0),
      (this._weightNext = -0),
      (this._offsetNext = -0),
      (this.DefaultSettings_ = { endingStart: ic, endingEnd: ic });
  }
  intervalChanged_(e, n, r) {
    const i = this.parameterPositions;
    let o = e - 2,
      s = e + 1,
      a = i[o],
      l = i[s];
    if (a === void 0)
      switch (this.getSettings_().endingStart) {
        case oc:
          (o = e), (a = 2 * n - r);
          break;
        case kh:
          (o = i.length - 2), (a = n + i[o] - i[o + 1]);
          break;
        default:
          (o = e), (a = r);
      }
    if (l === void 0)
      switch (this.getSettings_().endingEnd) {
        case oc:
          (s = e), (l = 2 * r - n);
          break;
        case kh:
          (s = 1), (l = r + i[1] - i[0]);
          break;
        default:
          (s = e - 1), (l = n);
      }
    const c = (r - n) * 0.5,
      u = this.valueSize;
    (this._weightPrev = c / (n - a)),
      (this._weightNext = c / (l - r)),
      (this._offsetPrev = o * u),
      (this._offsetNext = s * u);
  }
  interpolate_(e, n, r, i) {
    const o = this.resultBuffer,
      s = this.sampleValues,
      a = this.valueSize,
      l = e * a,
      c = l - a,
      u = this._offsetPrev,
      h = this._offsetNext,
      p = this._weightPrev,
      m = this._weightNext,
      v = (r - n) / (i - n),
      S = v * v,
      x = S * v,
      g = -p * x + 2 * p * S - p * v,
      y = (1 + p) * x + (-1.5 - 2 * p) * S + (-0.5 + p) * v + 1,
      _ = (-1 - m) * x + (1.5 + m) * S + 0.5 * v,
      b = m * x - m * S;
    for (let T = 0; T !== a; ++T)
      o[T] = g * s[u + T] + y * s[c + T] + _ * s[l + T] + b * s[h + T];
    return o;
  }
}
class oM extends Mp {
  constructor(e, n, r, i) {
    super(e, n, r, i);
  }
  interpolate_(e, n, r, i) {
    const o = this.resultBuffer,
      s = this.sampleValues,
      a = this.valueSize,
      l = e * a,
      c = l - a,
      u = (r - n) / (i - n),
      h = 1 - u;
    for (let p = 0; p !== a; ++p) o[p] = s[c + p] * h + s[l + p] * u;
    return o;
  }
}
class _F extends Mp {
  constructor(e, n, r, i) {
    super(e, n, r, i);
  }
  interpolate_(e) {
    return this.copySampleValue_(e - 1);
  }
}
class Qo {
  constructor(e, n, r, i) {
    if (e === void 0)
      throw new Error("THREE.KeyframeTrack: track name is undefined");
    if (n === void 0 || n.length === 0)
      throw new Error("THREE.KeyframeTrack: no keyframes in track named " + e);
    (this.name = e),
      (this.times = ac(n, this.TimeBufferType)),
      (this.values = ac(r, this.ValueBufferType)),
      this.setInterpolation(i || this.DefaultInterpolation);
  }
  static toJSON(e) {
    const n = e.constructor;
    let r;
    if (n.toJSON !== this.toJSON) r = n.toJSON(e);
    else {
      r = {
        name: e.name,
        times: ac(e.times, Array),
        values: ac(e.values, Array),
      };
      const i = e.getInterpolation();
      i !== e.DefaultInterpolation && (r.interpolation = i);
    }
    return (r.type = e.ValueTypeName), r;
  }
  InterpolantFactoryMethodDiscrete(e) {
    return new _F(this.times, this.values, this.getValueSize(), e);
  }
  InterpolantFactoryMethodLinear(e) {
    return new oM(this.times, this.values, this.getValueSize(), e);
  }
  InterpolantFactoryMethodSmooth(e) {
    return new xF(this.times, this.values, this.getValueSize(), e);
  }
  setInterpolation(e) {
    let n;
    switch (e) {
      case Uh:
        n = this.InterpolantFactoryMethodDiscrete;
        break;
      case zh:
        n = this.InterpolantFactoryMethodLinear;
        break;
      case Tv:
        n = this.InterpolantFactoryMethodSmooth;
        break;
    }
    if (n === void 0) {
      const r =
        "unsupported interpolation for " +
        this.ValueTypeName +
        " keyframe track named " +
        this.name;
      if (this.createInterpolant === void 0)
        if (e !== this.DefaultInterpolation)
          this.setInterpolation(this.DefaultInterpolation);
        else throw new Error(r);
      return console.warn("THREE.KeyframeTrack:", r), this;
    }
    return (this.createInterpolant = n), this;
  }
  getInterpolation() {
    switch (this.createInterpolant) {
      case this.InterpolantFactoryMethodDiscrete:
        return Uh;
      case this.InterpolantFactoryMethodLinear:
        return zh;
      case this.InterpolantFactoryMethodSmooth:
        return Tv;
    }
  }
  getValueSize() {
    return this.values.length / this.times.length;
  }
  shift(e) {
    if (e !== 0) {
      const n = this.times;
      for (let r = 0, i = n.length; r !== i; ++r) n[r] += e;
    }
    return this;
  }
  scale(e) {
    if (e !== 1) {
      const n = this.times;
      for (let r = 0, i = n.length; r !== i; ++r) n[r] *= e;
    }
    return this;
  }
  trim(e, n) {
    const r = this.times,
      i = r.length;
    let o = 0,
      s = i - 1;
    for (; o !== i && r[o] < e; ) ++o;
    for (; s !== -1 && r[s] > n; ) --s;
    if ((++s, o !== 0 || s !== i)) {
      o >= s && ((s = Math.max(s, 1)), (o = s - 1));
      const a = this.getValueSize();
      (this.times = r.slice(o, s)),
        (this.values = this.values.slice(o * a, s * a));
    }
    return this;
  }
  validate() {
    let e = !0;
    const n = this.getValueSize();
    n - Math.floor(n) !== 0 &&
      (console.error("THREE.KeyframeTrack: Invalid value size in track.", this),
      (e = !1));
    const r = this.times,
      i = this.values,
      o = r.length;
    o === 0 &&
      (console.error("THREE.KeyframeTrack: Track is empty.", this), (e = !1));
    let s = null;
    for (let a = 0; a !== o; a++) {
      const l = r[a];
      if (typeof l == "number" && isNaN(l)) {
        console.error(
          "THREE.KeyframeTrack: Time is not a valid number.",
          this,
          a,
          l
        ),
          (e = !1);
        break;
      }
      if (s !== null && s > l) {
        console.error("THREE.KeyframeTrack: Out of order keys.", this, a, l, s),
          (e = !1);
        break;
      }
      s = l;
    }
    if (i !== void 0 && vF(i))
      for (let a = 0, l = i.length; a !== l; ++a) {
        const c = i[a];
        if (isNaN(c)) {
          console.error(
            "THREE.KeyframeTrack: Value is not a valid number.",
            this,
            a,
            c
          ),
            (e = !1);
          break;
        }
      }
    return e;
  }
  optimize() {
    const e = this.times.slice(),
      n = this.values.slice(),
      r = this.getValueSize(),
      i = this.getInterpolation() === Tv,
      o = e.length - 1;
    let s = 1;
    for (let a = 1; a < o; ++a) {
      let l = !1;
      const c = e[a],
        u = e[a + 1];
      if (c !== u && (a !== 1 || c !== e[0]))
        if (i) l = !0;
        else {
          const h = a * r,
            p = h - r,
            m = h + r;
          for (let v = 0; v !== r; ++v) {
            const S = n[h + v];
            if (S !== n[p + v] || S !== n[m + v]) {
              l = !0;
              break;
            }
          }
        }
      if (l) {
        if (a !== s) {
          e[s] = e[a];
          const h = a * r,
            p = s * r;
          for (let m = 0; m !== r; ++m) n[p + m] = n[h + m];
        }
        ++s;
      }
    }
    if (o > 0) {
      e[s] = e[o];
      for (let a = o * r, l = s * r, c = 0; c !== r; ++c) n[l + c] = n[a + c];
      ++s;
    }
    return (
      s !== e.length
        ? ((this.times = e.slice(0, s)), (this.values = n.slice(0, s * r)))
        : ((this.times = e), (this.values = n)),
      this
    );
  }
  clone() {
    const e = this.times.slice(),
      n = this.values.slice(),
      r = this.constructor,
      i = new r(this.name, e, n);
    return (i.createInterpolant = this.createInterpolant), i;
  }
}
Qo.prototype.TimeBufferType = Float32Array;
Qo.prototype.ValueBufferType = Float32Array;
Qo.prototype.DefaultInterpolation = zh;
class kc extends Qo {}
kc.prototype.ValueTypeName = "bool";
kc.prototype.ValueBufferType = Array;
kc.prototype.DefaultInterpolation = Uh;
kc.prototype.InterpolantFactoryMethodLinear = void 0;
kc.prototype.InterpolantFactoryMethodSmooth = void 0;
class sM extends Qo {}
sM.prototype.ValueTypeName = "color";
class Kh extends Qo {}
Kh.prototype.ValueTypeName = "number";
class SF extends Mp {
  constructor(e, n, r, i) {
    super(e, n, r, i);
  }
  interpolate_(e, n, r, i) {
    const o = this.resultBuffer,
      s = this.sampleValues,
      a = this.valueSize,
      l = (r - n) / (i - n);
    let c = e * a;
    for (let u = c + a; c !== u; c += 4) Gr.slerpFlat(o, 0, s, c - a, s, c, l);
    return o;
  }
}
class Vf extends Qo {
  InterpolantFactoryMethodLinear(e) {
    return new SF(this.times, this.values, this.getValueSize(), e);
  }
}
Vf.prototype.ValueTypeName = "quaternion";
Vf.prototype.DefaultInterpolation = zh;
Vf.prototype.InterpolantFactoryMethodSmooth = void 0;
class Bc extends Qo {}
Bc.prototype.ValueTypeName = "string";
Bc.prototype.ValueBufferType = Array;
Bc.prototype.DefaultInterpolation = Uh;
Bc.prototype.InterpolantFactoryMethodLinear = void 0;
Bc.prototype.InterpolantFactoryMethodSmooth = void 0;
class Zh extends Qo {}
Zh.prototype.ValueTypeName = "vector";
class Qh {
  constructor(e, n = -1, r, i = ey) {
    (this.name = e),
      (this.tracks = r),
      (this.duration = n),
      (this.blendMode = i),
      (this.uuid = Xi()),
      this.duration < 0 && this.resetDuration();
  }
  static parse(e) {
    const n = [],
      r = e.tracks,
      i = 1 / (e.fps || 1);
    for (let s = 0, a = r.length; s !== a; ++s) n.push(LG(r[s]).scale(i));
    const o = new this(e.name, e.duration, n, e.blendMode);
    return (o.uuid = e.uuid), o;
  }
  static toJSON(e) {
    const n = [],
      r = e.tracks,
      i = {
        name: e.name,
        duration: e.duration,
        tracks: n,
        uuid: e.uuid,
        blendMode: e.blendMode,
      };
    for (let o = 0, s = r.length; o !== s; ++o) n.push(Qo.toJSON(r[o]));
    return i;
  }
  static CreateFromMorphTargetSequence(e, n, r, i) {
    const o = n.length,
      s = [];
    for (let a = 0; a < o; a++) {
      let l = [],
        c = [];
      l.push((a + o - 1) % o, a, (a + 1) % o), c.push(0, 1, 0);
      const u = yF(l);
      (l = Mw(l, 1, u)),
        (c = Mw(c, 1, u)),
        !i && l[0] === 0 && (l.push(o), c.push(c[0])),
        s.push(
          new Kh(".morphTargetInfluences[" + n[a].name + "]", l, c).scale(1 / r)
        );
    }
    return new this(e, -1, s);
  }
  static findByName(e, n) {
    let r = e;
    if (!Array.isArray(e)) {
      const i = e;
      r = (i.geometry && i.geometry.animations) || i.animations;
    }
    for (let i = 0; i < r.length; i++) if (r[i].name === n) return r[i];
    return null;
  }
  static CreateClipsFromMorphTargetSequences(e, n, r) {
    const i = {},
      o = /^([\w-]*?)([\d]+)$/;
    for (let a = 0, l = e.length; a < l; a++) {
      const c = e[a],
        u = c.name.match(o);
      if (u && u.length > 1) {
        const h = u[1];
        let p = i[h];
        p || (i[h] = p = []), p.push(c);
      }
    }
    const s = [];
    for (const a in i)
      s.push(this.CreateFromMorphTargetSequence(a, i[a], n, r));
    return s;
  }
  static parseAnimation(e, n) {
    if (!e)
      return (
        console.error("THREE.AnimationClip: No animation in JSONLoader data."),
        null
      );
    const r = function (h, p, m, v, S) {
        if (m.length !== 0) {
          const x = [],
            g = [];
          iM(m, x, g, v), x.length !== 0 && S.push(new h(p, x, g));
        }
      },
      i = [],
      o = e.name || "default",
      s = e.fps || 30,
      a = e.blendMode;
    let l = e.length || -1;
    const c = e.hierarchy || [];
    for (let h = 0; h < c.length; h++) {
      const p = c[h].keys;
      if (!(!p || p.length === 0))
        if (p[0].morphTargets) {
          const m = {};
          let v;
          for (v = 0; v < p.length; v++)
            if (p[v].morphTargets)
              for (let S = 0; S < p[v].morphTargets.length; S++)
                m[p[v].morphTargets[S]] = -1;
          for (const S in m) {
            const x = [],
              g = [];
            for (let y = 0; y !== p[v].morphTargets.length; ++y) {
              const _ = p[v];
              x.push(_.time), g.push(_.morphTarget === S ? 1 : 0);
            }
            i.push(new Kh(".morphTargetInfluence[" + S + "]", x, g));
          }
          l = m.length * s;
        } else {
          const m = ".bones[" + n[h].name + "]";
          r(Zh, m + ".position", p, "pos", i),
            r(Vf, m + ".quaternion", p, "rot", i),
            r(Zh, m + ".scale", p, "scl", i);
        }
    }
    return i.length === 0 ? null : new this(o, l, i, a);
  }
  resetDuration() {
    const e = this.tracks;
    let n = 0;
    for (let r = 0, i = e.length; r !== i; ++r) {
      const o = this.tracks[r];
      n = Math.max(n, o.times[o.times.length - 1]);
    }
    return (this.duration = n), this;
  }
  trim() {
    for (let e = 0; e < this.tracks.length; e++)
      this.tracks[e].trim(0, this.duration);
    return this;
  }
  validate() {
    let e = !0;
    for (let n = 0; n < this.tracks.length; n++)
      e = e && this.tracks[n].validate();
    return e;
  }
  optimize() {
    for (let e = 0; e < this.tracks.length; e++) this.tracks[e].optimize();
    return this;
  }
  clone() {
    const e = [];
    for (let n = 0; n < this.tracks.length; n++) e.push(this.tracks[n].clone());
    return new this.constructor(this.name, this.duration, e, this.blendMode);
  }
  toJSON() {
    return this.constructor.toJSON(this);
  }
}
function PG(t) {
  switch (t.toLowerCase()) {
    case "scalar":
    case "double":
    case "float":
    case "number":
    case "integer":
      return Kh;
    case "vector":
    case "vector2":
    case "vector3":
    case "vector4":
      return Zh;
    case "color":
      return sM;
    case "quaternion":
      return Vf;
    case "bool":
    case "boolean":
      return kc;
    case "string":
      return Bc;
  }
  throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + t);
}
function LG(t) {
  if (t.type === void 0)
    throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
  const e = PG(t.type);
  if (t.times === void 0) {
    const n = [],
      r = [];
    iM(t.keys, n, r, "value"), (t.times = n), (t.values = r);
  }
  return e.parse !== void 0
    ? e.parse(t)
    : new e(t.name, t.times, t.values, t.interpolation);
}
const ta = {
  enabled: !1,
  files: {},
  add: function (t, e) {
    this.enabled !== !1 && (this.files[t] = e);
  },
  get: function (t) {
    if (this.enabled !== !1) return this.files[t];
  },
  remove: function (t) {
    delete this.files[t];
  },
  clear: function () {
    this.files = {};
  },
};
class aM {
  constructor(e, n, r) {
    const i = this;
    let o = !1,
      s = 0,
      a = 0,
      l;
    const c = [];
    (this.onStart = void 0),
      (this.onLoad = e),
      (this.onProgress = n),
      (this.onError = r),
      (this.itemStart = function (u) {
        a++, o === !1 && i.onStart !== void 0 && i.onStart(u, s, a), (o = !0);
      }),
      (this.itemEnd = function (u) {
        s++,
          i.onProgress !== void 0 && i.onProgress(u, s, a),
          s === a && ((o = !1), i.onLoad !== void 0 && i.onLoad());
      }),
      (this.itemError = function (u) {
        i.onError !== void 0 && i.onError(u);
      }),
      (this.resolveURL = function (u) {
        return l ? l(u) : u;
      }),
      (this.setURLModifier = function (u) {
        return (l = u), this;
      }),
      (this.addHandler = function (u, h) {
        return c.push(u, h), this;
      }),
      (this.removeHandler = function (u) {
        const h = c.indexOf(u);
        return h !== -1 && c.splice(h, 2), this;
      }),
      (this.getHandler = function (u) {
        for (let h = 0, p = c.length; h < p; h += 2) {
          const m = c[h],
            v = c[h + 1];
          if ((m.global && (m.lastIndex = 0), m.test(u))) return v;
        }
        return null;
      });
  }
}
const wF = new aM();
class bi {
  constructor(e) {
    (this.manager = e !== void 0 ? e : wF),
      (this.crossOrigin = "anonymous"),
      (this.withCredentials = !1),
      (this.path = ""),
      (this.resourcePath = ""),
      (this.requestHeader = {});
  }
  load() {}
  loadAsync(e, n) {
    const r = this;
    return new Promise(function (i, o) {
      r.load(e, i, n, o);
    });
  }
  parse() {}
  setCrossOrigin(e) {
    return (this.crossOrigin = e), this;
  }
  setWithCredentials(e) {
    return (this.withCredentials = e), this;
  }
  setPath(e) {
    return (this.path = e), this;
  }
  setResourcePath(e) {
    return (this.resourcePath = e), this;
  }
  setRequestHeader(e) {
    return (this.requestHeader = e), this;
  }
}
bi.DEFAULT_MATERIAL_NAME = "__DEFAULT";
const Gs = {};
class IG extends Error {
  constructor(e, n) {
    super(e), (this.response = n);
  }
}
class ca extends bi {
  constructor(e) {
    super(e);
  }
  load(e, n, r, i) {
    e === void 0 && (e = ""),
      this.path !== void 0 && (e = this.path + e),
      (e = this.manager.resolveURL(e));
    const o = ta.get(e);
    if (o !== void 0)
      return (
        this.manager.itemStart(e),
        setTimeout(() => {
          n && n(o), this.manager.itemEnd(e);
        }, 0),
        o
      );
    if (Gs[e] !== void 0) {
      Gs[e].push({ onLoad: n, onProgress: r, onError: i });
      return;
    }
    (Gs[e] = []), Gs[e].push({ onLoad: n, onProgress: r, onError: i });
    const s = new Request(e, {
        headers: new Headers(this.requestHeader),
        credentials: this.withCredentials ? "include" : "same-origin",
      }),
      a = this.mimeType,
      l = this.responseType;
    fetch(s)
      .then((c) => {
        if (c.status === 200 || c.status === 0) {
          if (
            (c.status === 0 &&
              console.warn("THREE.FileLoader: HTTP Status 0 received."),
            typeof ReadableStream > "u" ||
              c.body === void 0 ||
              c.body.getReader === void 0)
          )
            return c;
          const u = Gs[e],
            h = c.body.getReader(),
            p = c.headers.get("Content-Length") || c.headers.get("X-File-Size"),
            m = p ? parseInt(p) : 0,
            v = m !== 0;
          let S = 0;
          const x = new ReadableStream({
            start(g) {
              y();
              function y() {
                h.read().then(({ done: _, value: b }) => {
                  if (_) g.close();
                  else {
                    S += b.byteLength;
                    const T = new ProgressEvent("progress", {
                      lengthComputable: v,
                      loaded: S,
                      total: m,
                    });
                    for (let M = 0, C = u.length; M < C; M++) {
                      const L = u[M];
                      L.onProgress && L.onProgress(T);
                    }
                    g.enqueue(b), y();
                  }
                });
              }
            },
          });
          return new Response(x);
        } else
          throw new IG(
            `fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,
            c
          );
      })
      .then((c) => {
        switch (l) {
          case "arraybuffer":
            return c.arrayBuffer();
          case "blob":
            return c.blob();
          case "document":
            return c.text().then((u) => new DOMParser().parseFromString(u, a));
          case "json":
            return c.json();
          default:
            if (a === void 0) return c.text();
            {
              const h = /charset="?([^;"\s]*)"?/i.exec(a),
                p = h && h[1] ? h[1].toLowerCase() : void 0,
                m = new TextDecoder(p);
              return c.arrayBuffer().then((v) => m.decode(v));
            }
        }
      })
      .then((c) => {
        ta.add(e, c);
        const u = Gs[e];
        delete Gs[e];
        for (let h = 0, p = u.length; h < p; h++) {
          const m = u[h];
          m.onLoad && m.onLoad(c);
        }
      })
      .catch((c) => {
        const u = Gs[e];
        if (u === void 0) throw (this.manager.itemError(e), c);
        delete Gs[e];
        for (let h = 0, p = u.length; h < p; h++) {
          const m = u[h];
          m.onError && m.onError(c);
        }
        this.manager.itemError(e);
      })
      .finally(() => {
        this.manager.itemEnd(e);
      }),
      this.manager.itemStart(e);
  }
  setResponseType(e) {
    return (this.responseType = e), this;
  }
  setMimeType(e) {
    return (this.mimeType = e), this;
  }
}
class OG extends bi {
  constructor(e) {
    super(e);
  }
  load(e, n, r, i) {
    const o = this,
      s = new ca(this.manager);
    s.setPath(this.path),
      s.setRequestHeader(this.requestHeader),
      s.setWithCredentials(this.withCredentials),
      s.load(
        e,
        function (a) {
          try {
            n(o.parse(JSON.parse(a)));
          } catch (l) {
            i ? i(l) : console.error(l), o.manager.itemError(e);
          }
        },
        r,
        i
      );
  }
  parse(e) {
    const n = [];
    for (let r = 0; r < e.length; r++) {
      const i = Qh.parse(e[r]);
      n.push(i);
    }
    return n;
  }
}
class FG extends bi {
  constructor(e) {
    super(e);
  }
  load(e, n, r, i) {
    const o = this,
      s = [],
      a = new uy(),
      l = new ca(this.manager);
    l.setPath(this.path),
      l.setResponseType("arraybuffer"),
      l.setRequestHeader(this.requestHeader),
      l.setWithCredentials(o.withCredentials);
    let c = 0;
    function u(h) {
      l.load(
        e[h],
        function (p) {
          const m = o.parse(p, !0);
          (s[h] = {
            width: m.width,
            height: m.height,
            format: m.format,
            mipmaps: m.mipmaps,
          }),
            (c += 1),
            c === 6 &&
              (m.mipmapCount === 1 && (a.minFilter = Cn),
              (a.image = s),
              (a.format = m.format),
              (a.needsUpdate = !0),
              n && n(a));
        },
        r,
        i
      );
    }
    if (Array.isArray(e)) for (let h = 0, p = e.length; h < p; ++h) u(h);
    else
      l.load(
        e,
        function (h) {
          const p = o.parse(h, !0);
          if (p.isCubemap) {
            const m = p.mipmaps.length / p.mipmapCount;
            for (let v = 0; v < m; v++) {
              s[v] = { mipmaps: [] };
              for (let S = 0; S < p.mipmapCount; S++)
                s[v].mipmaps.push(p.mipmaps[v * p.mipmapCount + S]),
                  (s[v].format = p.format),
                  (s[v].width = p.width),
                  (s[v].height = p.height);
            }
            a.image = s;
          } else
            (a.image.width = p.width),
              (a.image.height = p.height),
              (a.mipmaps = p.mipmaps);
          p.mipmapCount === 1 && (a.minFilter = Cn),
            (a.format = p.format),
            (a.needsUpdate = !0),
            n && n(a);
        },
        r,
        i
      );
    return a;
  }
}
class Jh extends bi {
  constructor(e) {
    super(e);
  }
  load(e, n, r, i) {
    this.path !== void 0 && (e = this.path + e),
      (e = this.manager.resolveURL(e));
    const o = this,
      s = ta.get(e);
    if (s !== void 0)
      return (
        o.manager.itemStart(e),
        setTimeout(function () {
          n && n(s), o.manager.itemEnd(e);
        }, 0),
        s
      );
    const a = jh("img");
    function l() {
      u(), ta.add(e, this), n && n(this), o.manager.itemEnd(e);
    }
    function c(h) {
      u(), i && i(h), o.manager.itemError(e), o.manager.itemEnd(e);
    }
    function u() {
      a.removeEventListener("load", l, !1),
        a.removeEventListener("error", c, !1);
    }
    return (
      a.addEventListener("load", l, !1),
      a.addEventListener("error", c, !1),
      e.slice(0, 5) !== "data:" &&
        this.crossOrigin !== void 0 &&
        (a.crossOrigin = this.crossOrigin),
      o.manager.itemStart(e),
      (a.src = e),
      a
    );
  }
}
class NG extends bi {
  constructor(e) {
    super(e);
  }
  load(e, n, r, i) {
    const o = new _p();
    o.colorSpace = rr;
    const s = new Jh(this.manager);
    s.setCrossOrigin(this.crossOrigin), s.setPath(this.path);
    let a = 0;
    function l(c) {
      s.load(
        e[c],
        function (u) {
          (o.images[c] = u), a++, a === 6 && ((o.needsUpdate = !0), n && n(o));
        },
        void 0,
        i
      );
    }
    for (let c = 0; c < e.length; ++c) l(c);
    return o;
  }
}
class DG extends bi {
  constructor(e) {
    super(e);
  }
  load(e, n, r, i) {
    const o = this,
      s = new gc(),
      a = new ca(this.manager);
    return (
      a.setResponseType("arraybuffer"),
      a.setRequestHeader(this.requestHeader),
      a.setPath(this.path),
      a.setWithCredentials(o.withCredentials),
      a.load(
        e,
        function (l) {
          let c;
          try {
            c = o.parse(l);
          } catch (u) {
            if (i !== void 0) i(u);
            else {
              console.error(u);
              return;
            }
          }
          c.image !== void 0
            ? (s.image = c.image)
            : c.data !== void 0 &&
              ((s.image.width = c.width),
              (s.image.height = c.height),
              (s.image.data = c.data)),
            (s.wrapS = c.wrapS !== void 0 ? c.wrapS : Hr),
            (s.wrapT = c.wrapT !== void 0 ? c.wrapT : Hr),
            (s.magFilter = c.magFilter !== void 0 ? c.magFilter : Cn),
            (s.minFilter = c.minFilter !== void 0 ? c.minFilter : Cn),
            (s.anisotropy = c.anisotropy !== void 0 ? c.anisotropy : 1),
            c.colorSpace !== void 0
              ? (s.colorSpace = c.colorSpace)
              : c.encoding !== void 0 && (s.encoding = c.encoding),
            c.flipY !== void 0 && (s.flipY = c.flipY),
            c.format !== void 0 && (s.format = c.format),
            c.type !== void 0 && (s.type = c.type),
            c.mipmaps !== void 0 &&
              ((s.mipmaps = c.mipmaps), (s.minFilter = ol)),
            c.mipmapCount === 1 && (s.minFilter = Cn),
            c.generateMipmaps !== void 0 &&
              (s.generateMipmaps = c.generateMipmaps),
            (s.needsUpdate = !0),
            n && n(s, c);
        },
        r,
        i
      ),
      s
    );
  }
}
class UG extends bi {
  constructor(e) {
    super(e);
  }
  load(e, n, r, i) {
    const o = new Pn(),
      s = new Jh(this.manager);
    return (
      s.setCrossOrigin(this.crossOrigin),
      s.setPath(this.path),
      s.load(
        e,
        function (a) {
          (o.image = a), (o.needsUpdate = !0), n !== void 0 && n(o);
        },
        r,
        i
      ),
      o
    );
  }
}
class vl extends Zt {
  constructor(e, n = 1) {
    super(),
      (this.isLight = !0),
      (this.type = "Light"),
      (this.color = new nt(e)),
      (this.intensity = n);
  }
  dispose() {}
  copy(e, n) {
    return (
      super.copy(e, n),
      this.color.copy(e.color),
      (this.intensity = e.intensity),
      this
    );
  }
  toJSON(e) {
    const n = super.toJSON(e);
    return (
      (n.object.color = this.color.getHex()),
      (n.object.intensity = this.intensity),
      this.groundColor !== void 0 &&
        (n.object.groundColor = this.groundColor.getHex()),
      this.distance !== void 0 && (n.object.distance = this.distance),
      this.angle !== void 0 && (n.object.angle = this.angle),
      this.decay !== void 0 && (n.object.decay = this.decay),
      this.penumbra !== void 0 && (n.object.penumbra = this.penumbra),
      this.shadow !== void 0 && (n.object.shadow = this.shadow.toJSON()),
      n
    );
  }
}
class bF extends vl {
  constructor(e, n, r) {
    super(e, r),
      (this.isHemisphereLight = !0),
      (this.type = "HemisphereLight"),
      this.position.copy(Zt.DEFAULT_UP),
      this.updateMatrix(),
      (this.groundColor = new nt(n));
  }
  copy(e, n) {
    return super.copy(e, n), this.groundColor.copy(e.groundColor), this;
  }
}
const e_ = new bt(),
  qA = new W(),
  YA = new W();
class lM {
  constructor(e) {
    (this.camera = e),
      (this.bias = 0),
      (this.normalBias = 0),
      (this.radius = 1),
      (this.blurSamples = 8),
      (this.mapSize = new Fe(512, 512)),
      (this.map = null),
      (this.mapPass = null),
      (this.matrix = new bt()),
      (this.autoUpdate = !0),
      (this.needsUpdate = !1),
      (this._frustum = new Sp()),
      (this._frameExtents = new Fe(1, 1)),
      (this._viewportCount = 1),
      (this._viewports = [new Ht(0, 0, 1, 1)]);
  }
  getViewportCount() {
    return this._viewportCount;
  }
  getFrustum() {
    return this._frustum;
  }
  updateMatrices(e) {
    const n = this.camera,
      r = this.matrix;
    qA.setFromMatrixPosition(e.matrixWorld),
      n.position.copy(qA),
      YA.setFromMatrixPosition(e.target.matrixWorld),
      n.lookAt(YA),
      n.updateMatrixWorld(),
      e_.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse),
      this._frustum.setFromProjectionMatrix(e_),
      r.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1),
      r.multiply(e_);
  }
  getViewport(e) {
    return this._viewports[e];
  }
  getFrameExtents() {
    return this._frameExtents;
  }
  dispose() {
    this.map && this.map.dispose(), this.mapPass && this.mapPass.dispose();
  }
  copy(e) {
    return (
      (this.camera = e.camera.clone()),
      (this.bias = e.bias),
      (this.radius = e.radius),
      this.mapSize.copy(e.mapSize),
      this
    );
  }
  clone() {
    return new this.constructor().copy(this);
  }
  toJSON() {
    const e = {};
    return (
      this.bias !== 0 && (e.bias = this.bias),
      this.normalBias !== 0 && (e.normalBias = this.normalBias),
      this.radius !== 1 && (e.radius = this.radius),
      (this.mapSize.x !== 512 || this.mapSize.y !== 512) &&
        (e.mapSize = this.mapSize.toArray()),
      (e.camera = this.camera.toJSON(!1).object),
      delete e.camera.matrix,
      e
    );
  }
}
class zG extends lM {
  constructor() {
    super(new Un(50, 1, 0.5, 500)),
      (this.isSpotLightShadow = !0),
      (this.focus = 1);
  }
  updateMatrices(e) {
    const n = this.camera,
      r = Tf * 2 * e.angle * this.focus,
      i = this.mapSize.width / this.mapSize.height,
      o = e.distance || n.far;
    (r !== n.fov || i !== n.aspect || o !== n.far) &&
      ((n.fov = r), (n.aspect = i), (n.far = o), n.updateProjectionMatrix()),
      super.updateMatrices(e);
  }
  copy(e) {
    return super.copy(e), (this.focus = e.focus), this;
  }
}
class EF extends vl {
  constructor(e, n, r = 0, i = Math.PI / 3, o = 0, s = 2) {
    super(e, n),
      (this.isSpotLight = !0),
      (this.type = "SpotLight"),
      this.position.copy(Zt.DEFAULT_UP),
      this.updateMatrix(),
      (this.target = new Zt()),
      (this.distance = r),
      (this.angle = i),
      (this.penumbra = o),
      (this.decay = s),
      (this.map = null),
      (this.shadow = new zG());
  }
  get power() {
    return this.intensity * Math.PI;
  }
  set power(e) {
    this.intensity = e / Math.PI;
  }
  dispose() {
    this.shadow.dispose();
  }
  copy(e, n) {
    return (
      super.copy(e, n),
      (this.distance = e.distance),
      (this.angle = e.angle),
      (this.penumbra = e.penumbra),
      (this.decay = e.decay),
      (this.target = e.target.clone()),
      (this.shadow = e.shadow.clone()),
      this
    );
  }
}
const KA = new bt(),
  Nd = new W(),
  t_ = new W();
class kG extends lM {
  constructor() {
    super(new Un(90, 1, 0.5, 500)),
      (this.isPointLightShadow = !0),
      (this._frameExtents = new Fe(4, 2)),
      (this._viewportCount = 6),
      (this._viewports = [
        new Ht(2, 1, 1, 1),
        new Ht(0, 1, 1, 1),
        new Ht(3, 1, 1, 1),
        new Ht(1, 1, 1, 1),
        new Ht(3, 0, 1, 1),
        new Ht(1, 0, 1, 1),
      ]),
      (this._cubeDirections = [
        new W(1, 0, 0),
        new W(-1, 0, 0),
        new W(0, 0, 1),
        new W(0, 0, -1),
        new W(0, 1, 0),
        new W(0, -1, 0),
      ]),
      (this._cubeUps = [
        new W(0, 1, 0),
        new W(0, 1, 0),
        new W(0, 1, 0),
        new W(0, 1, 0),
        new W(0, 0, 1),
        new W(0, 0, -1),
      ]);
  }
  updateMatrices(e, n = 0) {
    const r = this.camera,
      i = this.matrix,
      o = e.distance || r.far;
    o !== r.far && ((r.far = o), r.updateProjectionMatrix()),
      Nd.setFromMatrixPosition(e.matrixWorld),
      r.position.copy(Nd),
      t_.copy(r.position),
      t_.add(this._cubeDirections[n]),
      r.up.copy(this._cubeUps[n]),
      r.lookAt(t_),
      r.updateMatrixWorld(),
      i.makeTranslation(-Nd.x, -Nd.y, -Nd.z),
      KA.multiplyMatrices(r.projectionMatrix, r.matrixWorldInverse),
      this._frustum.setFromProjectionMatrix(KA);
  }
}
class MF extends vl {
  constructor(e, n, r = 0, i = 2) {
    super(e, n),
      (this.isPointLight = !0),
      (this.type = "PointLight"),
      (this.distance = r),
      (this.decay = i),
      (this.shadow = new kG());
  }
  get power() {
    return this.intensity * 4 * Math.PI;
  }
  set power(e) {
    this.intensity = e / (4 * Math.PI);
  }
  dispose() {
    this.shadow.dispose();
  }
  copy(e, n) {
    return (
      super.copy(e, n),
      (this.distance = e.distance),
      (this.decay = e.decay),
      (this.shadow = e.shadow.clone()),
      this
    );
  }
}
class BG extends lM {
  constructor() {
    super(new ea(-5, 5, 5, -5, 0.5, 500)), (this.isDirectionalLightShadow = !0);
  }
}
class CF extends vl {
  constructor(e, n) {
    super(e, n),
      (this.isDirectionalLight = !0),
      (this.type = "DirectionalLight"),
      this.position.copy(Zt.DEFAULT_UP),
      this.updateMatrix(),
      (this.target = new Zt()),
      (this.shadow = new BG());
  }
  dispose() {
    this.shadow.dispose();
  }
  copy(e) {
    return (
      super.copy(e),
      (this.target = e.target.clone()),
      (this.shadow = e.shadow.clone()),
      this
    );
  }
}
class TF extends vl {
  constructor(e, n) {
    super(e, n), (this.isAmbientLight = !0), (this.type = "AmbientLight");
  }
}
class AF extends vl {
  constructor(e, n, r = 10, i = 10) {
    super(e, n),
      (this.isRectAreaLight = !0),
      (this.type = "RectAreaLight"),
      (this.width = r),
      (this.height = i);
  }
  get power() {
    return this.intensity * this.width * this.height * Math.PI;
  }
  set power(e) {
    this.intensity = e / (this.width * this.height * Math.PI);
  }
  copy(e) {
    return (
      super.copy(e), (this.width = e.width), (this.height = e.height), this
    );
  }
  toJSON(e) {
    const n = super.toJSON(e);
    return (n.object.width = this.width), (n.object.height = this.height), n;
  }
}
class RF {
  constructor() {
    (this.isSphericalHarmonics3 = !0), (this.coefficients = []);
    for (let e = 0; e < 9; e++) this.coefficients.push(new W());
  }
  set(e) {
    for (let n = 0; n < 9; n++) this.coefficients[n].copy(e[n]);
    return this;
  }
  zero() {
    for (let e = 0; e < 9; e++) this.coefficients[e].set(0, 0, 0);
    return this;
  }
  getAt(e, n) {
    const r = e.x,
      i = e.y,
      o = e.z,
      s = this.coefficients;
    return (
      n.copy(s[0]).multiplyScalar(0.282095),
      n.addScaledVector(s[1], 0.488603 * i),
      n.addScaledVector(s[2], 0.488603 * o),
      n.addScaledVector(s[3], 0.488603 * r),
      n.addScaledVector(s[4], 1.092548 * (r * i)),
      n.addScaledVector(s[5], 1.092548 * (i * o)),
      n.addScaledVector(s[6], 0.315392 * (3 * o * o - 1)),
      n.addScaledVector(s[7], 1.092548 * (r * o)),
      n.addScaledVector(s[8], 0.546274 * (r * r - i * i)),
      n
    );
  }
  getIrradianceAt(e, n) {
    const r = e.x,
      i = e.y,
      o = e.z,
      s = this.coefficients;
    return (
      n.copy(s[0]).multiplyScalar(0.886227),
      n.addScaledVector(s[1], 2 * 0.511664 * i),
      n.addScaledVector(s[2], 2 * 0.511664 * o),
      n.addScaledVector(s[3], 2 * 0.511664 * r),
      n.addScaledVector(s[4], 2 * 0.429043 * r * i),
      n.addScaledVector(s[5], 2 * 0.429043 * i * o),
      n.addScaledVector(s[6], 0.743125 * o * o - 0.247708),
      n.addScaledVector(s[7], 2 * 0.429043 * r * o),
      n.addScaledVector(s[8], 0.429043 * (r * r - i * i)),
      n
    );
  }
  add(e) {
    for (let n = 0; n < 9; n++) this.coefficients[n].add(e.coefficients[n]);
    return this;
  }
  addScaledSH(e, n) {
    for (let r = 0; r < 9; r++)
      this.coefficients[r].addScaledVector(e.coefficients[r], n);
    return this;
  }
  scale(e) {
    for (let n = 0; n < 9; n++) this.coefficients[n].multiplyScalar(e);
    return this;
  }
  lerp(e, n) {
    for (let r = 0; r < 9; r++) this.coefficients[r].lerp(e.coefficients[r], n);
    return this;
  }
  equals(e) {
    for (let n = 0; n < 9; n++)
      if (!this.coefficients[n].equals(e.coefficients[n])) return !1;
    return !0;
  }
  copy(e) {
    return this.set(e.coefficients);
  }
  clone() {
    return new this.constructor().copy(this);
  }
  fromArray(e, n = 0) {
    const r = this.coefficients;
    for (let i = 0; i < 9; i++) r[i].fromArray(e, n + i * 3);
    return this;
  }
  toArray(e = [], n = 0) {
    const r = this.coefficients;
    for (let i = 0; i < 9; i++) r[i].toArray(e, n + i * 3);
    return e;
  }
  static getBasisAt(e, n) {
    const r = e.x,
      i = e.y,
      o = e.z;
    (n[0] = 0.282095),
      (n[1] = 0.488603 * i),
      (n[2] = 0.488603 * o),
      (n[3] = 0.488603 * r),
      (n[4] = 1.092548 * r * i),
      (n[5] = 1.092548 * i * o),
      (n[6] = 0.315392 * (3 * o * o - 1)),
      (n[7] = 1.092548 * r * o),
      (n[8] = 0.546274 * (r * r - i * i));
  }
}
class PF extends vl {
  constructor(e = new RF(), n = 1) {
    super(void 0, n), (this.isLightProbe = !0), (this.sh = e);
  }
  copy(e) {
    return super.copy(e), this.sh.copy(e.sh), this;
  }
  fromJSON(e) {
    return (this.intensity = e.intensity), this.sh.fromArray(e.sh), this;
  }
  toJSON(e) {
    const n = super.toJSON(e);
    return (n.object.sh = this.sh.toArray()), n;
  }
}
class My extends bi {
  constructor(e) {
    super(e), (this.textures = {});
  }
  load(e, n, r, i) {
    const o = this,
      s = new ca(o.manager);
    s.setPath(o.path),
      s.setRequestHeader(o.requestHeader),
      s.setWithCredentials(o.withCredentials),
      s.load(
        e,
        function (a) {
          try {
            n(o.parse(JSON.parse(a)));
          } catch (l) {
            i ? i(l) : console.error(l), o.manager.itemError(e);
          }
        },
        r,
        i
      );
  }
  parse(e) {
    const n = this.textures;
    function r(o) {
      return (
        n[o] === void 0 &&
          console.warn("THREE.MaterialLoader: Undefined texture", o),
        n[o]
      );
    }
    const i = My.createMaterialFromType(e.type);
    if (
      (e.uuid !== void 0 && (i.uuid = e.uuid),
      e.name !== void 0 && (i.name = e.name),
      e.color !== void 0 && i.color !== void 0 && i.color.setHex(e.color),
      e.roughness !== void 0 && (i.roughness = e.roughness),
      e.metalness !== void 0 && (i.metalness = e.metalness),
      e.sheen !== void 0 && (i.sheen = e.sheen),
      e.sheenColor !== void 0 && (i.sheenColor = new nt().setHex(e.sheenColor)),
      e.sheenRoughness !== void 0 && (i.sheenRoughness = e.sheenRoughness),
      e.emissive !== void 0 &&
        i.emissive !== void 0 &&
        i.emissive.setHex(e.emissive),
      e.specular !== void 0 &&
        i.specular !== void 0 &&
        i.specular.setHex(e.specular),
      e.specularIntensity !== void 0 &&
        (i.specularIntensity = e.specularIntensity),
      e.specularColor !== void 0 &&
        i.specularColor !== void 0 &&
        i.specularColor.setHex(e.specularColor),
      e.shininess !== void 0 && (i.shininess = e.shininess),
      e.clearcoat !== void 0 && (i.clearcoat = e.clearcoat),
      e.clearcoatRoughness !== void 0 &&
        (i.clearcoatRoughness = e.clearcoatRoughness),
      e.iridescence !== void 0 && (i.iridescence = e.iridescence),
      e.iridescenceIOR !== void 0 && (i.iridescenceIOR = e.iridescenceIOR),
      e.iridescenceThicknessRange !== void 0 &&
        (i.iridescenceThicknessRange = e.iridescenceThicknessRange),
      e.transmission !== void 0 && (i.transmission = e.transmission),
      e.thickness !== void 0 && (i.thickness = e.thickness),
      e.attenuationDistance !== void 0 &&
        (i.attenuationDistance = e.attenuationDistance),
      e.attenuationColor !== void 0 &&
        i.attenuationColor !== void 0 &&
        i.attenuationColor.setHex(e.attenuationColor),
      e.anisotropy !== void 0 && (i.anisotropy = e.anisotropy),
      e.anisotropyRotation !== void 0 &&
        (i.anisotropyRotation = e.anisotropyRotation),
      e.fog !== void 0 && (i.fog = e.fog),
      e.flatShading !== void 0 && (i.flatShading = e.flatShading),
      e.blending !== void 0 && (i.blending = e.blending),
      e.combine !== void 0 && (i.combine = e.combine),
      e.side !== void 0 && (i.side = e.side),
      e.shadowSide !== void 0 && (i.shadowSide = e.shadowSide),
      e.opacity !== void 0 && (i.opacity = e.opacity),
      e.transparent !== void 0 && (i.transparent = e.transparent),
      e.alphaTest !== void 0 && (i.alphaTest = e.alphaTest),
      e.alphaHash !== void 0 && (i.alphaHash = e.alphaHash),
      e.depthFunc !== void 0 && (i.depthFunc = e.depthFunc),
      e.depthTest !== void 0 && (i.depthTest = e.depthTest),
      e.depthWrite !== void 0 && (i.depthWrite = e.depthWrite),
      e.colorWrite !== void 0 && (i.colorWrite = e.colorWrite),
      e.blendSrc !== void 0 && (i.blendSrc = e.blendSrc),
      e.blendDst !== void 0 && (i.blendDst = e.blendDst),
      e.blendEquation !== void 0 && (i.blendEquation = e.blendEquation),
      e.blendSrcAlpha !== void 0 && (i.blendSrcAlpha = e.blendSrcAlpha),
      e.blendDstAlpha !== void 0 && (i.blendDstAlpha = e.blendDstAlpha),
      e.blendEquationAlpha !== void 0 &&
        (i.blendEquationAlpha = e.blendEquationAlpha),
      e.blendColor !== void 0 &&
        i.blendColor !== void 0 &&
        i.blendColor.setHex(e.blendColor),
      e.blendAlpha !== void 0 && (i.blendAlpha = e.blendAlpha),
      e.stencilWriteMask !== void 0 &&
        (i.stencilWriteMask = e.stencilWriteMask),
      e.stencilFunc !== void 0 && (i.stencilFunc = e.stencilFunc),
      e.stencilRef !== void 0 && (i.stencilRef = e.stencilRef),
      e.stencilFuncMask !== void 0 && (i.stencilFuncMask = e.stencilFuncMask),
      e.stencilFail !== void 0 && (i.stencilFail = e.stencilFail),
      e.stencilZFail !== void 0 && (i.stencilZFail = e.stencilZFail),
      e.stencilZPass !== void 0 && (i.stencilZPass = e.stencilZPass),
      e.stencilWrite !== void 0 && (i.stencilWrite = e.stencilWrite),
      e.wireframe !== void 0 && (i.wireframe = e.wireframe),
      e.wireframeLinewidth !== void 0 &&
        (i.wireframeLinewidth = e.wireframeLinewidth),
      e.wireframeLinecap !== void 0 &&
        (i.wireframeLinecap = e.wireframeLinecap),
      e.wireframeLinejoin !== void 0 &&
        (i.wireframeLinejoin = e.wireframeLinejoin),
      e.rotation !== void 0 && (i.rotation = e.rotation),
      e.linewidth !== void 0 && (i.linewidth = e.linewidth),
      e.dashSize !== void 0 && (i.dashSize = e.dashSize),
      e.gapSize !== void 0 && (i.gapSize = e.gapSize),
      e.scale !== void 0 && (i.scale = e.scale),
      e.polygonOffset !== void 0 && (i.polygonOffset = e.polygonOffset),
      e.polygonOffsetFactor !== void 0 &&
        (i.polygonOffsetFactor = e.polygonOffsetFactor),
      e.polygonOffsetUnits !== void 0 &&
        (i.polygonOffsetUnits = e.polygonOffsetUnits),
      e.dithering !== void 0 && (i.dithering = e.dithering),
      e.alphaToCoverage !== void 0 && (i.alphaToCoverage = e.alphaToCoverage),
      e.premultipliedAlpha !== void 0 &&
        (i.premultipliedAlpha = e.premultipliedAlpha),
      e.forceSinglePass !== void 0 && (i.forceSinglePass = e.forceSinglePass),
      e.visible !== void 0 && (i.visible = e.visible),
      e.toneMapped !== void 0 && (i.toneMapped = e.toneMapped),
      e.userData !== void 0 && (i.userData = e.userData),
      e.vertexColors !== void 0 &&
        (typeof e.vertexColors == "number"
          ? (i.vertexColors = e.vertexColors > 0)
          : (i.vertexColors = e.vertexColors)),
      e.uniforms !== void 0)
    )
      for (const o in e.uniforms) {
        const s = e.uniforms[o];
        switch (((i.uniforms[o] = {}), s.type)) {
          case "t":
            i.uniforms[o].value = r(s.value);
            break;
          case "c":
            i.uniforms[o].value = new nt().setHex(s.value);
            break;
          case "v2":
            i.uniforms[o].value = new Fe().fromArray(s.value);
            break;
          case "v3":
            i.uniforms[o].value = new W().fromArray(s.value);
            break;
          case "v4":
            i.uniforms[o].value = new Ht().fromArray(s.value);
            break;
          case "m3":
            i.uniforms[o].value = new Ot().fromArray(s.value);
            break;
          case "m4":
            i.uniforms[o].value = new bt().fromArray(s.value);
            break;
          default:
            i.uniforms[o].value = s.value;
        }
      }
    if (
      (e.defines !== void 0 && (i.defines = e.defines),
      e.vertexShader !== void 0 && (i.vertexShader = e.vertexShader),
      e.fragmentShader !== void 0 && (i.fragmentShader = e.fragmentShader),
      e.glslVersion !== void 0 && (i.glslVersion = e.glslVersion),
      e.extensions !== void 0)
    )
      for (const o in e.extensions) i.extensions[o] = e.extensions[o];
    if (
      (e.lights !== void 0 && (i.lights = e.lights),
      e.clipping !== void 0 && (i.clipping = e.clipping),
      e.size !== void 0 && (i.size = e.size),
      e.sizeAttenuation !== void 0 && (i.sizeAttenuation = e.sizeAttenuation),
      e.map !== void 0 && (i.map = r(e.map)),
      e.matcap !== void 0 && (i.matcap = r(e.matcap)),
      e.alphaMap !== void 0 && (i.alphaMap = r(e.alphaMap)),
      e.bumpMap !== void 0 && (i.bumpMap = r(e.bumpMap)),
      e.bumpScale !== void 0 && (i.bumpScale = e.bumpScale),
      e.normalMap !== void 0 && (i.normalMap = r(e.normalMap)),
      e.normalMapType !== void 0 && (i.normalMapType = e.normalMapType),
      e.normalScale !== void 0)
    ) {
      let o = e.normalScale;
      Array.isArray(o) === !1 && (o = [o, o]),
        (i.normalScale = new Fe().fromArray(o));
    }
    return (
      e.displacementMap !== void 0 &&
        (i.displacementMap = r(e.displacementMap)),
      e.displacementScale !== void 0 &&
        (i.displacementScale = e.displacementScale),
      e.displacementBias !== void 0 &&
        (i.displacementBias = e.displacementBias),
      e.roughnessMap !== void 0 && (i.roughnessMap = r(e.roughnessMap)),
      e.metalnessMap !== void 0 && (i.metalnessMap = r(e.metalnessMap)),
      e.emissiveMap !== void 0 && (i.emissiveMap = r(e.emissiveMap)),
      e.emissiveIntensity !== void 0 &&
        (i.emissiveIntensity = e.emissiveIntensity),
      e.specularMap !== void 0 && (i.specularMap = r(e.specularMap)),
      e.specularIntensityMap !== void 0 &&
        (i.specularIntensityMap = r(e.specularIntensityMap)),
      e.specularColorMap !== void 0 &&
        (i.specularColorMap = r(e.specularColorMap)),
      e.envMap !== void 0 && (i.envMap = r(e.envMap)),
      e.envMapIntensity !== void 0 && (i.envMapIntensity = e.envMapIntensity),
      e.reflectivity !== void 0 && (i.reflectivity = e.reflectivity),
      e.refractionRatio !== void 0 && (i.refractionRatio = e.refractionRatio),
      e.lightMap !== void 0 && (i.lightMap = r(e.lightMap)),
      e.lightMapIntensity !== void 0 &&
        (i.lightMapIntensity = e.lightMapIntensity),
      e.aoMap !== void 0 && (i.aoMap = r(e.aoMap)),
      e.aoMapIntensity !== void 0 && (i.aoMapIntensity = e.aoMapIntensity),
      e.gradientMap !== void 0 && (i.gradientMap = r(e.gradientMap)),
      e.clearcoatMap !== void 0 && (i.clearcoatMap = r(e.clearcoatMap)),
      e.clearcoatRoughnessMap !== void 0 &&
        (i.clearcoatRoughnessMap = r(e.clearcoatRoughnessMap)),
      e.clearcoatNormalMap !== void 0 &&
        (i.clearcoatNormalMap = r(e.clearcoatNormalMap)),
      e.clearcoatNormalScale !== void 0 &&
        (i.clearcoatNormalScale = new Fe().fromArray(e.clearcoatNormalScale)),
      e.iridescenceMap !== void 0 && (i.iridescenceMap = r(e.iridescenceMap)),
      e.iridescenceThicknessMap !== void 0 &&
        (i.iridescenceThicknessMap = r(e.iridescenceThicknessMap)),
      e.transmissionMap !== void 0 &&
        (i.transmissionMap = r(e.transmissionMap)),
      e.thicknessMap !== void 0 && (i.thicknessMap = r(e.thicknessMap)),
      e.anisotropyMap !== void 0 && (i.anisotropyMap = r(e.anisotropyMap)),
      e.sheenColorMap !== void 0 && (i.sheenColorMap = r(e.sheenColorMap)),
      e.sheenRoughnessMap !== void 0 &&
        (i.sheenRoughnessMap = r(e.sheenRoughnessMap)),
      i
    );
  }
  setTextures(e) {
    return (this.textures = e), this;
  }
  static createMaterialFromType(e) {
    const n = {
      ShadowMaterial: lF,
      SpriteMaterial: XE,
      RawShaderMaterial: cF,
      ShaderMaterial: Ko,
      PointsMaterial: YE,
      MeshPhysicalMaterial: uF,
      MeshStandardMaterial: rM,
      MeshPhongMaterial: fF,
      MeshToonMaterial: dF,
      MeshNormalMaterial: hF,
      MeshLambertMaterial: pF,
      MeshDepthMaterial: iy,
      MeshDistanceMaterial: oy,
      MeshBasicMaterial: pa,
      MeshMatcapMaterial: mF,
      LineDashedMaterial: gF,
      LineBasicMaterial: li,
      Material: Rr,
    };
    return new n[e]();
  }
}
class Cw {
  static decodeText(e) {
    if (typeof TextDecoder < "u") return new TextDecoder().decode(e);
    let n = "";
    for (let r = 0, i = e.length; r < i; r++) n += String.fromCharCode(e[r]);
    try {
      return decodeURIComponent(escape(n));
    } catch {
      return n;
    }
  }
  static extractUrlBase(e) {
    const n = e.lastIndexOf("/");
    return n === -1 ? "./" : e.slice(0, n + 1);
  }
  static resolveURL(e, n) {
    return typeof e != "string" || e === ""
      ? ""
      : (/^https?:\/\//i.test(n) &&
          /^\//.test(e) &&
          (n = n.replace(/(^https?:\/\/[^\/]+).*/i, "$1")),
        /^(https?:)?\/\//i.test(e) ||
        /^data:.*,.*$/i.test(e) ||
        /^blob:.*$/i.test(e)
          ? e
          : n + e);
  }
}
class Cy extends It {
  constructor() {
    super(),
      (this.isInstancedBufferGeometry = !0),
      (this.type = "InstancedBufferGeometry"),
      (this.instanceCount = 1 / 0);
  }
  copy(e) {
    return super.copy(e), (this.instanceCount = e.instanceCount), this;
  }
  toJSON() {
    const e = super.toJSON();
    return (
      (e.instanceCount = this.instanceCount),
      (e.isInstancedBufferGeometry = !0),
      e
    );
  }
}
class LF extends bi {
  constructor(e) {
    super(e);
  }
  load(e, n, r, i) {
    const o = this,
      s = new ca(o.manager);
    s.setPath(o.path),
      s.setRequestHeader(o.requestHeader),
      s.setWithCredentials(o.withCredentials),
      s.load(
        e,
        function (a) {
          try {
            n(o.parse(JSON.parse(a)));
          } catch (l) {
            i ? i(l) : console.error(l), o.manager.itemError(e);
          }
        },
        r,
        i
      );
  }
  parse(e) {
    const n = {},
      r = {};
    function i(m, v) {
      if (n[v] !== void 0) return n[v];
      const x = m.interleavedBuffers[v],
        g = o(m, x.buffer),
        y = Zu(x.type, g),
        _ = new ly(y, x.stride);
      return (_.uuid = x.uuid), (n[v] = _), _;
    }
    function o(m, v) {
      if (r[v] !== void 0) return r[v];
      const x = m.arrayBuffers[v],
        g = new Uint32Array(x).buffer;
      return (r[v] = g), g;
    }
    const s = e.isInstancedBufferGeometry ? new Cy() : new It(),
      a = e.data.index;
    if (a !== void 0) {
      const m = Zu(a.type, a.array);
      s.setIndex(new en(m, 1));
    }
    const l = e.data.attributes;
    for (const m in l) {
      const v = l[m];
      let S;
      if (v.isInterleavedBufferAttribute) {
        const x = i(e.data, v.data);
        S = new Vi(x, v.itemSize, v.offset, v.normalized);
      } else {
        const x = Zu(v.type, v.array),
          g = v.isInstancedBufferAttribute ? Ac : en;
        S = new g(x, v.itemSize, v.normalized);
      }
      v.name !== void 0 && (S.name = v.name),
        v.usage !== void 0 && S.setUsage(v.usage),
        s.setAttribute(m, S);
    }
    const c = e.data.morphAttributes;
    if (c)
      for (const m in c) {
        const v = c[m],
          S = [];
        for (let x = 0, g = v.length; x < g; x++) {
          const y = v[x];
          let _;
          if (y.isInterleavedBufferAttribute) {
            const b = i(e.data, y.data);
            _ = new Vi(b, y.itemSize, y.offset, y.normalized);
          } else {
            const b = Zu(y.type, y.array);
            _ = new en(b, y.itemSize, y.normalized);
          }
          y.name !== void 0 && (_.name = y.name), S.push(_);
        }
        s.morphAttributes[m] = S;
      }
    e.data.morphTargetsRelative && (s.morphTargetsRelative = !0);
    const h = e.data.groups || e.data.drawcalls || e.data.offsets;
    if (h !== void 0)
      for (let m = 0, v = h.length; m !== v; ++m) {
        const S = h[m];
        s.addGroup(S.start, S.count, S.materialIndex);
      }
    const p = e.data.boundingSphere;
    if (p !== void 0) {
      const m = new W();
      p.center !== void 0 && m.fromArray(p.center),
        (s.boundingSphere = new sr(m, p.radius));
    }
    return (
      e.name && (s.name = e.name), e.userData && (s.userData = e.userData), s
    );
  }
}
class HG extends bi {
  constructor(e) {
    super(e);
  }
  load(e, n, r, i) {
    const o = this,
      s = this.path === "" ? Cw.extractUrlBase(e) : this.path;
    this.resourcePath = this.resourcePath || s;
    const a = new ca(this.manager);
    a.setPath(this.path),
      a.setRequestHeader(this.requestHeader),
      a.setWithCredentials(this.withCredentials),
      a.load(
        e,
        function (l) {
          let c = null;
          try {
            c = JSON.parse(l);
          } catch (h) {
            i !== void 0 && i(h),
              console.error(
                "THREE:ObjectLoader: Can't parse " + e + ".",
                h.message
              );
            return;
          }
          const u = c.metadata;
          if (
            u === void 0 ||
            u.type === void 0 ||
            u.type.toLowerCase() === "geometry"
          ) {
            i !== void 0 && i(new Error("THREE.ObjectLoader: Can't load " + e)),
              console.error("THREE.ObjectLoader: Can't load " + e);
            return;
          }
          o.parse(c, n);
        },
        r,
        i
      );
  }
  async loadAsync(e, n) {
    const r = this,
      i = this.path === "" ? Cw.extractUrlBase(e) : this.path;
    this.resourcePath = this.resourcePath || i;
    const o = new ca(this.manager);
    o.setPath(this.path),
      o.setRequestHeader(this.requestHeader),
      o.setWithCredentials(this.withCredentials);
    const s = await o.loadAsync(e, n),
      a = JSON.parse(s),
      l = a.metadata;
    if (
      l === void 0 ||
      l.type === void 0 ||
      l.type.toLowerCase() === "geometry"
    )
      throw new Error("THREE.ObjectLoader: Can't load " + e);
    return await r.parseAsync(a);
  }
  parse(e, n) {
    const r = this.parseAnimations(e.animations),
      i = this.parseShapes(e.shapes),
      o = this.parseGeometries(e.geometries, i),
      s = this.parseImages(e.images, function () {
        n !== void 0 && n(c);
      }),
      a = this.parseTextures(e.textures, s),
      l = this.parseMaterials(e.materials, a),
      c = this.parseObject(e.object, o, l, a, r),
      u = this.parseSkeletons(e.skeletons, c);
    if ((this.bindSkeletons(c, u), n !== void 0)) {
      let h = !1;
      for (const p in s)
        if (s[p].data instanceof HTMLImageElement) {
          h = !0;
          break;
        }
      h === !1 && n(c);
    }
    return c;
  }
  async parseAsync(e) {
    const n = this.parseAnimations(e.animations),
      r = this.parseShapes(e.shapes),
      i = this.parseGeometries(e.geometries, r),
      o = await this.parseImagesAsync(e.images),
      s = this.parseTextures(e.textures, o),
      a = this.parseMaterials(e.materials, s),
      l = this.parseObject(e.object, i, a, s, n),
      c = this.parseSkeletons(e.skeletons, l);
    return this.bindSkeletons(l, c), l;
  }
  parseShapes(e) {
    const n = {};
    if (e !== void 0)
      for (let r = 0, i = e.length; r < i; r++) {
        const o = new tl().fromJSON(e[r]);
        n[o.uuid] = o;
      }
    return n;
  }
  parseSkeletons(e, n) {
    const r = {},
      i = {};
    if (
      (n.traverse(function (o) {
        o.isBone && (i[o.uuid] = o);
      }),
      e !== void 0)
    )
      for (let o = 0, s = e.length; o < s; o++) {
        const a = new cy().fromJSON(e[o], i);
        r[a.uuid] = a;
      }
    return r;
  }
  parseGeometries(e, n) {
    const r = {};
    if (e !== void 0) {
      const i = new LF();
      for (let o = 0, s = e.length; o < s; o++) {
        let a;
        const l = e[o];
        switch (l.type) {
          case "BufferGeometry":
          case "InstancedBufferGeometry":
            a = i.parse(l);
            break;
          default:
            l.type in XA
              ? (a = XA[l.type].fromJSON(l, n))
              : console.warn(
                  `THREE.ObjectLoader: Unsupported geometry type "${l.type}"`
                );
        }
        (a.uuid = l.uuid),
          l.name !== void 0 && (a.name = l.name),
          l.userData !== void 0 && (a.userData = l.userData),
          (r[l.uuid] = a);
      }
    }
    return r;
  }
  parseMaterials(e, n) {
    const r = {},
      i = {};
    if (e !== void 0) {
      const o = new My();
      o.setTextures(n);
      for (let s = 0, a = e.length; s < a; s++) {
        const l = e[s];
        r[l.uuid] === void 0 && (r[l.uuid] = o.parse(l)),
          (i[l.uuid] = r[l.uuid]);
      }
    }
    return i;
  }
  parseAnimations(e) {
    const n = {};
    if (e !== void 0)
      for (let r = 0; r < e.length; r++) {
        const i = e[r],
          o = Qh.parse(i);
        n[o.uuid] = o;
      }
    return n;
  }
  parseImages(e, n) {
    const r = this,
      i = {};
    let o;
    function s(l) {
      return (
        r.manager.itemStart(l),
        o.load(
          l,
          function () {
            r.manager.itemEnd(l);
          },
          void 0,
          function () {
            r.manager.itemError(l), r.manager.itemEnd(l);
          }
        )
      );
    }
    function a(l) {
      if (typeof l == "string") {
        const c = l,
          u = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(c) ? c : r.resourcePath + c;
        return s(u);
      } else
        return l.data
          ? { data: Zu(l.type, l.data), width: l.width, height: l.height }
          : null;
    }
    if (e !== void 0 && e.length > 0) {
      const l = new aM(n);
      (o = new Jh(l)), o.setCrossOrigin(this.crossOrigin);
      for (let c = 0, u = e.length; c < u; c++) {
        const h = e[c],
          p = h.url;
        if (Array.isArray(p)) {
          const m = [];
          for (let v = 0, S = p.length; v < S; v++) {
            const x = p[v],
              g = a(x);
            g !== null &&
              (g instanceof HTMLImageElement
                ? m.push(g)
                : m.push(new gc(g.data, g.width, g.height)));
          }
          i[h.uuid] = new sc(m);
        } else {
          const m = a(h.url);
          i[h.uuid] = new sc(m);
        }
      }
    }
    return i;
  }
  async parseImagesAsync(e) {
    const n = this,
      r = {};
    let i;
    async function o(s) {
      if (typeof s == "string") {
        const a = s,
          l = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(a) ? a : n.resourcePath + a;
        return await i.loadAsync(l);
      } else
        return s.data
          ? { data: Zu(s.type, s.data), width: s.width, height: s.height }
          : null;
    }
    if (e !== void 0 && e.length > 0) {
      (i = new Jh(this.manager)), i.setCrossOrigin(this.crossOrigin);
      for (let s = 0, a = e.length; s < a; s++) {
        const l = e[s],
          c = l.url;
        if (Array.isArray(c)) {
          const u = [];
          for (let h = 0, p = c.length; h < p; h++) {
            const m = c[h],
              v = await o(m);
            v !== null &&
              (v instanceof HTMLImageElement
                ? u.push(v)
                : u.push(new gc(v.data, v.width, v.height)));
          }
          r[l.uuid] = new sc(u);
        } else {
          const u = await o(l.url);
          r[l.uuid] = new sc(u);
        }
      }
    }
    return r;
  }
  parseTextures(e, n) {
    function r(o, s) {
      return typeof o == "number"
        ? o
        : (console.warn(
            "THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",
            o
          ),
          s[o]);
    }
    const i = {};
    if (e !== void 0)
      for (let o = 0, s = e.length; o < s; o++) {
        const a = e[o];
        a.image === void 0 &&
          console.warn('THREE.ObjectLoader: No "image" specified for', a.uuid),
          n[a.image] === void 0 &&
            console.warn("THREE.ObjectLoader: Undefined image", a.image);
        const l = n[a.image],
          c = l.data;
        let u;
        Array.isArray(c)
          ? ((u = new _p()), c.length === 6 && (u.needsUpdate = !0))
          : (c && c.data ? (u = new gc()) : (u = new Pn()),
            c && (u.needsUpdate = !0)),
          (u.source = l),
          (u.uuid = a.uuid),
          a.name !== void 0 && (u.name = a.name),
          a.mapping !== void 0 && (u.mapping = r(a.mapping, VG)),
          a.channel !== void 0 && (u.channel = a.channel),
          a.offset !== void 0 && u.offset.fromArray(a.offset),
          a.repeat !== void 0 && u.repeat.fromArray(a.repeat),
          a.center !== void 0 && u.center.fromArray(a.center),
          a.rotation !== void 0 && (u.rotation = a.rotation),
          a.wrap !== void 0 &&
            ((u.wrapS = r(a.wrap[0], ZA)), (u.wrapT = r(a.wrap[1], ZA))),
          a.format !== void 0 && (u.format = a.format),
          a.internalFormat !== void 0 && (u.internalFormat = a.internalFormat),
          a.type !== void 0 && (u.type = a.type),
          a.colorSpace !== void 0 && (u.colorSpace = a.colorSpace),
          a.encoding !== void 0 && (u.encoding = a.encoding),
          a.minFilter !== void 0 && (u.minFilter = r(a.minFilter, QA)),
          a.magFilter !== void 0 && (u.magFilter = r(a.magFilter, QA)),
          a.anisotropy !== void 0 && (u.anisotropy = a.anisotropy),
          a.flipY !== void 0 && (u.flipY = a.flipY),
          a.generateMipmaps !== void 0 &&
            (u.generateMipmaps = a.generateMipmaps),
          a.premultiplyAlpha !== void 0 &&
            (u.premultiplyAlpha = a.premultiplyAlpha),
          a.unpackAlignment !== void 0 &&
            (u.unpackAlignment = a.unpackAlignment),
          a.compareFunction !== void 0 &&
            (u.compareFunction = a.compareFunction),
          a.userData !== void 0 && (u.userData = a.userData),
          (i[a.uuid] = u);
      }
    return i;
  }
  parseObject(e, n, r, i, o) {
    let s;
    function a(p) {
      return (
        n[p] === void 0 &&
          console.warn("THREE.ObjectLoader: Undefined geometry", p),
        n[p]
      );
    }
    function l(p) {
      if (p !== void 0) {
        if (Array.isArray(p)) {
          const m = [];
          for (let v = 0, S = p.length; v < S; v++) {
            const x = p[v];
            r[x] === void 0 &&
              console.warn("THREE.ObjectLoader: Undefined material", x),
              m.push(r[x]);
          }
          return m;
        }
        return (
          r[p] === void 0 &&
            console.warn("THREE.ObjectLoader: Undefined material", p),
          r[p]
        );
      }
    }
    function c(p) {
      return (
        i[p] === void 0 &&
          console.warn("THREE.ObjectLoader: Undefined texture", p),
        i[p]
      );
    }
    let u, h;
    switch (e.type) {
      case "Scene":
        (s = new m0()),
          e.background !== void 0 &&
            (Number.isInteger(e.background)
              ? (s.background = new nt(e.background))
              : (s.background = c(e.background))),
          e.environment !== void 0 && (s.environment = c(e.environment)),
          e.fog !== void 0 &&
            (e.fog.type === "Fog"
              ? (s.fog = new ay(e.fog.color, e.fog.near, e.fog.far))
              : e.fog.type === "FogExp2" &&
                (s.fog = new sy(e.fog.color, e.fog.density)),
            e.fog.name !== "" && (s.fog.name = e.fog.name)),
          e.backgroundBlurriness !== void 0 &&
            (s.backgroundBlurriness = e.backgroundBlurriness),
          e.backgroundIntensity !== void 0 &&
            (s.backgroundIntensity = e.backgroundIntensity);
        break;
      case "PerspectiveCamera":
        (s = new Un(e.fov, e.aspect, e.near, e.far)),
          e.focus !== void 0 && (s.focus = e.focus),
          e.zoom !== void 0 && (s.zoom = e.zoom),
          e.filmGauge !== void 0 && (s.filmGauge = e.filmGauge),
          e.filmOffset !== void 0 && (s.filmOffset = e.filmOffset),
          e.view !== void 0 && (s.view = Object.assign({}, e.view));
        break;
      case "OrthographicCamera":
        (s = new ea(e.left, e.right, e.top, e.bottom, e.near, e.far)),
          e.zoom !== void 0 && (s.zoom = e.zoom),
          e.view !== void 0 && (s.view = Object.assign({}, e.view));
        break;
      case "AmbientLight":
        s = new TF(e.color, e.intensity);
        break;
      case "DirectionalLight":
        s = new CF(e.color, e.intensity);
        break;
      case "PointLight":
        s = new MF(e.color, e.intensity, e.distance, e.decay);
        break;
      case "RectAreaLight":
        s = new AF(e.color, e.intensity, e.width, e.height);
        break;
      case "SpotLight":
        s = new EF(
          e.color,
          e.intensity,
          e.distance,
          e.angle,
          e.penumbra,
          e.decay
        );
        break;
      case "HemisphereLight":
        s = new bF(e.color, e.groundColor, e.intensity);
        break;
      case "LightProbe":
        s = new PF().fromJSON(e);
        break;
      case "SkinnedMesh":
        (u = a(e.geometry)),
          (h = l(e.material)),
          (s = new qO(u, h)),
          e.bindMode !== void 0 && (s.bindMode = e.bindMode),
          e.bindMatrix !== void 0 && s.bindMatrix.fromArray(e.bindMatrix),
          e.skeleton !== void 0 && (s.skeleton = e.skeleton);
        break;
      case "Mesh":
        (u = a(e.geometry)), (h = l(e.material)), (s = new An(u, h));
        break;
      case "InstancedMesh":
        (u = a(e.geometry)), (h = l(e.material));
        const p = e.count,
          m = e.instanceMatrix,
          v = e.instanceColor;
        (s = new YO(u, h, p)),
          (s.instanceMatrix = new Ac(new Float32Array(m.array), 16)),
          v !== void 0 &&
            (s.instanceColor = new Ac(new Float32Array(v.array), v.itemSize));
        break;
      case "BatchedMesh":
        (u = a(e.geometry)),
          (h = l(e.material)),
          (s = new KO(
            e.maxGeometryCount,
            e.maxVertexCount,
            e.maxIndexCount,
            h
          )),
          (s.geometry = u),
          (s.perObjectFrustumCulled = e.perObjectFrustumCulled),
          (s.sortObjects = e.sortObjects),
          (s._drawRanges = e.drawRanges),
          (s._reservedRanges = e.reservedRanges),
          (s._visibility = e.visibility),
          (s._active = e.active),
          (s._bounds = e.bounds.map((S) => {
            const x = new or();
            x.min.fromArray(S.boxMin), x.max.fromArray(S.boxMax);
            const g = new sr();
            return (
              (g.radius = S.sphereRadius),
              g.center.fromArray(S.sphereCenter),
              {
                boxInitialized: S.boxInitialized,
                box: x,
                sphereInitialized: S.sphereInitialized,
                sphere: g,
              }
            );
          })),
          (s._maxGeometryCount = e.maxGeometryCount),
          (s._maxVertexCount = e.maxVertexCount),
          (s._maxIndexCount = e.maxIndexCount),
          (s._geometryInitialized = e.geometryInitialized),
          (s._geometryCount = e.geometryCount),
          (s._matricesTexture = c(e.matricesTexture.uuid));
        break;
      case "LOD":
        s = new XO();
        break;
      case "Line":
        s = new sl(a(e.geometry), l(e.material));
        break;
      case "LineLoop":
        s = new ZO(a(e.geometry), l(e.material));
        break;
      case "LineSegments":
        s = new Es(a(e.geometry), l(e.material));
        break;
      case "PointCloud":
      case "Points":
        s = new QO(a(e.geometry), l(e.material));
        break;
      case "Sprite":
        s = new $O(l(e.material));
        break;
      case "Group":
        s = new ef();
        break;
      case "Bone":
        s = new qE();
        break;
      default:
        s = new Zt();
    }
    if (
      ((s.uuid = e.uuid),
      e.name !== void 0 && (s.name = e.name),
      e.matrix !== void 0
        ? (s.matrix.fromArray(e.matrix),
          e.matrixAutoUpdate !== void 0 &&
            (s.matrixAutoUpdate = e.matrixAutoUpdate),
          s.matrixAutoUpdate &&
            s.matrix.decompose(s.position, s.quaternion, s.scale))
        : (e.position !== void 0 && s.position.fromArray(e.position),
          e.rotation !== void 0 && s.rotation.fromArray(e.rotation),
          e.quaternion !== void 0 && s.quaternion.fromArray(e.quaternion),
          e.scale !== void 0 && s.scale.fromArray(e.scale)),
      e.up !== void 0 && s.up.fromArray(e.up),
      e.castShadow !== void 0 && (s.castShadow = e.castShadow),
      e.receiveShadow !== void 0 && (s.receiveShadow = e.receiveShadow),
      e.shadow &&
        (e.shadow.bias !== void 0 && (s.shadow.bias = e.shadow.bias),
        e.shadow.normalBias !== void 0 &&
          (s.shadow.normalBias = e.shadow.normalBias),
        e.shadow.radius !== void 0 && (s.shadow.radius = e.shadow.radius),
        e.shadow.mapSize !== void 0 &&
          s.shadow.mapSize.fromArray(e.shadow.mapSize),
        e.shadow.camera !== void 0 &&
          (s.shadow.camera = this.parseObject(e.shadow.camera))),
      e.visible !== void 0 && (s.visible = e.visible),
      e.frustumCulled !== void 0 && (s.frustumCulled = e.frustumCulled),
      e.renderOrder !== void 0 && (s.renderOrder = e.renderOrder),
      e.userData !== void 0 && (s.userData = e.userData),
      e.layers !== void 0 && (s.layers.mask = e.layers),
      e.children !== void 0)
    ) {
      const p = e.children;
      for (let m = 0; m < p.length; m++)
        s.add(this.parseObject(p[m], n, r, i, o));
    }
    if (e.animations !== void 0) {
      const p = e.animations;
      for (let m = 0; m < p.length; m++) {
        const v = p[m];
        s.animations.push(o[v]);
      }
    }
    if (e.type === "LOD") {
      e.autoUpdate !== void 0 && (s.autoUpdate = e.autoUpdate);
      const p = e.levels;
      for (let m = 0; m < p.length; m++) {
        const v = p[m],
          S = s.getObjectByProperty("uuid", v.object);
        S !== void 0 && s.addLevel(S, v.distance, v.hysteresis);
      }
    }
    return s;
  }
  bindSkeletons(e, n) {
    Object.keys(n).length !== 0 &&
      e.traverse(function (r) {
        if (r.isSkinnedMesh === !0 && r.skeleton !== void 0) {
          const i = n[r.skeleton];
          i === void 0
            ? console.warn(
                "THREE.ObjectLoader: No skeleton found with UUID:",
                r.skeleton
              )
            : r.bind(i, r.bindMatrix);
        }
      });
  }
}
const VG = {
    UVMapping: Q0,
    CubeReflectionMapping: la,
    CubeRefractionMapping: il,
    EquirectangularReflectionMapping: Oh,
    EquirectangularRefractionMapping: Fh,
    CubeUVReflectionMapping: kf,
  },
  ZA = {
    RepeatWrapping: Nh,
    ClampToEdgeWrapping: Hr,
    MirroredRepeatWrapping: Dh,
  },
  QA = {
    NearestFilter: Wn,
    NearestMipmapNearestFilter: d0,
    NearestMipmapLinearFilter: ih,
    LinearFilter: Cn,
    LinearMipmapNearestFilter: TE,
    LinearMipmapLinearFilter: ol,
  };
class GG extends bi {
  constructor(e) {
    super(e),
      (this.isImageBitmapLoader = !0),
      typeof createImageBitmap > "u" &&
        console.warn(
          "THREE.ImageBitmapLoader: createImageBitmap() not supported."
        ),
      typeof fetch > "u" &&
        console.warn("THREE.ImageBitmapLoader: fetch() not supported."),
      (this.options = { premultiplyAlpha: "none" });
  }
  setOptions(e) {
    return (this.options = e), this;
  }
  load(e, n, r, i) {
    e === void 0 && (e = ""),
      this.path !== void 0 && (e = this.path + e),
      (e = this.manager.resolveURL(e));
    const o = this,
      s = ta.get(e);
    if (s !== void 0) {
      if ((o.manager.itemStart(e), s.then)) {
        s.then((c) => {
          n && n(c), o.manager.itemEnd(e);
        }).catch((c) => {
          i && i(c);
        });
        return;
      }
      return (
        setTimeout(function () {
          n && n(s), o.manager.itemEnd(e);
        }, 0),
        s
      );
    }
    const a = {};
    (a.credentials =
      this.crossOrigin === "anonymous" ? "same-origin" : "include"),
      (a.headers = this.requestHeader);
    const l = fetch(e, a)
      .then(function (c) {
        return c.blob();
      })
      .then(function (c) {
        return createImageBitmap(
          c,
          Object.assign(o.options, { colorSpaceConversion: "none" })
        );
      })
      .then(function (c) {
        return ta.add(e, c), n && n(c), o.manager.itemEnd(e), c;
      })
      .catch(function (c) {
        i && i(c), ta.remove(e), o.manager.itemError(e), o.manager.itemEnd(e);
      });
    ta.add(e, l), o.manager.itemStart(e);
  }
}
let Pg;
class cM {
  static getContext() {
    return (
      Pg === void 0 &&
        (Pg = new (window.AudioContext || window.webkitAudioContext)()),
      Pg
    );
  }
  static setContext(e) {
    Pg = e;
  }
}
class jG extends bi {
  constructor(e) {
    super(e);
  }
  load(e, n, r, i) {
    const o = this,
      s = new ca(this.manager);
    s.setResponseType("arraybuffer"),
      s.setPath(this.path),
      s.setRequestHeader(this.requestHeader),
      s.setWithCredentials(this.withCredentials),
      s.load(
        e,
        function (l) {
          try {
            const c = l.slice(0);
            cM.getContext()
              .decodeAudioData(c, function (h) {
                n(h);
              })
              .catch(a);
          } catch (c) {
            a(c);
          }
        },
        r,
        i
      );
    function a(l) {
      i ? i(l) : console.error(l), o.manager.itemError(e);
    }
  }
}
const JA = new bt(),
  eR = new bt(),
  kl = new bt();
class WG {
  constructor() {
    (this.type = "StereoCamera"),
      (this.aspect = 1),
      (this.eyeSep = 0.064),
      (this.cameraL = new Un()),
      this.cameraL.layers.enable(1),
      (this.cameraL.matrixAutoUpdate = !1),
      (this.cameraR = new Un()),
      this.cameraR.layers.enable(2),
      (this.cameraR.matrixAutoUpdate = !1),
      (this._cache = {
        focus: null,
        fov: null,
        aspect: null,
        near: null,
        far: null,
        zoom: null,
        eyeSep: null,
      });
  }
  update(e) {
    const n = this._cache;
    if (
      n.focus !== e.focus ||
      n.fov !== e.fov ||
      n.aspect !== e.aspect * this.aspect ||
      n.near !== e.near ||
      n.far !== e.far ||
      n.zoom !== e.zoom ||
      n.eyeSep !== this.eyeSep
    ) {
      (n.focus = e.focus),
        (n.fov = e.fov),
        (n.aspect = e.aspect * this.aspect),
        (n.near = e.near),
        (n.far = e.far),
        (n.zoom = e.zoom),
        (n.eyeSep = this.eyeSep),
        kl.copy(e.projectionMatrix);
      const i = n.eyeSep / 2,
        o = (i * n.near) / n.focus,
        s = (n.near * Math.tan(pc * n.fov * 0.5)) / n.zoom;
      let a, l;
      (eR.elements[12] = -i),
        (JA.elements[12] = i),
        (a = -s * n.aspect + o),
        (l = s * n.aspect + o),
        (kl.elements[0] = (2 * n.near) / (l - a)),
        (kl.elements[8] = (l + a) / (l - a)),
        this.cameraL.projectionMatrix.copy(kl),
        (a = -s * n.aspect - o),
        (l = s * n.aspect - o),
        (kl.elements[0] = (2 * n.near) / (l - a)),
        (kl.elements[8] = (l + a) / (l - a)),
        this.cameraR.projectionMatrix.copy(kl);
    }
    this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(eR),
      this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(JA);
  }
}
class uM {
  constructor(e = !0) {
    (this.autoStart = e),
      (this.startTime = 0),
      (this.oldTime = 0),
      (this.elapsedTime = 0),
      (this.running = !1);
  }
  start() {
    (this.startTime = tR()),
      (this.oldTime = this.startTime),
      (this.elapsedTime = 0),
      (this.running = !0);
  }
  stop() {
    this.getElapsedTime(), (this.running = !1), (this.autoStart = !1);
  }
  getElapsedTime() {
    return this.getDelta(), this.elapsedTime;
  }
  getDelta() {
    let e = 0;
    if (this.autoStart && !this.running) return this.start(), 0;
    if (this.running) {
      const n = tR();
      (e = (n - this.oldTime) / 1e3),
        (this.oldTime = n),
        (this.elapsedTime += e);
    }
    return e;
  }
}
function tR() {
  return (typeof performance > "u" ? Date : performance).now();
}
const Bl = new W(),
  nR = new Gr(),
  $G = new W(),
  Hl = new W();
class XG extends Zt {
  constructor() {
    super(),
      (this.type = "AudioListener"),
      (this.context = cM.getContext()),
      (this.gain = this.context.createGain()),
      this.gain.connect(this.context.destination),
      (this.filter = null),
      (this.timeDelta = 0),
      (this._clock = new uM());
  }
  getInput() {
    return this.gain;
  }
  removeFilter() {
    return (
      this.filter !== null &&
        (this.gain.disconnect(this.filter),
        this.filter.disconnect(this.context.destination),
        this.gain.connect(this.context.destination),
        (this.filter = null)),
      this
    );
  }
  getFilter() {
    return this.filter;
  }
  setFilter(e) {
    return (
      this.filter !== null
        ? (this.gain.disconnect(this.filter),
          this.filter.disconnect(this.context.destination))
        : this.gain.disconnect(this.context.destination),
      (this.filter = e),
      this.gain.connect(this.filter),
      this.filter.connect(this.context.destination),
      this
    );
  }
  getMasterVolume() {
    return this.gain.gain.value;
  }
  setMasterVolume(e) {
    return (
      this.gain.gain.setTargetAtTime(e, this.context.currentTime, 0.01), this
    );
  }
  updateMatrixWorld(e) {
    super.updateMatrixWorld(e);
    const n = this.context.listener,
      r = this.up;
    if (
      ((this.timeDelta = this._clock.getDelta()),
      this.matrixWorld.decompose(Bl, nR, $G),
      Hl.set(0, 0, -1).applyQuaternion(nR),
      n.positionX)
    ) {
      const i = this.context.currentTime + this.timeDelta;
      n.positionX.linearRampToValueAtTime(Bl.x, i),
        n.positionY.linearRampToValueAtTime(Bl.y, i),
        n.positionZ.linearRampToValueAtTime(Bl.z, i),
        n.forwardX.linearRampToValueAtTime(Hl.x, i),
        n.forwardY.linearRampToValueAtTime(Hl.y, i),
        n.forwardZ.linearRampToValueAtTime(Hl.z, i),
        n.upX.linearRampToValueAtTime(r.x, i),
        n.upY.linearRampToValueAtTime(r.y, i),
        n.upZ.linearRampToValueAtTime(r.z, i);
    } else
      n.setPosition(Bl.x, Bl.y, Bl.z),
        n.setOrientation(Hl.x, Hl.y, Hl.z, r.x, r.y, r.z);
  }
}
let IF = class extends Zt {
  constructor(e) {
    super(),
      (this.type = "Audio"),
      (this.listener = e),
      (this.context = e.context),
      (this.gain = this.context.createGain()),
      this.gain.connect(e.getInput()),
      (this.autoplay = !1),
      (this.buffer = null),
      (this.detune = 0),
      (this.loop = !1),
      (this.loopStart = 0),
      (this.loopEnd = 0),
      (this.offset = 0),
      (this.duration = void 0),
      (this.playbackRate = 1),
      (this.isPlaying = !1),
      (this.hasPlaybackControl = !0),
      (this.source = null),
      (this.sourceType = "empty"),
      (this._startedAt = 0),
      (this._progress = 0),
      (this._connected = !1),
      (this.filters = []);
  }
  getOutput() {
    return this.gain;
  }
  setNodeSource(e) {
    return (
      (this.hasPlaybackControl = !1),
      (this.sourceType = "audioNode"),
      (this.source = e),
      this.connect(),
      this
    );
  }
  setMediaElementSource(e) {
    return (
      (this.hasPlaybackControl = !1),
      (this.sourceType = "mediaNode"),
      (this.source = this.context.createMediaElementSource(e)),
      this.connect(),
      this
    );
  }
  setMediaStreamSource(e) {
    return (
      (this.hasPlaybackControl = !1),
      (this.sourceType = "mediaStreamNode"),
      (this.source = this.context.createMediaStreamSource(e)),
      this.connect(),
      this
    );
  }
  setBuffer(e) {
    return (
      (this.buffer = e),
      (this.sourceType = "buffer"),
      this.autoplay && this.play(),
      this
    );
  }
  play(e = 0) {
    if (this.isPlaying === !0) {
      console.warn("THREE.Audio: Audio is already playing.");
      return;
    }
    if (this.hasPlaybackControl === !1) {
      console.warn("THREE.Audio: this Audio has no playback control.");
      return;
    }
    this._startedAt = this.context.currentTime + e;
    const n = this.context.createBufferSource();
    return (
      (n.buffer = this.buffer),
      (n.loop = this.loop),
      (n.loopStart = this.loopStart),
      (n.loopEnd = this.loopEnd),
      (n.onended = this.onEnded.bind(this)),
      n.start(this._startedAt, this._progress + this.offset, this.duration),
      (this.isPlaying = !0),
      (this.source = n),
      this.setDetune(this.detune),
      this.setPlaybackRate(this.playbackRate),
      this.connect()
    );
  }
  pause() {
    if (this.hasPlaybackControl === !1) {
      console.warn("THREE.Audio: this Audio has no playback control.");
      return;
    }
    return (
      this.isPlaying === !0 &&
        ((this._progress +=
          Math.max(this.context.currentTime - this._startedAt, 0) *
          this.playbackRate),
        this.loop === !0 &&
          (this._progress =
            this._progress % (this.duration || this.buffer.duration)),
        this.source.stop(),
        (this.source.onended = null),
        (this.isPlaying = !1)),
      this
    );
  }
  stop() {
    if (this.hasPlaybackControl === !1) {
      console.warn("THREE.Audio: this Audio has no playback control.");
      return;
    }
    return (
      (this._progress = 0),
      this.source !== null &&
        (this.source.stop(), (this.source.onended = null)),
      (this.isPlaying = !1),
      this
    );
  }
  connect() {
    if (this.filters.length > 0) {
      this.source.connect(this.filters[0]);
      for (let e = 1, n = this.filters.length; e < n; e++)
        this.filters[e - 1].connect(this.filters[e]);
      this.filters[this.filters.length - 1].connect(this.getOutput());
    } else this.source.connect(this.getOutput());
    return (this._connected = !0), this;
  }
  disconnect() {
    if (this._connected !== !1) {
      if (this.filters.length > 0) {
        this.source.disconnect(this.filters[0]);
        for (let e = 1, n = this.filters.length; e < n; e++)
          this.filters[e - 1].disconnect(this.filters[e]);
        this.filters[this.filters.length - 1].disconnect(this.getOutput());
      } else this.source.disconnect(this.getOutput());
      return (this._connected = !1), this;
    }
  }
  getFilters() {
    return this.filters;
  }
  setFilters(e) {
    return (
      e || (e = []),
      this._connected === !0
        ? (this.disconnect(), (this.filters = e.slice()), this.connect())
        : (this.filters = e.slice()),
      this
    );
  }
  setDetune(e) {
    if (((this.detune = e), this.source.detune !== void 0))
      return (
        this.isPlaying === !0 &&
          this.source.detune.setTargetAtTime(
            this.detune,
            this.context.currentTime,
            0.01
          ),
        this
      );
  }
  getDetune() {
    return this.detune;
  }
  getFilter() {
    return this.getFilters()[0];
  }
  setFilter(e) {
    return this.setFilters(e ? [e] : []);
  }
  setPlaybackRate(e) {
    if (this.hasPlaybackControl === !1) {
      console.warn("THREE.Audio: this Audio has no playback control.");
      return;
    }
    return (
      (this.playbackRate = e),
      this.isPlaying === !0 &&
        this.source.playbackRate.setTargetAtTime(
          this.playbackRate,
          this.context.currentTime,
          0.01
        ),
      this
    );
  }
  getPlaybackRate() {
    return this.playbackRate;
  }
  onEnded() {
    this.isPlaying = !1;
  }
  getLoop() {
    return this.hasPlaybackControl === !1
      ? (console.warn("THREE.Audio: this Audio has no playback control."), !1)
      : this.loop;
  }
  setLoop(e) {
    if (this.hasPlaybackControl === !1) {
      console.warn("THREE.Audio: this Audio has no playback control.");
      return;
    }
    return (
      (this.loop = e),
      this.isPlaying === !0 && (this.source.loop = this.loop),
      this
    );
  }
  setLoopStart(e) {
    return (this.loopStart = e), this;
  }
  setLoopEnd(e) {
    return (this.loopEnd = e), this;
  }
  getVolume() {
    return this.gain.gain.value;
  }
  setVolume(e) {
    return (
      this.gain.gain.setTargetAtTime(e, this.context.currentTime, 0.01), this
    );
  }
};
const Vl = new W(),
  rR = new Gr(),
  qG = new W(),
  Gl = new W();
class YG extends IF {
  constructor(e) {
    super(e),
      (this.panner = this.context.createPanner()),
      (this.panner.panningModel = "HRTF"),
      this.panner.connect(this.gain);
  }
  connect() {
    super.connect(), this.panner.connect(this.gain);
  }
  disconnect() {
    super.disconnect(), this.panner.disconnect(this.gain);
  }
  getOutput() {
    return this.panner;
  }
  getRefDistance() {
    return this.panner.refDistance;
  }
  setRefDistance(e) {
    return (this.panner.refDistance = e), this;
  }
  getRolloffFactor() {
    return this.panner.rolloffFactor;
  }
  setRolloffFactor(e) {
    return (this.panner.rolloffFactor = e), this;
  }
  getDistanceModel() {
    return this.panner.distanceModel;
  }
  setDistanceModel(e) {
    return (this.panner.distanceModel = e), this;
  }
  getMaxDistance() {
    return this.panner.maxDistance;
  }
  setMaxDistance(e) {
    return (this.panner.maxDistance = e), this;
  }
  setDirectionalCone(e, n, r) {
    return (
      (this.panner.coneInnerAngle = e),
      (this.panner.coneOuterAngle = n),
      (this.panner.coneOuterGain = r),
      this
    );
  }
  updateMatrixWorld(e) {
    if (
      (super.updateMatrixWorld(e),
      this.hasPlaybackControl === !0 && this.isPlaying === !1)
    )
      return;
    this.matrixWorld.decompose(Vl, rR, qG), Gl.set(0, 0, 1).applyQuaternion(rR);
    const n = this.panner;
    if (n.positionX) {
      const r = this.context.currentTime + this.listener.timeDelta;
      n.positionX.linearRampToValueAtTime(Vl.x, r),
        n.positionY.linearRampToValueAtTime(Vl.y, r),
        n.positionZ.linearRampToValueAtTime(Vl.z, r),
        n.orientationX.linearRampToValueAtTime(Gl.x, r),
        n.orientationY.linearRampToValueAtTime(Gl.y, r),
        n.orientationZ.linearRampToValueAtTime(Gl.z, r);
    } else n.setPosition(Vl.x, Vl.y, Vl.z), n.setOrientation(Gl.x, Gl.y, Gl.z);
  }
}
class KG {
  constructor(e, n = 2048) {
    (this.analyser = e.context.createAnalyser()),
      (this.analyser.fftSize = n),
      (this.data = new Uint8Array(this.analyser.frequencyBinCount)),
      e.getOutput().connect(this.analyser);
  }
  getFrequencyData() {
    return this.analyser.getByteFrequencyData(this.data), this.data;
  }
  getAverageFrequency() {
    let e = 0;
    const n = this.getFrequencyData();
    for (let r = 0; r < n.length; r++) e += n[r];
    return e / n.length;
  }
}
class OF {
  constructor(e, n, r) {
    (this.binding = e), (this.valueSize = r);
    let i, o, s;
    switch (n) {
      case "quaternion":
        (i = this._slerp),
          (o = this._slerpAdditive),
          (s = this._setAdditiveIdentityQuaternion),
          (this.buffer = new Float64Array(r * 6)),
          (this._workIndex = 5);
        break;
      case "string":
      case "bool":
        (i = this._select),
          (o = this._select),
          (s = this._setAdditiveIdentityOther),
          (this.buffer = new Array(r * 5));
        break;
      default:
        (i = this._lerp),
          (o = this._lerpAdditive),
          (s = this._setAdditiveIdentityNumeric),
          (this.buffer = new Float64Array(r * 5));
    }
    (this._mixBufferRegion = i),
      (this._mixBufferRegionAdditive = o),
      (this._setIdentity = s),
      (this._origIndex = 3),
      (this._addIndex = 4),
      (this.cumulativeWeight = 0),
      (this.cumulativeWeightAdditive = 0),
      (this.useCount = 0),
      (this.referenceCount = 0);
  }
  accumulate(e, n) {
    const r = this.buffer,
      i = this.valueSize,
      o = e * i + i;
    let s = this.cumulativeWeight;
    if (s === 0) {
      for (let a = 0; a !== i; ++a) r[o + a] = r[a];
      s = n;
    } else {
      s += n;
      const a = n / s;
      this._mixBufferRegion(r, o, 0, a, i);
    }
    this.cumulativeWeight = s;
  }
  accumulateAdditive(e) {
    const n = this.buffer,
      r = this.valueSize,
      i = r * this._addIndex;
    this.cumulativeWeightAdditive === 0 && this._setIdentity(),
      this._mixBufferRegionAdditive(n, i, 0, e, r),
      (this.cumulativeWeightAdditive += e);
  }
  apply(e) {
    const n = this.valueSize,
      r = this.buffer,
      i = e * n + n,
      o = this.cumulativeWeight,
      s = this.cumulativeWeightAdditive,
      a = this.binding;
    if (
      ((this.cumulativeWeight = 0), (this.cumulativeWeightAdditive = 0), o < 1)
    ) {
      const l = n * this._origIndex;
      this._mixBufferRegion(r, i, l, 1 - o, n);
    }
    s > 0 && this._mixBufferRegionAdditive(r, i, this._addIndex * n, 1, n);
    for (let l = n, c = n + n; l !== c; ++l)
      if (r[l] !== r[l + n]) {
        a.setValue(r, i);
        break;
      }
  }
  saveOriginalState() {
    const e = this.binding,
      n = this.buffer,
      r = this.valueSize,
      i = r * this._origIndex;
    e.getValue(n, i);
    for (let o = r, s = i; o !== s; ++o) n[o] = n[i + (o % r)];
    this._setIdentity(),
      (this.cumulativeWeight = 0),
      (this.cumulativeWeightAdditive = 0);
  }
  restoreOriginalState() {
    const e = this.valueSize * 3;
    this.binding.setValue(this.buffer, e);
  }
  _setAdditiveIdentityNumeric() {
    const e = this._addIndex * this.valueSize,
      n = e + this.valueSize;
    for (let r = e; r < n; r++) this.buffer[r] = 0;
  }
  _setAdditiveIdentityQuaternion() {
    this._setAdditiveIdentityNumeric(),
      (this.buffer[this._addIndex * this.valueSize + 3] = 1);
  }
  _setAdditiveIdentityOther() {
    const e = this._origIndex * this.valueSize,
      n = this._addIndex * this.valueSize;
    for (let r = 0; r < this.valueSize; r++)
      this.buffer[n + r] = this.buffer[e + r];
  }
  _select(e, n, r, i, o) {
    if (i >= 0.5) for (let s = 0; s !== o; ++s) e[n + s] = e[r + s];
  }
  _slerp(e, n, r, i) {
    Gr.slerpFlat(e, n, e, n, e, r, i);
  }
  _slerpAdditive(e, n, r, i, o) {
    const s = this._workIndex * o;
    Gr.multiplyQuaternionsFlat(e, s, e, n, e, r),
      Gr.slerpFlat(e, n, e, n, e, s, i);
  }
  _lerp(e, n, r, i, o) {
    const s = 1 - i;
    for (let a = 0; a !== o; ++a) {
      const l = n + a;
      e[l] = e[l] * s + e[r + a] * i;
    }
  }
  _lerpAdditive(e, n, r, i, o) {
    for (let s = 0; s !== o; ++s) {
      const a = n + s;
      e[a] = e[a] + e[r + s] * i;
    }
  }
}
const fM = "\\[\\]\\.:\\/",
  ZG = new RegExp("[" + fM + "]", "g"),
  dM = "[^" + fM + "]",
  QG = "[^" + fM.replace("\\.", "") + "]",
  JG = /((?:WC+[\/:])*)/.source.replace("WC", dM),
  ej = /(WCOD+)?/.source.replace("WCOD", QG),
  tj = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", dM),
  nj = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", dM),
  rj = new RegExp("^" + JG + ej + tj + nj + "$"),
  ij = ["material", "materials", "bones", "map"];
class oj {
  constructor(e, n, r) {
    const i = r || $t.parseTrackName(n);
    (this._targetGroup = e), (this._bindings = e.subscribe_(n, i));
  }
  getValue(e, n) {
    this.bind();
    const r = this._targetGroup.nCachedObjects_,
      i = this._bindings[r];
    i !== void 0 && i.getValue(e, n);
  }
  setValue(e, n) {
    const r = this._bindings;
    for (let i = this._targetGroup.nCachedObjects_, o = r.length; i !== o; ++i)
      r[i].setValue(e, n);
  }
  bind() {
    const e = this._bindings;
    for (let n = this._targetGroup.nCachedObjects_, r = e.length; n !== r; ++n)
      e[n].bind();
  }
  unbind() {
    const e = this._bindings;
    for (let n = this._targetGroup.nCachedObjects_, r = e.length; n !== r; ++n)
      e[n].unbind();
  }
}
class $t {
  constructor(e, n, r) {
    (this.path = n),
      (this.parsedPath = r || $t.parseTrackName(n)),
      (this.node = $t.findNode(e, this.parsedPath.nodeName)),
      (this.rootNode = e),
      (this.getValue = this._getValue_unbound),
      (this.setValue = this._setValue_unbound);
  }
  static create(e, n, r) {
    return e && e.isAnimationObjectGroup
      ? new $t.Composite(e, n, r)
      : new $t(e, n, r);
  }
  static sanitizeNodeName(e) {
    return e.replace(/\s/g, "_").replace(ZG, "");
  }
  static parseTrackName(e) {
    const n = rj.exec(e);
    if (n === null)
      throw new Error("PropertyBinding: Cannot parse trackName: " + e);
    const r = {
        nodeName: n[2],
        objectName: n[3],
        objectIndex: n[4],
        propertyName: n[5],
        propertyIndex: n[6],
      },
      i = r.nodeName && r.nodeName.lastIndexOf(".");
    if (i !== void 0 && i !== -1) {
      const o = r.nodeName.substring(i + 1);
      ij.indexOf(o) !== -1 &&
        ((r.nodeName = r.nodeName.substring(0, i)), (r.objectName = o));
    }
    if (r.propertyName === null || r.propertyName.length === 0)
      throw new Error(
        "PropertyBinding: can not parse propertyName from trackName: " + e
      );
    return r;
  }
  static findNode(e, n) {
    if (
      n === void 0 ||
      n === "" ||
      n === "." ||
      n === -1 ||
      n === e.name ||
      n === e.uuid
    )
      return e;
    if (e.skeleton) {
      const r = e.skeleton.getBoneByName(n);
      if (r !== void 0) return r;
    }
    if (e.children) {
      const r = function (o) {
          for (let s = 0; s < o.length; s++) {
            const a = o[s];
            if (a.name === n || a.uuid === n) return a;
            const l = r(a.children);
            if (l) return l;
          }
          return null;
        },
        i = r(e.children);
      if (i) return i;
    }
    return null;
  }
  _getValue_unavailable() {}
  _setValue_unavailable() {}
  _getValue_direct(e, n) {
    e[n] = this.targetObject[this.propertyName];
  }
  _getValue_array(e, n) {
    const r = this.resolvedProperty;
    for (let i = 0, o = r.length; i !== o; ++i) e[n++] = r[i];
  }
  _getValue_arrayElement(e, n) {
    e[n] = this.resolvedProperty[this.propertyIndex];
  }
  _getValue_toArray(e, n) {
    this.resolvedProperty.toArray(e, n);
  }
  _setValue_direct(e, n) {
    this.targetObject[this.propertyName] = e[n];
  }
  _setValue_direct_setNeedsUpdate(e, n) {
    (this.targetObject[this.propertyName] = e[n]),
      (this.targetObject.needsUpdate = !0);
  }
  _setValue_direct_setMatrixWorldNeedsUpdate(e, n) {
    (this.targetObject[this.propertyName] = e[n]),
      (this.targetObject.matrixWorldNeedsUpdate = !0);
  }
  _setValue_array(e, n) {
    const r = this.resolvedProperty;
    for (let i = 0, o = r.length; i !== o; ++i) r[i] = e[n++];
  }
  _setValue_array_setNeedsUpdate(e, n) {
    const r = this.resolvedProperty;
    for (let i = 0, o = r.length; i !== o; ++i) r[i] = e[n++];
    this.targetObject.needsUpdate = !0;
  }
  _setValue_array_setMatrixWorldNeedsUpdate(e, n) {
    const r = this.resolvedProperty;
    for (let i = 0, o = r.length; i !== o; ++i) r[i] = e[n++];
    this.targetObject.matrixWorldNeedsUpdate = !0;
  }
  _setValue_arrayElement(e, n) {
    this.resolvedProperty[this.propertyIndex] = e[n];
  }
  _setValue_arrayElement_setNeedsUpdate(e, n) {
    (this.resolvedProperty[this.propertyIndex] = e[n]),
      (this.targetObject.needsUpdate = !0);
  }
  _setValue_arrayElement_setMatrixWorldNeedsUpdate(e, n) {
    (this.resolvedProperty[this.propertyIndex] = e[n]),
      (this.targetObject.matrixWorldNeedsUpdate = !0);
  }
  _setValue_fromArray(e, n) {
    this.resolvedProperty.fromArray(e, n);
  }
  _setValue_fromArray_setNeedsUpdate(e, n) {
    this.resolvedProperty.fromArray(e, n), (this.targetObject.needsUpdate = !0);
  }
  _setValue_fromArray_setMatrixWorldNeedsUpdate(e, n) {
    this.resolvedProperty.fromArray(e, n),
      (this.targetObject.matrixWorldNeedsUpdate = !0);
  }
  _getValue_unbound(e, n) {
    this.bind(), this.getValue(e, n);
  }
  _setValue_unbound(e, n) {
    this.bind(), this.setValue(e, n);
  }
  bind() {
    let e = this.node;
    const n = this.parsedPath,
      r = n.objectName,
      i = n.propertyName;
    let o = n.propertyIndex;
    if (
      (e || ((e = $t.findNode(this.rootNode, n.nodeName)), (this.node = e)),
      (this.getValue = this._getValue_unavailable),
      (this.setValue = this._setValue_unavailable),
      !e)
    ) {
      console.warn(
        "THREE.PropertyBinding: No target node found for track: " +
          this.path +
          "."
      );
      return;
    }
    if (r) {
      let c = n.objectIndex;
      switch (r) {
        case "materials":
          if (!e.material) {
            console.error(
              "THREE.PropertyBinding: Can not bind to material as node does not have a material.",
              this
            );
            return;
          }
          if (!e.material.materials) {
            console.error(
              "THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",
              this
            );
            return;
          }
          e = e.material.materials;
          break;
        case "bones":
          if (!e.skeleton) {
            console.error(
              "THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",
              this
            );
            return;
          }
          e = e.skeleton.bones;
          for (let u = 0; u < e.length; u++)
            if (e[u].name === c) {
              c = u;
              break;
            }
          break;
        case "map":
          if ("map" in e) {
            e = e.map;
            break;
          }
          if (!e.material) {
            console.error(
              "THREE.PropertyBinding: Can not bind to material as node does not have a material.",
              this
            );
            return;
          }
          if (!e.material.map) {
            console.error(
              "THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",
              this
            );
            return;
          }
          e = e.material.map;
          break;
        default:
          if (e[r] === void 0) {
            console.error(
              "THREE.PropertyBinding: Can not bind to objectName of node undefined.",
              this
            );
            return;
          }
          e = e[r];
      }
      if (c !== void 0) {
        if (e[c] === void 0) {
          console.error(
            "THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",
            this,
            e
          );
          return;
        }
        e = e[c];
      }
    }
    const s = e[i];
    if (s === void 0) {
      const c = n.nodeName;
      console.error(
        "THREE.PropertyBinding: Trying to update property for track: " +
          c +
          "." +
          i +
          " but it wasn't found.",
        e
      );
      return;
    }
    let a = this.Versioning.None;
    (this.targetObject = e),
      e.needsUpdate !== void 0
        ? (a = this.Versioning.NeedsUpdate)
        : e.matrixWorldNeedsUpdate !== void 0 &&
          (a = this.Versioning.MatrixWorldNeedsUpdate);
    let l = this.BindingType.Direct;
    if (o !== void 0) {
      if (i === "morphTargetInfluences") {
        if (!e.geometry) {
          console.error(
            "THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",
            this
          );
          return;
        }
        if (!e.geometry.morphAttributes) {
          console.error(
            "THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",
            this
          );
          return;
        }
        e.morphTargetDictionary[o] !== void 0 &&
          (o = e.morphTargetDictionary[o]);
      }
      (l = this.BindingType.ArrayElement),
        (this.resolvedProperty = s),
        (this.propertyIndex = o);
    } else
      s.fromArray !== void 0 && s.toArray !== void 0
        ? ((l = this.BindingType.HasFromToArray), (this.resolvedProperty = s))
        : Array.isArray(s)
        ? ((l = this.BindingType.EntireArray), (this.resolvedProperty = s))
        : (this.propertyName = i);
    (this.getValue = this.GetterByBindingType[l]),
      (this.setValue = this.SetterByBindingTypeAndVersioning[l][a]);
  }
  unbind() {
    (this.node = null),
      (this.getValue = this._getValue_unbound),
      (this.setValue = this._setValue_unbound);
  }
}
$t.Composite = oj;
$t.prototype.BindingType = {
  Direct: 0,
  EntireArray: 1,
  ArrayElement: 2,
  HasFromToArray: 3,
};
$t.prototype.Versioning = {
  None: 0,
  NeedsUpdate: 1,
  MatrixWorldNeedsUpdate: 2,
};
$t.prototype.GetterByBindingType = [
  $t.prototype._getValue_direct,
  $t.prototype._getValue_array,
  $t.prototype._getValue_arrayElement,
  $t.prototype._getValue_toArray,
];
$t.prototype.SetterByBindingTypeAndVersioning = [
  [
    $t.prototype._setValue_direct,
    $t.prototype._setValue_direct_setNeedsUpdate,
    $t.prototype._setValue_direct_setMatrixWorldNeedsUpdate,
  ],
  [
    $t.prototype._setValue_array,
    $t.prototype._setValue_array_setNeedsUpdate,
    $t.prototype._setValue_array_setMatrixWorldNeedsUpdate,
  ],
  [
    $t.prototype._setValue_arrayElement,
    $t.prototype._setValue_arrayElement_setNeedsUpdate,
    $t.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,
  ],
  [
    $t.prototype._setValue_fromArray,
    $t.prototype._setValue_fromArray_setNeedsUpdate,
    $t.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,
  ],
];
class sj {
  constructor() {
    (this.isAnimationObjectGroup = !0),
      (this.uuid = Xi()),
      (this._objects = Array.prototype.slice.call(arguments)),
      (this.nCachedObjects_ = 0);
    const e = {};
    this._indicesByUUID = e;
    for (let r = 0, i = arguments.length; r !== i; ++r)
      e[arguments[r].uuid] = r;
    (this._paths = []),
      (this._parsedPaths = []),
      (this._bindings = []),
      (this._bindingsIndicesByPath = {});
    const n = this;
    this.stats = {
      objects: {
        get total() {
          return n._objects.length;
        },
        get inUse() {
          return this.total - n.nCachedObjects_;
        },
      },
      get bindingsPerObject() {
        return n._bindings.length;
      },
    };
  }
  add() {
    const e = this._objects,
      n = this._indicesByUUID,
      r = this._paths,
      i = this._parsedPaths,
      o = this._bindings,
      s = o.length;
    let a,
      l = e.length,
      c = this.nCachedObjects_;
    for (let u = 0, h = arguments.length; u !== h; ++u) {
      const p = arguments[u],
        m = p.uuid;
      let v = n[m];
      if (v === void 0) {
        (v = l++), (n[m] = v), e.push(p);
        for (let S = 0, x = s; S !== x; ++S) o[S].push(new $t(p, r[S], i[S]));
      } else if (v < c) {
        a = e[v];
        const S = --c,
          x = e[S];
        (n[x.uuid] = v), (e[v] = x), (n[m] = S), (e[S] = p);
        for (let g = 0, y = s; g !== y; ++g) {
          const _ = o[g],
            b = _[S];
          let T = _[v];
          (_[v] = b), T === void 0 && (T = new $t(p, r[g], i[g])), (_[S] = T);
        }
      } else
        e[v] !== a &&
          console.error(
            "THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes."
          );
    }
    this.nCachedObjects_ = c;
  }
  remove() {
    const e = this._objects,
      n = this._indicesByUUID,
      r = this._bindings,
      i = r.length;
    let o = this.nCachedObjects_;
    for (let s = 0, a = arguments.length; s !== a; ++s) {
      const l = arguments[s],
        c = l.uuid,
        u = n[c];
      if (u !== void 0 && u >= o) {
        const h = o++,
          p = e[h];
        (n[p.uuid] = u), (e[u] = p), (n[c] = h), (e[h] = l);
        for (let m = 0, v = i; m !== v; ++m) {
          const S = r[m],
            x = S[h],
            g = S[u];
          (S[u] = x), (S[h] = g);
        }
      }
    }
    this.nCachedObjects_ = o;
  }
  uncache() {
    const e = this._objects,
      n = this._indicesByUUID,
      r = this._bindings,
      i = r.length;
    let o = this.nCachedObjects_,
      s = e.length;
    for (let a = 0, l = arguments.length; a !== l; ++a) {
      const c = arguments[a],
        u = c.uuid,
        h = n[u];
      if (h !== void 0)
        if ((delete n[u], h < o)) {
          const p = --o,
            m = e[p],
            v = --s,
            S = e[v];
          (n[m.uuid] = h), (e[h] = m), (n[S.uuid] = p), (e[p] = S), e.pop();
          for (let x = 0, g = i; x !== g; ++x) {
            const y = r[x],
              _ = y[p],
              b = y[v];
            (y[h] = _), (y[p] = b), y.pop();
          }
        } else {
          const p = --s,
            m = e[p];
          p > 0 && (n[m.uuid] = h), (e[h] = m), e.pop();
          for (let v = 0, S = i; v !== S; ++v) {
            const x = r[v];
            (x[h] = x[p]), x.pop();
          }
        }
    }
    this.nCachedObjects_ = o;
  }
  subscribe_(e, n) {
    const r = this._bindingsIndicesByPath;
    let i = r[e];
    const o = this._bindings;
    if (i !== void 0) return o[i];
    const s = this._paths,
      a = this._parsedPaths,
      l = this._objects,
      c = l.length,
      u = this.nCachedObjects_,
      h = new Array(c);
    (i = o.length), (r[e] = i), s.push(e), a.push(n), o.push(h);
    for (let p = u, m = l.length; p !== m; ++p) {
      const v = l[p];
      h[p] = new $t(v, e, n);
    }
    return h;
  }
  unsubscribe_(e) {
    const n = this._bindingsIndicesByPath,
      r = n[e];
    if (r !== void 0) {
      const i = this._paths,
        o = this._parsedPaths,
        s = this._bindings,
        a = s.length - 1,
        l = s[a],
        c = e[a];
      (n[c] = r),
        (s[r] = l),
        s.pop(),
        (o[r] = o[a]),
        o.pop(),
        (i[r] = i[a]),
        i.pop();
    }
  }
}
class FF {
  constructor(e, n, r = null, i = n.blendMode) {
    (this._mixer = e),
      (this._clip = n),
      (this._localRoot = r),
      (this.blendMode = i);
    const o = n.tracks,
      s = o.length,
      a = new Array(s),
      l = { endingStart: ic, endingEnd: ic };
    for (let c = 0; c !== s; ++c) {
      const u = o[c].createInterpolant(null);
      (a[c] = u), (u.settings = l);
    }
    (this._interpolantSettings = l),
      (this._interpolants = a),
      (this._propertyBindings = new Array(s)),
      (this._cacheIndex = null),
      (this._byClipCacheIndex = null),
      (this._timeScaleInterpolant = null),
      (this._weightInterpolant = null),
      (this.loop = vO),
      (this._loopCount = -1),
      (this._startTime = null),
      (this.time = 0),
      (this.timeScale = 1),
      (this._effectiveTimeScale = 1),
      (this.weight = 1),
      (this._effectiveWeight = 1),
      (this.repetitions = 1 / 0),
      (this.paused = !1),
      (this.enabled = !0),
      (this.clampWhenFinished = !1),
      (this.zeroSlopeAtStart = !0),
      (this.zeroSlopeAtEnd = !0);
  }
  play() {
    return this._mixer._activateAction(this), this;
  }
  stop() {
    return this._mixer._deactivateAction(this), this.reset();
  }
  reset() {
    return (
      (this.paused = !1),
      (this.enabled = !0),
      (this.time = 0),
      (this._loopCount = -1),
      (this._startTime = null),
      this.stopFading().stopWarping()
    );
  }
  isRunning() {
    return (
      this.enabled &&
      !this.paused &&
      this.timeScale !== 0 &&
      this._startTime === null &&
      this._mixer._isActiveAction(this)
    );
  }
  isScheduled() {
    return this._mixer._isActiveAction(this);
  }
  startAt(e) {
    return (this._startTime = e), this;
  }
  setLoop(e, n) {
    return (this.loop = e), (this.repetitions = n), this;
  }
  setEffectiveWeight(e) {
    return (
      (this.weight = e),
      (this._effectiveWeight = this.enabled ? e : 0),
      this.stopFading()
    );
  }
  getEffectiveWeight() {
    return this._effectiveWeight;
  }
  fadeIn(e) {
    return this._scheduleFading(e, 0, 1);
  }
  fadeOut(e) {
    return this._scheduleFading(e, 1, 0);
  }
  crossFadeFrom(e, n, r) {
    if ((e.fadeOut(n), this.fadeIn(n), r)) {
      const i = this._clip.duration,
        o = e._clip.duration,
        s = o / i,
        a = i / o;
      e.warp(1, s, n), this.warp(a, 1, n);
    }
    return this;
  }
  crossFadeTo(e, n, r) {
    return e.crossFadeFrom(this, n, r);
  }
  stopFading() {
    const e = this._weightInterpolant;
    return (
      e !== null &&
        ((this._weightInterpolant = null),
        this._mixer._takeBackControlInterpolant(e)),
      this
    );
  }
  setEffectiveTimeScale(e) {
    return (
      (this.timeScale = e),
      (this._effectiveTimeScale = this.paused ? 0 : e),
      this.stopWarping()
    );
  }
  getEffectiveTimeScale() {
    return this._effectiveTimeScale;
  }
  setDuration(e) {
    return (this.timeScale = this._clip.duration / e), this.stopWarping();
  }
  syncWith(e) {
    return (
      (this.time = e.time), (this.timeScale = e.timeScale), this.stopWarping()
    );
  }
  halt(e) {
    return this.warp(this._effectiveTimeScale, 0, e);
  }
  warp(e, n, r) {
    const i = this._mixer,
      o = i.time,
      s = this.timeScale;
    let a = this._timeScaleInterpolant;
    a === null &&
      ((a = i._lendControlInterpolant()), (this._timeScaleInterpolant = a));
    const l = a.parameterPositions,
      c = a.sampleValues;
    return (l[0] = o), (l[1] = o + r), (c[0] = e / s), (c[1] = n / s), this;
  }
  stopWarping() {
    const e = this._timeScaleInterpolant;
    return (
      e !== null &&
        ((this._timeScaleInterpolant = null),
        this._mixer._takeBackControlInterpolant(e)),
      this
    );
  }
  getMixer() {
    return this._mixer;
  }
  getClip() {
    return this._clip;
  }
  getRoot() {
    return this._localRoot || this._mixer._root;
  }
  _update(e, n, r, i) {
    if (!this.enabled) {
      this._updateWeight(e);
      return;
    }
    const o = this._startTime;
    if (o !== null) {
      const l = (e - o) * r;
      l < 0 || r === 0 ? (n = 0) : ((this._startTime = null), (n = r * l));
    }
    n *= this._updateTimeScale(e);
    const s = this._updateTime(n),
      a = this._updateWeight(e);
    if (a > 0) {
      const l = this._interpolants,
        c = this._propertyBindings;
      switch (this.blendMode) {
        case NE:
          for (let u = 0, h = l.length; u !== h; ++u)
            l[u].evaluate(s), c[u].accumulateAdditive(a);
          break;
        case ey:
        default:
          for (let u = 0, h = l.length; u !== h; ++u)
            l[u].evaluate(s), c[u].accumulate(i, a);
      }
    }
  }
  _updateWeight(e) {
    let n = 0;
    if (this.enabled) {
      n = this.weight;
      const r = this._weightInterpolant;
      if (r !== null) {
        const i = r.evaluate(e)[0];
        (n *= i),
          e > r.parameterPositions[1] &&
            (this.stopFading(), i === 0 && (this.enabled = !1));
      }
    }
    return (this._effectiveWeight = n), n;
  }
  _updateTimeScale(e) {
    let n = 0;
    if (!this.paused) {
      n = this.timeScale;
      const r = this._timeScaleInterpolant;
      if (r !== null) {
        const i = r.evaluate(e)[0];
        (n *= i),
          e > r.parameterPositions[1] &&
            (this.stopWarping(),
            n === 0 ? (this.paused = !0) : (this.timeScale = n));
      }
    }
    return (this._effectiveTimeScale = n), n;
  }
  _updateTime(e) {
    const n = this._clip.duration,
      r = this.loop;
    let i = this.time + e,
      o = this._loopCount;
    const s = r === yO;
    if (e === 0) return o === -1 ? i : s && (o & 1) === 1 ? n - i : i;
    if (r === gO) {
      o === -1 && ((this._loopCount = 0), this._setEndings(!0, !0, !1));
      e: {
        if (i >= n) i = n;
        else if (i < 0) i = 0;
        else {
          this.time = i;
          break e;
        }
        this.clampWhenFinished ? (this.paused = !0) : (this.enabled = !1),
          (this.time = i),
          this._mixer.dispatchEvent({
            type: "finished",
            action: this,
            direction: e < 0 ? -1 : 1,
          });
      }
    } else {
      if (
        (o === -1 &&
          (e >= 0
            ? ((o = 0), this._setEndings(!0, this.repetitions === 0, s))
            : this._setEndings(this.repetitions === 0, !0, s)),
        i >= n || i < 0)
      ) {
        const a = Math.floor(i / n);
        (i -= n * a), (o += Math.abs(a));
        const l = this.repetitions - o;
        if (l <= 0)
          this.clampWhenFinished ? (this.paused = !0) : (this.enabled = !1),
            (i = e > 0 ? n : 0),
            (this.time = i),
            this._mixer.dispatchEvent({
              type: "finished",
              action: this,
              direction: e > 0 ? 1 : -1,
            });
        else {
          if (l === 1) {
            const c = e < 0;
            this._setEndings(c, !c, s);
          } else this._setEndings(!1, !1, s);
          (this._loopCount = o),
            (this.time = i),
            this._mixer.dispatchEvent({
              type: "loop",
              action: this,
              loopDelta: a,
            });
        }
      } else this.time = i;
      if (s && (o & 1) === 1) return n - i;
    }
    return i;
  }
  _setEndings(e, n, r) {
    const i = this._interpolantSettings;
    r
      ? ((i.endingStart = oc), (i.endingEnd = oc))
      : (e
          ? (i.endingStart = this.zeroSlopeAtStart ? oc : ic)
          : (i.endingStart = kh),
        n ? (i.endingEnd = this.zeroSlopeAtEnd ? oc : ic) : (i.endingEnd = kh));
  }
  _scheduleFading(e, n, r) {
    const i = this._mixer,
      o = i.time;
    let s = this._weightInterpolant;
    s === null &&
      ((s = i._lendControlInterpolant()), (this._weightInterpolant = s));
    const a = s.parameterPositions,
      l = s.sampleValues;
    return (a[0] = o), (l[0] = n), (a[1] = o + e), (l[1] = r), this;
  }
}
const aj = new Float32Array(1);
class lj extends bs {
  constructor(e) {
    super(),
      (this._root = e),
      this._initMemoryManager(),
      (this._accuIndex = 0),
      (this.time = 0),
      (this.timeScale = 1);
  }
  _bindAction(e, n) {
    const r = e._localRoot || this._root,
      i = e._clip.tracks,
      o = i.length,
      s = e._propertyBindings,
      a = e._interpolants,
      l = r.uuid,
      c = this._bindingsByRootAndName;
    let u = c[l];
    u === void 0 && ((u = {}), (c[l] = u));
    for (let h = 0; h !== o; ++h) {
      const p = i[h],
        m = p.name;
      let v = u[m];
      if (v !== void 0) ++v.referenceCount, (s[h] = v);
      else {
        if (((v = s[h]), v !== void 0)) {
          v._cacheIndex === null &&
            (++v.referenceCount, this._addInactiveBinding(v, l, m));
          continue;
        }
        const S = n && n._propertyBindings[h].binding.parsedPath;
        (v = new OF($t.create(r, m, S), p.ValueTypeName, p.getValueSize())),
          ++v.referenceCount,
          this._addInactiveBinding(v, l, m),
          (s[h] = v);
      }
      a[h].resultBuffer = v.buffer;
    }
  }
  _activateAction(e) {
    if (!this._isActiveAction(e)) {
      if (e._cacheIndex === null) {
        const r = (e._localRoot || this._root).uuid,
          i = e._clip.uuid,
          o = this._actionsByClip[i];
        this._bindAction(e, o && o.knownActions[0]),
          this._addInactiveAction(e, i, r);
      }
      const n = e._propertyBindings;
      for (let r = 0, i = n.length; r !== i; ++r) {
        const o = n[r];
        o.useCount++ === 0 && (this._lendBinding(o), o.saveOriginalState());
      }
      this._lendAction(e);
    }
  }
  _deactivateAction(e) {
    if (this._isActiveAction(e)) {
      const n = e._propertyBindings;
      for (let r = 0, i = n.length; r !== i; ++r) {
        const o = n[r];
        --o.useCount === 0 &&
          (o.restoreOriginalState(), this._takeBackBinding(o));
      }
      this._takeBackAction(e);
    }
  }
  _initMemoryManager() {
    (this._actions = []),
      (this._nActiveActions = 0),
      (this._actionsByClip = {}),
      (this._bindings = []),
      (this._nActiveBindings = 0),
      (this._bindingsByRootAndName = {}),
      (this._controlInterpolants = []),
      (this._nActiveControlInterpolants = 0);
    const e = this;
    this.stats = {
      actions: {
        get total() {
          return e._actions.length;
        },
        get inUse() {
          return e._nActiveActions;
        },
      },
      bindings: {
        get total() {
          return e._bindings.length;
        },
        get inUse() {
          return e._nActiveBindings;
        },
      },
      controlInterpolants: {
        get total() {
          return e._controlInterpolants.length;
        },
        get inUse() {
          return e._nActiveControlInterpolants;
        },
      },
    };
  }
  _isActiveAction(e) {
    const n = e._cacheIndex;
    return n !== null && n < this._nActiveActions;
  }
  _addInactiveAction(e, n, r) {
    const i = this._actions,
      o = this._actionsByClip;
    let s = o[n];
    if (s === void 0)
      (s = { knownActions: [e], actionByRoot: {} }),
        (e._byClipCacheIndex = 0),
        (o[n] = s);
    else {
      const a = s.knownActions;
      (e._byClipCacheIndex = a.length), a.push(e);
    }
    (e._cacheIndex = i.length), i.push(e), (s.actionByRoot[r] = e);
  }
  _removeInactiveAction(e) {
    const n = this._actions,
      r = n[n.length - 1],
      i = e._cacheIndex;
    (r._cacheIndex = i), (n[i] = r), n.pop(), (e._cacheIndex = null);
    const o = e._clip.uuid,
      s = this._actionsByClip,
      a = s[o],
      l = a.knownActions,
      c = l[l.length - 1],
      u = e._byClipCacheIndex;
    (c._byClipCacheIndex = u),
      (l[u] = c),
      l.pop(),
      (e._byClipCacheIndex = null);
    const h = a.actionByRoot,
      p = (e._localRoot || this._root).uuid;
    delete h[p],
      l.length === 0 && delete s[o],
      this._removeInactiveBindingsForAction(e);
  }
  _removeInactiveBindingsForAction(e) {
    const n = e._propertyBindings;
    for (let r = 0, i = n.length; r !== i; ++r) {
      const o = n[r];
      --o.referenceCount === 0 && this._removeInactiveBinding(o);
    }
  }
  _lendAction(e) {
    const n = this._actions,
      r = e._cacheIndex,
      i = this._nActiveActions++,
      o = n[i];
    (e._cacheIndex = i), (n[i] = e), (o._cacheIndex = r), (n[r] = o);
  }
  _takeBackAction(e) {
    const n = this._actions,
      r = e._cacheIndex,
      i = --this._nActiveActions,
      o = n[i];
    (e._cacheIndex = i), (n[i] = e), (o._cacheIndex = r), (n[r] = o);
  }
  _addInactiveBinding(e, n, r) {
    const i = this._bindingsByRootAndName,
      o = this._bindings;
    let s = i[n];
    s === void 0 && ((s = {}), (i[n] = s)),
      (s[r] = e),
      (e._cacheIndex = o.length),
      o.push(e);
  }
  _removeInactiveBinding(e) {
    const n = this._bindings,
      r = e.binding,
      i = r.rootNode.uuid,
      o = r.path,
      s = this._bindingsByRootAndName,
      a = s[i],
      l = n[n.length - 1],
      c = e._cacheIndex;
    (l._cacheIndex = c),
      (n[c] = l),
      n.pop(),
      delete a[o],
      Object.keys(a).length === 0 && delete s[i];
  }
  _lendBinding(e) {
    const n = this._bindings,
      r = e._cacheIndex,
      i = this._nActiveBindings++,
      o = n[i];
    (e._cacheIndex = i), (n[i] = e), (o._cacheIndex = r), (n[r] = o);
  }
  _takeBackBinding(e) {
    const n = this._bindings,
      r = e._cacheIndex,
      i = --this._nActiveBindings,
      o = n[i];
    (e._cacheIndex = i), (n[i] = e), (o._cacheIndex = r), (n[r] = o);
  }
  _lendControlInterpolant() {
    const e = this._controlInterpolants,
      n = this._nActiveControlInterpolants++;
    let r = e[n];
    return (
      r === void 0 &&
        ((r = new oM(new Float32Array(2), new Float32Array(2), 1, aj)),
        (r.__cacheIndex = n),
        (e[n] = r)),
      r
    );
  }
  _takeBackControlInterpolant(e) {
    const n = this._controlInterpolants,
      r = e.__cacheIndex,
      i = --this._nActiveControlInterpolants,
      o = n[i];
    (e.__cacheIndex = i), (n[i] = e), (o.__cacheIndex = r), (n[r] = o);
  }
  clipAction(e, n, r) {
    const i = n || this._root,
      o = i.uuid;
    let s = typeof e == "string" ? Qh.findByName(i, e) : e;
    const a = s !== null ? s.uuid : e,
      l = this._actionsByClip[a];
    let c = null;
    if (
      (r === void 0 && (s !== null ? (r = s.blendMode) : (r = ey)),
      l !== void 0)
    ) {
      const h = l.actionByRoot[o];
      if (h !== void 0 && h.blendMode === r) return h;
      (c = l.knownActions[0]), s === null && (s = c._clip);
    }
    if (s === null) return null;
    const u = new FF(this, s, n, r);
    return this._bindAction(u, c), this._addInactiveAction(u, a, o), u;
  }
  existingAction(e, n) {
    const r = n || this._root,
      i = r.uuid,
      o = typeof e == "string" ? Qh.findByName(r, e) : e,
      s = o ? o.uuid : e,
      a = this._actionsByClip[s];
    return (a !== void 0 && a.actionByRoot[i]) || null;
  }
  stopAllAction() {
    const e = this._actions,
      n = this._nActiveActions;
    for (let r = n - 1; r >= 0; --r) e[r].stop();
    return this;
  }
  update(e) {
    e *= this.timeScale;
    const n = this._actions,
      r = this._nActiveActions,
      i = (this.time += e),
      o = Math.sign(e),
      s = (this._accuIndex ^= 1);
    for (let c = 0; c !== r; ++c) n[c]._update(i, e, o, s);
    const a = this._bindings,
      l = this._nActiveBindings;
    for (let c = 0; c !== l; ++c) a[c].apply(s);
    return this;
  }
  setTime(e) {
    this.time = 0;
    for (let n = 0; n < this._actions.length; n++) this._actions[n].time = 0;
    return this.update(e);
  }
  getRoot() {
    return this._root;
  }
  uncacheClip(e) {
    const n = this._actions,
      r = e.uuid,
      i = this._actionsByClip,
      o = i[r];
    if (o !== void 0) {
      const s = o.knownActions;
      for (let a = 0, l = s.length; a !== l; ++a) {
        const c = s[a];
        this._deactivateAction(c);
        const u = c._cacheIndex,
          h = n[n.length - 1];
        (c._cacheIndex = null),
          (c._byClipCacheIndex = null),
          (h._cacheIndex = u),
          (n[u] = h),
          n.pop(),
          this._removeInactiveBindingsForAction(c);
      }
      delete i[r];
    }
  }
  uncacheRoot(e) {
    const n = e.uuid,
      r = this._actionsByClip;
    for (const s in r) {
      const a = r[s].actionByRoot,
        l = a[n];
      l !== void 0 &&
        (this._deactivateAction(l), this._removeInactiveAction(l));
    }
    const i = this._bindingsByRootAndName,
      o = i[n];
    if (o !== void 0)
      for (const s in o) {
        const a = o[s];
        a.restoreOriginalState(), this._removeInactiveBinding(a);
      }
  }
  uncacheAction(e, n) {
    const r = this.existingAction(e, n);
    r !== null && (this._deactivateAction(r), this._removeInactiveAction(r));
  }
}
class hM {
  constructor(e) {
    this.value = e;
  }
  clone() {
    return new hM(
      this.value.clone === void 0 ? this.value : this.value.clone()
    );
  }
}
let cj = 0;
class uj extends bs {
  constructor() {
    super(),
      (this.isUniformsGroup = !0),
      Object.defineProperty(this, "id", { value: cj++ }),
      (this.name = ""),
      (this.usage = Gh),
      (this.uniforms = []);
  }
  add(e) {
    return this.uniforms.push(e), this;
  }
  remove(e) {
    const n = this.uniforms.indexOf(e);
    return n !== -1 && this.uniforms.splice(n, 1), this;
  }
  setName(e) {
    return (this.name = e), this;
  }
  setUsage(e) {
    return (this.usage = e), this;
  }
  dispose() {
    return this.dispatchEvent({ type: "dispose" }), this;
  }
  copy(e) {
    (this.name = e.name), (this.usage = e.usage);
    const n = e.uniforms;
    this.uniforms.length = 0;
    for (let r = 0, i = n.length; r < i; r++) {
      const o = Array.isArray(n[r]) ? n[r] : [n[r]];
      for (let s = 0; s < o.length; s++) this.uniforms.push(o[s].clone());
    }
    return this;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
class v0 extends ly {
  constructor(e, n, r = 1) {
    super(e, n),
      (this.isInstancedInterleavedBuffer = !0),
      (this.meshPerAttribute = r);
  }
  copy(e) {
    return super.copy(e), (this.meshPerAttribute = e.meshPerAttribute), this;
  }
  clone(e) {
    const n = super.clone(e);
    return (n.meshPerAttribute = this.meshPerAttribute), n;
  }
  toJSON(e) {
    const n = super.toJSON(e);
    return (
      (n.isInstancedInterleavedBuffer = !0),
      (n.meshPerAttribute = this.meshPerAttribute),
      n
    );
  }
}
class fj {
  constructor(e, n, r, i, o) {
    (this.isGLBufferAttribute = !0),
      (this.name = ""),
      (this.buffer = e),
      (this.type = n),
      (this.itemSize = r),
      (this.elementSize = i),
      (this.count = o),
      (this.version = 0);
  }
  set needsUpdate(e) {
    e === !0 && this.version++;
  }
  setBuffer(e) {
    return (this.buffer = e), this;
  }
  setType(e, n) {
    return (this.type = e), (this.elementSize = n), this;
  }
  setItemSize(e) {
    return (this.itemSize = e), this;
  }
  setCount(e) {
    return (this.count = e), this;
  }
}
class NF {
  constructor(e, n, r = 0, i = 1 / 0) {
    (this.ray = new Uc(e, n)),
      (this.near = r),
      (this.far = i),
      (this.camera = null),
      (this.layers = new mc()),
      (this.params = {
        Mesh: {},
        Line: { threshold: 1 },
        LOD: {},
        Points: { threshold: 1 },
        Sprite: {},
      });
  }
  set(e, n) {
    this.ray.set(e, n);
  }
  setFromCamera(e, n) {
    n.isPerspectiveCamera
      ? (this.ray.origin.setFromMatrixPosition(n.matrixWorld),
        this.ray.direction
          .set(e.x, e.y, 0.5)
          .unproject(n)
          .sub(this.ray.origin)
          .normalize(),
        (this.camera = n))
      : n.isOrthographicCamera
      ? (this.ray.origin
          .set(e.x, e.y, (n.near + n.far) / (n.near - n.far))
          .unproject(n),
        this.ray.direction.set(0, 0, -1).transformDirection(n.matrixWorld),
        (this.camera = n))
      : console.error("THREE.Raycaster: Unsupported camera type: " + n.type);
  }
  intersectObject(e, n = !0, r = []) {
    return Tw(e, this, r, n), r.sort(iR), r;
  }
  intersectObjects(e, n = !0, r = []) {
    for (let i = 0, o = e.length; i < o; i++) Tw(e[i], this, r, n);
    return r.sort(iR), r;
  }
}
function iR(t, e) {
  return t.distance - e.distance;
}
function Tw(t, e, n, r) {
  if ((t.layers.test(e.layers) && t.raycast(e, n), r === !0)) {
    const i = t.children;
    for (let o = 0, s = i.length; o < s; o++) Tw(i[o], e, n, !0);
  }
}
class Aw {
  constructor(e = 1, n = 0, r = 0) {
    return (this.radius = e), (this.phi = n), (this.theta = r), this;
  }
  set(e, n, r) {
    return (this.radius = e), (this.phi = n), (this.theta = r), this;
  }
  copy(e) {
    return (
      (this.radius = e.radius), (this.phi = e.phi), (this.theta = e.theta), this
    );
  }
  makeSafe() {
    return (
      (this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi))), this
    );
  }
  setFromVector3(e) {
    return this.setFromCartesianCoords(e.x, e.y, e.z);
  }
  setFromCartesianCoords(e, n, r) {
    return (
      (this.radius = Math.sqrt(e * e + n * n + r * r)),
      this.radius === 0
        ? ((this.theta = 0), (this.phi = 0))
        : ((this.theta = Math.atan2(e, r)),
          (this.phi = Math.acos(Dn(n / this.radius, -1, 1)))),
      this
    );
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
class dj {
  constructor(e = 1, n = 0, r = 0) {
    return (this.radius = e), (this.theta = n), (this.y = r), this;
  }
  set(e, n, r) {
    return (this.radius = e), (this.theta = n), (this.y = r), this;
  }
  copy(e) {
    return (
      (this.radius = e.radius), (this.theta = e.theta), (this.y = e.y), this
    );
  }
  setFromVector3(e) {
    return this.setFromCartesianCoords(e.x, e.y, e.z);
  }
  setFromCartesianCoords(e, n, r) {
    return (
      (this.radius = Math.sqrt(e * e + r * r)),
      (this.theta = Math.atan2(e, r)),
      (this.y = n),
      this
    );
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
const oR = new Fe();
class hj {
  constructor(e = new Fe(1 / 0, 1 / 0), n = new Fe(-1 / 0, -1 / 0)) {
    (this.isBox2 = !0), (this.min = e), (this.max = n);
  }
  set(e, n) {
    return this.min.copy(e), this.max.copy(n), this;
  }
  setFromPoints(e) {
    this.makeEmpty();
    for (let n = 0, r = e.length; n < r; n++) this.expandByPoint(e[n]);
    return this;
  }
  setFromCenterAndSize(e, n) {
    const r = oR.copy(n).multiplyScalar(0.5);
    return this.min.copy(e).sub(r), this.max.copy(e).add(r), this;
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return this.min.copy(e.min), this.max.copy(e.max), this;
  }
  makeEmpty() {
    return (
      (this.min.x = this.min.y = 1 / 0),
      (this.max.x = this.max.y = -1 / 0),
      this
    );
  }
  isEmpty() {
    return this.max.x < this.min.x || this.max.y < this.min.y;
  }
  getCenter(e) {
    return this.isEmpty()
      ? e.set(0, 0)
      : e.addVectors(this.min, this.max).multiplyScalar(0.5);
  }
  getSize(e) {
    return this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min);
  }
  expandByPoint(e) {
    return this.min.min(e), this.max.max(e), this;
  }
  expandByVector(e) {
    return this.min.sub(e), this.max.add(e), this;
  }
  expandByScalar(e) {
    return this.min.addScalar(-e), this.max.addScalar(e), this;
  }
  containsPoint(e) {
    return !(
      e.x < this.min.x ||
      e.x > this.max.x ||
      e.y < this.min.y ||
      e.y > this.max.y
    );
  }
  containsBox(e) {
    return (
      this.min.x <= e.min.x &&
      e.max.x <= this.max.x &&
      this.min.y <= e.min.y &&
      e.max.y <= this.max.y
    );
  }
  getParameter(e, n) {
    return n.set(
      (e.x - this.min.x) / (this.max.x - this.min.x),
      (e.y - this.min.y) / (this.max.y - this.min.y)
    );
  }
  intersectsBox(e) {
    return !(
      e.max.x < this.min.x ||
      e.min.x > this.max.x ||
      e.max.y < this.min.y ||
      e.min.y > this.max.y
    );
  }
  clampPoint(e, n) {
    return n.copy(e).clamp(this.min, this.max);
  }
  distanceToPoint(e) {
    return this.clampPoint(e, oR).distanceTo(e);
  }
  intersect(e) {
    return (
      this.min.max(e.min),
      this.max.min(e.max),
      this.isEmpty() && this.makeEmpty(),
      this
    );
  }
  union(e) {
    return this.min.min(e.min), this.max.max(e.max), this;
  }
  translate(e) {
    return this.min.add(e), this.max.add(e), this;
  }
  equals(e) {
    return e.min.equals(this.min) && e.max.equals(this.max);
  }
}
const sR = new W(),
  Lg = new W();
class DF {
  constructor(e = new W(), n = new W()) {
    (this.start = e), (this.end = n);
  }
  set(e, n) {
    return this.start.copy(e), this.end.copy(n), this;
  }
  copy(e) {
    return this.start.copy(e.start), this.end.copy(e.end), this;
  }
  getCenter(e) {
    return e.addVectors(this.start, this.end).multiplyScalar(0.5);
  }
  delta(e) {
    return e.subVectors(this.end, this.start);
  }
  distanceSq() {
    return this.start.distanceToSquared(this.end);
  }
  distance() {
    return this.start.distanceTo(this.end);
  }
  at(e, n) {
    return this.delta(n).multiplyScalar(e).add(this.start);
  }
  closestPointToPointParameter(e, n) {
    sR.subVectors(e, this.start), Lg.subVectors(this.end, this.start);
    const r = Lg.dot(Lg);
    let o = Lg.dot(sR) / r;
    return n && (o = Dn(o, 0, 1)), o;
  }
  closestPointToPoint(e, n, r) {
    const i = this.closestPointToPointParameter(e, n);
    return this.delta(r).multiplyScalar(i).add(this.start);
  }
  applyMatrix4(e) {
    return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this;
  }
  equals(e) {
    return e.start.equals(this.start) && e.end.equals(this.end);
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
const aR = new W();
class pj extends Zt {
  constructor(e, n) {
    super(),
      (this.light = e),
      (this.matrix = e.matrixWorld),
      (this.matrixAutoUpdate = !1),
      (this.color = n),
      (this.type = "SpotLightHelper");
    const r = new It(),
      i = [
        0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1,
        0, 0, 0, 0, -1, 1,
      ];
    for (let s = 0, a = 1, l = 32; s < l; s++, a++) {
      const c = (s / l) * Math.PI * 2,
        u = (a / l) * Math.PI * 2;
      i.push(Math.cos(c), Math.sin(c), 1, Math.cos(u), Math.sin(u), 1);
    }
    r.setAttribute("position", new ut(i, 3));
    const o = new li({ fog: !1, toneMapped: !1 });
    (this.cone = new Es(r, o)), this.add(this.cone), this.update();
  }
  dispose() {
    this.cone.geometry.dispose(), this.cone.material.dispose();
  }
  update() {
    this.light.updateWorldMatrix(!0, !1),
      this.light.target.updateWorldMatrix(!0, !1);
    const e = this.light.distance ? this.light.distance : 1e3,
      n = e * Math.tan(this.light.angle);
    this.cone.scale.set(n, n, e),
      aR.setFromMatrixPosition(this.light.target.matrixWorld),
      this.cone.lookAt(aR),
      this.color !== void 0
        ? this.cone.material.color.set(this.color)
        : this.cone.material.color.copy(this.light.color);
  }
}
const Ia = new W(),
  Ig = new bt(),
  n_ = new bt();
class mj extends Es {
  constructor(e) {
    const n = UF(e),
      r = new It(),
      i = [],
      o = [],
      s = new nt(0, 0, 1),
      a = new nt(0, 1, 0);
    for (let c = 0; c < n.length; c++) {
      const u = n[c];
      u.parent &&
        u.parent.isBone &&
        (i.push(0, 0, 0),
        i.push(0, 0, 0),
        o.push(s.r, s.g, s.b),
        o.push(a.r, a.g, a.b));
    }
    r.setAttribute("position", new ut(i, 3)),
      r.setAttribute("color", new ut(o, 3));
    const l = new li({
      vertexColors: !0,
      depthTest: !1,
      depthWrite: !1,
      toneMapped: !1,
      transparent: !0,
    });
    super(r, l),
      (this.isSkeletonHelper = !0),
      (this.type = "SkeletonHelper"),
      (this.root = e),
      (this.bones = n),
      (this.matrix = e.matrixWorld),
      (this.matrixAutoUpdate = !1);
  }
  updateMatrixWorld(e) {
    const n = this.bones,
      r = this.geometry,
      i = r.getAttribute("position");
    n_.copy(this.root.matrixWorld).invert();
    for (let o = 0, s = 0; o < n.length; o++) {
      const a = n[o];
      a.parent &&
        a.parent.isBone &&
        (Ig.multiplyMatrices(n_, a.matrixWorld),
        Ia.setFromMatrixPosition(Ig),
        i.setXYZ(s, Ia.x, Ia.y, Ia.z),
        Ig.multiplyMatrices(n_, a.parent.matrixWorld),
        Ia.setFromMatrixPosition(Ig),
        i.setXYZ(s + 1, Ia.x, Ia.y, Ia.z),
        (s += 2));
    }
    (r.getAttribute("position").needsUpdate = !0), super.updateMatrixWorld(e);
  }
  dispose() {
    this.geometry.dispose(), this.material.dispose();
  }
}
function UF(t) {
  const e = [];
  t.isBone === !0 && e.push(t);
  for (let n = 0; n < t.children.length; n++)
    e.push.apply(e, UF(t.children[n]));
  return e;
}
class gj extends An {
  constructor(e, n, r) {
    const i = new Ep(n, 4, 2),
      o = new pa({ wireframe: !0, fog: !1, toneMapped: !1 });
    super(i, o),
      (this.light = e),
      (this.color = r),
      (this.type = "PointLightHelper"),
      (this.matrix = this.light.matrixWorld),
      (this.matrixAutoUpdate = !1),
      this.update();
  }
  dispose() {
    this.geometry.dispose(), this.material.dispose();
  }
  update() {
    this.light.updateWorldMatrix(!0, !1),
      this.color !== void 0
        ? this.material.color.set(this.color)
        : this.material.color.copy(this.light.color);
  }
}
const vj = new W(),
  lR = new nt(),
  cR = new nt();
class yj extends Zt {
  constructor(e, n, r) {
    super(),
      (this.light = e),
      (this.matrix = e.matrixWorld),
      (this.matrixAutoUpdate = !1),
      (this.color = r),
      (this.type = "HemisphereLightHelper");
    const i = new bp(n);
    i.rotateY(Math.PI * 0.5),
      (this.material = new pa({ wireframe: !0, fog: !1, toneMapped: !1 })),
      this.color === void 0 && (this.material.vertexColors = !0);
    const o = i.getAttribute("position"),
      s = new Float32Array(o.count * 3);
    i.setAttribute("color", new en(s, 3)),
      this.add(new An(i, this.material)),
      this.update();
  }
  dispose() {
    this.children[0].geometry.dispose(), this.children[0].material.dispose();
  }
  update() {
    const e = this.children[0];
    if (this.color !== void 0) this.material.color.set(this.color);
    else {
      const n = e.geometry.getAttribute("color");
      lR.copy(this.light.color), cR.copy(this.light.groundColor);
      for (let r = 0, i = n.count; r < i; r++) {
        const o = r < i / 2 ? lR : cR;
        n.setXYZ(r, o.r, o.g, o.b);
      }
      n.needsUpdate = !0;
    }
    this.light.updateWorldMatrix(!0, !1),
      e.lookAt(vj.setFromMatrixPosition(this.light.matrixWorld).negate());
  }
}
class xj extends Es {
  constructor(e = 10, n = 10, r = 4473924, i = 8947848) {
    (r = new nt(r)), (i = new nt(i));
    const o = n / 2,
      s = e / n,
      a = e / 2,
      l = [],
      c = [];
    for (let p = 0, m = 0, v = -a; p <= n; p++, v += s) {
      l.push(-a, 0, v, a, 0, v), l.push(v, 0, -a, v, 0, a);
      const S = p === o ? r : i;
      S.toArray(c, m),
        (m += 3),
        S.toArray(c, m),
        (m += 3),
        S.toArray(c, m),
        (m += 3),
        S.toArray(c, m),
        (m += 3);
    }
    const u = new It();
    u.setAttribute("position", new ut(l, 3)),
      u.setAttribute("color", new ut(c, 3));
    const h = new li({ vertexColors: !0, toneMapped: !1 });
    super(u, h), (this.type = "GridHelper");
  }
  dispose() {
    this.geometry.dispose(), this.material.dispose();
  }
}
class _j extends Es {
  constructor(e = 10, n = 16, r = 8, i = 64, o = 4473924, s = 8947848) {
    (o = new nt(o)), (s = new nt(s));
    const a = [],
      l = [];
    if (n > 1)
      for (let h = 0; h < n; h++) {
        const p = (h / n) * (Math.PI * 2),
          m = Math.sin(p) * e,
          v = Math.cos(p) * e;
        a.push(0, 0, 0), a.push(m, 0, v);
        const S = h & 1 ? o : s;
        l.push(S.r, S.g, S.b), l.push(S.r, S.g, S.b);
      }
    for (let h = 0; h < r; h++) {
      const p = h & 1 ? o : s,
        m = e - (e / r) * h;
      for (let v = 0; v < i; v++) {
        let S = (v / i) * (Math.PI * 2),
          x = Math.sin(S) * m,
          g = Math.cos(S) * m;
        a.push(x, 0, g),
          l.push(p.r, p.g, p.b),
          (S = ((v + 1) / i) * (Math.PI * 2)),
          (x = Math.sin(S) * m),
          (g = Math.cos(S) * m),
          a.push(x, 0, g),
          l.push(p.r, p.g, p.b);
      }
    }
    const c = new It();
    c.setAttribute("position", new ut(a, 3)),
      c.setAttribute("color", new ut(l, 3));
    const u = new li({ vertexColors: !0, toneMapped: !1 });
    super(c, u), (this.type = "PolarGridHelper");
  }
  dispose() {
    this.geometry.dispose(), this.material.dispose();
  }
}
const uR = new W(),
  Og = new W(),
  fR = new W();
class Sj extends Zt {
  constructor(e, n, r) {
    super(),
      (this.light = e),
      (this.matrix = e.matrixWorld),
      (this.matrixAutoUpdate = !1),
      (this.color = r),
      (this.type = "DirectionalLightHelper"),
      n === void 0 && (n = 1);
    let i = new It();
    i.setAttribute(
      "position",
      new ut([-n, n, 0, n, n, 0, n, -n, 0, -n, -n, 0, -n, n, 0], 3)
    );
    const o = new li({ fog: !1, toneMapped: !1 });
    (this.lightPlane = new sl(i, o)),
      this.add(this.lightPlane),
      (i = new It()),
      i.setAttribute("position", new ut([0, 0, 0, 0, 0, 1], 3)),
      (this.targetLine = new sl(i, o)),
      this.add(this.targetLine),
      this.update();
  }
  dispose() {
    this.lightPlane.geometry.dispose(),
      this.lightPlane.material.dispose(),
      this.targetLine.geometry.dispose(),
      this.targetLine.material.dispose();
  }
  update() {
    this.light.updateWorldMatrix(!0, !1),
      this.light.target.updateWorldMatrix(!0, !1),
      uR.setFromMatrixPosition(this.light.matrixWorld),
      Og.setFromMatrixPosition(this.light.target.matrixWorld),
      fR.subVectors(Og, uR),
      this.lightPlane.lookAt(Og),
      this.color !== void 0
        ? (this.lightPlane.material.color.set(this.color),
          this.targetLine.material.color.set(this.color))
        : (this.lightPlane.material.color.copy(this.light.color),
          this.targetLine.material.color.copy(this.light.color)),
      this.targetLine.lookAt(Og),
      (this.targetLine.scale.z = fR.length());
  }
}
const Fg = new W(),
  Fn = new xp();
class wj extends Es {
  constructor(e) {
    const n = new It(),
      r = new li({ color: 16777215, vertexColors: !0, toneMapped: !1 }),
      i = [],
      o = [],
      s = {};
    a("n1", "n2"),
      a("n2", "n4"),
      a("n4", "n3"),
      a("n3", "n1"),
      a("f1", "f2"),
      a("f2", "f4"),
      a("f4", "f3"),
      a("f3", "f1"),
      a("n1", "f1"),
      a("n2", "f2"),
      a("n3", "f3"),
      a("n4", "f4"),
      a("p", "n1"),
      a("p", "n2"),
      a("p", "n3"),
      a("p", "n4"),
      a("u1", "u2"),
      a("u2", "u3"),
      a("u3", "u1"),
      a("c", "t"),
      a("p", "c"),
      a("cn1", "cn2"),
      a("cn3", "cn4"),
      a("cf1", "cf2"),
      a("cf3", "cf4");
    function a(v, S) {
      l(v), l(S);
    }
    function l(v) {
      i.push(0, 0, 0),
        o.push(0, 0, 0),
        s[v] === void 0 && (s[v] = []),
        s[v].push(i.length / 3 - 1);
    }
    n.setAttribute("position", new ut(i, 3)),
      n.setAttribute("color", new ut(o, 3)),
      super(n, r),
      (this.type = "CameraHelper"),
      (this.camera = e),
      this.camera.updateProjectionMatrix &&
        this.camera.updateProjectionMatrix(),
      (this.matrix = e.matrixWorld),
      (this.matrixAutoUpdate = !1),
      (this.pointMap = s),
      this.update();
    const c = new nt(16755200),
      u = new nt(16711680),
      h = new nt(43775),
      p = new nt(16777215),
      m = new nt(3355443);
    this.setColors(c, u, h, p, m);
  }
  setColors(e, n, r, i, o) {
    const a = this.geometry.getAttribute("color");
    a.setXYZ(0, e.r, e.g, e.b),
      a.setXYZ(1, e.r, e.g, e.b),
      a.setXYZ(2, e.r, e.g, e.b),
      a.setXYZ(3, e.r, e.g, e.b),
      a.setXYZ(4, e.r, e.g, e.b),
      a.setXYZ(5, e.r, e.g, e.b),
      a.setXYZ(6, e.r, e.g, e.b),
      a.setXYZ(7, e.r, e.g, e.b),
      a.setXYZ(8, e.r, e.g, e.b),
      a.setXYZ(9, e.r, e.g, e.b),
      a.setXYZ(10, e.r, e.g, e.b),
      a.setXYZ(11, e.r, e.g, e.b),
      a.setXYZ(12, e.r, e.g, e.b),
      a.setXYZ(13, e.r, e.g, e.b),
      a.setXYZ(14, e.r, e.g, e.b),
      a.setXYZ(15, e.r, e.g, e.b),
      a.setXYZ(16, e.r, e.g, e.b),
      a.setXYZ(17, e.r, e.g, e.b),
      a.setXYZ(18, e.r, e.g, e.b),
      a.setXYZ(19, e.r, e.g, e.b),
      a.setXYZ(20, e.r, e.g, e.b),
      a.setXYZ(21, e.r, e.g, e.b),
      a.setXYZ(22, e.r, e.g, e.b),
      a.setXYZ(23, e.r, e.g, e.b),
      a.setXYZ(24, n.r, n.g, n.b),
      a.setXYZ(25, n.r, n.g, n.b),
      a.setXYZ(26, n.r, n.g, n.b),
      a.setXYZ(27, n.r, n.g, n.b),
      a.setXYZ(28, n.r, n.g, n.b),
      a.setXYZ(29, n.r, n.g, n.b),
      a.setXYZ(30, n.r, n.g, n.b),
      a.setXYZ(31, n.r, n.g, n.b),
      a.setXYZ(32, r.r, r.g, r.b),
      a.setXYZ(33, r.r, r.g, r.b),
      a.setXYZ(34, r.r, r.g, r.b),
      a.setXYZ(35, r.r, r.g, r.b),
      a.setXYZ(36, r.r, r.g, r.b),
      a.setXYZ(37, r.r, r.g, r.b),
      a.setXYZ(38, i.r, i.g, i.b),
      a.setXYZ(39, i.r, i.g, i.b),
      a.setXYZ(40, o.r, o.g, o.b),
      a.setXYZ(41, o.r, o.g, o.b),
      a.setXYZ(42, o.r, o.g, o.b),
      a.setXYZ(43, o.r, o.g, o.b),
      a.setXYZ(44, o.r, o.g, o.b),
      a.setXYZ(45, o.r, o.g, o.b),
      a.setXYZ(46, o.r, o.g, o.b),
      a.setXYZ(47, o.r, o.g, o.b),
      a.setXYZ(48, o.r, o.g, o.b),
      a.setXYZ(49, o.r, o.g, o.b),
      (a.needsUpdate = !0);
  }
  update() {
    const e = this.geometry,
      n = this.pointMap,
      r = 1,
      i = 1;
    Fn.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),
      Gn("c", n, e, Fn, 0, 0, -1),
      Gn("t", n, e, Fn, 0, 0, 1),
      Gn("n1", n, e, Fn, -r, -i, -1),
      Gn("n2", n, e, Fn, r, -i, -1),
      Gn("n3", n, e, Fn, -r, i, -1),
      Gn("n4", n, e, Fn, r, i, -1),
      Gn("f1", n, e, Fn, -r, -i, 1),
      Gn("f2", n, e, Fn, r, -i, 1),
      Gn("f3", n, e, Fn, -r, i, 1),
      Gn("f4", n, e, Fn, r, i, 1),
      Gn("u1", n, e, Fn, r * 0.7, i * 1.1, -1),
      Gn("u2", n, e, Fn, -r * 0.7, i * 1.1, -1),
      Gn("u3", n, e, Fn, 0, i * 2, -1),
      Gn("cf1", n, e, Fn, -r, 0, 1),
      Gn("cf2", n, e, Fn, r, 0, 1),
      Gn("cf3", n, e, Fn, 0, -i, 1),
      Gn("cf4", n, e, Fn, 0, i, 1),
      Gn("cn1", n, e, Fn, -r, 0, -1),
      Gn("cn2", n, e, Fn, r, 0, -1),
      Gn("cn3", n, e, Fn, 0, -i, -1),
      Gn("cn4", n, e, Fn, 0, i, -1),
      (e.getAttribute("position").needsUpdate = !0);
  }
  dispose() {
    this.geometry.dispose(), this.material.dispose();
  }
}
function Gn(t, e, n, r, i, o, s) {
  Fg.set(i, o, s).unproject(r);
  const a = e[t];
  if (a !== void 0) {
    const l = n.getAttribute("position");
    for (let c = 0, u = a.length; c < u; c++) l.setXYZ(a[c], Fg.x, Fg.y, Fg.z);
  }
}
const Ng = new or();
class bj extends Es {
  constructor(e, n = 16776960) {
    const r = new Uint16Array([
        0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7,
      ]),
      i = new Float32Array(8 * 3),
      o = new It();
    o.setIndex(new en(r, 1)),
      o.setAttribute("position", new en(i, 3)),
      super(o, new li({ color: n, toneMapped: !1 })),
      (this.object = e),
      (this.type = "BoxHelper"),
      (this.matrixAutoUpdate = !1),
      this.update();
  }
  update(e) {
    if (
      (e !== void 0 &&
        console.warn("THREE.BoxHelper: .update() has no longer arguments."),
      this.object !== void 0 && Ng.setFromObject(this.object),
      Ng.isEmpty())
    )
      return;
    const n = Ng.min,
      r = Ng.max,
      i = this.geometry.attributes.position,
      o = i.array;
    (o[0] = r.x),
      (o[1] = r.y),
      (o[2] = r.z),
      (o[3] = n.x),
      (o[4] = r.y),
      (o[5] = r.z),
      (o[6] = n.x),
      (o[7] = n.y),
      (o[8] = r.z),
      (o[9] = r.x),
      (o[10] = n.y),
      (o[11] = r.z),
      (o[12] = r.x),
      (o[13] = r.y),
      (o[14] = n.z),
      (o[15] = n.x),
      (o[16] = r.y),
      (o[17] = n.z),
      (o[18] = n.x),
      (o[19] = n.y),
      (o[20] = n.z),
      (o[21] = r.x),
      (o[22] = n.y),
      (o[23] = n.z),
      (i.needsUpdate = !0),
      this.geometry.computeBoundingSphere();
  }
  setFromObject(e) {
    return (this.object = e), this.update(), this;
  }
  copy(e, n) {
    return super.copy(e, n), (this.object = e.object), this;
  }
  dispose() {
    this.geometry.dispose(), this.material.dispose();
  }
}
class Ej extends Es {
  constructor(e, n = 16776960) {
    const r = new Uint16Array([
        0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7,
      ]),
      i = [
        1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1,
        1, -1, -1,
      ],
      o = new It();
    o.setIndex(new en(r, 1)),
      o.setAttribute("position", new ut(i, 3)),
      super(o, new li({ color: n, toneMapped: !1 })),
      (this.box = e),
      (this.type = "Box3Helper"),
      this.geometry.computeBoundingSphere();
  }
  updateMatrixWorld(e) {
    const n = this.box;
    n.isEmpty() ||
      (n.getCenter(this.position),
      n.getSize(this.scale),
      this.scale.multiplyScalar(0.5),
      super.updateMatrixWorld(e));
  }
  dispose() {
    this.geometry.dispose(), this.material.dispose();
  }
}
class Mj extends sl {
  constructor(e, n = 1, r = 16776960) {
    const i = r,
      o = [
        1, -1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0,
        1, 1, 0,
      ],
      s = new It();
    s.setAttribute("position", new ut(o, 3)),
      s.computeBoundingSphere(),
      super(s, new li({ color: i, toneMapped: !1 })),
      (this.type = "PlaneHelper"),
      (this.plane = e),
      (this.size = n);
    const a = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0],
      l = new It();
    l.setAttribute("position", new ut(a, 3)),
      l.computeBoundingSphere(),
      this.add(
        new An(
          l,
          new pa({
            color: i,
            opacity: 0.2,
            transparent: !0,
            depthWrite: !1,
            toneMapped: !1,
          })
        )
      );
  }
  updateMatrixWorld(e) {
    this.position.set(0, 0, 0),
      this.scale.set(0.5 * this.size, 0.5 * this.size, 1),
      this.lookAt(this.plane.normal),
      this.translateZ(-this.plane.constant),
      super.updateMatrixWorld(e);
  }
  dispose() {
    this.geometry.dispose(),
      this.material.dispose(),
      this.children[0].geometry.dispose(),
      this.children[0].material.dispose();
  }
}
const dR = new W();
let Dg, r_;
class Cj extends Zt {
  constructor(
    e = new W(0, 0, 1),
    n = new W(0, 0, 0),
    r = 1,
    i = 16776960,
    o = r * 0.2,
    s = o * 0.2
  ) {
    super(),
      (this.type = "ArrowHelper"),
      Dg === void 0 &&
        ((Dg = new It()),
        Dg.setAttribute("position", new ut([0, 0, 0, 0, 1, 0], 3)),
        (r_ = new Hf(0, 0.5, 1, 5, 1)),
        r_.translate(0, -0.5, 0)),
      this.position.copy(n),
      (this.line = new sl(Dg, new li({ color: i, toneMapped: !1 }))),
      (this.line.matrixAutoUpdate = !1),
      this.add(this.line),
      (this.cone = new An(r_, new pa({ color: i, toneMapped: !1 }))),
      (this.cone.matrixAutoUpdate = !1),
      this.add(this.cone),
      this.setDirection(e),
      this.setLength(r, o, s);
  }
  setDirection(e) {
    if (e.y > 0.99999) this.quaternion.set(0, 0, 0, 1);
    else if (e.y < -0.99999) this.quaternion.set(1, 0, 0, 0);
    else {
      dR.set(e.z, 0, -e.x).normalize();
      const n = Math.acos(e.y);
      this.quaternion.setFromAxisAngle(dR, n);
    }
  }
  setLength(e, n = e * 0.2, r = n * 0.2) {
    this.line.scale.set(1, Math.max(1e-4, e - n), 1),
      this.line.updateMatrix(),
      this.cone.scale.set(r, n, r),
      (this.cone.position.y = e),
      this.cone.updateMatrix();
  }
  setColor(e) {
    this.line.material.color.set(e), this.cone.material.color.set(e);
  }
  copy(e) {
    return (
      super.copy(e, !1), this.line.copy(e.line), this.cone.copy(e.cone), this
    );
  }
  dispose() {
    this.line.geometry.dispose(),
      this.line.material.dispose(),
      this.cone.geometry.dispose(),
      this.cone.material.dispose();
  }
}
class Tj extends Es {
  constructor(e = 1) {
    const n = [0, 0, 0, e, 0, 0, 0, 0, 0, 0, e, 0, 0, 0, 0, 0, 0, e],
      r = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1],
      i = new It();
    i.setAttribute("position", new ut(n, 3)),
      i.setAttribute("color", new ut(r, 3));
    const o = new li({ vertexColors: !0, toneMapped: !1 });
    super(i, o), (this.type = "AxesHelper");
  }
  setColors(e, n, r) {
    const i = new nt(),
      o = this.geometry.attributes.color.array;
    return (
      i.set(e),
      i.toArray(o, 0),
      i.toArray(o, 3),
      i.set(n),
      i.toArray(o, 6),
      i.toArray(o, 9),
      i.set(r),
      i.toArray(o, 12),
      i.toArray(o, 15),
      (this.geometry.attributes.color.needsUpdate = !0),
      this
    );
  }
  dispose() {
    this.geometry.dispose(), this.material.dispose();
  }
}
class Aj {
  constructor() {
    (this.type = "ShapePath"),
      (this.color = new nt()),
      (this.subPaths = []),
      (this.currentPath = null);
  }
  moveTo(e, n) {
    return (
      (this.currentPath = new $h()),
      this.subPaths.push(this.currentPath),
      this.currentPath.moveTo(e, n),
      this
    );
  }
  lineTo(e, n) {
    return this.currentPath.lineTo(e, n), this;
  }
  quadraticCurveTo(e, n, r, i) {
    return this.currentPath.quadraticCurveTo(e, n, r, i), this;
  }
  bezierCurveTo(e, n, r, i, o, s) {
    return this.currentPath.bezierCurveTo(e, n, r, i, o, s), this;
  }
  splineThru(e) {
    return this.currentPath.splineThru(e), this;
  }
  toShapes(e) {
    function n(g) {
      const y = [];
      for (let _ = 0, b = g.length; _ < b; _++) {
        const T = g[_],
          M = new tl();
        (M.curves = T.curves), y.push(M);
      }
      return y;
    }
    function r(g, y) {
      const _ = y.length;
      let b = !1;
      for (let T = _ - 1, M = 0; M < _; T = M++) {
        let C = y[T],
          L = y[M],
          A = L.x - C.x,
          P = L.y - C.y;
        if (Math.abs(P) > Number.EPSILON) {
          if (
            (P < 0 && ((C = y[M]), (A = -A), (L = y[T]), (P = -P)),
            g.y < C.y || g.y > L.y)
          )
            continue;
          if (g.y === C.y) {
            if (g.x === C.x) return !0;
          } else {
            const k = P * (g.x - C.x) - A * (g.y - C.y);
            if (k === 0) return !0;
            if (k < 0) continue;
            b = !b;
          }
        } else {
          if (g.y !== C.y) continue;
          if ((L.x <= g.x && g.x <= C.x) || (C.x <= g.x && g.x <= L.x))
            return !0;
        }
      }
      return b;
    }
    const i = _s.isClockWise,
      o = this.subPaths;
    if (o.length === 0) return [];
    let s, a, l;
    const c = [];
    if (o.length === 1)
      return (a = o[0]), (l = new tl()), (l.curves = a.curves), c.push(l), c;
    let u = !i(o[0].getPoints());
    u = e ? !u : u;
    const h = [],
      p = [];
    let m = [],
      v = 0,
      S;
    (p[v] = void 0), (m[v] = []);
    for (let g = 0, y = o.length; g < y; g++)
      (a = o[g]),
        (S = a.getPoints()),
        (s = i(S)),
        (s = e ? !s : s),
        s
          ? (!u && p[v] && v++,
            (p[v] = { s: new tl(), p: S }),
            (p[v].s.curves = a.curves),
            u && v++,
            (m[v] = []))
          : m[v].push({ h: a, p: S[0] });
    if (!p[0]) return n(o);
    if (p.length > 1) {
      let g = !1,
        y = 0;
      for (let _ = 0, b = p.length; _ < b; _++) h[_] = [];
      for (let _ = 0, b = p.length; _ < b; _++) {
        const T = m[_];
        for (let M = 0; M < T.length; M++) {
          const C = T[M];
          let L = !0;
          for (let A = 0; A < p.length; A++)
            r(C.p, p[A].p) &&
              (_ !== A && y++, L ? ((L = !1), h[A].push(C)) : (g = !0));
          L && h[_].push(C);
        }
      }
      y > 0 && g === !1 && (m = h);
    }
    let x;
    for (let g = 0, y = p.length; g < y; g++) {
      (l = p[g].s), c.push(l), (x = m[g]);
      for (let _ = 0, b = x.length; _ < b; _++) l.holes.push(x[_].h);
    }
    return c;
  }
}
typeof __THREE_DEVTOOLS__ < "u" &&
  __THREE_DEVTOOLS__.dispatchEvent(
    new CustomEvent("register", { detail: { revision: mp } })
  );
typeof window < "u" &&
  (window.__THREE__
    ? console.warn("WARNING: Multiple instances of Three.js being imported.")
    : (window.__THREE__ = mp));
const Rj = Object.freeze(
  Object.defineProperty(
    {
      __proto__: null,
      ACESFilmicToneMapping: CE,
      AddEquation: za,
      AddOperation: tO,
      AdditiveAnimationBlendMode: NE,
      AdditiveBlending: BS,
      AgXToneMapping: sO,
      AlphaFormat: uO,
      AlwaysCompare: TO,
      AlwaysDepth: qI,
      AlwaysStencilFunc: vw,
      AmbientLight: TF,
      AnimationAction: FF,
      AnimationClip: Qh,
      AnimationLoader: OG,
      AnimationMixer: lj,
      AnimationObjectGroup: sj,
      AnimationUtils: RG,
      ArcCurve: JO,
      ArrayCamera: GO,
      ArrowHelper: Cj,
      AttachedBindMode: WS,
      Audio: IF,
      AudioAnalyser: KG,
      AudioContext: cM,
      AudioListener: XG,
      AudioLoader: jG,
      AxesHelper: Tj,
      BackSide: Vr,
      BasicDepthPacking: xO,
      BasicShadowMap: PI,
      BatchedMesh: KO,
      Bone: qE,
      BooleanKeyframeTrack: kc,
      Box2: hj,
      Box3: or,
      Box3Helper: Ej,
      BoxGeometry: zc,
      BoxHelper: bj,
      BufferAttribute: en,
      BufferGeometry: It,
      BufferGeometryLoader: LF,
      ByteType: lO,
      Cache: ta,
      Camera: xp,
      CameraHelper: wj,
      CanvasTexture: J8,
      CapsuleGeometry: dy,
      CatmullRomCurve3: eF,
      CineonToneMapping: iO,
      CircleGeometry: hy,
      ClampToEdgeWrapping: Hr,
      Clock: uM,
      Color: nt,
      ColorKeyframeTrack: sM,
      ColorManagement: nn,
      CompressedArrayTexture: Z8,
      CompressedCubeTexture: Q8,
      CompressedTexture: uy,
      CompressedTextureLoader: FG,
      ConeGeometry: py,
      ConstantAlphaFactor: WI,
      ConstantColorFactor: GI,
      CubeCamera: FO,
      CubeReflectionMapping: la,
      CubeRefractionMapping: il,
      CubeTexture: _p,
      CubeTextureLoader: NG,
      CubeUVReflectionMapping: kf,
      CubicBezierCurve: ZE,
      CubicBezierCurve3: tF,
      CubicInterpolant: xF,
      CullFaceBack: kS,
      CullFaceFront: RI,
      CullFaceFrontBack: H4,
      CullFaceNone: AI,
      Curve: Zo,
      CurvePath: rF,
      CustomBlending: LI,
      CustomToneMapping: oO,
      CylinderGeometry: Hf,
      Cylindrical: dj,
      Data3DTexture: HE,
      DataArrayTexture: ny,
      DataTexture: gc,
      DataTextureLoader: DG,
      DataUtils: KB,
      DecrementStencilOp: J4,
      DecrementWrapStencilOp: tB,
      DefaultLoadingManager: wF,
      DepthFormat: Ja,
      DepthStencilFormat: Tc,
      DepthTexture: WE,
      DetachedBindMode: aO,
      DirectionalLight: CF,
      DirectionalLightHelper: Sj,
      DiscreteInterpolant: _F,
      DisplayP3ColorSpace: ty,
      DodecahedronGeometry: my,
      DoubleSide: mo,
      DstAlphaFactor: zI,
      DstColorFactor: BI,
      DynamicCopyUsage: gB,
      DynamicDrawUsage: uB,
      DynamicReadUsage: hB,
      EdgesGeometry: iF,
      EllipseCurve: fy,
      EqualCompare: bO,
      EqualDepth: KI,
      EqualStencilFunc: oB,
      EquirectangularReflectionMapping: Oh,
      EquirectangularRefractionMapping: Fh,
      Euler: yp,
      EventDispatcher: bs,
      ExtrudeGeometry: vy,
      FileLoader: ca,
      Float16BufferAttribute: n5,
      Float32BufferAttribute: ut,
      Float64BufferAttribute: r5,
      FloatType: Vo,
      Fog: ay,
      FogExp2: sy,
      FramebufferTexture: K8,
      FrontSide: Ss,
      Frustum: Sp,
      GLBufferAttribute: fj,
      GLSL1: yB,
      GLSL3: yw,
      GreaterCompare: EO,
      GreaterDepth: QI,
      GreaterEqualCompare: CO,
      GreaterEqualDepth: ZI,
      GreaterEqualStencilFunc: cB,
      GreaterStencilFunc: aB,
      GridHelper: xj,
      Group: ef,
      HalfFloatType: Mf,
      HemisphereLight: bF,
      HemisphereLightHelper: yj,
      IcosahedronGeometry: yy,
      ImageBitmapLoader: GG,
      ImageLoader: Jh,
      ImageUtils: BE,
      IncrementStencilOp: Q4,
      IncrementWrapStencilOp: eB,
      InstancedBufferAttribute: Ac,
      InstancedBufferGeometry: Cy,
      InstancedInterleavedBuffer: v0,
      InstancedMesh: YO,
      Int16BufferAttribute: e5,
      Int32BufferAttribute: t5,
      Int8BufferAttribute: ZB,
      IntType: AE,
      InterleavedBuffer: ly,
      InterleavedBufferAttribute: Vi,
      Interpolant: Mp,
      InterpolateDiscrete: Uh,
      InterpolateLinear: zh,
      InterpolateSmooth: Tv,
      InvertStencilOp: nB,
      KeepStencilOp: Yl,
      KeyframeTrack: Qo,
      LOD: XO,
      LatheGeometry: wp,
      Layers: mc,
      LessCompare: wO,
      LessDepth: YI,
      LessEqualCompare: zE,
      LessEqualDepth: Ih,
      LessEqualStencilFunc: sB,
      LessStencilFunc: iB,
      Light: vl,
      LightProbe: PF,
      Line: sl,
      Line3: DF,
      LineBasicMaterial: li,
      LineCurve: QE,
      LineCurve3: nF,
      LineDashedMaterial: gF,
      LineLoop: ZO,
      LineSegments: Es,
      LinearDisplayP3ColorSpace: vp,
      LinearEncoding: DE,
      LinearFilter: Cn,
      LinearInterpolant: oM,
      LinearMipMapLinearFilter: $4,
      LinearMipMapNearestFilter: W4,
      LinearMipmapLinearFilter: ol,
      LinearMipmapNearestFilter: TE,
      LinearSRGBColorSpace: ws,
      LinearToneMapping: nO,
      LinearTransfer: Bh,
      Loader: bi,
      LoaderUtils: Cw,
      LoadingManager: aM,
      LoopOnce: gO,
      LoopPingPong: yO,
      LoopRepeat: vO,
      LuminanceAlphaFormat: dO,
      LuminanceFormat: fO,
      MOUSE: Xl,
      Material: Rr,
      MaterialLoader: My,
      MathUtils: AO,
      Matrix3: Ot,
      Matrix4: bt,
      MaxEquation: jS,
      Mesh: An,
      MeshBasicMaterial: pa,
      MeshDepthMaterial: iy,
      MeshDistanceMaterial: oy,
      MeshLambertMaterial: pF,
      MeshMatcapMaterial: mF,
      MeshNormalMaterial: hF,
      MeshPhongMaterial: fF,
      MeshPhysicalMaterial: uF,
      MeshStandardMaterial: rM,
      MeshToonMaterial: dF,
      MinEquation: GS,
      MirroredRepeatWrapping: Dh,
      MixOperation: eO,
      MultiplyBlending: VS,
      MultiplyOperation: gp,
      NearestFilter: Wn,
      NearestMipMapLinearFilter: j4,
      NearestMipMapNearestFilter: G4,
      NearestMipmapLinearFilter: ih,
      NearestMipmapNearestFilter: d0,
      NeverCompare: SO,
      NeverDepth: XI,
      NeverStencilFunc: rB,
      NoBlending: ra,
      NoColorSpace: Bi,
      NoToneMapping: ys,
      NormalAnimationBlendMode: ey,
      NormalBlending: hc,
      NotEqualCompare: MO,
      NotEqualDepth: JI,
      NotEqualStencilFunc: lB,
      NumberKeyframeTrack: Kh,
      Object3D: Zt,
      ObjectLoader: HG,
      ObjectSpaceNormalMap: _O,
      OctahedronGeometry: bp,
      OneFactor: NI,
      OneMinusConstantAlphaFactor: $I,
      OneMinusConstantColorFactor: jI,
      OneMinusDstAlphaFactor: kI,
      OneMinusDstColorFactor: HI,
      OneMinusSrcAlphaFactor: f0,
      OneMinusSrcColorFactor: UI,
      OrthographicCamera: ea,
      P3Primaries: Vh,
      PCFShadowMap: Z0,
      PCFSoftShadowMap: rh,
      PMREMGenerator: _w,
      Path: $h,
      PerspectiveCamera: Un,
      Plane: qs,
      PlaneGeometry: ml,
      PlaneHelper: Mj,
      PointLight: MF,
      PointLightHelper: gj,
      Points: QO,
      PointsMaterial: YE,
      PolarGridHelper: _j,
      PolyhedronGeometry: gl,
      PositionalAudio: YG,
      PropertyBinding: $t,
      PropertyMixer: OF,
      QuadraticBezierCurve: JE,
      QuadraticBezierCurve3: eM,
      Quaternion: Gr,
      QuaternionKeyframeTrack: Vf,
      QuaternionLinearInterpolant: SF,
      RED_GREEN_RGTC2_Format: mw,
      RED_RGTC1_Format: mO,
      REVISION: mp,
      RGBADepthPacking: UE,
      RGBAFormat: ri,
      RGBAIntegerFormat: OE,
      RGBA_ASTC_10x10_Format: cw,
      RGBA_ASTC_10x5_Format: sw,
      RGBA_ASTC_10x6_Format: aw,
      RGBA_ASTC_10x8_Format: lw,
      RGBA_ASTC_12x10_Format: uw,
      RGBA_ASTC_12x12_Format: fw,
      RGBA_ASTC_4x4_Format: QS,
      RGBA_ASTC_5x4_Format: JS,
      RGBA_ASTC_5x5_Format: ew,
      RGBA_ASTC_6x5_Format: tw,
      RGBA_ASTC_6x6_Format: nw,
      RGBA_ASTC_8x5_Format: rw,
      RGBA_ASTC_8x6_Format: iw,
      RGBA_ASTC_8x8_Format: ow,
      RGBA_BPTC_Format: Cv,
      RGBA_ETC2_EAC_Format: ZS,
      RGBA_PVRTC_2BPPV1_Format: YS,
      RGBA_PVRTC_4BPPV1_Format: qS,
      RGBA_S3TC_DXT1_Format: bv,
      RGBA_S3TC_DXT3_Format: Ev,
      RGBA_S3TC_DXT5_Format: Mv,
      RGB_BPTC_SIGNED_Format: dw,
      RGB_BPTC_UNSIGNED_Format: hw,
      RGB_ETC1_Format: FE,
      RGB_ETC2_Format: KS,
      RGB_PVRTC_2BPPV1_Format: XS,
      RGB_PVRTC_4BPPV1_Format: $S,
      RGB_S3TC_DXT1_Format: wv,
      RGFormat: pO,
      RGIntegerFormat: IE,
      RawShaderMaterial: cF,
      Ray: Uc,
      Raycaster: NF,
      Rec709Primaries: Hh,
      RectAreaLight: AF,
      RedFormat: hO,
      RedIntegerFormat: LE,
      ReinhardToneMapping: rO,
      RenderTarget: LO,
      RepeatWrapping: Nh,
      ReplaceStencilOp: Z4,
      ReverseSubtractEquation: OI,
      RingGeometry: xy,
      SIGNED_RED_GREEN_RGTC2_Format: gw,
      SIGNED_RED_RGTC1_Format: pw,
      SRGBColorSpace: rr,
      SRGBTransfer: dn,
      Scene: m0,
      ShaderChunk: Lt,
      ShaderLib: Bo,
      ShaderMaterial: Ko,
      ShadowMaterial: lF,
      Shape: tl,
      ShapeGeometry: _y,
      ShapePath: Aj,
      ShapeUtils: _s,
      ShortType: cO,
      Skeleton: cy,
      SkeletonHelper: mj,
      SkinnedMesh: qO,
      Source: sc,
      Sphere: sr,
      SphereGeometry: Ep,
      Spherical: Aw,
      SphericalHarmonics3: RF,
      SplineCurve: tM,
      SpotLight: EF,
      SpotLightHelper: pj,
      Sprite: $O,
      SpriteMaterial: XE,
      SrcAlphaFactor: u0,
      SrcAlphaSaturateFactor: VI,
      SrcColorFactor: DI,
      StaticCopyUsage: mB,
      StaticDrawUsage: Gh,
      StaticReadUsage: dB,
      StereoCamera: WG,
      StreamCopyUsage: vB,
      StreamDrawUsage: fB,
      StreamReadUsage: pB,
      StringKeyframeTrack: Bc,
      SubtractEquation: II,
      SubtractiveBlending: HS,
      TOUCH: ql,
      TangentSpaceNormalMap: pl,
      TetrahedronGeometry: Sy,
      Texture: Pn,
      TextureLoader: UG,
      TorusGeometry: wy,
      TorusKnotGeometry: by,
      Triangle: gi,
      TriangleFanDrawMode: Y4,
      TriangleStripDrawMode: q4,
      TrianglesDrawMode: X4,
      TubeGeometry: Ey,
      TwoPassDoubleSide: V4,
      UVMapping: Q0,
      Uint16BufferAttribute: VE,
      Uint32BufferAttribute: GE,
      Uint8BufferAttribute: QB,
      Uint8ClampedBufferAttribute: JB,
      Uniform: hM,
      UniformsGroup: uj,
      UniformsLib: Ze,
      UniformsUtils: Wh,
      UnsignedByteType: xs,
      UnsignedInt248Type: Qa,
      UnsignedIntType: Js,
      UnsignedShort4444Type: RE,
      UnsignedShort5551Type: PE,
      UnsignedShortType: J0,
      VSMShadowMap: No,
      Vector2: Fe,
      Vector3: W,
      Vector4: Ht,
      VectorKeyframeTrack: Zh,
      VideoTexture: Y8,
      WebGL1Renderer: jO,
      WebGL3DRenderTarget: zB,
      WebGLArrayRenderTarget: UB,
      WebGLCoordinateSystem: Go,
      WebGLCubeRenderTarget: NO,
      WebGLMultipleRenderTargets: kB,
      WebGLRenderTarget: Yo,
      WebGLRenderer: $E,
      WebGLUtils: VO,
      WebGPUCoordinateSystem: Cf,
      WireframeGeometry: nM,
      WrapAroundEnding: kh,
      ZeroCurvatureEnding: ic,
      ZeroFactor: FI,
      ZeroSlopeEnding: oc,
      ZeroStencilOp: K4,
      _SRGBAFormat: h0,
      createCanvasElement: PO,
      sRGBEncoding: el,
    },
    Symbol.toStringTag,
    { value: "Module" }
  )
);
var zF = { exports: {} },
  Hc = {};
/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ Hc.ConcurrentRoot = 1;
Hc.ContinuousEventPriority = 4;
Hc.DefaultEventPriority = 16;
Hc.DiscreteEventPriority = 1;
Hc.IdleEventPriority = 536870912;
Hc.LegacyRoot = 0;
zF.exports = Hc;
var nf = zF.exports;
function Pj(t) {
  let e;
  const n = new Set(),
    r = (c, u) => {
      const h = typeof c == "function" ? c(e) : c;
      if (h !== e) {
        const p = e;
        (e = u ? h : Object.assign({}, e, h)), n.forEach((m) => m(e, p));
      }
    },
    i = () => e,
    o = (c, u = i, h = Object.is) => {
      console.warn(
        "[DEPRECATED] Please use `subscribeWithSelector` middleware"
      );
      let p = u(e);
      function m() {
        const v = u(e);
        if (!h(p, v)) {
          const S = p;
          c((p = v), S);
        }
      }
      return n.add(m), () => n.delete(m);
    },
    l = {
      setState: r,
      getState: i,
      subscribe: (c, u, h) =>
        u || h ? o(c, u, h) : (n.add(c), () => n.delete(c)),
      destroy: () => n.clear(),
    };
  return (e = t(r, i, l)), l;
}
const Lj =
    typeof window > "u" ||
    !window.navigator ||
    /ServerSideRendering|^Deno\//.test(window.navigator.userAgent),
  hR = Lj ? z.useEffect : z.useLayoutEffect;
function Ij(t) {
  const e = typeof t == "function" ? Pj(t) : t,
    n = (r = e.getState, i = Object.is) => {
      const [, o] = z.useReducer((x) => x + 1, 0),
        s = e.getState(),
        a = z.useRef(s),
        l = z.useRef(r),
        c = z.useRef(i),
        u = z.useRef(!1),
        h = z.useRef();
      h.current === void 0 && (h.current = r(s));
      let p,
        m = !1;
      (a.current !== s || l.current !== r || c.current !== i || u.current) &&
        ((p = r(s)), (m = !i(h.current, p))),
        hR(() => {
          m && (h.current = p),
            (a.current = s),
            (l.current = r),
            (c.current = i),
            (u.current = !1);
        });
      const v = z.useRef(s);
      hR(() => {
        const x = () => {
            try {
              const y = e.getState(),
                _ = l.current(y);
              c.current(h.current, _) ||
                ((a.current = y), (h.current = _), o());
            } catch {
              (u.current = !0), o();
            }
          },
          g = e.subscribe(x);
        return e.getState() !== v.current && x(), g;
      }, []);
      const S = m ? p : h.current;
      return z.useDebugValue(S), S;
    };
  return (
    Object.assign(n, e),
    (n[Symbol.iterator] = function () {
      console.warn(
        "[useStore, api] = create() is deprecated and will be removed in v4"
      );
      const r = [n, e];
      return {
        next() {
          const i = r.length <= 0;
          return { value: r.shift(), done: i };
        },
      };
    }),
    n
  );
}
var kF = { exports: {} },
  BF = { exports: {} },
  HF = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ (function (t) {
  function e(N, V) {
    var G = N.length;
    N.push(V);
    e: for (; 0 < G; ) {
      var U = (G - 1) >>> 1,
        Z = N[U];
      if (0 < i(Z, V)) (N[U] = V), (N[G] = Z), (G = U);
      else break e;
    }
  }
  function n(N) {
    return N.length === 0 ? null : N[0];
  }
  function r(N) {
    if (N.length === 0) return null;
    var V = N[0],
      G = N.pop();
    if (G !== V) {
      N[0] = G;
      e: for (var U = 0, Z = N.length, Q = Z >>> 1; U < Q; ) {
        var te = 2 * (U + 1) - 1,
          re = N[te],
          le = te + 1,
          oe = N[le];
        if (0 > i(re, G))
          le < Z && 0 > i(oe, re)
            ? ((N[U] = oe), (N[le] = G), (U = le))
            : ((N[U] = re), (N[te] = G), (U = te));
        else if (le < Z && 0 > i(oe, G)) (N[U] = oe), (N[le] = G), (U = le);
        else break e;
      }
    }
    return V;
  }
  function i(N, V) {
    var G = N.sortIndex - V.sortIndex;
    return G !== 0 ? G : N.id - V.id;
  }
  if (typeof performance == "object" && typeof performance.now == "function") {
    var o = performance;
    t.unstable_now = function () {
      return o.now();
    };
  } else {
    var s = Date,
      a = s.now();
    t.unstable_now = function () {
      return s.now() - a;
    };
  }
  var l = [],
    c = [],
    u = 1,
    h = null,
    p = 3,
    m = !1,
    v = !1,
    S = !1,
    x = typeof setTimeout == "function" ? setTimeout : null,
    g = typeof clearTimeout == "function" ? clearTimeout : null,
    y = typeof setImmediate < "u" ? setImmediate : null;
  typeof navigator < "u" &&
    navigator.scheduling !== void 0 &&
    navigator.scheduling.isInputPending !== void 0 &&
    navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function _(N) {
    for (var V = n(c); V !== null; ) {
      if (V.callback === null) r(c);
      else if (V.startTime <= N)
        r(c), (V.sortIndex = V.expirationTime), e(l, V);
      else break;
      V = n(c);
    }
  }
  function b(N) {
    if (((S = !1), _(N), !v))
      if (n(l) !== null) (v = !0), j(T);
      else {
        var V = n(c);
        V !== null && Y(b, V.startTime - N);
      }
  }
  function T(N, V) {
    (v = !1), S && ((S = !1), g(L), (L = -1)), (m = !0);
    var G = p;
    try {
      for (
        _(V), h = n(l);
        h !== null && (!(h.expirationTime > V) || (N && !k()));

      ) {
        var U = h.callback;
        if (typeof U == "function") {
          (h.callback = null), (p = h.priorityLevel);
          var Z = U(h.expirationTime <= V);
          (V = t.unstable_now()),
            typeof Z == "function" ? (h.callback = Z) : h === n(l) && r(l),
            _(V);
        } else r(l);
        h = n(l);
      }
      if (h !== null) var Q = !0;
      else {
        var te = n(c);
        te !== null && Y(b, te.startTime - V), (Q = !1);
      }
      return Q;
    } finally {
      (h = null), (p = G), (m = !1);
    }
  }
  var M = !1,
    C = null,
    L = -1,
    A = 5,
    P = -1;
  function k() {
    return !(t.unstable_now() - P < A);
  }
  function B() {
    if (C !== null) {
      var N = t.unstable_now();
      P = N;
      var V = !0;
      try {
        V = C(!0, N);
      } finally {
        V ? $() : ((M = !1), (C = null));
      }
    } else M = !1;
  }
  var $;
  if (typeof y == "function")
    $ = function () {
      y(B);
    };
  else if (typeof MessageChannel < "u") {
    var D = new MessageChannel(),
      X = D.port2;
    (D.port1.onmessage = B),
      ($ = function () {
        X.postMessage(null);
      });
  } else
    $ = function () {
      x(B, 0);
    };
  function j(N) {
    (C = N), M || ((M = !0), $());
  }
  function Y(N, V) {
    L = x(function () {
      N(t.unstable_now());
    }, V);
  }
  (t.unstable_IdlePriority = 5),
    (t.unstable_ImmediatePriority = 1),
    (t.unstable_LowPriority = 4),
    (t.unstable_NormalPriority = 3),
    (t.unstable_Profiling = null),
    (t.unstable_UserBlockingPriority = 2),
    (t.unstable_cancelCallback = function (N) {
      N.callback = null;
    }),
    (t.unstable_continueExecution = function () {
      v || m || ((v = !0), j(T));
    }),
    (t.unstable_forceFrameRate = function (N) {
      0 > N || 125 < N
        ? console.error(
            "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"
          )
        : (A = 0 < N ? Math.floor(1e3 / N) : 5);
    }),
    (t.unstable_getCurrentPriorityLevel = function () {
      return p;
    }),
    (t.unstable_getFirstCallbackNode = function () {
      return n(l);
    }),
    (t.unstable_next = function (N) {
      switch (p) {
        case 1:
        case 2:
        case 3:
          var V = 3;
          break;
        default:
          V = p;
      }
      var G = p;
      p = V;
      try {
        return N();
      } finally {
        p = G;
      }
    }),
    (t.unstable_pauseExecution = function () {}),
    (t.unstable_requestPaint = function () {}),
    (t.unstable_runWithPriority = function (N, V) {
      switch (N) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          N = 3;
      }
      var G = p;
      p = N;
      try {
        return V();
      } finally {
        p = G;
      }
    }),
    (t.unstable_scheduleCallback = function (N, V, G) {
      var U = t.unstable_now();
      switch (
        (typeof G == "object" && G !== null
          ? ((G = G.delay), (G = typeof G == "number" && 0 < G ? U + G : U))
          : (G = U),
        N)
      ) {
        case 1:
          var Z = -1;
          break;
        case 2:
          Z = 250;
          break;
        case 5:
          Z = 1073741823;
          break;
        case 4:
          Z = 1e4;
          break;
        default:
          Z = 5e3;
      }
      return (
        (Z = G + Z),
        (N = {
          id: u++,
          callback: V,
          priorityLevel: N,
          startTime: G,
          expirationTime: Z,
          sortIndex: -1,
        }),
        G > U
          ? ((N.sortIndex = G),
            e(c, N),
            n(l) === null &&
              N === n(c) &&
              (S ? (g(L), (L = -1)) : (S = !0), Y(b, G - U)))
          : ((N.sortIndex = Z), e(l, N), v || m || ((v = !0), j(T))),
        N
      );
    }),
    (t.unstable_shouldYield = k),
    (t.unstable_wrapCallback = function (N) {
      var V = p;
      return function () {
        var G = p;
        p = V;
        try {
          return N.apply(this, arguments);
        } finally {
          p = G;
        }
      };
    });
})(HF);
BF.exports = HF;
var Rw = BF.exports;
/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var Oj = function (e) {
  var n = {},
    r = z,
    i = Rw,
    o = Object.assign;
  function s(f) {
    for (
      var d = "https://reactjs.org/docs/error-decoder.html?invariant=" + f,
        w = 1;
      w < arguments.length;
      w++
    )
      d += "&args[]=" + encodeURIComponent(arguments[w]);
    return (
      "Minified React error #" +
      f +
      "; visit " +
      d +
      " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
    );
  }
  var a = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
    l = Symbol.for("react.element"),
    c = Symbol.for("react.portal"),
    u = Symbol.for("react.fragment"),
    h = Symbol.for("react.strict_mode"),
    p = Symbol.for("react.profiler"),
    m = Symbol.for("react.provider"),
    v = Symbol.for("react.context"),
    S = Symbol.for("react.forward_ref"),
    x = Symbol.for("react.suspense"),
    g = Symbol.for("react.suspense_list"),
    y = Symbol.for("react.memo"),
    _ = Symbol.for("react.lazy"),
    b = Symbol.for("react.offscreen"),
    T = Symbol.iterator;
  function M(f) {
    return f === null || typeof f != "object"
      ? null
      : ((f = (T && f[T]) || f["@@iterator"]),
        typeof f == "function" ? f : null);
  }
  function C(f) {
    if (f == null) return null;
    if (typeof f == "function") return f.displayName || f.name || null;
    if (typeof f == "string") return f;
    switch (f) {
      case u:
        return "Fragment";
      case c:
        return "Portal";
      case p:
        return "Profiler";
      case h:
        return "StrictMode";
      case x:
        return "Suspense";
      case g:
        return "SuspenseList";
    }
    if (typeof f == "object")
      switch (f.$$typeof) {
        case v:
          return (f.displayName || "Context") + ".Consumer";
        case m:
          return (f._context.displayName || "Context") + ".Provider";
        case S:
          var d = f.render;
          return (
            (f = f.displayName),
            f ||
              ((f = d.displayName || d.name || ""),
              (f = f !== "" ? "ForwardRef(" + f + ")" : "ForwardRef")),
            f
          );
        case y:
          return (
            (d = f.displayName || null), d !== null ? d : C(f.type) || "Memo"
          );
        case _:
          (d = f._payload), (f = f._init);
          try {
            return C(f(d));
          } catch {}
      }
    return null;
  }
  function L(f) {
    var d = f.type;
    switch (f.tag) {
      case 24:
        return "Cache";
      case 9:
        return (d.displayName || "Context") + ".Consumer";
      case 10:
        return (d._context.displayName || "Context") + ".Provider";
      case 18:
        return "DehydratedFragment";
      case 11:
        return (
          (f = d.render),
          (f = f.displayName || f.name || ""),
          d.displayName || (f !== "" ? "ForwardRef(" + f + ")" : "ForwardRef")
        );
      case 7:
        return "Fragment";
      case 5:
        return d;
      case 4:
        return "Portal";
      case 3:
        return "Root";
      case 6:
        return "Text";
      case 16:
        return C(d);
      case 8:
        return d === h ? "StrictMode" : "Mode";
      case 22:
        return "Offscreen";
      case 12:
        return "Profiler";
      case 21:
        return "Scope";
      case 13:
        return "Suspense";
      case 19:
        return "SuspenseList";
      case 25:
        return "TracingMarker";
      case 1:
      case 0:
      case 17:
      case 2:
      case 14:
      case 15:
        if (typeof d == "function") return d.displayName || d.name || null;
        if (typeof d == "string") return d;
    }
    return null;
  }
  function A(f) {
    var d = f,
      w = f;
    if (f.alternate) for (; d.return; ) d = d.return;
    else {
      f = d;
      do (d = f), d.flags & 4098 && (w = d.return), (f = d.return);
      while (f);
    }
    return d.tag === 3 ? w : null;
  }
  function P(f) {
    if (A(f) !== f) throw Error(s(188));
  }
  function k(f) {
    var d = f.alternate;
    if (!d) {
      if (((d = A(f)), d === null)) throw Error(s(188));
      return d !== f ? null : f;
    }
    for (var w = f, E = d; ; ) {
      var R = w.return;
      if (R === null) break;
      var O = R.alternate;
      if (O === null) {
        if (((E = R.return), E !== null)) {
          w = E;
          continue;
        }
        break;
      }
      if (R.child === O.child) {
        for (O = R.child; O; ) {
          if (O === w) return P(R), f;
          if (O === E) return P(R), d;
          O = O.sibling;
        }
        throw Error(s(188));
      }
      if (w.return !== E.return) (w = R), (E = O);
      else {
        for (var ee = !1, ce = R.child; ce; ) {
          if (ce === w) {
            (ee = !0), (w = R), (E = O);
            break;
          }
          if (ce === E) {
            (ee = !0), (E = R), (w = O);
            break;
          }
          ce = ce.sibling;
        }
        if (!ee) {
          for (ce = O.child; ce; ) {
            if (ce === w) {
              (ee = !0), (w = O), (E = R);
              break;
            }
            if (ce === E) {
              (ee = !0), (E = O), (w = R);
              break;
            }
            ce = ce.sibling;
          }
          if (!ee) throw Error(s(189));
        }
      }
      if (w.alternate !== E) throw Error(s(190));
    }
    if (w.tag !== 3) throw Error(s(188));
    return w.stateNode.current === w ? f : d;
  }
  function B(f) {
    return (f = k(f)), f !== null ? $(f) : null;
  }
  function $(f) {
    if (f.tag === 5 || f.tag === 6) return f;
    for (f = f.child; f !== null; ) {
      var d = $(f);
      if (d !== null) return d;
      f = f.sibling;
    }
    return null;
  }
  function D(f) {
    if (f.tag === 5 || f.tag === 6) return f;
    for (f = f.child; f !== null; ) {
      if (f.tag !== 4) {
        var d = D(f);
        if (d !== null) return d;
      }
      f = f.sibling;
    }
    return null;
  }
  var X = Array.isArray,
    j = e.getPublicInstance,
    Y = e.getRootHostContext,
    N = e.getChildHostContext,
    V = e.prepareForCommit,
    G = e.resetAfterCommit,
    U = e.createInstance,
    Z = e.appendInitialChild,
    Q = e.finalizeInitialChildren,
    te = e.prepareUpdate,
    re = e.shouldSetTextContent,
    le = e.createTextInstance,
    oe = e.scheduleTimeout,
    ve = e.cancelTimeout,
    Ae = e.noTimeout,
    Re = e.isPrimaryRenderer,
    ye = e.supportsMutation,
    q = e.supportsPersistence,
    xe = e.supportsHydration,
    he = e.getInstanceFromNode,
    me = e.preparePortalMount,
    fe = e.getCurrentEventPriority,
    Ve = e.detachDeletedInstance,
    ge = e.supportsMicrotasks,
    H = e.scheduleMicrotask,
    F = e.supportsTestSelectors,
    K = e.findFiberRoot,
    ae = e.getBoundingRect,
    se = e.getTextContent,
    de = e.isHiddenSubtree,
    Pe = e.matchAccessibilityRole,
    ke = e.setFocusIfFocusable,
    Be = e.setupIntersectionObserver,
    Ne = e.appendChild,
    ze = e.appendChildToContainer,
    Ee = e.commitTextUpdate,
    Je = e.commitMount,
    qe = e.commitUpdate,
    Qe = e.insertBefore,
    Ge = e.insertInContainerBefore,
    Oe = e.removeChild,
    ne = e.removeChildFromContainer,
    be = e.resetTextContent,
    je = e.hideInstance,
    De = e.hideTextInstance,
    Le = e.unhideInstance,
    ie = e.unhideTextInstance,
    Ue = e.clearContainer,
    Ke = e.cloneInstance,
    ft = e.createContainerChildSet,
    $e = e.appendChildToContainerChildSet,
    it = e.finalizeContainerChildren,
    ot = e.replaceContainerChildren,
    Tt = e.cloneHiddenInstance,
    St = e.cloneHiddenTextInstance,
    ht = e.canHydrateInstance,
    qt = e.canHydrateTextInstance,
    Jt = e.canHydrateSuspenseInstance,
    kt = e.isSuspenseInstancePending,
    gn = e.isSuspenseInstanceFallback,
    zn = e.registerSuspenseInstanceRetry,
    cn = e.getNextHydratableSibling,
    jt = e.getFirstHydratableChild,
    qn = e.getFirstHydratableChildWithinContainer,
    Ei = e.getFirstHydratableChildWithinSuspenseInstance,
    $r = e.hydrateInstance,
    Mo = e.hydrateTextInstance,
    $f = e.hydrateSuspenseInstance,
    J = e.getNextHydratableInstanceAfterSuspenseInstance,
    pe = e.commitHydratedContainer,
    we = e.commitHydratedSuspenseInstance,
    Ce = e.clearSuspenseBoundary,
    Se = e.clearSuspenseBoundaryFromContainer,
    et = e.shouldDeleteUnhydratedTailInstances,
    dt = e.didNotMatchHydratedContainerTextInstance,
    gt = e.didNotMatchHydratedTextInstance,
    He;
  function wt(f) {
    if (He === void 0)
      try {
        throw Error();
      } catch (w) {
        var d = w.stack.trim().match(/\n( *(at )?)/);
        He = (d && d[1]) || "";
      }
    return (
      `
` +
      He +
      f
    );
  }
  var Et = !1;
  function xt(f, d) {
    if (!f || Et) return "";
    Et = !0;
    var w = Error.prepareStackTrace;
    Error.prepareStackTrace = void 0;
    try {
      if (d)
        if (
          ((d = function () {
            throw Error();
          }),
          Object.defineProperty(d.prototype, "props", {
            set: function () {
              throw Error();
            },
          }),
          typeof Reflect == "object" && Reflect.construct)
        ) {
          try {
            Reflect.construct(d, []);
          } catch (Ye) {
            var E = Ye;
          }
          Reflect.construct(f, [], d);
        } else {
          try {
            d.call();
          } catch (Ye) {
            E = Ye;
          }
          f.call(d.prototype);
        }
      else {
        try {
          throw Error();
        } catch (Ye) {
          E = Ye;
        }
        f();
      }
    } catch (Ye) {
      if (Ye && E && typeof Ye.stack == "string") {
        for (
          var R = Ye.stack.split(`
`),
            O = E.stack.split(`
`),
            ee = R.length - 1,
            ce = O.length - 1;
          1 <= ee && 0 <= ce && R[ee] !== O[ce];

        )
          ce--;
        for (; 1 <= ee && 0 <= ce; ee--, ce--)
          if (R[ee] !== O[ce]) {
            if (ee !== 1 || ce !== 1)
              do
                if ((ee--, ce--, 0 > ce || R[ee] !== O[ce])) {
                  var Ie =
                    `
` + R[ee].replace(" at new ", " at ");
                  return (
                    f.displayName &&
                      Ie.includes("<anonymous>") &&
                      (Ie = Ie.replace("<anonymous>", f.displayName)),
                    Ie
                  );
                }
              while (1 <= ee && 0 <= ce);
            break;
          }
      }
    } finally {
      (Et = !1), (Error.prepareStackTrace = w);
    }
    return (f = f ? f.displayName || f.name : "") ? wt(f) : "";
  }
  var sn = Object.prototype.hasOwnProperty,
    Yn = [],
    tn = -1;
  function wn(f) {
    return { current: f };
  }
  function vt(f) {
    0 > tn || ((f.current = Yn[tn]), (Yn[tn] = null), tn--);
  }
  function st(f, d) {
    tn++, (Yn[tn] = f.current), (f.current = d);
  }
  var yr = {},
    Pt = wn(yr),
    fn = wn(!1),
    Mi = yr;
  function ur(f, d) {
    var w = f.type.contextTypes;
    if (!w) return yr;
    var E = f.stateNode;
    if (E && E.__reactInternalMemoizedUnmaskedChildContext === d)
      return E.__reactInternalMemoizedMaskedChildContext;
    var R = {},
      O;
    for (O in w) R[O] = d[O];
    return (
      E &&
        ((f = f.stateNode),
        (f.__reactInternalMemoizedUnmaskedChildContext = d),
        (f.__reactInternalMemoizedMaskedChildContext = R)),
      R
    );
  }
  function In(f) {
    return (f = f.childContextTypes), f != null;
  }
  function an() {
    vt(fn), vt(Pt);
  }
  function ci(f, d, w) {
    if (Pt.current !== yr) throw Error(s(168));
    st(Pt, d), st(fn, w);
  }
  function es(f, d, w) {
    var E = f.stateNode;
    if (((d = d.childContextTypes), typeof E.getChildContext != "function"))
      return w;
    E = E.getChildContext();
    for (var R in E) if (!(R in d)) throw Error(s(108, L(f) || "Unknown", R));
    return o({}, w, E);
  }
  function kn(f) {
    return (
      (f =
        ((f = f.stateNode) && f.__reactInternalMemoizedMergedChildContext) ||
        yr),
      (Mi = Pt.current),
      st(Pt, f),
      st(fn, fn.current),
      !0
    );
  }
  function xr(f, d, w) {
    var E = f.stateNode;
    if (!E) throw Error(s(169));
    w
      ? ((f = es(f, d, Mi)),
        (E.__reactInternalMemoizedMergedChildContext = f),
        vt(fn),
        vt(Pt),
        st(Pt, f))
      : vt(fn),
      st(fn, w);
  }
  var Xr = Math.clz32 ? Math.clz32 : zp,
    Ts = Math.log,
    yl = Math.LN2;
  function zp(f) {
    return (f >>>= 0), f === 0 ? 32 : (31 - ((Ts(f) / yl) | 0)) | 0;
  }
  var As = 64,
    Rs = 4194304;
  function Ps(f) {
    switch (f & -f) {
      case 1:
        return 1;
      case 2:
        return 2;
      case 4:
        return 4;
      case 8:
        return 8;
      case 16:
        return 16;
      case 32:
        return 32;
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return f & 4194240;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return f & 130023424;
      case 134217728:
        return 134217728;
      case 268435456:
        return 268435456;
      case 536870912:
        return 536870912;
      case 1073741824:
        return 1073741824;
      default:
        return f;
    }
  }
  function xl(f, d) {
    var w = f.pendingLanes;
    if (w === 0) return 0;
    var E = 0,
      R = f.suspendedLanes,
      O = f.pingedLanes,
      ee = w & 268435455;
    if (ee !== 0) {
      var ce = ee & ~R;
      ce !== 0 ? (E = Ps(ce)) : ((O &= ee), O !== 0 && (E = Ps(O)));
    } else (ee = w & ~R), ee !== 0 ? (E = Ps(ee)) : O !== 0 && (E = Ps(O));
    if (E === 0) return 0;
    if (
      d !== 0 &&
      d !== E &&
      !(d & R) &&
      ((R = E & -E), (O = d & -d), R >= O || (R === 16 && (O & 4194240) !== 0))
    )
      return d;
    if ((E & 4 && (E |= w & 16), (d = f.entangledLanes), d !== 0))
      for (f = f.entanglements, d &= E; 0 < d; )
        (w = 31 - Xr(d)), (R = 1 << w), (E |= f[w]), (d &= ~R);
    return E;
  }
  function kp(f, d) {
    switch (f) {
      case 1:
      case 2:
      case 4:
        return d + 250;
      case 8:
      case 16:
      case 32:
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return d + 5e3;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return -1;
      case 134217728:
      case 268435456:
      case 536870912:
      case 1073741824:
        return -1;
      default:
        return -1;
    }
  }
  function Xf(f, d) {
    for (
      var w = f.suspendedLanes,
        E = f.pingedLanes,
        R = f.expirationTimes,
        O = f.pendingLanes;
      0 < O;

    ) {
      var ee = 31 - Xr(O),
        ce = 1 << ee,
        Ie = R[ee];
      Ie === -1
        ? (!(ce & w) || ce & E) && (R[ee] = kp(ce, d))
        : Ie <= d && (f.expiredLanes |= ce),
        (O &= ~ce);
    }
  }
  function Ls(f) {
    return (
      (f = f.pendingLanes & -1073741825),
      f !== 0 ? f : f & 1073741824 ? 1073741824 : 0
    );
  }
  function $c(f) {
    for (var d = [], w = 0; 31 > w; w++) d.push(f);
    return d;
  }
  function ts(f, d, w) {
    (f.pendingLanes |= d),
      d !== 536870912 && ((f.suspendedLanes = 0), (f.pingedLanes = 0)),
      (f = f.eventTimes),
      (d = 31 - Xr(d)),
      (f[d] = w);
  }
  function ma(f, d) {
    var w = f.pendingLanes & ~d;
    (f.pendingLanes = d),
      (f.suspendedLanes = 0),
      (f.pingedLanes = 0),
      (f.expiredLanes &= d),
      (f.mutableReadLanes &= d),
      (f.entangledLanes &= d),
      (d = f.entanglements);
    var E = f.eventTimes;
    for (f = f.expirationTimes; 0 < w; ) {
      var R = 31 - Xr(w),
        O = 1 << R;
      (d[R] = 0), (E[R] = -1), (f[R] = -1), (w &= ~O);
    }
  }
  function ns(f, d) {
    var w = (f.entangledLanes |= d);
    for (f = f.entanglements; w; ) {
      var E = 31 - Xr(w),
        R = 1 << E;
      (R & d) | (f[E] & d) && (f[E] |= d), (w &= ~R);
    }
  }
  var zt = 0;
  function qf(f) {
    return (
      (f &= -f), 1 < f ? (4 < f ? (f & 268435455 ? 16 : 536870912) : 4) : 1
    );
  }
  var Is = i.unstable_scheduleCallback,
    Xc = i.unstable_cancelCallback,
    Yf = i.unstable_shouldYield,
    Bp = i.unstable_requestPaint,
    bn = i.unstable_now,
    _l = i.unstable_ImmediatePriority,
    Hp = i.unstable_UserBlockingPriority,
    qr = i.unstable_NormalPriority,
    Kf = i.unstable_IdlePriority,
    Sl = null,
    Ci = null;
  function Zf(f) {
    if (Ci && typeof Ci.onCommitFiberRoot == "function")
      try {
        Ci.onCommitFiberRoot(Sl, f, void 0, (f.current.flags & 128) === 128);
      } catch {}
  }
  function Vp(f, d) {
    return (f === d && (f !== 0 || 1 / f === 1 / d)) || (f !== f && d !== d);
  }
  var Ti = typeof Object.is == "function" ? Object.is : Vp,
    Yr = null,
    rs = !1,
    to = !1;
  function Qf(f) {
    Yr === null ? (Yr = [f]) : Yr.push(f);
  }
  function Jf(f) {
    (rs = !0), Qf(f);
  }
  function ui() {
    if (!to && Yr !== null) {
      to = !0;
      var f = 0,
        d = zt;
      try {
        var w = Yr;
        for (zt = 1; f < w.length; f++) {
          var E = w[f];
          do E = E(!0);
          while (E !== null);
        }
        (Yr = null), (rs = !1);
      } catch (R) {
        throw (Yr !== null && (Yr = Yr.slice(f + 1)), Is(_l, ui), R);
      } finally {
        (zt = d), (to = !1);
      }
    }
    return null;
  }
  var wl = a.ReactCurrentBatchConfig;
  function bl(f, d) {
    if (Ti(f, d)) return !0;
    if (
      typeof f != "object" ||
      f === null ||
      typeof d != "object" ||
      d === null
    )
      return !1;
    var w = Object.keys(f),
      E = Object.keys(d);
    if (w.length !== E.length) return !1;
    for (E = 0; E < w.length; E++) {
      var R = w[E];
      if (!sn.call(d, R) || !Ti(f[R], d[R])) return !1;
    }
    return !0;
  }
  function El(f) {
    switch (f.tag) {
      case 5:
        return wt(f.type);
      case 16:
        return wt("Lazy");
      case 13:
        return wt("Suspense");
      case 19:
        return wt("SuspenseList");
      case 0:
      case 2:
      case 15:
        return (f = xt(f.type, !1)), f;
      case 11:
        return (f = xt(f.type.render, !1)), f;
      case 1:
        return (f = xt(f.type, !0)), f;
      default:
        return "";
    }
  }
  function Kr(f, d) {
    if (f && f.defaultProps) {
      (d = o({}, d)), (f = f.defaultProps);
      for (var w in f) d[w] === void 0 && (d[w] = f[w]);
      return d;
    }
    return d;
  }
  var fr = wn(null),
    qc = null,
    Co = null,
    ga = null;
  function Yc() {
    ga = Co = qc = null;
  }
  function Gp(f, d, w) {
    Re
      ? (st(fr, d._currentValue), (d._currentValue = w))
      : (st(fr, d._currentValue2), (d._currentValue2 = w));
  }
  function dr(f) {
    var d = fr.current;
    vt(fr), Re ? (f._currentValue = d) : (f._currentValue2 = d);
  }
  function Zr(f, d, w) {
    for (; f !== null; ) {
      var E = f.alternate;
      if (
        ((f.childLanes & d) !== d
          ? ((f.childLanes |= d), E !== null && (E.childLanes |= d))
          : E !== null && (E.childLanes & d) !== d && (E.childLanes |= d),
        f === w)
      )
        break;
      f = f.return;
    }
  }
  function Bn(f, d) {
    (qc = f),
      (ga = Co = null),
      (f = f.dependencies),
      f !== null &&
        f.firstContext !== null &&
        (f.lanes & d && (Li = !0), (f.firstContext = null));
  }
  function Hn(f) {
    var d = Re ? f._currentValue : f._currentValue2;
    if (ga !== f)
      if (((f = { context: f, memoizedValue: d, next: null }), Co === null)) {
        if (qc === null) throw Error(s(308));
        (Co = f), (qc.dependencies = { lanes: 0, firstContext: f });
      } else Co = Co.next = f;
    return d;
  }
  var Ai = null,
    va = !1;
  function nx(f) {
    f.updateQueue = {
      baseState: f.memoizedState,
      firstBaseUpdate: null,
      lastBaseUpdate: null,
      shared: { pending: null, interleaved: null, lanes: 0 },
      effects: null,
    };
  }
  function n2(f, d) {
    (f = f.updateQueue),
      d.updateQueue === f &&
        (d.updateQueue = {
          baseState: f.baseState,
          firstBaseUpdate: f.firstBaseUpdate,
          lastBaseUpdate: f.lastBaseUpdate,
          shared: f.shared,
          effects: f.effects,
        });
  }
  function Os(f, d) {
    return {
      eventTime: f,
      lane: d,
      tag: 0,
      payload: null,
      callback: null,
      next: null,
    };
  }
  function ya(f, d) {
    var w = f.updateQueue;
    w !== null &&
      ((w = w.shared),
      Kn !== null && f.mode & 1 && !(Ut & 2)
        ? ((f = w.interleaved),
          f === null
            ? ((d.next = d), Ai === null ? (Ai = [w]) : Ai.push(w))
            : ((d.next = f.next), (f.next = d)),
          (w.interleaved = d))
        : ((f = w.pending),
          f === null ? (d.next = d) : ((d.next = f.next), (f.next = d)),
          (w.pending = d)));
  }
  function jp(f, d, w) {
    if (
      ((d = d.updateQueue), d !== null && ((d = d.shared), (w & 4194240) !== 0))
    ) {
      var E = d.lanes;
      (E &= f.pendingLanes), (w |= E), (d.lanes = w), ns(f, w);
    }
  }
  function r2(f, d) {
    var w = f.updateQueue,
      E = f.alternate;
    if (E !== null && ((E = E.updateQueue), w === E)) {
      var R = null,
        O = null;
      if (((w = w.firstBaseUpdate), w !== null)) {
        do {
          var ee = {
            eventTime: w.eventTime,
            lane: w.lane,
            tag: w.tag,
            payload: w.payload,
            callback: w.callback,
            next: null,
          };
          O === null ? (R = O = ee) : (O = O.next = ee), (w = w.next);
        } while (w !== null);
        O === null ? (R = O = d) : (O = O.next = d);
      } else R = O = d;
      (w = {
        baseState: E.baseState,
        firstBaseUpdate: R,
        lastBaseUpdate: O,
        shared: E.shared,
        effects: E.effects,
      }),
        (f.updateQueue = w);
      return;
    }
    (f = w.lastBaseUpdate),
      f === null ? (w.firstBaseUpdate = d) : (f.next = d),
      (w.lastBaseUpdate = d);
  }
  function Wp(f, d, w, E) {
    var R = f.updateQueue;
    va = !1;
    var O = R.firstBaseUpdate,
      ee = R.lastBaseUpdate,
      ce = R.shared.pending;
    if (ce !== null) {
      R.shared.pending = null;
      var Ie = ce,
        Ye = Ie.next;
      (Ie.next = null), ee === null ? (O = Ye) : (ee.next = Ye), (ee = Ie);
      var ct = f.alternate;
      ct !== null &&
        ((ct = ct.updateQueue),
        (ce = ct.lastBaseUpdate),
        ce !== ee &&
          (ce === null ? (ct.firstBaseUpdate = Ye) : (ce.next = Ye),
          (ct.lastBaseUpdate = Ie)));
    }
    if (O !== null) {
      var At = R.baseState;
      (ee = 0), (ct = Ye = Ie = null), (ce = O);
      do {
        var _t = ce.lane,
          un = ce.eventTime;
        if ((E & _t) === _t) {
          ct !== null &&
            (ct = ct.next =
              {
                eventTime: un,
                lane: 0,
                tag: ce.tag,
                payload: ce.payload,
                callback: ce.callback,
                next: null,
              });
          e: {
            var mt = f,
              Or = ce;
            switch (((_t = d), (un = w), Or.tag)) {
              case 1:
                if (((mt = Or.payload), typeof mt == "function")) {
                  At = mt.call(un, At, _t);
                  break e;
                }
                At = mt;
                break e;
              case 3:
                mt.flags = (mt.flags & -65537) | 128;
              case 0:
                if (
                  ((mt = Or.payload),
                  (_t = typeof mt == "function" ? mt.call(un, At, _t) : mt),
                  _t == null)
                )
                  break e;
                At = o({}, At, _t);
                break e;
              case 2:
                va = !0;
            }
          }
          ce.callback !== null &&
            ce.lane !== 0 &&
            ((f.flags |= 64),
            (_t = R.effects),
            _t === null ? (R.effects = [ce]) : _t.push(ce));
        } else
          (un = {
            eventTime: un,
            lane: _t,
            tag: ce.tag,
            payload: ce.payload,
            callback: ce.callback,
            next: null,
          }),
            ct === null ? ((Ye = ct = un), (Ie = At)) : (ct = ct.next = un),
            (ee |= _t);
        if (((ce = ce.next), ce === null)) {
          if (((ce = R.shared.pending), ce === null)) break;
          (_t = ce),
            (ce = _t.next),
            (_t.next = null),
            (R.lastBaseUpdate = _t),
            (R.shared.pending = null);
        }
      } while (!0);
      if (
        (ct === null && (Ie = At),
        (R.baseState = Ie),
        (R.firstBaseUpdate = Ye),
        (R.lastBaseUpdate = ct),
        (d = R.shared.interleaved),
        d !== null)
      ) {
        R = d;
        do (ee |= R.lane), (R = R.next);
        while (R !== d);
      } else O === null && (R.shared.lanes = 0);
      (iu |= ee), (f.lanes = ee), (f.memoizedState = At);
    }
  }
  function i2(f, d, w) {
    if (((f = d.effects), (d.effects = null), f !== null))
      for (d = 0; d < f.length; d++) {
        var E = f[d],
          R = E.callback;
        if (R !== null) {
          if (((E.callback = null), (E = w), typeof R != "function"))
            throw Error(s(191, R));
          R.call(E);
        }
      }
  }
  var o2 = new r.Component().refs;
  function rx(f, d, w, E) {
    (d = f.memoizedState),
      (w = w(E, d)),
      (w = w == null ? d : o({}, d, w)),
      (f.memoizedState = w),
      f.lanes === 0 && (f.updateQueue.baseState = w);
  }
  var $p = {
    isMounted: function (f) {
      return (f = f._reactInternals) ? A(f) === f : !1;
    },
    enqueueSetState: function (f, d, w) {
      f = f._reactInternals;
      var E = Jr(),
        R = Sa(f),
        O = Os(E, R);
      (O.payload = d),
        w != null && (O.callback = w),
        ya(f, O),
        (d = so(f, R, E)),
        d !== null && jp(d, f, R);
    },
    enqueueReplaceState: function (f, d, w) {
      f = f._reactInternals;
      var E = Jr(),
        R = Sa(f),
        O = Os(E, R);
      (O.tag = 1),
        (O.payload = d),
        w != null && (O.callback = w),
        ya(f, O),
        (d = so(f, R, E)),
        d !== null && jp(d, f, R);
    },
    enqueueForceUpdate: function (f, d) {
      f = f._reactInternals;
      var w = Jr(),
        E = Sa(f),
        R = Os(w, E);
      (R.tag = 2),
        d != null && (R.callback = d),
        ya(f, R),
        (d = so(f, E, w)),
        d !== null && jp(d, f, E);
    },
  };
  function s2(f, d, w, E, R, O, ee) {
    return (
      (f = f.stateNode),
      typeof f.shouldComponentUpdate == "function"
        ? f.shouldComponentUpdate(E, O, ee)
        : d.prototype && d.prototype.isPureReactComponent
        ? !bl(w, E) || !bl(R, O)
        : !0
    );
  }
  function a2(f, d, w) {
    var E = !1,
      R = yr,
      O = d.contextType;
    return (
      typeof O == "object" && O !== null
        ? (O = Hn(O))
        : ((R = In(d) ? Mi : Pt.current),
          (E = d.contextTypes),
          (O = (E = E != null) ? ur(f, R) : yr)),
      (d = new d(w, O)),
      (f.memoizedState =
        d.state !== null && d.state !== void 0 ? d.state : null),
      (d.updater = $p),
      (f.stateNode = d),
      (d._reactInternals = f),
      E &&
        ((f = f.stateNode),
        (f.__reactInternalMemoizedUnmaskedChildContext = R),
        (f.__reactInternalMemoizedMaskedChildContext = O)),
      d
    );
  }
  function l2(f, d, w, E) {
    (f = d.state),
      typeof d.componentWillReceiveProps == "function" &&
        d.componentWillReceiveProps(w, E),
      typeof d.UNSAFE_componentWillReceiveProps == "function" &&
        d.UNSAFE_componentWillReceiveProps(w, E),
      d.state !== f && $p.enqueueReplaceState(d, d.state, null);
  }
  function ix(f, d, w, E) {
    var R = f.stateNode;
    (R.props = w), (R.state = f.memoizedState), (R.refs = o2), nx(f);
    var O = d.contextType;
    typeof O == "object" && O !== null
      ? (R.context = Hn(O))
      : ((O = In(d) ? Mi : Pt.current), (R.context = ur(f, O))),
      (R.state = f.memoizedState),
      (O = d.getDerivedStateFromProps),
      typeof O == "function" && (rx(f, d, O, w), (R.state = f.memoizedState)),
      typeof d.getDerivedStateFromProps == "function" ||
        typeof R.getSnapshotBeforeUpdate == "function" ||
        (typeof R.UNSAFE_componentWillMount != "function" &&
          typeof R.componentWillMount != "function") ||
        ((d = R.state),
        typeof R.componentWillMount == "function" && R.componentWillMount(),
        typeof R.UNSAFE_componentWillMount == "function" &&
          R.UNSAFE_componentWillMount(),
        d !== R.state && $p.enqueueReplaceState(R, R.state, null),
        Wp(f, w, R, E),
        (R.state = f.memoizedState)),
      typeof R.componentDidMount == "function" && (f.flags |= 4194308);
  }
  var Kc = [],
    Zc = 0,
    Xp = null,
    qp = 0,
    no = [],
    ro = 0,
    Ml = null,
    Fs = 1,
    Ns = "";
  function Cl(f, d) {
    (Kc[Zc++] = qp), (Kc[Zc++] = Xp), (Xp = f), (qp = d);
  }
  function c2(f, d, w) {
    (no[ro++] = Fs), (no[ro++] = Ns), (no[ro++] = Ml), (Ml = f);
    var E = Fs;
    f = Ns;
    var R = 32 - Xr(E) - 1;
    (E &= ~(1 << R)), (w += 1);
    var O = 32 - Xr(d) + R;
    if (30 < O) {
      var ee = R - (R % 5);
      (O = (E & ((1 << ee) - 1)).toString(32)),
        (E >>= ee),
        (R -= ee),
        (Fs = (1 << (32 - Xr(d) + R)) | (w << R) | E),
        (Ns = O + f);
    } else (Fs = (1 << O) | (w << R) | E), (Ns = f);
  }
  function ox(f) {
    f.return !== null && (Cl(f, 1), c2(f, 1, 0));
  }
  function sx(f) {
    for (; f === Xp; )
      (Xp = Kc[--Zc]), (Kc[Zc] = null), (qp = Kc[--Zc]), (Kc[Zc] = null);
    for (; f === Ml; )
      (Ml = no[--ro]),
        (no[ro] = null),
        (Ns = no[--ro]),
        (no[ro] = null),
        (Fs = no[--ro]),
        (no[ro] = null);
  }
  var Ri = null,
    Pi = null,
    xn = !1,
    ed = !1,
    To = null;
  function u2(f, d) {
    var w = ao(5, null, null, 0);
    (w.elementType = "DELETED"),
      (w.stateNode = d),
      (w.return = f),
      (d = f.deletions),
      d === null ? ((f.deletions = [w]), (f.flags |= 16)) : d.push(w);
  }
  function f2(f, d) {
    switch (f.tag) {
      case 5:
        return (
          (d = ht(d, f.type, f.pendingProps)),
          d !== null ? ((f.stateNode = d), (Ri = f), (Pi = jt(d)), !0) : !1
        );
      case 6:
        return (
          (d = qt(d, f.pendingProps)),
          d !== null ? ((f.stateNode = d), (Ri = f), (Pi = null), !0) : !1
        );
      case 13:
        if (((d = Jt(d)), d !== null)) {
          var w = Ml !== null ? { id: Fs, overflow: Ns } : null;
          return (
            (f.memoizedState = {
              dehydrated: d,
              treeContext: w,
              retryLane: 1073741824,
            }),
            (w = ao(18, null, null, 0)),
            (w.stateNode = d),
            (w.return = f),
            (f.child = w),
            (Ri = f),
            (Pi = null),
            !0
          );
        }
        return !1;
      default:
        return !1;
    }
  }
  function ax(f) {
    return (f.mode & 1) !== 0 && (f.flags & 128) === 0;
  }
  function lx(f) {
    if (xn) {
      var d = Pi;
      if (d) {
        var w = d;
        if (!f2(f, d)) {
          if (ax(f)) throw Error(s(418));
          d = cn(w);
          var E = Ri;
          d && f2(f, d)
            ? u2(E, w)
            : ((f.flags = (f.flags & -4097) | 2), (xn = !1), (Ri = f));
        }
      } else {
        if (ax(f)) throw Error(s(418));
        (f.flags = (f.flags & -4097) | 2), (xn = !1), (Ri = f);
      }
    }
  }
  function d2(f) {
    for (
      f = f.return;
      f !== null && f.tag !== 5 && f.tag !== 3 && f.tag !== 13;

    )
      f = f.return;
    Ri = f;
  }
  function td(f) {
    if (!xe || f !== Ri) return !1;
    if (!xn) return d2(f), (xn = !0), !1;
    if (
      f.tag !== 3 &&
      (f.tag !== 5 || (et(f.type) && !re(f.type, f.memoizedProps)))
    ) {
      var d = Pi;
      if (d) {
        if (ax(f)) {
          for (f = Pi; f; ) f = cn(f);
          throw Error(s(418));
        }
        for (; d; ) u2(f, d), (d = cn(d));
      }
    }
    if ((d2(f), f.tag === 13)) {
      if (!xe) throw Error(s(316));
      if (((f = f.memoizedState), (f = f !== null ? f.dehydrated : null), !f))
        throw Error(s(317));
      Pi = J(f);
    } else Pi = Ri ? cn(f.stateNode) : null;
    return !0;
  }
  function Qc() {
    xe && ((Pi = Ri = null), (ed = xn = !1));
  }
  function cx(f) {
    To === null ? (To = [f]) : To.push(f);
  }
  function nd(f, d, w) {
    if (
      ((f = w.ref),
      f !== null && typeof f != "function" && typeof f != "object")
    ) {
      if (w._owner) {
        if (((w = w._owner), w)) {
          if (w.tag !== 1) throw Error(s(309));
          var E = w.stateNode;
        }
        if (!E) throw Error(s(147, f));
        var R = E,
          O = "" + f;
        return d !== null &&
          d.ref !== null &&
          typeof d.ref == "function" &&
          d.ref._stringRef === O
          ? d.ref
          : ((d = function (ee) {
              var ce = R.refs;
              ce === o2 && (ce = R.refs = {}),
                ee === null ? delete ce[O] : (ce[O] = ee);
            }),
            (d._stringRef = O),
            d);
      }
      if (typeof f != "string") throw Error(s(284));
      if (!w._owner) throw Error(s(290, f));
    }
    return f;
  }
  function Yp(f, d) {
    throw (
      ((f = Object.prototype.toString.call(d)),
      Error(
        s(
          31,
          f === "[object Object]"
            ? "object with keys {" + Object.keys(d).join(", ") + "}"
            : f
        )
      ))
    );
  }
  function h2(f) {
    var d = f._init;
    return d(f._payload);
  }
  function p2(f) {
    function d(_e, ue) {
      if (f) {
        var Te = _e.deletions;
        Te === null ? ((_e.deletions = [ue]), (_e.flags |= 16)) : Te.push(ue);
      }
    }
    function w(_e, ue) {
      if (!f) return null;
      for (; ue !== null; ) d(_e, ue), (ue = ue.sibling);
      return null;
    }
    function E(_e, ue) {
      for (_e = new Map(); ue !== null; )
        ue.key !== null ? _e.set(ue.key, ue) : _e.set(ue.index, ue),
          (ue = ue.sibling);
      return _e;
    }
    function R(_e, ue) {
      return (_e = ba(_e, ue)), (_e.index = 0), (_e.sibling = null), _e;
    }
    function O(_e, ue, Te) {
      return (
        (_e.index = Te),
        f
          ? ((Te = _e.alternate),
            Te !== null
              ? ((Te = Te.index), Te < ue ? ((_e.flags |= 2), ue) : Te)
              : ((_e.flags |= 2), ue))
          : ((_e.flags |= 1048576), ue)
      );
    }
    function ee(_e) {
      return f && _e.alternate === null && (_e.flags |= 2), _e;
    }
    function ce(_e, ue, Te, rt) {
      return ue === null || ue.tag !== 6
        ? ((ue = $x(Te, _e.mode, rt)), (ue.return = _e), ue)
        : ((ue = R(ue, Te)), (ue.return = _e), ue);
    }
    function Ie(_e, ue, Te, rt) {
      var pt = Te.type;
      return pt === u
        ? ct(_e, ue, Te.props.children, rt, Te.key)
        : ue !== null &&
          (ue.elementType === pt ||
            (typeof pt == "object" &&
              pt !== null &&
              pt.$$typeof === _ &&
              h2(pt) === ue.type))
        ? ((rt = R(ue, Te.props)),
          (rt.ref = nd(_e, ue, Te)),
          (rt.return = _e),
          rt)
        : ((rt = Cm(Te.type, Te.key, Te.props, null, _e.mode, rt)),
          (rt.ref = nd(_e, ue, Te)),
          (rt.return = _e),
          rt);
    }
    function Ye(_e, ue, Te, rt) {
      return ue === null ||
        ue.tag !== 4 ||
        ue.stateNode.containerInfo !== Te.containerInfo ||
        ue.stateNode.implementation !== Te.implementation
        ? ((ue = Xx(Te, _e.mode, rt)), (ue.return = _e), ue)
        : ((ue = R(ue, Te.children || [])), (ue.return = _e), ue);
    }
    function ct(_e, ue, Te, rt, pt) {
      return ue === null || ue.tag !== 7
        ? ((ue = Ol(Te, _e.mode, rt, pt)), (ue.return = _e), ue)
        : ((ue = R(ue, Te)), (ue.return = _e), ue);
    }
    function At(_e, ue, Te) {
      if ((typeof ue == "string" && ue !== "") || typeof ue == "number")
        return (ue = $x("" + ue, _e.mode, Te)), (ue.return = _e), ue;
      if (typeof ue == "object" && ue !== null) {
        switch (ue.$$typeof) {
          case l:
            return (
              (Te = Cm(ue.type, ue.key, ue.props, null, _e.mode, Te)),
              (Te.ref = nd(_e, null, ue)),
              (Te.return = _e),
              Te
            );
          case c:
            return (ue = Xx(ue, _e.mode, Te)), (ue.return = _e), ue;
          case _:
            var rt = ue._init;
            return At(_e, rt(ue._payload), Te);
        }
        if (X(ue) || M(ue))
          return (ue = Ol(ue, _e.mode, Te, null)), (ue.return = _e), ue;
        Yp(_e, ue);
      }
      return null;
    }
    function _t(_e, ue, Te, rt) {
      var pt = ue !== null ? ue.key : null;
      if ((typeof Te == "string" && Te !== "") || typeof Te == "number")
        return pt !== null ? null : ce(_e, ue, "" + Te, rt);
      if (typeof Te == "object" && Te !== null) {
        switch (Te.$$typeof) {
          case l:
            return Te.key === pt ? Ie(_e, ue, Te, rt) : null;
          case c:
            return Te.key === pt ? Ye(_e, ue, Te, rt) : null;
          case _:
            return (pt = Te._init), _t(_e, ue, pt(Te._payload), rt);
        }
        if (X(Te) || M(Te))
          return pt !== null ? null : ct(_e, ue, Te, rt, null);
        Yp(_e, Te);
      }
      return null;
    }
    function un(_e, ue, Te, rt, pt) {
      if ((typeof rt == "string" && rt !== "") || typeof rt == "number")
        return (_e = _e.get(Te) || null), ce(ue, _e, "" + rt, pt);
      if (typeof rt == "object" && rt !== null) {
        switch (rt.$$typeof) {
          case l:
            return (
              (_e = _e.get(rt.key === null ? Te : rt.key) || null),
              Ie(ue, _e, rt, pt)
            );
          case c:
            return (
              (_e = _e.get(rt.key === null ? Te : rt.key) || null),
              Ye(ue, _e, rt, pt)
            );
          case _:
            var Dt = rt._init;
            return un(_e, ue, Te, Dt(rt._payload), pt);
        }
        if (X(rt) || M(rt))
          return (_e = _e.get(Te) || null), ct(ue, _e, rt, pt, null);
        Yp(ue, rt);
      }
      return null;
    }
    function mt(_e, ue, Te, rt) {
      for (
        var pt = null, Dt = null, Rt = ue, Yt = (ue = 0), pr = null;
        Rt !== null && Yt < Te.length;
        Yt++
      ) {
        Rt.index > Yt ? ((pr = Rt), (Rt = null)) : (pr = Rt.sibling);
        var Kt = _t(_e, Rt, Te[Yt], rt);
        if (Kt === null) {
          Rt === null && (Rt = pr);
          break;
        }
        f && Rt && Kt.alternate === null && d(_e, Rt),
          (ue = O(Kt, ue, Yt)),
          Dt === null ? (pt = Kt) : (Dt.sibling = Kt),
          (Dt = Kt),
          (Rt = pr);
      }
      if (Yt === Te.length) return w(_e, Rt), xn && Cl(_e, Yt), pt;
      if (Rt === null) {
        for (; Yt < Te.length; Yt++)
          (Rt = At(_e, Te[Yt], rt)),
            Rt !== null &&
              ((ue = O(Rt, ue, Yt)),
              Dt === null ? (pt = Rt) : (Dt.sibling = Rt),
              (Dt = Rt));
        return xn && Cl(_e, Yt), pt;
      }
      for (Rt = E(_e, Rt); Yt < Te.length; Yt++)
        (pr = un(Rt, _e, Yt, Te[Yt], rt)),
          pr !== null &&
            (f &&
              pr.alternate !== null &&
              Rt.delete(pr.key === null ? Yt : pr.key),
            (ue = O(pr, ue, Yt)),
            Dt === null ? (pt = pr) : (Dt.sibling = pr),
            (Dt = pr));
      return (
        f &&
          Rt.forEach(function (Ea) {
            return d(_e, Ea);
          }),
        xn && Cl(_e, Yt),
        pt
      );
    }
    function Or(_e, ue, Te, rt) {
      var pt = M(Te);
      if (typeof pt != "function") throw Error(s(150));
      if (((Te = pt.call(Te)), Te == null)) throw Error(s(151));
      for (
        var Dt = (pt = null), Rt = ue, Yt = (ue = 0), pr = null, Kt = Te.next();
        Rt !== null && !Kt.done;
        Yt++, Kt = Te.next()
      ) {
        Rt.index > Yt ? ((pr = Rt), (Rt = null)) : (pr = Rt.sibling);
        var Ea = _t(_e, Rt, Kt.value, rt);
        if (Ea === null) {
          Rt === null && (Rt = pr);
          break;
        }
        f && Rt && Ea.alternate === null && d(_e, Rt),
          (ue = O(Ea, ue, Yt)),
          Dt === null ? (pt = Ea) : (Dt.sibling = Ea),
          (Dt = Ea),
          (Rt = pr);
      }
      if (Kt.done) return w(_e, Rt), xn && Cl(_e, Yt), pt;
      if (Rt === null) {
        for (; !Kt.done; Yt++, Kt = Te.next())
          (Kt = At(_e, Kt.value, rt)),
            Kt !== null &&
              ((ue = O(Kt, ue, Yt)),
              Dt === null ? (pt = Kt) : (Dt.sibling = Kt),
              (Dt = Kt));
        return xn && Cl(_e, Yt), pt;
      }
      for (Rt = E(_e, Rt); !Kt.done; Yt++, Kt = Te.next())
        (Kt = un(Rt, _e, Yt, Kt.value, rt)),
          Kt !== null &&
            (f &&
              Kt.alternate !== null &&
              Rt.delete(Kt.key === null ? Yt : Kt.key),
            (ue = O(Kt, ue, Yt)),
            Dt === null ? (pt = Kt) : (Dt.sibling = Kt),
            (Dt = Kt));
      return (
        f &&
          Rt.forEach(function (mz) {
            return d(_e, mz);
          }),
        xn && Cl(_e, Yt),
        pt
      );
    }
    function lo(_e, ue, Te, rt) {
      if (
        (typeof Te == "object" &&
          Te !== null &&
          Te.type === u &&
          Te.key === null &&
          (Te = Te.props.children),
        typeof Te == "object" && Te !== null)
      ) {
        switch (Te.$$typeof) {
          case l:
            e: {
              for (var pt = Te.key, Dt = ue; Dt !== null; ) {
                if (Dt.key === pt) {
                  if (((pt = Te.type), pt === u)) {
                    if (Dt.tag === 7) {
                      w(_e, Dt.sibling),
                        (ue = R(Dt, Te.props.children)),
                        (ue.return = _e),
                        (_e = ue);
                      break e;
                    }
                  } else if (
                    Dt.elementType === pt ||
                    (typeof pt == "object" &&
                      pt !== null &&
                      pt.$$typeof === _ &&
                      h2(pt) === Dt.type)
                  ) {
                    w(_e, Dt.sibling),
                      (ue = R(Dt, Te.props)),
                      (ue.ref = nd(_e, Dt, Te)),
                      (ue.return = _e),
                      (_e = ue);
                    break e;
                  }
                  w(_e, Dt);
                  break;
                } else d(_e, Dt);
                Dt = Dt.sibling;
              }
              Te.type === u
                ? ((ue = Ol(Te.props.children, _e.mode, rt, Te.key)),
                  (ue.return = _e),
                  (_e = ue))
                : ((rt = Cm(Te.type, Te.key, Te.props, null, _e.mode, rt)),
                  (rt.ref = nd(_e, ue, Te)),
                  (rt.return = _e),
                  (_e = rt));
            }
            return ee(_e);
          case c:
            e: {
              for (Dt = Te.key; ue !== null; ) {
                if (ue.key === Dt)
                  if (
                    ue.tag === 4 &&
                    ue.stateNode.containerInfo === Te.containerInfo &&
                    ue.stateNode.implementation === Te.implementation
                  ) {
                    w(_e, ue.sibling),
                      (ue = R(ue, Te.children || [])),
                      (ue.return = _e),
                      (_e = ue);
                    break e;
                  } else {
                    w(_e, ue);
                    break;
                  }
                else d(_e, ue);
                ue = ue.sibling;
              }
              (ue = Xx(Te, _e.mode, rt)), (ue.return = _e), (_e = ue);
            }
            return ee(_e);
          case _:
            return (Dt = Te._init), lo(_e, ue, Dt(Te._payload), rt);
        }
        if (X(Te)) return mt(_e, ue, Te, rt);
        if (M(Te)) return Or(_e, ue, Te, rt);
        Yp(_e, Te);
      }
      return (typeof Te == "string" && Te !== "") || typeof Te == "number"
        ? ((Te = "" + Te),
          ue !== null && ue.tag === 6
            ? (w(_e, ue.sibling), (ue = R(ue, Te)), (ue.return = _e), (_e = ue))
            : (w(_e, ue),
              (ue = $x(Te, _e.mode, rt)),
              (ue.return = _e),
              (_e = ue)),
          ee(_e))
        : w(_e, ue);
    }
    return lo;
  }
  var Jc = p2(!0),
    m2 = p2(!1),
    rd = {},
    io = wn(rd),
    id = wn(rd),
    eu = wn(rd);
  function is(f) {
    if (f === rd) throw Error(s(174));
    return f;
  }
  function ux(f, d) {
    st(eu, d), st(id, f), st(io, rd), (f = Y(d)), vt(io), st(io, f);
  }
  function tu() {
    vt(io), vt(id), vt(eu);
  }
  function g2(f) {
    var d = is(eu.current),
      w = is(io.current);
    (d = N(w, f.type, d)), w !== d && (st(id, f), st(io, d));
  }
  function fx(f) {
    id.current === f && (vt(io), vt(id));
  }
  var En = wn(0);
  function Kp(f) {
    for (var d = f; d !== null; ) {
      if (d.tag === 13) {
        var w = d.memoizedState;
        if (w !== null && ((w = w.dehydrated), w === null || kt(w) || gn(w)))
          return d;
      } else if (d.tag === 19 && d.memoizedProps.revealOrder !== void 0) {
        if (d.flags & 128) return d;
      } else if (d.child !== null) {
        (d.child.return = d), (d = d.child);
        continue;
      }
      if (d === f) break;
      for (; d.sibling === null; ) {
        if (d.return === null || d.return === f) return null;
        d = d.return;
      }
      (d.sibling.return = d.return), (d = d.sibling);
    }
    return null;
  }
  var dx = [];
  function hx() {
    for (var f = 0; f < dx.length; f++) {
      var d = dx[f];
      Re
        ? (d._workInProgressVersionPrimary = null)
        : (d._workInProgressVersionSecondary = null);
    }
    dx.length = 0;
  }
  var Zp = a.ReactCurrentDispatcher,
    oo = a.ReactCurrentBatchConfig,
    nu = 0,
    On = null,
    Pr = null,
    hr = null,
    Qp = !1,
    od = !1,
    sd = 0,
    BU = 0;
  function Lr() {
    throw Error(s(321));
  }
  function px(f, d) {
    if (d === null) return !1;
    for (var w = 0; w < d.length && w < f.length; w++)
      if (!Ti(f[w], d[w])) return !1;
    return !0;
  }
  function mx(f, d, w, E, R, O) {
    if (
      ((nu = O),
      (On = d),
      (d.memoizedState = null),
      (d.updateQueue = null),
      (d.lanes = 0),
      (Zp.current = f === null || f.memoizedState === null ? jU : WU),
      (f = w(E, R)),
      od)
    ) {
      O = 0;
      do {
        if (((od = !1), (sd = 0), 25 <= O)) throw Error(s(301));
        (O += 1),
          (hr = Pr = null),
          (d.updateQueue = null),
          (Zp.current = $U),
          (f = w(E, R));
      } while (od);
    }
    if (
      ((Zp.current = rm),
      (d = Pr !== null && Pr.next !== null),
      (nu = 0),
      (hr = Pr = On = null),
      (Qp = !1),
      d)
    )
      throw Error(s(300));
    return f;
  }
  function gx() {
    var f = sd !== 0;
    return (sd = 0), f;
  }
  function Ds() {
    var f = {
      memoizedState: null,
      baseState: null,
      baseQueue: null,
      queue: null,
      next: null,
    };
    return hr === null ? (On.memoizedState = hr = f) : (hr = hr.next = f), hr;
  }
  function os() {
    if (Pr === null) {
      var f = On.alternate;
      f = f !== null ? f.memoizedState : null;
    } else f = Pr.next;
    var d = hr === null ? On.memoizedState : hr.next;
    if (d !== null) (hr = d), (Pr = f);
    else {
      if (f === null) throw Error(s(310));
      (Pr = f),
        (f = {
          memoizedState: Pr.memoizedState,
          baseState: Pr.baseState,
          baseQueue: Pr.baseQueue,
          queue: Pr.queue,
          next: null,
        }),
        hr === null ? (On.memoizedState = hr = f) : (hr = hr.next = f);
    }
    return hr;
  }
  function Tl(f, d) {
    return typeof d == "function" ? d(f) : d;
  }
  function Jp(f) {
    var d = os(),
      w = d.queue;
    if (w === null) throw Error(s(311));
    w.lastRenderedReducer = f;
    var E = Pr,
      R = E.baseQueue,
      O = w.pending;
    if (O !== null) {
      if (R !== null) {
        var ee = R.next;
        (R.next = O.next), (O.next = ee);
      }
      (E.baseQueue = R = O), (w.pending = null);
    }
    if (R !== null) {
      (O = R.next), (E = E.baseState);
      var ce = (ee = null),
        Ie = null,
        Ye = O;
      do {
        var ct = Ye.lane;
        if ((nu & ct) === ct)
          Ie !== null &&
            (Ie = Ie.next =
              {
                lane: 0,
                action: Ye.action,
                hasEagerState: Ye.hasEagerState,
                eagerState: Ye.eagerState,
                next: null,
              }),
            (E = Ye.hasEagerState ? Ye.eagerState : f(E, Ye.action));
        else {
          var At = {
            lane: ct,
            action: Ye.action,
            hasEagerState: Ye.hasEagerState,
            eagerState: Ye.eagerState,
            next: null,
          };
          Ie === null ? ((ce = Ie = At), (ee = E)) : (Ie = Ie.next = At),
            (On.lanes |= ct),
            (iu |= ct);
        }
        Ye = Ye.next;
      } while (Ye !== null && Ye !== O);
      Ie === null ? (ee = E) : (Ie.next = ce),
        Ti(E, d.memoizedState) || (Li = !0),
        (d.memoizedState = E),
        (d.baseState = ee),
        (d.baseQueue = Ie),
        (w.lastRenderedState = E);
    }
    if (((f = w.interleaved), f !== null)) {
      R = f;
      do (O = R.lane), (On.lanes |= O), (iu |= O), (R = R.next);
      while (R !== f);
    } else R === null && (w.lanes = 0);
    return [d.memoizedState, w.dispatch];
  }
  function em(f) {
    var d = os(),
      w = d.queue;
    if (w === null) throw Error(s(311));
    w.lastRenderedReducer = f;
    var E = w.dispatch,
      R = w.pending,
      O = d.memoizedState;
    if (R !== null) {
      w.pending = null;
      var ee = (R = R.next);
      do (O = f(O, ee.action)), (ee = ee.next);
      while (ee !== R);
      Ti(O, d.memoizedState) || (Li = !0),
        (d.memoizedState = O),
        d.baseQueue === null && (d.baseState = O),
        (w.lastRenderedState = O);
    }
    return [O, E];
  }
  function v2() {}
  function y2(f, d) {
    var w = On,
      E = os(),
      R = d(),
      O = !Ti(E.memoizedState, R);
    if (
      (O && ((E.memoizedState = R), (Li = !0)),
      (E = E.queue),
      ld(S2.bind(null, w, E, f), [f]),
      E.getSnapshot !== d || O || (hr !== null && hr.memoizedState.tag & 1))
    ) {
      if (
        ((w.flags |= 2048),
        ad(9, _2.bind(null, w, E, R, d), void 0, null),
        Kn === null)
      )
        throw Error(s(349));
      nu & 30 || x2(w, d, R);
    }
    return R;
  }
  function x2(f, d, w) {
    (f.flags |= 16384),
      (f = { getSnapshot: d, value: w }),
      (d = On.updateQueue),
      d === null
        ? ((d = { lastEffect: null, stores: null }),
          (On.updateQueue = d),
          (d.stores = [f]))
        : ((w = d.stores), w === null ? (d.stores = [f]) : w.push(f));
  }
  function _2(f, d, w, E) {
    (d.value = w), (d.getSnapshot = E), w2(d) && so(f, 1, -1);
  }
  function S2(f, d, w) {
    return w(function () {
      w2(d) && so(f, 1, -1);
    });
  }
  function w2(f) {
    var d = f.getSnapshot;
    f = f.value;
    try {
      var w = d();
      return !Ti(f, w);
    } catch {
      return !0;
    }
  }
  function vx(f) {
    var d = Ds();
    return (
      typeof f == "function" && (f = f()),
      (d.memoizedState = d.baseState = f),
      (f = {
        pending: null,
        interleaved: null,
        lanes: 0,
        dispatch: null,
        lastRenderedReducer: Tl,
        lastRenderedState: f,
      }),
      (d.queue = f),
      (f = f.dispatch = GU.bind(null, On, f)),
      [d.memoizedState, f]
    );
  }
  function ad(f, d, w, E) {
    return (
      (f = { tag: f, create: d, destroy: w, deps: E, next: null }),
      (d = On.updateQueue),
      d === null
        ? ((d = { lastEffect: null, stores: null }),
          (On.updateQueue = d),
          (d.lastEffect = f.next = f))
        : ((w = d.lastEffect),
          w === null
            ? (d.lastEffect = f.next = f)
            : ((E = w.next), (w.next = f), (f.next = E), (d.lastEffect = f))),
      f
    );
  }
  function b2() {
    return os().memoizedState;
  }
  function tm(f, d, w, E) {
    var R = Ds();
    (On.flags |= f),
      (R.memoizedState = ad(1 | d, w, void 0, E === void 0 ? null : E));
  }
  function nm(f, d, w, E) {
    var R = os();
    E = E === void 0 ? null : E;
    var O = void 0;
    if (Pr !== null) {
      var ee = Pr.memoizedState;
      if (((O = ee.destroy), E !== null && px(E, ee.deps))) {
        R.memoizedState = ad(d, w, O, E);
        return;
      }
    }
    (On.flags |= f), (R.memoizedState = ad(1 | d, w, O, E));
  }
  function yx(f, d) {
    return tm(8390656, 8, f, d);
  }
  function ld(f, d) {
    return nm(2048, 8, f, d);
  }
  function E2(f, d) {
    return nm(4, 2, f, d);
  }
  function M2(f, d) {
    return nm(4, 4, f, d);
  }
  function C2(f, d) {
    if (typeof d == "function")
      return (
        (f = f()),
        d(f),
        function () {
          d(null);
        }
      );
    if (d != null)
      return (
        (f = f()),
        (d.current = f),
        function () {
          d.current = null;
        }
      );
  }
  function T2(f, d, w) {
    return (
      (w = w != null ? w.concat([f]) : null), nm(4, 4, C2.bind(null, d, f), w)
    );
  }
  function xx() {}
  function A2(f, d) {
    var w = os();
    d = d === void 0 ? null : d;
    var E = w.memoizedState;
    return E !== null && d !== null && px(d, E[1])
      ? E[0]
      : ((w.memoizedState = [f, d]), f);
  }
  function R2(f, d) {
    var w = os();
    d = d === void 0 ? null : d;
    var E = w.memoizedState;
    return E !== null && d !== null && px(d, E[1])
      ? E[0]
      : ((f = f()), (w.memoizedState = [f, d]), f);
  }
  function HU(f, d) {
    var w = zt;
    (zt = w !== 0 && 4 > w ? w : 4), f(!0);
    var E = oo.transition;
    oo.transition = {};
    try {
      f(!1), d();
    } finally {
      (zt = w), (oo.transition = E);
    }
  }
  function P2() {
    return os().memoizedState;
  }
  function VU(f, d, w) {
    var E = Sa(f);
    (w = {
      lane: E,
      action: w,
      hasEagerState: !1,
      eagerState: null,
      next: null,
    }),
      L2(f)
        ? I2(d, w)
        : (O2(f, d, w),
          (w = Jr()),
          (f = so(f, E, w)),
          f !== null && F2(f, d, E));
  }
  function GU(f, d, w) {
    var E = Sa(f),
      R = {
        lane: E,
        action: w,
        hasEagerState: !1,
        eagerState: null,
        next: null,
      };
    if (L2(f)) I2(d, R);
    else {
      O2(f, d, R);
      var O = f.alternate;
      if (
        f.lanes === 0 &&
        (O === null || O.lanes === 0) &&
        ((O = d.lastRenderedReducer), O !== null)
      )
        try {
          var ee = d.lastRenderedState,
            ce = O(ee, w);
          if (((R.hasEagerState = !0), (R.eagerState = ce), Ti(ce, ee))) return;
        } catch {
        } finally {
        }
      (w = Jr()), (f = so(f, E, w)), f !== null && F2(f, d, E);
    }
  }
  function L2(f) {
    var d = f.alternate;
    return f === On || (d !== null && d === On);
  }
  function I2(f, d) {
    od = Qp = !0;
    var w = f.pending;
    w === null ? (d.next = d) : ((d.next = w.next), (w.next = d)),
      (f.pending = d);
  }
  function O2(f, d, w) {
    Kn !== null && f.mode & 1 && !(Ut & 2)
      ? ((f = d.interleaved),
        f === null
          ? ((w.next = w), Ai === null ? (Ai = [d]) : Ai.push(d))
          : ((w.next = f.next), (f.next = w)),
        (d.interleaved = w))
      : ((f = d.pending),
        f === null ? (w.next = w) : ((w.next = f.next), (f.next = w)),
        (d.pending = w));
  }
  function F2(f, d, w) {
    if (w & 4194240) {
      var E = d.lanes;
      (E &= f.pendingLanes), (w |= E), (d.lanes = w), ns(f, w);
    }
  }
  var rm = {
      readContext: Hn,
      useCallback: Lr,
      useContext: Lr,
      useEffect: Lr,
      useImperativeHandle: Lr,
      useInsertionEffect: Lr,
      useLayoutEffect: Lr,
      useMemo: Lr,
      useReducer: Lr,
      useRef: Lr,
      useState: Lr,
      useDebugValue: Lr,
      useDeferredValue: Lr,
      useTransition: Lr,
      useMutableSource: Lr,
      useSyncExternalStore: Lr,
      useId: Lr,
      unstable_isNewReconciler: !1,
    },
    jU = {
      readContext: Hn,
      useCallback: function (f, d) {
        return (Ds().memoizedState = [f, d === void 0 ? null : d]), f;
      },
      useContext: Hn,
      useEffect: yx,
      useImperativeHandle: function (f, d, w) {
        return (
          (w = w != null ? w.concat([f]) : null),
          tm(4194308, 4, C2.bind(null, d, f), w)
        );
      },
      useLayoutEffect: function (f, d) {
        return tm(4194308, 4, f, d);
      },
      useInsertionEffect: function (f, d) {
        return tm(4, 2, f, d);
      },
      useMemo: function (f, d) {
        var w = Ds();
        return (
          (d = d === void 0 ? null : d),
          (f = f()),
          (w.memoizedState = [f, d]),
          f
        );
      },
      useReducer: function (f, d, w) {
        var E = Ds();
        return (
          (d = w !== void 0 ? w(d) : d),
          (E.memoizedState = E.baseState = d),
          (f = {
            pending: null,
            interleaved: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: f,
            lastRenderedState: d,
          }),
          (E.queue = f),
          (f = f.dispatch = VU.bind(null, On, f)),
          [E.memoizedState, f]
        );
      },
      useRef: function (f) {
        var d = Ds();
        return (f = { current: f }), (d.memoizedState = f);
      },
      useState: vx,
      useDebugValue: xx,
      useDeferredValue: function (f) {
        var d = vx(f),
          w = d[0],
          E = d[1];
        return (
          yx(
            function () {
              var R = oo.transition;
              oo.transition = {};
              try {
                E(f);
              } finally {
                oo.transition = R;
              }
            },
            [f]
          ),
          w
        );
      },
      useTransition: function () {
        var f = vx(!1),
          d = f[0];
        return (f = HU.bind(null, f[1])), (Ds().memoizedState = f), [d, f];
      },
      useMutableSource: function () {},
      useSyncExternalStore: function (f, d, w) {
        var E = On,
          R = Ds();
        if (xn) {
          if (w === void 0) throw Error(s(407));
          w = w();
        } else {
          if (((w = d()), Kn === null)) throw Error(s(349));
          nu & 30 || x2(E, d, w);
        }
        R.memoizedState = w;
        var O = { value: w, getSnapshot: d };
        return (
          (R.queue = O),
          yx(S2.bind(null, E, O, f), [f]),
          (E.flags |= 2048),
          ad(9, _2.bind(null, E, O, w, d), void 0, null),
          w
        );
      },
      useId: function () {
        var f = Ds(),
          d = Kn.identifierPrefix;
        if (xn) {
          var w = Ns,
            E = Fs;
          (w = (E & ~(1 << (32 - Xr(E) - 1))).toString(32) + w),
            (d = ":" + d + "R" + w),
            (w = sd++),
            0 < w && (d += "H" + w.toString(32)),
            (d += ":");
        } else (w = BU++), (d = ":" + d + "r" + w.toString(32) + ":");
        return (f.memoizedState = d);
      },
      unstable_isNewReconciler: !1,
    },
    WU = {
      readContext: Hn,
      useCallback: A2,
      useContext: Hn,
      useEffect: ld,
      useImperativeHandle: T2,
      useInsertionEffect: E2,
      useLayoutEffect: M2,
      useMemo: R2,
      useReducer: Jp,
      useRef: b2,
      useState: function () {
        return Jp(Tl);
      },
      useDebugValue: xx,
      useDeferredValue: function (f) {
        var d = Jp(Tl),
          w = d[0],
          E = d[1];
        return (
          ld(
            function () {
              var R = oo.transition;
              oo.transition = {};
              try {
                E(f);
              } finally {
                oo.transition = R;
              }
            },
            [f]
          ),
          w
        );
      },
      useTransition: function () {
        var f = Jp(Tl)[0],
          d = os().memoizedState;
        return [f, d];
      },
      useMutableSource: v2,
      useSyncExternalStore: y2,
      useId: P2,
      unstable_isNewReconciler: !1,
    },
    $U = {
      readContext: Hn,
      useCallback: A2,
      useContext: Hn,
      useEffect: ld,
      useImperativeHandle: T2,
      useInsertionEffect: E2,
      useLayoutEffect: M2,
      useMemo: R2,
      useReducer: em,
      useRef: b2,
      useState: function () {
        return em(Tl);
      },
      useDebugValue: xx,
      useDeferredValue: function (f) {
        var d = em(Tl),
          w = d[0],
          E = d[1];
        return (
          ld(
            function () {
              var R = oo.transition;
              oo.transition = {};
              try {
                E(f);
              } finally {
                oo.transition = R;
              }
            },
            [f]
          ),
          w
        );
      },
      useTransition: function () {
        var f = em(Tl)[0],
          d = os().memoizedState;
        return [f, d];
      },
      useMutableSource: v2,
      useSyncExternalStore: y2,
      useId: P2,
      unstable_isNewReconciler: !1,
    };
  function _x(f, d) {
    try {
      var w = "",
        E = d;
      do (w += El(E)), (E = E.return);
      while (E);
      var R = w;
    } catch (O) {
      R =
        `
Error generating stack: ` +
        O.message +
        `
` +
        O.stack;
    }
    return { value: f, source: d, stack: R };
  }
  function Sx(f, d) {
    try {
      console.error(d.value);
    } catch (w) {
      setTimeout(function () {
        throw w;
      });
    }
  }
  var XU = typeof WeakMap == "function" ? WeakMap : Map;
  function N2(f, d, w) {
    (w = Os(-1, w)), (w.tag = 3), (w.payload = { element: null });
    var E = d.value;
    return (
      (w.callback = function () {
        xm || ((xm = !0), (kx = E)), Sx(f, d);
      }),
      w
    );
  }
  function D2(f, d, w) {
    (w = Os(-1, w)), (w.tag = 3);
    var E = f.type.getDerivedStateFromError;
    if (typeof E == "function") {
      var R = d.value;
      (w.payload = function () {
        return E(R);
      }),
        (w.callback = function () {
          Sx(f, d);
        });
    }
    var O = f.stateNode;
    return (
      O !== null &&
        typeof O.componentDidCatch == "function" &&
        (w.callback = function () {
          Sx(f, d),
            typeof E != "function" &&
              (xa === null ? (xa = new Set([this])) : xa.add(this));
          var ee = d.stack;
          this.componentDidCatch(d.value, {
            componentStack: ee !== null ? ee : "",
          });
        }),
      w
    );
  }
  function U2(f, d, w) {
    var E = f.pingCache;
    if (E === null) {
      E = f.pingCache = new XU();
      var R = new Set();
      E.set(d, R);
    } else (R = E.get(d)), R === void 0 && ((R = new Set()), E.set(d, R));
    R.has(w) || (R.add(w), (f = az.bind(null, f, d, w)), d.then(f, f));
  }
  function z2(f) {
    do {
      var d;
      if (
        ((d = f.tag === 13) &&
          ((d = f.memoizedState),
          (d = d !== null ? d.dehydrated !== null : !0)),
        d)
      )
        return f;
      f = f.return;
    } while (f !== null);
    return null;
  }
  function k2(f, d, w, E, R) {
    return f.mode & 1
      ? ((f.flags |= 65536), (f.lanes = R), f)
      : (f === d
          ? (f.flags |= 65536)
          : ((f.flags |= 128),
            (w.flags |= 131072),
            (w.flags &= -52805),
            w.tag === 1 &&
              (w.alternate === null
                ? (w.tag = 17)
                : ((d = Os(-1, 1)), (d.tag = 2), ya(w, d))),
            (w.lanes |= 1)),
        f);
  }
  function ss(f) {
    f.flags |= 4;
  }
  function B2(f, d) {
    if (f !== null && f.child === d.child) return !0;
    if (d.flags & 16) return !1;
    for (f = d.child; f !== null; ) {
      if (f.flags & 12854 || f.subtreeFlags & 12854) return !1;
      f = f.sibling;
    }
    return !0;
  }
  var cd, ud, im, om;
  if (ye)
    (cd = function (f, d) {
      for (var w = d.child; w !== null; ) {
        if (w.tag === 5 || w.tag === 6) Z(f, w.stateNode);
        else if (w.tag !== 4 && w.child !== null) {
          (w.child.return = w), (w = w.child);
          continue;
        }
        if (w === d) break;
        for (; w.sibling === null; ) {
          if (w.return === null || w.return === d) return;
          w = w.return;
        }
        (w.sibling.return = w.return), (w = w.sibling);
      }
    }),
      (ud = function () {}),
      (im = function (f, d, w, E, R) {
        if (((f = f.memoizedProps), f !== E)) {
          var O = d.stateNode,
            ee = is(io.current);
          (w = te(O, w, f, E, R, ee)), (d.updateQueue = w) && ss(d);
        }
      }),
      (om = function (f, d, w, E) {
        w !== E && ss(d);
      });
  else if (q) {
    cd = function (f, d, w, E) {
      for (var R = d.child; R !== null; ) {
        if (R.tag === 5) {
          var O = R.stateNode;
          w && E && (O = Tt(O, R.type, R.memoizedProps, R)), Z(f, O);
        } else if (R.tag === 6)
          (O = R.stateNode), w && E && (O = St(O, R.memoizedProps, R)), Z(f, O);
        else if (R.tag !== 4) {
          if (R.tag === 22 && R.memoizedState !== null)
            (O = R.child), O !== null && (O.return = R), cd(f, R, !0, !0);
          else if (R.child !== null) {
            (R.child.return = R), (R = R.child);
            continue;
          }
        }
        if (R === d) break;
        for (; R.sibling === null; ) {
          if (R.return === null || R.return === d) return;
          R = R.return;
        }
        (R.sibling.return = R.return), (R = R.sibling);
      }
    };
    var H2 = function (f, d, w, E) {
      for (var R = d.child; R !== null; ) {
        if (R.tag === 5) {
          var O = R.stateNode;
          w && E && (O = Tt(O, R.type, R.memoizedProps, R)), $e(f, O);
        } else if (R.tag === 6)
          (O = R.stateNode),
            w && E && (O = St(O, R.memoizedProps, R)),
            $e(f, O);
        else if (R.tag !== 4) {
          if (R.tag === 22 && R.memoizedState !== null)
            (O = R.child), O !== null && (O.return = R), H2(f, R, !0, !0);
          else if (R.child !== null) {
            (R.child.return = R), (R = R.child);
            continue;
          }
        }
        if (R === d) break;
        for (; R.sibling === null; ) {
          if (R.return === null || R.return === d) return;
          R = R.return;
        }
        (R.sibling.return = R.return), (R = R.sibling);
      }
    };
    (ud = function (f, d) {
      var w = d.stateNode;
      if (!B2(f, d)) {
        f = w.containerInfo;
        var E = ft(f);
        H2(E, d, !1, !1), (w.pendingChildren = E), ss(d), it(f, E);
      }
    }),
      (im = function (f, d, w, E, R) {
        var O = f.stateNode,
          ee = f.memoizedProps;
        if ((f = B2(f, d)) && ee === E) d.stateNode = O;
        else {
          var ce = d.stateNode,
            Ie = is(io.current),
            Ye = null;
          ee !== E && (Ye = te(ce, w, ee, E, R, Ie)),
            f && Ye === null
              ? (d.stateNode = O)
              : ((O = Ke(O, Ye, w, ee, E, d, f, ce)),
                Q(O, w, E, R, Ie) && ss(d),
                (d.stateNode = O),
                f ? ss(d) : cd(O, d, !1, !1));
        }
      }),
      (om = function (f, d, w, E) {
        w !== E
          ? ((f = is(eu.current)),
            (w = is(io.current)),
            (d.stateNode = le(E, f, w, d)),
            ss(d))
          : (d.stateNode = f.stateNode);
      });
  } else (ud = function () {}), (im = function () {}), (om = function () {});
  function fd(f, d) {
    if (!xn)
      switch (f.tailMode) {
        case "hidden":
          d = f.tail;
          for (var w = null; d !== null; )
            d.alternate !== null && (w = d), (d = d.sibling);
          w === null ? (f.tail = null) : (w.sibling = null);
          break;
        case "collapsed":
          w = f.tail;
          for (var E = null; w !== null; )
            w.alternate !== null && (E = w), (w = w.sibling);
          E === null
            ? d || f.tail === null
              ? (f.tail = null)
              : (f.tail.sibling = null)
            : (E.sibling = null);
      }
  }
  function Ir(f) {
    var d = f.alternate !== null && f.alternate.child === f.child,
      w = 0,
      E = 0;
    if (d)
      for (var R = f.child; R !== null; )
        (w |= R.lanes | R.childLanes),
          (E |= R.subtreeFlags & 14680064),
          (E |= R.flags & 14680064),
          (R.return = f),
          (R = R.sibling);
    else
      for (R = f.child; R !== null; )
        (w |= R.lanes | R.childLanes),
          (E |= R.subtreeFlags),
          (E |= R.flags),
          (R.return = f),
          (R = R.sibling);
    return (f.subtreeFlags |= E), (f.childLanes = w), d;
  }
  function qU(f, d, w) {
    var E = d.pendingProps;
    switch ((sx(d), d.tag)) {
      case 2:
      case 16:
      case 15:
      case 0:
      case 11:
      case 7:
      case 8:
      case 12:
      case 9:
      case 14:
        return Ir(d), null;
      case 1:
        return In(d.type) && an(), Ir(d), null;
      case 3:
        return (
          (E = d.stateNode),
          tu(),
          vt(fn),
          vt(Pt),
          hx(),
          E.pendingContext &&
            ((E.context = E.pendingContext), (E.pendingContext = null)),
          (f === null || f.child === null) &&
            (td(d)
              ? ss(d)
              : f === null ||
                (f.memoizedState.isDehydrated && !(d.flags & 256)) ||
                ((d.flags |= 1024), To !== null && (Vx(To), (To = null)))),
          ud(f, d),
          Ir(d),
          null
        );
      case 5:
        fx(d), (w = is(eu.current));
        var R = d.type;
        if (f !== null && d.stateNode != null)
          im(f, d, R, E, w),
            f.ref !== d.ref && ((d.flags |= 512), (d.flags |= 2097152));
        else {
          if (!E) {
            if (d.stateNode === null) throw Error(s(166));
            return Ir(d), null;
          }
          if (((f = is(io.current)), td(d))) {
            if (!xe) throw Error(s(175));
            (f = $r(d.stateNode, d.type, d.memoizedProps, w, f, d, !ed)),
              (d.updateQueue = f),
              f !== null && ss(d);
          } else {
            var O = U(R, E, w, f, d);
            cd(O, d, !1, !1), (d.stateNode = O), Q(O, R, E, w, f) && ss(d);
          }
          d.ref !== null && ((d.flags |= 512), (d.flags |= 2097152));
        }
        return Ir(d), null;
      case 6:
        if (f && d.stateNode != null) om(f, d, f.memoizedProps, E);
        else {
          if (typeof E != "string" && d.stateNode === null) throw Error(s(166));
          if (((f = is(eu.current)), (w = is(io.current)), td(d))) {
            if (!xe) throw Error(s(176));
            if (
              ((f = d.stateNode),
              (E = d.memoizedProps),
              (w = Mo(f, E, d, !ed)) && ((R = Ri), R !== null))
            )
              switch (((O = (R.mode & 1) !== 0), R.tag)) {
                case 3:
                  dt(R.stateNode.containerInfo, f, E, O);
                  break;
                case 5:
                  gt(R.type, R.memoizedProps, R.stateNode, f, E, O);
              }
            w && ss(d);
          } else d.stateNode = le(E, f, w, d);
        }
        return Ir(d), null;
      case 13:
        if (
          (vt(En),
          (E = d.memoizedState),
          xn && Pi !== null && d.mode & 1 && !(d.flags & 128))
        ) {
          for (f = Pi; f; ) f = cn(f);
          return Qc(), (d.flags |= 98560), d;
        }
        if (E !== null && E.dehydrated !== null) {
          if (((E = td(d)), f === null)) {
            if (!E) throw Error(s(318));
            if (!xe) throw Error(s(344));
            if (
              ((f = d.memoizedState),
              (f = f !== null ? f.dehydrated : null),
              !f)
            )
              throw Error(s(317));
            $f(f, d);
          } else
            Qc(), !(d.flags & 128) && (d.memoizedState = null), (d.flags |= 4);
          return Ir(d), null;
        }
        return (
          To !== null && (Vx(To), (To = null)),
          d.flags & 128
            ? ((d.lanes = w), d)
            : ((E = E !== null),
              (w = !1),
              f === null ? td(d) : (w = f.memoizedState !== null),
              E &&
                !w &&
                ((d.child.flags |= 8192),
                d.mode & 1 &&
                  (f === null || En.current & 1 ? tr === 0 && (tr = 3) : jx())),
              d.updateQueue !== null && (d.flags |= 4),
              Ir(d),
              null)
        );
      case 4:
        return (
          tu(),
          ud(f, d),
          f === null && me(d.stateNode.containerInfo),
          Ir(d),
          null
        );
      case 10:
        return dr(d.type._context), Ir(d), null;
      case 17:
        return In(d.type) && an(), Ir(d), null;
      case 19:
        if ((vt(En), (R = d.memoizedState), R === null)) return Ir(d), null;
        if (((E = (d.flags & 128) !== 0), (O = R.rendering), O === null))
          if (E) fd(R, !1);
          else {
            if (tr !== 0 || (f !== null && f.flags & 128))
              for (f = d.child; f !== null; ) {
                if (((O = Kp(f)), O !== null)) {
                  for (
                    d.flags |= 128,
                      fd(R, !1),
                      f = O.updateQueue,
                      f !== null && ((d.updateQueue = f), (d.flags |= 4)),
                      d.subtreeFlags = 0,
                      f = w,
                      E = d.child;
                    E !== null;

                  )
                    (w = E),
                      (R = f),
                      (w.flags &= 14680066),
                      (O = w.alternate),
                      O === null
                        ? ((w.childLanes = 0),
                          (w.lanes = R),
                          (w.child = null),
                          (w.subtreeFlags = 0),
                          (w.memoizedProps = null),
                          (w.memoizedState = null),
                          (w.updateQueue = null),
                          (w.dependencies = null),
                          (w.stateNode = null))
                        : ((w.childLanes = O.childLanes),
                          (w.lanes = O.lanes),
                          (w.child = O.child),
                          (w.subtreeFlags = 0),
                          (w.deletions = null),
                          (w.memoizedProps = O.memoizedProps),
                          (w.memoizedState = O.memoizedState),
                          (w.updateQueue = O.updateQueue),
                          (w.type = O.type),
                          (R = O.dependencies),
                          (w.dependencies =
                            R === null
                              ? null
                              : {
                                  lanes: R.lanes,
                                  firstContext: R.firstContext,
                                })),
                      (E = E.sibling);
                  return st(En, (En.current & 1) | 2), d.child;
                }
                f = f.sibling;
              }
            R.tail !== null &&
              bn() > zx &&
              ((d.flags |= 128), (E = !0), fd(R, !1), (d.lanes = 4194304));
          }
        else {
          if (!E)
            if (((f = Kp(O)), f !== null)) {
              if (
                ((d.flags |= 128),
                (E = !0),
                (f = f.updateQueue),
                f !== null && ((d.updateQueue = f), (d.flags |= 4)),
                fd(R, !0),
                R.tail === null &&
                  R.tailMode === "hidden" &&
                  !O.alternate &&
                  !xn)
              )
                return Ir(d), null;
            } else
              2 * bn() - R.renderingStartTime > zx &&
                w !== 1073741824 &&
                ((d.flags |= 128), (E = !0), fd(R, !1), (d.lanes = 4194304));
          R.isBackwards
            ? ((O.sibling = d.child), (d.child = O))
            : ((f = R.last),
              f !== null ? (f.sibling = O) : (d.child = O),
              (R.last = O));
        }
        return R.tail !== null
          ? ((d = R.tail),
            (R.rendering = d),
            (R.tail = d.sibling),
            (R.renderingStartTime = bn()),
            (d.sibling = null),
            (f = En.current),
            st(En, E ? (f & 1) | 2 : f & 1),
            d)
          : (Ir(d), null);
      case 22:
      case 23:
        return (
          Gx(),
          (E = d.memoizedState !== null),
          f !== null && (f.memoizedState !== null) !== E && (d.flags |= 8192),
          E && d.mode & 1
            ? Ii & 1073741824 &&
              (Ir(d), ye && d.subtreeFlags & 6 && (d.flags |= 8192))
            : Ir(d),
          null
        );
      case 24:
        return null;
      case 25:
        return null;
    }
    throw Error(s(156, d.tag));
  }
  var YU = a.ReactCurrentOwner,
    Li = !1;
  function Qr(f, d, w, E) {
    d.child = f === null ? m2(d, null, w, E) : Jc(d, f.child, w, E);
  }
  function V2(f, d, w, E, R) {
    w = w.render;
    var O = d.ref;
    return (
      Bn(d, R),
      (E = mx(f, d, w, E, O, R)),
      (w = gx()),
      f !== null && !Li
        ? ((d.updateQueue = f.updateQueue),
          (d.flags &= -2053),
          (f.lanes &= ~R),
          Us(f, d, R))
        : (xn && w && ox(d), (d.flags |= 1), Qr(f, d, E, R), d.child)
    );
  }
  function G2(f, d, w, E, R) {
    if (f === null) {
      var O = w.type;
      return typeof O == "function" &&
        !Wx(O) &&
        O.defaultProps === void 0 &&
        w.compare === null &&
        w.defaultProps === void 0
        ? ((d.tag = 15), (d.type = O), j2(f, d, O, E, R))
        : ((f = Cm(w.type, null, E, d, d.mode, R)),
          (f.ref = d.ref),
          (f.return = d),
          (d.child = f));
    }
    if (((O = f.child), !(f.lanes & R))) {
      var ee = O.memoizedProps;
      if (
        ((w = w.compare),
        (w = w !== null ? w : bl),
        w(ee, E) && f.ref === d.ref)
      )
        return Us(f, d, R);
    }
    return (
      (d.flags |= 1),
      (f = ba(O, E)),
      (f.ref = d.ref),
      (f.return = d),
      (d.child = f)
    );
  }
  function j2(f, d, w, E, R) {
    if (f !== null && bl(f.memoizedProps, E) && f.ref === d.ref)
      if (((Li = !1), (f.lanes & R) !== 0)) f.flags & 131072 && (Li = !0);
      else return (d.lanes = f.lanes), Us(f, d, R);
    return wx(f, d, w, E, R);
  }
  function W2(f, d, w) {
    var E = d.pendingProps,
      R = E.children,
      O = f !== null ? f.memoizedState : null;
    if (E.mode === "hidden")
      if (!(d.mode & 1))
        (d.memoizedState = { baseLanes: 0, cachePool: null }),
          st(ru, Ii),
          (Ii |= w);
      else if (w & 1073741824)
        (d.memoizedState = { baseLanes: 0, cachePool: null }),
          (E = O !== null ? O.baseLanes : w),
          st(ru, Ii),
          (Ii |= E);
      else
        return (
          (f = O !== null ? O.baseLanes | w : w),
          (d.lanes = d.childLanes = 1073741824),
          (d.memoizedState = { baseLanes: f, cachePool: null }),
          (d.updateQueue = null),
          st(ru, Ii),
          (Ii |= f),
          null
        );
    else
      O !== null ? ((E = O.baseLanes | w), (d.memoizedState = null)) : (E = w),
        st(ru, Ii),
        (Ii |= E);
    return Qr(f, d, R, w), d.child;
  }
  function $2(f, d) {
    var w = d.ref;
    ((f === null && w !== null) || (f !== null && f.ref !== w)) &&
      ((d.flags |= 512), (d.flags |= 2097152));
  }
  function wx(f, d, w, E, R) {
    var O = In(w) ? Mi : Pt.current;
    return (
      (O = ur(d, O)),
      Bn(d, R),
      (w = mx(f, d, w, E, O, R)),
      (E = gx()),
      f !== null && !Li
        ? ((d.updateQueue = f.updateQueue),
          (d.flags &= -2053),
          (f.lanes &= ~R),
          Us(f, d, R))
        : (xn && E && ox(d), (d.flags |= 1), Qr(f, d, w, R), d.child)
    );
  }
  function X2(f, d, w, E, R) {
    if (In(w)) {
      var O = !0;
      kn(d);
    } else O = !1;
    if ((Bn(d, R), d.stateNode === null))
      f !== null &&
        ((f.alternate = null), (d.alternate = null), (d.flags |= 2)),
        a2(d, w, E),
        ix(d, w, E, R),
        (E = !0);
    else if (f === null) {
      var ee = d.stateNode,
        ce = d.memoizedProps;
      ee.props = ce;
      var Ie = ee.context,
        Ye = w.contextType;
      typeof Ye == "object" && Ye !== null
        ? (Ye = Hn(Ye))
        : ((Ye = In(w) ? Mi : Pt.current), (Ye = ur(d, Ye)));
      var ct = w.getDerivedStateFromProps,
        At =
          typeof ct == "function" ||
          typeof ee.getSnapshotBeforeUpdate == "function";
      At ||
        (typeof ee.UNSAFE_componentWillReceiveProps != "function" &&
          typeof ee.componentWillReceiveProps != "function") ||
        ((ce !== E || Ie !== Ye) && l2(d, ee, E, Ye)),
        (va = !1);
      var _t = d.memoizedState;
      (ee.state = _t),
        Wp(d, E, ee, R),
        (Ie = d.memoizedState),
        ce !== E || _t !== Ie || fn.current || va
          ? (typeof ct == "function" &&
              (rx(d, w, ct, E), (Ie = d.memoizedState)),
            (ce = va || s2(d, w, ce, E, _t, Ie, Ye))
              ? (At ||
                  (typeof ee.UNSAFE_componentWillMount != "function" &&
                    typeof ee.componentWillMount != "function") ||
                  (typeof ee.componentWillMount == "function" &&
                    ee.componentWillMount(),
                  typeof ee.UNSAFE_componentWillMount == "function" &&
                    ee.UNSAFE_componentWillMount()),
                typeof ee.componentDidMount == "function" &&
                  (d.flags |= 4194308))
              : (typeof ee.componentDidMount == "function" &&
                  (d.flags |= 4194308),
                (d.memoizedProps = E),
                (d.memoizedState = Ie)),
            (ee.props = E),
            (ee.state = Ie),
            (ee.context = Ye),
            (E = ce))
          : (typeof ee.componentDidMount == "function" && (d.flags |= 4194308),
            (E = !1));
    } else {
      (ee = d.stateNode),
        n2(f, d),
        (ce = d.memoizedProps),
        (Ye = d.type === d.elementType ? ce : Kr(d.type, ce)),
        (ee.props = Ye),
        (At = d.pendingProps),
        (_t = ee.context),
        (Ie = w.contextType),
        typeof Ie == "object" && Ie !== null
          ? (Ie = Hn(Ie))
          : ((Ie = In(w) ? Mi : Pt.current), (Ie = ur(d, Ie)));
      var un = w.getDerivedStateFromProps;
      (ct =
        typeof un == "function" ||
        typeof ee.getSnapshotBeforeUpdate == "function") ||
        (typeof ee.UNSAFE_componentWillReceiveProps != "function" &&
          typeof ee.componentWillReceiveProps != "function") ||
        ((ce !== At || _t !== Ie) && l2(d, ee, E, Ie)),
        (va = !1),
        (_t = d.memoizedState),
        (ee.state = _t),
        Wp(d, E, ee, R);
      var mt = d.memoizedState;
      ce !== At || _t !== mt || fn.current || va
        ? (typeof un == "function" && (rx(d, w, un, E), (mt = d.memoizedState)),
          (Ye = va || s2(d, w, Ye, E, _t, mt, Ie) || !1)
            ? (ct ||
                (typeof ee.UNSAFE_componentWillUpdate != "function" &&
                  typeof ee.componentWillUpdate != "function") ||
                (typeof ee.componentWillUpdate == "function" &&
                  ee.componentWillUpdate(E, mt, Ie),
                typeof ee.UNSAFE_componentWillUpdate == "function" &&
                  ee.UNSAFE_componentWillUpdate(E, mt, Ie)),
              typeof ee.componentDidUpdate == "function" && (d.flags |= 4),
              typeof ee.getSnapshotBeforeUpdate == "function" &&
                (d.flags |= 1024))
            : (typeof ee.componentDidUpdate != "function" ||
                (ce === f.memoizedProps && _t === f.memoizedState) ||
                (d.flags |= 4),
              typeof ee.getSnapshotBeforeUpdate != "function" ||
                (ce === f.memoizedProps && _t === f.memoizedState) ||
                (d.flags |= 1024),
              (d.memoizedProps = E),
              (d.memoizedState = mt)),
          (ee.props = E),
          (ee.state = mt),
          (ee.context = Ie),
          (E = Ye))
        : (typeof ee.componentDidUpdate != "function" ||
            (ce === f.memoizedProps && _t === f.memoizedState) ||
            (d.flags |= 4),
          typeof ee.getSnapshotBeforeUpdate != "function" ||
            (ce === f.memoizedProps && _t === f.memoizedState) ||
            (d.flags |= 1024),
          (E = !1));
    }
    return bx(f, d, w, E, O, R);
  }
  function bx(f, d, w, E, R, O) {
    $2(f, d);
    var ee = (d.flags & 128) !== 0;
    if (!E && !ee) return R && xr(d, w, !1), Us(f, d, O);
    (E = d.stateNode), (YU.current = d);
    var ce =
      ee && typeof w.getDerivedStateFromError != "function" ? null : E.render();
    return (
      (d.flags |= 1),
      f !== null && ee
        ? ((d.child = Jc(d, f.child, null, O)), (d.child = Jc(d, null, ce, O)))
        : Qr(f, d, ce, O),
      (d.memoizedState = E.state),
      R && xr(d, w, !0),
      d.child
    );
  }
  function q2(f) {
    var d = f.stateNode;
    d.pendingContext
      ? ci(f, d.pendingContext, d.pendingContext !== d.context)
      : d.context && ci(f, d.context, !1),
      ux(f, d.containerInfo);
  }
  function Y2(f, d, w, E, R) {
    return Qc(), cx(R), (d.flags |= 256), Qr(f, d, w, E), d.child;
  }
  var sm = { dehydrated: null, treeContext: null, retryLane: 0 };
  function am(f) {
    return { baseLanes: f, cachePool: null };
  }
  function K2(f, d, w) {
    var E = d.pendingProps,
      R = En.current,
      O = !1,
      ee = (d.flags & 128) !== 0,
      ce;
    if (
      ((ce = ee) ||
        (ce = f !== null && f.memoizedState === null ? !1 : (R & 2) !== 0),
      ce
        ? ((O = !0), (d.flags &= -129))
        : (f === null || f.memoizedState !== null) && (R |= 1),
      st(En, R & 1),
      f === null)
    )
      return (
        lx(d),
        (f = d.memoizedState),
        f !== null && ((f = f.dehydrated), f !== null)
          ? (d.mode & 1
              ? gn(f)
                ? (d.lanes = 8)
                : (d.lanes = 1073741824)
              : (d.lanes = 1),
            null)
          : ((R = E.children),
            (f = E.fallback),
            O
              ? ((E = d.mode),
                (O = d.child),
                (R = { mode: "hidden", children: R }),
                !(E & 1) && O !== null
                  ? ((O.childLanes = 0), (O.pendingProps = R))
                  : (O = Tm(R, E, 0, null)),
                (f = Ol(f, E, w, null)),
                (O.return = d),
                (f.return = d),
                (O.sibling = f),
                (d.child = O),
                (d.child.memoizedState = am(w)),
                (d.memoizedState = sm),
                f)
              : Ex(d, R))
      );
    if (((R = f.memoizedState), R !== null)) {
      if (((ce = R.dehydrated), ce !== null)) {
        if (ee)
          return d.flags & 256
            ? ((d.flags &= -257), lm(f, d, w, Error(s(422))))
            : d.memoizedState !== null
            ? ((d.child = f.child), (d.flags |= 128), null)
            : ((O = E.fallback),
              (R = d.mode),
              (E = Tm({ mode: "visible", children: E.children }, R, 0, null)),
              (O = Ol(O, R, w, null)),
              (O.flags |= 2),
              (E.return = d),
              (O.return = d),
              (E.sibling = O),
              (d.child = E),
              d.mode & 1 && Jc(d, f.child, null, w),
              (d.child.memoizedState = am(w)),
              (d.memoizedState = sm),
              O);
        if (!(d.mode & 1)) d = lm(f, d, w, null);
        else if (gn(ce)) d = lm(f, d, w, Error(s(419)));
        else if (((E = (w & f.childLanes) !== 0), Li || E)) {
          if (((E = Kn), E !== null)) {
            switch (w & -w) {
              case 4:
                O = 2;
                break;
              case 16:
                O = 8;
                break;
              case 64:
              case 128:
              case 256:
              case 512:
              case 1024:
              case 2048:
              case 4096:
              case 8192:
              case 16384:
              case 32768:
              case 65536:
              case 131072:
              case 262144:
              case 524288:
              case 1048576:
              case 2097152:
              case 4194304:
              case 8388608:
              case 16777216:
              case 33554432:
              case 67108864:
                O = 32;
                break;
              case 536870912:
                O = 268435456;
                break;
              default:
                O = 0;
            }
            (E = O & (E.suspendedLanes | w) ? 0 : O),
              E !== 0 && E !== R.retryLane && ((R.retryLane = E), so(f, E, -1));
          }
          jx(), (d = lm(f, d, w, Error(s(421))));
        } else
          kt(ce)
            ? ((d.flags |= 128),
              (d.child = f.child),
              (d = lz.bind(null, f)),
              zn(ce, d),
              (d = null))
            : ((w = R.treeContext),
              xe &&
                ((Pi = Ei(ce)),
                (Ri = d),
                (xn = !0),
                (To = null),
                (ed = !1),
                w !== null &&
                  ((no[ro++] = Fs),
                  (no[ro++] = Ns),
                  (no[ro++] = Ml),
                  (Fs = w.id),
                  (Ns = w.overflow),
                  (Ml = d))),
              (d = Ex(d, d.pendingProps.children)),
              (d.flags |= 4096));
        return d;
      }
      return O
        ? ((E = Q2(f, d, E.children, E.fallback, w)),
          (O = d.child),
          (R = f.child.memoizedState),
          (O.memoizedState =
            R === null
              ? am(w)
              : { baseLanes: R.baseLanes | w, cachePool: null }),
          (O.childLanes = f.childLanes & ~w),
          (d.memoizedState = sm),
          E)
        : ((w = Z2(f, d, E.children, w)), (d.memoizedState = null), w);
    }
    return O
      ? ((E = Q2(f, d, E.children, E.fallback, w)),
        (O = d.child),
        (R = f.child.memoizedState),
        (O.memoizedState =
          R === null ? am(w) : { baseLanes: R.baseLanes | w, cachePool: null }),
        (O.childLanes = f.childLanes & ~w),
        (d.memoizedState = sm),
        E)
      : ((w = Z2(f, d, E.children, w)), (d.memoizedState = null), w);
  }
  function Ex(f, d) {
    return (
      (d = Tm({ mode: "visible", children: d }, f.mode, 0, null)),
      (d.return = f),
      (f.child = d)
    );
  }
  function Z2(f, d, w, E) {
    var R = f.child;
    return (
      (f = R.sibling),
      (w = ba(R, { mode: "visible", children: w })),
      !(d.mode & 1) && (w.lanes = E),
      (w.return = d),
      (w.sibling = null),
      f !== null &&
        ((E = d.deletions),
        E === null ? ((d.deletions = [f]), (d.flags |= 16)) : E.push(f)),
      (d.child = w)
    );
  }
  function Q2(f, d, w, E, R) {
    var O = d.mode;
    f = f.child;
    var ee = f.sibling,
      ce = { mode: "hidden", children: w };
    return (
      !(O & 1) && d.child !== f
        ? ((w = d.child),
          (w.childLanes = 0),
          (w.pendingProps = ce),
          (d.deletions = null))
        : ((w = ba(f, ce)), (w.subtreeFlags = f.subtreeFlags & 14680064)),
      ee !== null ? (E = ba(ee, E)) : ((E = Ol(E, O, R, null)), (E.flags |= 2)),
      (E.return = d),
      (w.return = d),
      (w.sibling = E),
      (d.child = w),
      E
    );
  }
  function lm(f, d, w, E) {
    return (
      E !== null && cx(E),
      Jc(d, f.child, null, w),
      (f = Ex(d, d.pendingProps.children)),
      (f.flags |= 2),
      (d.memoizedState = null),
      f
    );
  }
  function J2(f, d, w) {
    f.lanes |= d;
    var E = f.alternate;
    E !== null && (E.lanes |= d), Zr(f.return, d, w);
  }
  function Mx(f, d, w, E, R) {
    var O = f.memoizedState;
    O === null
      ? (f.memoizedState = {
          isBackwards: d,
          rendering: null,
          renderingStartTime: 0,
          last: E,
          tail: w,
          tailMode: R,
        })
      : ((O.isBackwards = d),
        (O.rendering = null),
        (O.renderingStartTime = 0),
        (O.last = E),
        (O.tail = w),
        (O.tailMode = R));
  }
  function eC(f, d, w) {
    var E = d.pendingProps,
      R = E.revealOrder,
      O = E.tail;
    if ((Qr(f, d, E.children, w), (E = En.current), E & 2))
      (E = (E & 1) | 2), (d.flags |= 128);
    else {
      if (f !== null && f.flags & 128)
        e: for (f = d.child; f !== null; ) {
          if (f.tag === 13) f.memoizedState !== null && J2(f, w, d);
          else if (f.tag === 19) J2(f, w, d);
          else if (f.child !== null) {
            (f.child.return = f), (f = f.child);
            continue;
          }
          if (f === d) break e;
          for (; f.sibling === null; ) {
            if (f.return === null || f.return === d) break e;
            f = f.return;
          }
          (f.sibling.return = f.return), (f = f.sibling);
        }
      E &= 1;
    }
    if ((st(En, E), !(d.mode & 1))) d.memoizedState = null;
    else
      switch (R) {
        case "forwards":
          for (w = d.child, R = null; w !== null; )
            (f = w.alternate),
              f !== null && Kp(f) === null && (R = w),
              (w = w.sibling);
          (w = R),
            w === null
              ? ((R = d.child), (d.child = null))
              : ((R = w.sibling), (w.sibling = null)),
            Mx(d, !1, R, w, O);
          break;
        case "backwards":
          for (w = null, R = d.child, d.child = null; R !== null; ) {
            if (((f = R.alternate), f !== null && Kp(f) === null)) {
              d.child = R;
              break;
            }
            (f = R.sibling), (R.sibling = w), (w = R), (R = f);
          }
          Mx(d, !0, w, null, O);
          break;
        case "together":
          Mx(d, !1, null, null, void 0);
          break;
        default:
          d.memoizedState = null;
      }
    return d.child;
  }
  function Us(f, d, w) {
    if (
      (f !== null && (d.dependencies = f.dependencies),
      (iu |= d.lanes),
      !(w & d.childLanes))
    )
      return null;
    if (f !== null && d.child !== f.child) throw Error(s(153));
    if (d.child !== null) {
      for (
        f = d.child, w = ba(f, f.pendingProps), d.child = w, w.return = d;
        f.sibling !== null;

      )
        (f = f.sibling),
          (w = w.sibling = ba(f, f.pendingProps)),
          (w.return = d);
      w.sibling = null;
    }
    return d.child;
  }
  function KU(f, d, w) {
    switch (d.tag) {
      case 3:
        q2(d), Qc();
        break;
      case 5:
        g2(d);
        break;
      case 1:
        In(d.type) && kn(d);
        break;
      case 4:
        ux(d, d.stateNode.containerInfo);
        break;
      case 10:
        Gp(d, d.type._context, d.memoizedProps.value);
        break;
      case 13:
        var E = d.memoizedState;
        if (E !== null)
          return E.dehydrated !== null
            ? (st(En, En.current & 1), (d.flags |= 128), null)
            : w & d.child.childLanes
            ? K2(f, d, w)
            : (st(En, En.current & 1),
              (f = Us(f, d, w)),
              f !== null ? f.sibling : null);
        st(En, En.current & 1);
        break;
      case 19:
        if (((E = (w & d.childLanes) !== 0), f.flags & 128)) {
          if (E) return eC(f, d, w);
          d.flags |= 128;
        }
        var R = d.memoizedState;
        if (
          (R !== null &&
            ((R.rendering = null), (R.tail = null), (R.lastEffect = null)),
          st(En, En.current),
          E)
        )
          break;
        return null;
      case 22:
      case 23:
        return (d.lanes = 0), W2(f, d, w);
    }
    return Us(f, d, w);
  }
  function ZU(f, d) {
    switch ((sx(d), d.tag)) {
      case 1:
        return (
          In(d.type) && an(),
          (f = d.flags),
          f & 65536 ? ((d.flags = (f & -65537) | 128), d) : null
        );
      case 3:
        return (
          tu(),
          vt(fn),
          vt(Pt),
          hx(),
          (f = d.flags),
          f & 65536 && !(f & 128) ? ((d.flags = (f & -65537) | 128), d) : null
        );
      case 5:
        return fx(d), null;
      case 13:
        if (
          (vt(En), (f = d.memoizedState), f !== null && f.dehydrated !== null)
        ) {
          if (d.alternate === null) throw Error(s(340));
          Qc();
        }
        return (
          (f = d.flags), f & 65536 ? ((d.flags = (f & -65537) | 128), d) : null
        );
      case 19:
        return vt(En), null;
      case 4:
        return tu(), null;
      case 10:
        return dr(d.type._context), null;
      case 22:
      case 23:
        return Gx(), null;
      case 24:
        return null;
      default:
        return null;
    }
  }
  var cm = !1,
    Al = !1,
    QU = typeof WeakSet == "function" ? WeakSet : Set,
    tt = null;
  function um(f, d) {
    var w = f.ref;
    if (w !== null)
      if (typeof w == "function")
        try {
          w(null);
        } catch (E) {
          hi(f, d, E);
        }
      else w.current = null;
  }
  function Cx(f, d, w) {
    try {
      w();
    } catch (E) {
      hi(f, d, E);
    }
  }
  var tC = !1;
  function JU(f, d) {
    for (V(f.containerInfo), tt = d; tt !== null; )
      if (
        ((f = tt), (d = f.child), (f.subtreeFlags & 1028) !== 0 && d !== null)
      )
        (d.return = f), (tt = d);
      else
        for (; tt !== null; ) {
          f = tt;
          try {
            var w = f.alternate;
            if (f.flags & 1024)
              switch (f.tag) {
                case 0:
                case 11:
                case 15:
                  break;
                case 1:
                  if (w !== null) {
                    var E = w.memoizedProps,
                      R = w.memoizedState,
                      O = f.stateNode,
                      ee = O.getSnapshotBeforeUpdate(
                        f.elementType === f.type ? E : Kr(f.type, E),
                        R
                      );
                    O.__reactInternalSnapshotBeforeUpdate = ee;
                  }
                  break;
                case 3:
                  ye && Ue(f.stateNode.containerInfo);
                  break;
                case 5:
                case 6:
                case 4:
                case 17:
                  break;
                default:
                  throw Error(s(163));
              }
          } catch (ce) {
            hi(f, f.return, ce);
          }
          if (((d = f.sibling), d !== null)) {
            (d.return = f.return), (tt = d);
            break;
          }
          tt = f.return;
        }
    return (w = tC), (tC = !1), w;
  }
  function Rl(f, d, w) {
    var E = d.updateQueue;
    if (((E = E !== null ? E.lastEffect : null), E !== null)) {
      var R = (E = E.next);
      do {
        if ((R.tag & f) === f) {
          var O = R.destroy;
          (R.destroy = void 0), O !== void 0 && Cx(d, w, O);
        }
        R = R.next;
      } while (R !== E);
    }
  }
  function dd(f, d) {
    if (
      ((d = d.updateQueue), (d = d !== null ? d.lastEffect : null), d !== null)
    ) {
      var w = (d = d.next);
      do {
        if ((w.tag & f) === f) {
          var E = w.create;
          w.destroy = E();
        }
        w = w.next;
      } while (w !== d);
    }
  }
  function Tx(f) {
    var d = f.ref;
    if (d !== null) {
      var w = f.stateNode;
      switch (f.tag) {
        case 5:
          f = j(w);
          break;
        default:
          f = w;
      }
      typeof d == "function" ? d(f) : (d.current = f);
    }
  }
  function nC(f, d, w) {
    if (Ci && typeof Ci.onCommitFiberUnmount == "function")
      try {
        Ci.onCommitFiberUnmount(Sl, d);
      } catch {}
    switch (d.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        if (
          ((f = d.updateQueue), f !== null && ((f = f.lastEffect), f !== null))
        ) {
          var E = (f = f.next);
          do {
            var R = E,
              O = R.destroy;
            (R = R.tag),
              O !== void 0 && (R & 2 || R & 4) && Cx(d, w, O),
              (E = E.next);
          } while (E !== f);
        }
        break;
      case 1:
        if (
          (um(d, w),
          (f = d.stateNode),
          typeof f.componentWillUnmount == "function")
        )
          try {
            (f.props = d.memoizedProps),
              (f.state = d.memoizedState),
              f.componentWillUnmount();
          } catch (ee) {
            hi(d, w, ee);
          }
        break;
      case 5:
        um(d, w);
        break;
      case 4:
        ye
          ? lC(f, d, w)
          : q && q && ((d = d.stateNode.containerInfo), (w = ft(d)), ot(d, w));
    }
  }
  function rC(f, d, w) {
    for (var E = d; ; )
      if ((nC(f, E, w), E.child === null || (ye && E.tag === 4))) {
        if (E === d) break;
        for (; E.sibling === null; ) {
          if (E.return === null || E.return === d) return;
          E = E.return;
        }
        (E.sibling.return = E.return), (E = E.sibling);
      } else (E.child.return = E), (E = E.child);
  }
  function iC(f) {
    var d = f.alternate;
    d !== null && ((f.alternate = null), iC(d)),
      (f.child = null),
      (f.deletions = null),
      (f.sibling = null),
      f.tag === 5 && ((d = f.stateNode), d !== null && Ve(d)),
      (f.stateNode = null),
      (f.return = null),
      (f.dependencies = null),
      (f.memoizedProps = null),
      (f.memoizedState = null),
      (f.pendingProps = null),
      (f.stateNode = null),
      (f.updateQueue = null);
  }
  function oC(f) {
    return f.tag === 5 || f.tag === 3 || f.tag === 4;
  }
  function sC(f) {
    e: for (;;) {
      for (; f.sibling === null; ) {
        if (f.return === null || oC(f.return)) return null;
        f = f.return;
      }
      for (
        f.sibling.return = f.return, f = f.sibling;
        f.tag !== 5 && f.tag !== 6 && f.tag !== 18;

      ) {
        if (f.flags & 2 || f.child === null || f.tag === 4) continue e;
        (f.child.return = f), (f = f.child);
      }
      if (!(f.flags & 2)) return f.stateNode;
    }
  }
  function aC(f) {
    if (ye) {
      e: {
        for (var d = f.return; d !== null; ) {
          if (oC(d)) break e;
          d = d.return;
        }
        throw Error(s(160));
      }
      var w = d;
      switch (w.tag) {
        case 5:
          (d = w.stateNode),
            w.flags & 32 && (be(d), (w.flags &= -33)),
            (w = sC(f)),
            Rx(f, w, d);
          break;
        case 3:
        case 4:
          (d = w.stateNode.containerInfo), (w = sC(f)), Ax(f, w, d);
          break;
        default:
          throw Error(s(161));
      }
    }
  }
  function Ax(f, d, w) {
    var E = f.tag;
    if (E === 5 || E === 6) (f = f.stateNode), d ? Ge(w, f, d) : ze(w, f);
    else if (E !== 4 && ((f = f.child), f !== null))
      for (Ax(f, d, w), f = f.sibling; f !== null; )
        Ax(f, d, w), (f = f.sibling);
  }
  function Rx(f, d, w) {
    var E = f.tag;
    if (E === 5 || E === 6) (f = f.stateNode), d ? Qe(w, f, d) : Ne(w, f);
    else if (E !== 4 && ((f = f.child), f !== null))
      for (Rx(f, d, w), f = f.sibling; f !== null; )
        Rx(f, d, w), (f = f.sibling);
  }
  function lC(f, d, w) {
    for (var E = d, R = !1, O, ee; ; ) {
      if (!R) {
        R = E.return;
        e: for (;;) {
          if (R === null) throw Error(s(160));
          switch (((O = R.stateNode), R.tag)) {
            case 5:
              ee = !1;
              break e;
            case 3:
              (O = O.containerInfo), (ee = !0);
              break e;
            case 4:
              (O = O.containerInfo), (ee = !0);
              break e;
          }
          R = R.return;
        }
        R = !0;
      }
      if (E.tag === 5 || E.tag === 6)
        rC(f, E, w), ee ? ne(O, E.stateNode) : Oe(O, E.stateNode);
      else if (E.tag === 18) ee ? Se(O, E.stateNode) : Ce(O, E.stateNode);
      else if (E.tag === 4) {
        if (E.child !== null) {
          (O = E.stateNode.containerInfo),
            (ee = !0),
            (E.child.return = E),
            (E = E.child);
          continue;
        }
      } else if ((nC(f, E, w), E.child !== null)) {
        (E.child.return = E), (E = E.child);
        continue;
      }
      if (E === d) break;
      for (; E.sibling === null; ) {
        if (E.return === null || E.return === d) return;
        (E = E.return), E.tag === 4 && (R = !1);
      }
      (E.sibling.return = E.return), (E = E.sibling);
    }
  }
  function Px(f, d) {
    if (ye) {
      switch (d.tag) {
        case 0:
        case 11:
        case 14:
        case 15:
          Rl(3, d, d.return), dd(3, d), Rl(5, d, d.return);
          return;
        case 1:
          return;
        case 5:
          var w = d.stateNode;
          if (w != null) {
            var E = d.memoizedProps;
            f = f !== null ? f.memoizedProps : E;
            var R = d.type,
              O = d.updateQueue;
            (d.updateQueue = null), O !== null && qe(w, O, R, f, E, d);
          }
          return;
        case 6:
          if (d.stateNode === null) throw Error(s(162));
          (w = d.memoizedProps),
            Ee(d.stateNode, f !== null ? f.memoizedProps : w, w);
          return;
        case 3:
          xe &&
            f !== null &&
            f.memoizedState.isDehydrated &&
            pe(d.stateNode.containerInfo);
          return;
        case 12:
          return;
        case 13:
          fm(d);
          return;
        case 19:
          fm(d);
          return;
        case 17:
          return;
      }
      throw Error(s(163));
    }
    switch (d.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        Rl(3, d, d.return), dd(3, d), Rl(5, d, d.return);
        return;
      case 12:
        return;
      case 13:
        fm(d);
        return;
      case 19:
        fm(d);
        return;
      case 3:
        xe &&
          f !== null &&
          f.memoizedState.isDehydrated &&
          pe(d.stateNode.containerInfo);
        break;
      case 22:
      case 23:
        return;
    }
    e: if (q) {
      switch (d.tag) {
        case 1:
        case 5:
        case 6:
          break e;
        case 3:
        case 4:
          (d = d.stateNode), ot(d.containerInfo, d.pendingChildren);
          break e;
      }
      throw Error(s(163));
    }
  }
  function fm(f) {
    var d = f.updateQueue;
    if (d !== null) {
      f.updateQueue = null;
      var w = f.stateNode;
      w === null && (w = f.stateNode = new QU()),
        d.forEach(function (E) {
          var R = cz.bind(null, f, E);
          w.has(E) || (w.add(E), E.then(R, R));
        });
    }
  }
  function ez(f, d) {
    for (tt = d; tt !== null; ) {
      d = tt;
      var w = d.deletions;
      if (w !== null)
        for (var E = 0; E < w.length; E++) {
          var R = w[E];
          try {
            var O = f;
            ye ? lC(O, R, d) : rC(O, R, d);
            var ee = R.alternate;
            ee !== null && (ee.return = null), (R.return = null);
          } catch (pt) {
            hi(R, d, pt);
          }
        }
      if (((w = d.child), d.subtreeFlags & 12854 && w !== null))
        (w.return = d), (tt = w);
      else
        for (; tt !== null; ) {
          d = tt;
          try {
            var ce = d.flags;
            if ((ce & 32 && ye && be(d.stateNode), ce & 512)) {
              var Ie = d.alternate;
              if (Ie !== null) {
                var Ye = Ie.ref;
                Ye !== null &&
                  (typeof Ye == "function" ? Ye(null) : (Ye.current = null));
              }
            }
            if (ce & 8192)
              switch (d.tag) {
                case 13:
                  if (d.memoizedState !== null) {
                    var ct = d.alternate;
                    (ct === null || ct.memoizedState === null) && (Ux = bn());
                  }
                  break;
                case 22:
                  var At = d.memoizedState !== null,
                    _t = d.alternate,
                    un = _t !== null && _t.memoizedState !== null;
                  if (((w = d), ye)) {
                    e: if (((E = w), (R = At), (O = null), ye))
                      for (var mt = E; ; ) {
                        if (mt.tag === 5) {
                          if (O === null) {
                            O = mt;
                            var Or = mt.stateNode;
                            R ? je(Or) : Le(mt.stateNode, mt.memoizedProps);
                          }
                        } else if (mt.tag === 6) {
                          if (O === null) {
                            var lo = mt.stateNode;
                            R ? De(lo) : ie(lo, mt.memoizedProps);
                          }
                        } else if (
                          ((mt.tag !== 22 && mt.tag !== 23) ||
                            mt.memoizedState === null ||
                            mt === E) &&
                          mt.child !== null
                        ) {
                          (mt.child.return = mt), (mt = mt.child);
                          continue;
                        }
                        if (mt === E) break;
                        for (; mt.sibling === null; ) {
                          if (mt.return === null || mt.return === E) break e;
                          O === mt && (O = null), (mt = mt.return);
                        }
                        O === mt && (O = null),
                          (mt.sibling.return = mt.return),
                          (mt = mt.sibling);
                      }
                  }
                  if (At && !un && w.mode & 1) {
                    tt = w;
                    for (var _e = w.child; _e !== null; ) {
                      for (w = tt = _e; tt !== null; ) {
                        E = tt;
                        var ue = E.child;
                        switch (E.tag) {
                          case 0:
                          case 11:
                          case 14:
                          case 15:
                            Rl(4, E, E.return);
                            break;
                          case 1:
                            um(E, E.return);
                            var Te = E.stateNode;
                            if (typeof Te.componentWillUnmount == "function") {
                              var rt = E.return;
                              try {
                                (Te.props = E.memoizedProps),
                                  (Te.state = E.memoizedState),
                                  Te.componentWillUnmount();
                              } catch (pt) {
                                hi(E, rt, pt);
                              }
                            }
                            break;
                          case 5:
                            um(E, E.return);
                            break;
                          case 22:
                            if (E.memoizedState !== null) {
                              fC(w);
                              continue;
                            }
                        }
                        ue !== null ? ((ue.return = E), (tt = ue)) : fC(w);
                      }
                      _e = _e.sibling;
                    }
                  }
              }
            switch (ce & 4102) {
              case 2:
                aC(d), (d.flags &= -3);
                break;
              case 6:
                aC(d), (d.flags &= -3), Px(d.alternate, d);
                break;
              case 4096:
                d.flags &= -4097;
                break;
              case 4100:
                (d.flags &= -4097), Px(d.alternate, d);
                break;
              case 4:
                Px(d.alternate, d);
            }
          } catch (pt) {
            hi(d, d.return, pt);
          }
          if (((w = d.sibling), w !== null)) {
            (w.return = d.return), (tt = w);
            break;
          }
          tt = d.return;
        }
    }
  }
  function tz(f, d, w) {
    (tt = f), cC(f);
  }
  function cC(f, d, w) {
    for (var E = (f.mode & 1) !== 0; tt !== null; ) {
      var R = tt,
        O = R.child;
      if (R.tag === 22 && E) {
        var ee = R.memoizedState !== null || cm;
        if (!ee) {
          var ce = R.alternate,
            Ie = (ce !== null && ce.memoizedState !== null) || Al;
          ce = cm;
          var Ye = Al;
          if (((cm = ee), (Al = Ie) && !Ye))
            for (tt = R; tt !== null; )
              (ee = tt),
                (Ie = ee.child),
                ee.tag === 22 && ee.memoizedState !== null
                  ? dC(R)
                  : Ie !== null
                  ? ((Ie.return = ee), (tt = Ie))
                  : dC(R);
          for (; O !== null; ) (tt = O), cC(O), (O = O.sibling);
          (tt = R), (cm = ce), (Al = Ye);
        }
        uC(f);
      } else
        R.subtreeFlags & 8772 && O !== null
          ? ((O.return = R), (tt = O))
          : uC(f);
    }
  }
  function uC(f) {
    for (; tt !== null; ) {
      var d = tt;
      if (d.flags & 8772) {
        var w = d.alternate;
        try {
          if (d.flags & 8772)
            switch (d.tag) {
              case 0:
              case 11:
              case 15:
                Al || dd(5, d);
                break;
              case 1:
                var E = d.stateNode;
                if (d.flags & 4 && !Al)
                  if (w === null) E.componentDidMount();
                  else {
                    var R =
                      d.elementType === d.type
                        ? w.memoizedProps
                        : Kr(d.type, w.memoizedProps);
                    E.componentDidUpdate(
                      R,
                      w.memoizedState,
                      E.__reactInternalSnapshotBeforeUpdate
                    );
                  }
                var O = d.updateQueue;
                O !== null && i2(d, O, E);
                break;
              case 3:
                var ee = d.updateQueue;
                if (ee !== null) {
                  if (((w = null), d.child !== null))
                    switch (d.child.tag) {
                      case 5:
                        w = j(d.child.stateNode);
                        break;
                      case 1:
                        w = d.child.stateNode;
                    }
                  i2(d, ee, w);
                }
                break;
              case 5:
                var ce = d.stateNode;
                w === null && d.flags & 4 && Je(ce, d.type, d.memoizedProps, d);
                break;
              case 6:
                break;
              case 4:
                break;
              case 12:
                break;
              case 13:
                if (xe && d.memoizedState === null) {
                  var Ie = d.alternate;
                  if (Ie !== null) {
                    var Ye = Ie.memoizedState;
                    if (Ye !== null) {
                      var ct = Ye.dehydrated;
                      ct !== null && we(ct);
                    }
                  }
                }
                break;
              case 19:
              case 17:
              case 21:
              case 22:
              case 23:
                break;
              default:
                throw Error(s(163));
            }
          Al || (d.flags & 512 && Tx(d));
        } catch (At) {
          hi(d, d.return, At);
        }
      }
      if (d === f) {
        tt = null;
        break;
      }
      if (((w = d.sibling), w !== null)) {
        (w.return = d.return), (tt = w);
        break;
      }
      tt = d.return;
    }
  }
  function fC(f) {
    for (; tt !== null; ) {
      var d = tt;
      if (d === f) {
        tt = null;
        break;
      }
      var w = d.sibling;
      if (w !== null) {
        (w.return = d.return), (tt = w);
        break;
      }
      tt = d.return;
    }
  }
  function dC(f) {
    for (; tt !== null; ) {
      var d = tt;
      try {
        switch (d.tag) {
          case 0:
          case 11:
          case 15:
            var w = d.return;
            try {
              dd(4, d);
            } catch (Ie) {
              hi(d, w, Ie);
            }
            break;
          case 1:
            var E = d.stateNode;
            if (typeof E.componentDidMount == "function") {
              var R = d.return;
              try {
                E.componentDidMount();
              } catch (Ie) {
                hi(d, R, Ie);
              }
            }
            var O = d.return;
            try {
              Tx(d);
            } catch (Ie) {
              hi(d, O, Ie);
            }
            break;
          case 5:
            var ee = d.return;
            try {
              Tx(d);
            } catch (Ie) {
              hi(d, ee, Ie);
            }
        }
      } catch (Ie) {
        hi(d, d.return, Ie);
      }
      if (d === f) {
        tt = null;
        break;
      }
      var ce = d.sibling;
      if (ce !== null) {
        (ce.return = d.return), (tt = ce);
        break;
      }
      tt = d.return;
    }
  }
  var dm = 0,
    hm = 1,
    pm = 2,
    mm = 3,
    gm = 4;
  if (typeof Symbol == "function" && Symbol.for) {
    var hd = Symbol.for;
    (dm = hd("selector.component")),
      (hm = hd("selector.has_pseudo_class")),
      (pm = hd("selector.role")),
      (mm = hd("selector.test_id")),
      (gm = hd("selector.text"));
  }
  function Lx(f) {
    var d = he(f);
    if (d != null) {
      if (typeof d.memoizedProps["data-testname"] != "string")
        throw Error(s(364));
      return d;
    }
    if (((f = K(f)), f === null)) throw Error(s(362));
    return f.stateNode.current;
  }
  function Ix(f, d) {
    switch (d.$$typeof) {
      case dm:
        if (f.type === d.value) return !0;
        break;
      case hm:
        e: {
          (d = d.value), (f = [f, 0]);
          for (var w = 0; w < f.length; ) {
            var E = f[w++],
              R = f[w++],
              O = d[R];
            if (E.tag !== 5 || !de(E)) {
              for (; O != null && Ix(E, O); ) R++, (O = d[R]);
              if (R === d.length) {
                d = !0;
                break e;
              } else
                for (E = E.child; E !== null; ) f.push(E, R), (E = E.sibling);
            }
          }
          d = !1;
        }
        return d;
      case pm:
        if (f.tag === 5 && Pe(f.stateNode, d.value)) return !0;
        break;
      case gm:
        if (
          (f.tag === 5 || f.tag === 6) &&
          ((f = se(f)), f !== null && 0 <= f.indexOf(d.value))
        )
          return !0;
        break;
      case mm:
        if (
          f.tag === 5 &&
          ((f = f.memoizedProps["data-testname"]),
          typeof f == "string" && f.toLowerCase() === d.value.toLowerCase())
        )
          return !0;
        break;
      default:
        throw Error(s(365));
    }
    return !1;
  }
  function Ox(f) {
    switch (f.$$typeof) {
      case dm:
        return "<" + (C(f.value) || "Unknown") + ">";
      case hm:
        return ":has(" + (Ox(f) || "") + ")";
      case pm:
        return '[role="' + f.value + '"]';
      case gm:
        return '"' + f.value + '"';
      case mm:
        return '[data-testname="' + f.value + '"]';
      default:
        throw Error(s(365));
    }
  }
  function hC(f, d) {
    var w = [];
    f = [f, 0];
    for (var E = 0; E < f.length; ) {
      var R = f[E++],
        O = f[E++],
        ee = d[O];
      if (R.tag !== 5 || !de(R)) {
        for (; ee != null && Ix(R, ee); ) O++, (ee = d[O]);
        if (O === d.length) w.push(R);
        else for (R = R.child; R !== null; ) f.push(R, O), (R = R.sibling);
      }
    }
    return w;
  }
  function Fx(f, d) {
    if (!F) throw Error(s(363));
    (f = Lx(f)), (f = hC(f, d)), (d = []), (f = Array.from(f));
    for (var w = 0; w < f.length; ) {
      var E = f[w++];
      if (E.tag === 5) de(E) || d.push(E.stateNode);
      else for (E = E.child; E !== null; ) f.push(E), (E = E.sibling);
    }
    return d;
  }
  var nz = Math.ceil,
    vm = a.ReactCurrentDispatcher,
    Nx = a.ReactCurrentOwner,
    Vn = a.ReactCurrentBatchConfig,
    Ut = 0,
    Kn = null,
    Zn = null,
    _r = 0,
    Ii = 0,
    ru = wn(0),
    tr = 0,
    pd = null,
    iu = 0,
    ym = 0,
    Dx = 0,
    md = null,
    fi = null,
    Ux = 0,
    zx = 1 / 0;
  function ou() {
    zx = bn() + 500;
  }
  var xm = !1,
    kx = null,
    xa = null,
    _m = !1,
    _a = null,
    Sm = 0,
    gd = 0,
    Bx = null,
    wm = -1,
    bm = 0;
  function Jr() {
    return Ut & 6 ? bn() : wm !== -1 ? wm : (wm = bn());
  }
  function Sa(f) {
    return f.mode & 1
      ? Ut & 2 && _r !== 0
        ? _r & -_r
        : wl.transition !== null
        ? (bm === 0 &&
            ((f = As), (As <<= 1), !(As & 4194240) && (As = 64), (bm = f)),
          bm)
        : ((f = zt), f !== 0 ? f : fe())
      : 1;
  }
  function so(f, d, w) {
    if (50 < gd) throw ((gd = 0), (Bx = null), Error(s(185)));
    var E = Em(f, d);
    return E === null
      ? null
      : (ts(E, d, w),
        (!(Ut & 2) || E !== Kn) &&
          (E === Kn && (!(Ut & 2) && (ym |= d), tr === 4 && wa(E, _r)),
          di(E, w),
          d === 1 && Ut === 0 && !(f.mode & 1) && (ou(), rs && ui())),
        E);
  }
  function Em(f, d) {
    f.lanes |= d;
    var w = f.alternate;
    for (w !== null && (w.lanes |= d), w = f, f = f.return; f !== null; )
      (f.childLanes |= d),
        (w = f.alternate),
        w !== null && (w.childLanes |= d),
        (w = f),
        (f = f.return);
    return w.tag === 3 ? w.stateNode : null;
  }
  function di(f, d) {
    var w = f.callbackNode;
    Xf(f, d);
    var E = xl(f, f === Kn ? _r : 0);
    if (E === 0)
      w !== null && Xc(w), (f.callbackNode = null), (f.callbackPriority = 0);
    else if (((d = E & -E), f.callbackPriority !== d)) {
      if ((w != null && Xc(w), d === 1))
        f.tag === 0 ? Jf(mC.bind(null, f)) : Qf(mC.bind(null, f)),
          ge
            ? H(function () {
                Ut === 0 && ui();
              })
            : Is(_l, ui),
          (w = null);
      else {
        switch (qf(E)) {
          case 1:
            w = _l;
            break;
          case 4:
            w = Hp;
            break;
          case 16:
            w = qr;
            break;
          case 536870912:
            w = Kf;
            break;
          default:
            w = qr;
        }
        w = EC(w, pC.bind(null, f));
      }
      (f.callbackPriority = d), (f.callbackNode = w);
    }
  }
  function pC(f, d) {
    if (((wm = -1), (bm = 0), Ut & 6)) throw Error(s(327));
    var w = f.callbackNode;
    if (Il() && f.callbackNode !== w) return null;
    var E = xl(f, f === Kn ? _r : 0);
    if (E === 0) return null;
    if (E & 30 || E & f.expiredLanes || d) d = Mm(f, E);
    else {
      d = E;
      var R = Ut;
      Ut |= 2;
      var O = yC();
      (Kn !== f || _r !== d) && (ou(), Pl(f, d));
      do
        try {
          oz();
          break;
        } catch (ce) {
          vC(f, ce);
        }
      while (!0);
      Yc(),
        (vm.current = O),
        (Ut = R),
        Zn !== null ? (d = 0) : ((Kn = null), (_r = 0), (d = tr));
    }
    if (d !== 0) {
      if (
        (d === 2 && ((R = Ls(f)), R !== 0 && ((E = R), (d = Hx(f, R)))),
        d === 1)
      )
        throw ((w = pd), Pl(f, 0), wa(f, E), di(f, bn()), w);
      if (d === 6) wa(f, E);
      else {
        if (
          ((R = f.current.alternate),
          !(E & 30) &&
            !rz(R) &&
            ((d = Mm(f, E)),
            d === 2 && ((O = Ls(f)), O !== 0 && ((E = O), (d = Hx(f, O)))),
            d === 1))
        )
          throw ((w = pd), Pl(f, 0), wa(f, E), di(f, bn()), w);
        switch (((f.finishedWork = R), (f.finishedLanes = E), d)) {
          case 0:
          case 1:
            throw Error(s(345));
          case 2:
            Ll(f, fi);
            break;
          case 3:
            if (
              (wa(f, E),
              (E & 130023424) === E && ((d = Ux + 500 - bn()), 10 < d))
            ) {
              if (xl(f, 0) !== 0) break;
              if (((R = f.suspendedLanes), (R & E) !== E)) {
                Jr(), (f.pingedLanes |= f.suspendedLanes & R);
                break;
              }
              f.timeoutHandle = oe(Ll.bind(null, f, fi), d);
              break;
            }
            Ll(f, fi);
            break;
          case 4:
            if ((wa(f, E), (E & 4194240) === E)) break;
            for (d = f.eventTimes, R = -1; 0 < E; ) {
              var ee = 31 - Xr(E);
              (O = 1 << ee), (ee = d[ee]), ee > R && (R = ee), (E &= ~O);
            }
            if (
              ((E = R),
              (E = bn() - E),
              (E =
                (120 > E
                  ? 120
                  : 480 > E
                  ? 480
                  : 1080 > E
                  ? 1080
                  : 1920 > E
                  ? 1920
                  : 3e3 > E
                  ? 3e3
                  : 4320 > E
                  ? 4320
                  : 1960 * nz(E / 1960)) - E),
              10 < E)
            ) {
              f.timeoutHandle = oe(Ll.bind(null, f, fi), E);
              break;
            }
            Ll(f, fi);
            break;
          case 5:
            Ll(f, fi);
            break;
          default:
            throw Error(s(329));
        }
      }
    }
    return di(f, bn()), f.callbackNode === w ? pC.bind(null, f) : null;
  }
  function Hx(f, d) {
    var w = md;
    return (
      f.current.memoizedState.isDehydrated && (Pl(f, d).flags |= 256),
      (f = Mm(f, d)),
      f !== 2 && ((d = fi), (fi = w), d !== null && Vx(d)),
      f
    );
  }
  function Vx(f) {
    fi === null ? (fi = f) : fi.push.apply(fi, f);
  }
  function rz(f) {
    for (var d = f; ; ) {
      if (d.flags & 16384) {
        var w = d.updateQueue;
        if (w !== null && ((w = w.stores), w !== null))
          for (var E = 0; E < w.length; E++) {
            var R = w[E],
              O = R.getSnapshot;
            R = R.value;
            try {
              if (!Ti(O(), R)) return !1;
            } catch {
              return !1;
            }
          }
      }
      if (((w = d.child), d.subtreeFlags & 16384 && w !== null))
        (w.return = d), (d = w);
      else {
        if (d === f) break;
        for (; d.sibling === null; ) {
          if (d.return === null || d.return === f) return !0;
          d = d.return;
        }
        (d.sibling.return = d.return), (d = d.sibling);
      }
    }
    return !0;
  }
  function wa(f, d) {
    for (
      d &= ~Dx,
        d &= ~ym,
        f.suspendedLanes |= d,
        f.pingedLanes &= ~d,
        f = f.expirationTimes;
      0 < d;

    ) {
      var w = 31 - Xr(d),
        E = 1 << w;
      (f[w] = -1), (d &= ~E);
    }
  }
  function mC(f) {
    if (Ut & 6) throw Error(s(327));
    Il();
    var d = xl(f, 0);
    if (!(d & 1)) return di(f, bn()), null;
    var w = Mm(f, d);
    if (f.tag !== 0 && w === 2) {
      var E = Ls(f);
      E !== 0 && ((d = E), (w = Hx(f, E)));
    }
    if (w === 1) throw ((w = pd), Pl(f, 0), wa(f, d), di(f, bn()), w);
    if (w === 6) throw Error(s(345));
    return (
      (f.finishedWork = f.current.alternate),
      (f.finishedLanes = d),
      Ll(f, fi),
      di(f, bn()),
      null
    );
  }
  function gC(f) {
    _a !== null && _a.tag === 0 && !(Ut & 6) && Il();
    var d = Ut;
    Ut |= 1;
    var w = Vn.transition,
      E = zt;
    try {
      if (((Vn.transition = null), (zt = 1), f)) return f();
    } finally {
      (zt = E), (Vn.transition = w), (Ut = d), !(Ut & 6) && ui();
    }
  }
  function Gx() {
    (Ii = ru.current), vt(ru);
  }
  function Pl(f, d) {
    (f.finishedWork = null), (f.finishedLanes = 0);
    var w = f.timeoutHandle;
    if ((w !== Ae && ((f.timeoutHandle = Ae), ve(w)), Zn !== null))
      for (w = Zn.return; w !== null; ) {
        var E = w;
        switch ((sx(E), E.tag)) {
          case 1:
            (E = E.type.childContextTypes), E != null && an();
            break;
          case 3:
            tu(), vt(fn), vt(Pt), hx();
            break;
          case 5:
            fx(E);
            break;
          case 4:
            tu();
            break;
          case 13:
            vt(En);
            break;
          case 19:
            vt(En);
            break;
          case 10:
            dr(E.type._context);
            break;
          case 22:
          case 23:
            Gx();
        }
        w = w.return;
      }
    if (
      ((Kn = f),
      (Zn = f = ba(f.current, null)),
      (_r = Ii = d),
      (tr = 0),
      (pd = null),
      (Dx = ym = iu = 0),
      (fi = md = null),
      Ai !== null)
    ) {
      for (d = 0; d < Ai.length; d++)
        if (((w = Ai[d]), (E = w.interleaved), E !== null)) {
          w.interleaved = null;
          var R = E.next,
            O = w.pending;
          if (O !== null) {
            var ee = O.next;
            (O.next = R), (E.next = ee);
          }
          w.pending = E;
        }
      Ai = null;
    }
    return f;
  }
  function vC(f, d) {
    do {
      var w = Zn;
      try {
        if ((Yc(), (Zp.current = rm), Qp)) {
          for (var E = On.memoizedState; E !== null; ) {
            var R = E.queue;
            R !== null && (R.pending = null), (E = E.next);
          }
          Qp = !1;
        }
        if (
          ((nu = 0),
          (hr = Pr = On = null),
          (od = !1),
          (sd = 0),
          (Nx.current = null),
          w === null || w.return === null)
        ) {
          (tr = 1), (pd = d), (Zn = null);
          break;
        }
        e: {
          var O = f,
            ee = w.return,
            ce = w,
            Ie = d;
          if (
            ((d = _r),
            (ce.flags |= 32768),
            Ie !== null &&
              typeof Ie == "object" &&
              typeof Ie.then == "function")
          ) {
            var Ye = Ie,
              ct = ce,
              At = ct.tag;
            if (!(ct.mode & 1) && (At === 0 || At === 11 || At === 15)) {
              var _t = ct.alternate;
              _t
                ? ((ct.updateQueue = _t.updateQueue),
                  (ct.memoizedState = _t.memoizedState),
                  (ct.lanes = _t.lanes))
                : ((ct.updateQueue = null), (ct.memoizedState = null));
            }
            var un = z2(ee);
            if (un !== null) {
              (un.flags &= -257),
                k2(un, ee, ce, O, d),
                un.mode & 1 && U2(O, Ye, d),
                (d = un),
                (Ie = Ye);
              var mt = d.updateQueue;
              if (mt === null) {
                var Or = new Set();
                Or.add(Ie), (d.updateQueue = Or);
              } else mt.add(Ie);
              break e;
            } else {
              if (!(d & 1)) {
                U2(O, Ye, d), jx();
                break e;
              }
              Ie = Error(s(426));
            }
          } else if (xn && ce.mode & 1) {
            var lo = z2(ee);
            if (lo !== null) {
              !(lo.flags & 65536) && (lo.flags |= 256),
                k2(lo, ee, ce, O, d),
                cx(Ie);
              break e;
            }
          }
          (O = Ie),
            tr !== 4 && (tr = 2),
            md === null ? (md = [O]) : md.push(O),
            (Ie = _x(Ie, ce)),
            (ce = ee);
          do {
            switch (ce.tag) {
              case 3:
                (ce.flags |= 65536), (d &= -d), (ce.lanes |= d);
                var _e = N2(ce, Ie, d);
                r2(ce, _e);
                break e;
              case 1:
                O = Ie;
                var ue = ce.type,
                  Te = ce.stateNode;
                if (
                  !(ce.flags & 128) &&
                  (typeof ue.getDerivedStateFromError == "function" ||
                    (Te !== null &&
                      typeof Te.componentDidCatch == "function" &&
                      (xa === null || !xa.has(Te))))
                ) {
                  (ce.flags |= 65536), (d &= -d), (ce.lanes |= d);
                  var rt = D2(ce, O, d);
                  r2(ce, rt);
                  break e;
                }
            }
            ce = ce.return;
          } while (ce !== null);
        }
        _C(w);
      } catch (pt) {
        (d = pt), Zn === w && w !== null && (Zn = w = w.return);
        continue;
      }
      break;
    } while (!0);
  }
  function yC() {
    var f = vm.current;
    return (vm.current = rm), f === null ? rm : f;
  }
  function jx() {
    (tr === 0 || tr === 3 || tr === 2) && (tr = 4),
      Kn === null || (!(iu & 268435455) && !(ym & 268435455)) || wa(Kn, _r);
  }
  function Mm(f, d) {
    var w = Ut;
    Ut |= 2;
    var E = yC();
    (Kn === f && _r === d) || Pl(f, d);
    do
      try {
        iz();
        break;
      } catch (R) {
        vC(f, R);
      }
    while (!0);
    if ((Yc(), (Ut = w), (vm.current = E), Zn !== null)) throw Error(s(261));
    return (Kn = null), (_r = 0), tr;
  }
  function iz() {
    for (; Zn !== null; ) xC(Zn);
  }
  function oz() {
    for (; Zn !== null && !Yf(); ) xC(Zn);
  }
  function xC(f) {
    var d = bC(f.alternate, f, Ii);
    (f.memoizedProps = f.pendingProps),
      d === null ? _C(f) : (Zn = d),
      (Nx.current = null);
  }
  function _C(f) {
    var d = f;
    do {
      var w = d.alternate;
      if (((f = d.return), d.flags & 32768)) {
        if (((w = ZU(w, d)), w !== null)) {
          (w.flags &= 32767), (Zn = w);
          return;
        }
        if (f !== null)
          (f.flags |= 32768), (f.subtreeFlags = 0), (f.deletions = null);
        else {
          (tr = 6), (Zn = null);
          return;
        }
      } else if (((w = qU(w, d, Ii)), w !== null)) {
        Zn = w;
        return;
      }
      if (((d = d.sibling), d !== null)) {
        Zn = d;
        return;
      }
      Zn = d = f;
    } while (d !== null);
    tr === 0 && (tr = 5);
  }
  function Ll(f, d) {
    var w = zt,
      E = Vn.transition;
    try {
      (Vn.transition = null), (zt = 1), sz(f, d, w);
    } finally {
      (Vn.transition = E), (zt = w);
    }
    return null;
  }
  function sz(f, d, w) {
    do Il();
    while (_a !== null);
    if (Ut & 6) throw Error(s(327));
    var E = f.finishedWork,
      R = f.finishedLanes;
    if (E === null) return null;
    if (((f.finishedWork = null), (f.finishedLanes = 0), E === f.current))
      throw Error(s(177));
    (f.callbackNode = null), (f.callbackPriority = 0);
    var O = E.lanes | E.childLanes;
    if (
      (ma(f, O),
      f === Kn && ((Zn = Kn = null), (_r = 0)),
      (!(E.subtreeFlags & 2064) && !(E.flags & 2064)) ||
        _m ||
        ((_m = !0),
        EC(qr, function () {
          return Il(), null;
        })),
      (O = (E.flags & 15990) !== 0),
      E.subtreeFlags & 15990 || O)
    ) {
      (O = Vn.transition), (Vn.transition = null);
      var ee = zt;
      zt = 1;
      var ce = Ut;
      (Ut |= 4),
        (Nx.current = null),
        JU(f, E),
        ez(f, E),
        G(f.containerInfo),
        (f.current = E),
        tz(E),
        Bp(),
        (Ut = ce),
        (zt = ee),
        (Vn.transition = O);
    } else f.current = E;
    if (
      (_m && ((_m = !1), (_a = f), (Sm = R)),
      (O = f.pendingLanes),
      O === 0 && (xa = null),
      Zf(E.stateNode),
      di(f, bn()),
      d !== null)
    )
      for (w = f.onRecoverableError, E = 0; E < d.length; E++) w(d[E]);
    if (xm) throw ((xm = !1), (f = kx), (kx = null), f);
    return (
      Sm & 1 && f.tag !== 0 && Il(),
      (O = f.pendingLanes),
      O & 1 ? (f === Bx ? gd++ : ((gd = 0), (Bx = f))) : (gd = 0),
      ui(),
      null
    );
  }
  function Il() {
    if (_a !== null) {
      var f = qf(Sm),
        d = Vn.transition,
        w = zt;
      try {
        if (((Vn.transition = null), (zt = 16 > f ? 16 : f), _a === null))
          var E = !1;
        else {
          if (((f = _a), (_a = null), (Sm = 0), Ut & 6)) throw Error(s(331));
          var R = Ut;
          for (Ut |= 4, tt = f.current; tt !== null; ) {
            var O = tt,
              ee = O.child;
            if (tt.flags & 16) {
              var ce = O.deletions;
              if (ce !== null) {
                for (var Ie = 0; Ie < ce.length; Ie++) {
                  var Ye = ce[Ie];
                  for (tt = Ye; tt !== null; ) {
                    var ct = tt;
                    switch (ct.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Rl(8, ct, O);
                    }
                    var At = ct.child;
                    if (At !== null) (At.return = ct), (tt = At);
                    else
                      for (; tt !== null; ) {
                        ct = tt;
                        var _t = ct.sibling,
                          un = ct.return;
                        if ((iC(ct), ct === Ye)) {
                          tt = null;
                          break;
                        }
                        if (_t !== null) {
                          (_t.return = un), (tt = _t);
                          break;
                        }
                        tt = un;
                      }
                  }
                }
                var mt = O.alternate;
                if (mt !== null) {
                  var Or = mt.child;
                  if (Or !== null) {
                    mt.child = null;
                    do {
                      var lo = Or.sibling;
                      (Or.sibling = null), (Or = lo);
                    } while (Or !== null);
                  }
                }
                tt = O;
              }
            }
            if (O.subtreeFlags & 2064 && ee !== null)
              (ee.return = O), (tt = ee);
            else
              e: for (; tt !== null; ) {
                if (((O = tt), O.flags & 2048))
                  switch (O.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Rl(9, O, O.return);
                  }
                var _e = O.sibling;
                if (_e !== null) {
                  (_e.return = O.return), (tt = _e);
                  break e;
                }
                tt = O.return;
              }
          }
          var ue = f.current;
          for (tt = ue; tt !== null; ) {
            ee = tt;
            var Te = ee.child;
            if (ee.subtreeFlags & 2064 && Te !== null)
              (Te.return = ee), (tt = Te);
            else
              e: for (ee = ue; tt !== null; ) {
                if (((ce = tt), ce.flags & 2048))
                  try {
                    switch (ce.tag) {
                      case 0:
                      case 11:
                      case 15:
                        dd(9, ce);
                    }
                  } catch (pt) {
                    hi(ce, ce.return, pt);
                  }
                if (ce === ee) {
                  tt = null;
                  break e;
                }
                var rt = ce.sibling;
                if (rt !== null) {
                  (rt.return = ce.return), (tt = rt);
                  break e;
                }
                tt = ce.return;
              }
          }
          if (
            ((Ut = R),
            ui(),
            Ci && typeof Ci.onPostCommitFiberRoot == "function")
          )
            try {
              Ci.onPostCommitFiberRoot(Sl, f);
            } catch {}
          E = !0;
        }
        return E;
      } finally {
        (zt = w), (Vn.transition = d);
      }
    }
    return !1;
  }
  function SC(f, d, w) {
    (d = _x(w, d)),
      (d = N2(f, d, 1)),
      ya(f, d),
      (d = Jr()),
      (f = Em(f, 1)),
      f !== null && (ts(f, 1, d), di(f, d));
  }
  function hi(f, d, w) {
    if (f.tag === 3) SC(f, f, w);
    else
      for (; d !== null; ) {
        if (d.tag === 3) {
          SC(d, f, w);
          break;
        } else if (d.tag === 1) {
          var E = d.stateNode;
          if (
            typeof d.type.getDerivedStateFromError == "function" ||
            (typeof E.componentDidCatch == "function" &&
              (xa === null || !xa.has(E)))
          ) {
            (f = _x(w, f)),
              (f = D2(d, f, 1)),
              ya(d, f),
              (f = Jr()),
              (d = Em(d, 1)),
              d !== null && (ts(d, 1, f), di(d, f));
            break;
          }
        }
        d = d.return;
      }
  }
  function az(f, d, w) {
    var E = f.pingCache;
    E !== null && E.delete(d),
      (d = Jr()),
      (f.pingedLanes |= f.suspendedLanes & w),
      Kn === f &&
        (_r & w) === w &&
        (tr === 4 || (tr === 3 && (_r & 130023424) === _r && 500 > bn() - Ux)
          ? Pl(f, 0)
          : (Dx |= w)),
      di(f, d);
  }
  function wC(f, d) {
    d === 0 &&
      (f.mode & 1
        ? ((d = Rs), (Rs <<= 1), !(Rs & 130023424) && (Rs = 4194304))
        : (d = 1));
    var w = Jr();
    (f = Em(f, d)), f !== null && (ts(f, d, w), di(f, w));
  }
  function lz(f) {
    var d = f.memoizedState,
      w = 0;
    d !== null && (w = d.retryLane), wC(f, w);
  }
  function cz(f, d) {
    var w = 0;
    switch (f.tag) {
      case 13:
        var E = f.stateNode,
          R = f.memoizedState;
        R !== null && (w = R.retryLane);
        break;
      case 19:
        E = f.stateNode;
        break;
      default:
        throw Error(s(314));
    }
    E !== null && E.delete(d), wC(f, w);
  }
  var bC;
  bC = function (f, d, w) {
    if (f !== null)
      if (f.memoizedProps !== d.pendingProps || fn.current) Li = !0;
      else {
        if (!(f.lanes & w) && !(d.flags & 128)) return (Li = !1), KU(f, d, w);
        Li = !!(f.flags & 131072);
      }
    else (Li = !1), xn && d.flags & 1048576 && c2(d, qp, d.index);
    switch (((d.lanes = 0), d.tag)) {
      case 2:
        var E = d.type;
        f !== null &&
          ((f.alternate = null), (d.alternate = null), (d.flags |= 2)),
          (f = d.pendingProps);
        var R = ur(d, Pt.current);
        Bn(d, w), (R = mx(null, d, E, f, R, w));
        var O = gx();
        return (
          (d.flags |= 1),
          typeof R == "object" &&
          R !== null &&
          typeof R.render == "function" &&
          R.$$typeof === void 0
            ? ((d.tag = 1),
              (d.memoizedState = null),
              (d.updateQueue = null),
              In(E) ? ((O = !0), kn(d)) : (O = !1),
              (d.memoizedState =
                R.state !== null && R.state !== void 0 ? R.state : null),
              nx(d),
              (R.updater = $p),
              (d.stateNode = R),
              (R._reactInternals = d),
              ix(d, E, f, w),
              (d = bx(null, d, E, !0, O, w)))
            : ((d.tag = 0), xn && O && ox(d), Qr(null, d, R, w), (d = d.child)),
          d
        );
      case 16:
        E = d.elementType;
        e: {
          switch (
            (f !== null &&
              ((f.alternate = null), (d.alternate = null), (d.flags |= 2)),
            (f = d.pendingProps),
            (R = E._init),
            (E = R(E._payload)),
            (d.type = E),
            (R = d.tag = fz(E)),
            (f = Kr(E, f)),
            R)
          ) {
            case 0:
              d = wx(null, d, E, f, w);
              break e;
            case 1:
              d = X2(null, d, E, f, w);
              break e;
            case 11:
              d = V2(null, d, E, f, w);
              break e;
            case 14:
              d = G2(null, d, E, Kr(E.type, f), w);
              break e;
          }
          throw Error(s(306, E, ""));
        }
        return d;
      case 0:
        return (
          (E = d.type),
          (R = d.pendingProps),
          (R = d.elementType === E ? R : Kr(E, R)),
          wx(f, d, E, R, w)
        );
      case 1:
        return (
          (E = d.type),
          (R = d.pendingProps),
          (R = d.elementType === E ? R : Kr(E, R)),
          X2(f, d, E, R, w)
        );
      case 3:
        e: {
          if ((q2(d), f === null)) throw Error(s(387));
          (E = d.pendingProps),
            (O = d.memoizedState),
            (R = O.element),
            n2(f, d),
            Wp(d, E, null, w);
          var ee = d.memoizedState;
          if (((E = ee.element), xe && O.isDehydrated))
            if (
              ((O = {
                element: E,
                isDehydrated: !1,
                cache: ee.cache,
                transitions: ee.transitions,
              }),
              (d.updateQueue.baseState = O),
              (d.memoizedState = O),
              d.flags & 256)
            ) {
              (R = Error(s(423))), (d = Y2(f, d, E, w, R));
              break e;
            } else if (E !== R) {
              (R = Error(s(424))), (d = Y2(f, d, E, w, R));
              break e;
            } else
              for (
                xe &&
                  ((Pi = qn(d.stateNode.containerInfo)),
                  (Ri = d),
                  (xn = !0),
                  (To = null),
                  (ed = !1)),
                  w = m2(d, null, E, w),
                  d.child = w;
                w;

              )
                (w.flags = (w.flags & -3) | 4096), (w = w.sibling);
          else {
            if ((Qc(), E === R)) {
              d = Us(f, d, w);
              break e;
            }
            Qr(f, d, E, w);
          }
          d = d.child;
        }
        return d;
      case 5:
        return (
          g2(d),
          f === null && lx(d),
          (E = d.type),
          (R = d.pendingProps),
          (O = f !== null ? f.memoizedProps : null),
          (ee = R.children),
          re(E, R) ? (ee = null) : O !== null && re(E, O) && (d.flags |= 32),
          $2(f, d),
          Qr(f, d, ee, w),
          d.child
        );
      case 6:
        return f === null && lx(d), null;
      case 13:
        return K2(f, d, w);
      case 4:
        return (
          ux(d, d.stateNode.containerInfo),
          (E = d.pendingProps),
          f === null ? (d.child = Jc(d, null, E, w)) : Qr(f, d, E, w),
          d.child
        );
      case 11:
        return (
          (E = d.type),
          (R = d.pendingProps),
          (R = d.elementType === E ? R : Kr(E, R)),
          V2(f, d, E, R, w)
        );
      case 7:
        return Qr(f, d, d.pendingProps, w), d.child;
      case 8:
        return Qr(f, d, d.pendingProps.children, w), d.child;
      case 12:
        return Qr(f, d, d.pendingProps.children, w), d.child;
      case 10:
        e: {
          if (
            ((E = d.type._context),
            (R = d.pendingProps),
            (O = d.memoizedProps),
            (ee = R.value),
            Gp(d, E, ee),
            O !== null)
          )
            if (Ti(O.value, ee)) {
              if (O.children === R.children && !fn.current) {
                d = Us(f, d, w);
                break e;
              }
            } else
              for (O = d.child, O !== null && (O.return = d); O !== null; ) {
                var ce = O.dependencies;
                if (ce !== null) {
                  ee = O.child;
                  for (var Ie = ce.firstContext; Ie !== null; ) {
                    if (Ie.context === E) {
                      if (O.tag === 1) {
                        (Ie = Os(-1, w & -w)), (Ie.tag = 2);
                        var Ye = O.updateQueue;
                        if (Ye !== null) {
                          Ye = Ye.shared;
                          var ct = Ye.pending;
                          ct === null
                            ? (Ie.next = Ie)
                            : ((Ie.next = ct.next), (ct.next = Ie)),
                            (Ye.pending = Ie);
                        }
                      }
                      (O.lanes |= w),
                        (Ie = O.alternate),
                        Ie !== null && (Ie.lanes |= w),
                        Zr(O.return, w, d),
                        (ce.lanes |= w);
                      break;
                    }
                    Ie = Ie.next;
                  }
                } else if (O.tag === 10)
                  ee = O.type === d.type ? null : O.child;
                else if (O.tag === 18) {
                  if (((ee = O.return), ee === null)) throw Error(s(341));
                  (ee.lanes |= w),
                    (ce = ee.alternate),
                    ce !== null && (ce.lanes |= w),
                    Zr(ee, w, d),
                    (ee = O.sibling);
                } else ee = O.child;
                if (ee !== null) ee.return = O;
                else
                  for (ee = O; ee !== null; ) {
                    if (ee === d) {
                      ee = null;
                      break;
                    }
                    if (((O = ee.sibling), O !== null)) {
                      (O.return = ee.return), (ee = O);
                      break;
                    }
                    ee = ee.return;
                  }
                O = ee;
              }
          Qr(f, d, R.children, w), (d = d.child);
        }
        return d;
      case 9:
        return (
          (R = d.type),
          (E = d.pendingProps.children),
          Bn(d, w),
          (R = Hn(R)),
          (E = E(R)),
          (d.flags |= 1),
          Qr(f, d, E, w),
          d.child
        );
      case 14:
        return (
          (E = d.type),
          (R = Kr(E, d.pendingProps)),
          (R = Kr(E.type, R)),
          G2(f, d, E, R, w)
        );
      case 15:
        return j2(f, d, d.type, d.pendingProps, w);
      case 17:
        return (
          (E = d.type),
          (R = d.pendingProps),
          (R = d.elementType === E ? R : Kr(E, R)),
          f !== null &&
            ((f.alternate = null), (d.alternate = null), (d.flags |= 2)),
          (d.tag = 1),
          In(E) ? ((f = !0), kn(d)) : (f = !1),
          Bn(d, w),
          a2(d, E, R),
          ix(d, E, R, w),
          bx(null, d, E, !0, f, w)
        );
      case 19:
        return eC(f, d, w);
      case 22:
        return W2(f, d, w);
    }
    throw Error(s(156, d.tag));
  };
  function EC(f, d) {
    return Is(f, d);
  }
  function uz(f, d, w, E) {
    (this.tag = f),
      (this.key = w),
      (this.sibling =
        this.child =
        this.return =
        this.stateNode =
        this.type =
        this.elementType =
          null),
      (this.index = 0),
      (this.ref = null),
      (this.pendingProps = d),
      (this.dependencies =
        this.memoizedState =
        this.updateQueue =
        this.memoizedProps =
          null),
      (this.mode = E),
      (this.subtreeFlags = this.flags = 0),
      (this.deletions = null),
      (this.childLanes = this.lanes = 0),
      (this.alternate = null);
  }
  function ao(f, d, w, E) {
    return new uz(f, d, w, E);
  }
  function Wx(f) {
    return (f = f.prototype), !(!f || !f.isReactComponent);
  }
  function fz(f) {
    if (typeof f == "function") return Wx(f) ? 1 : 0;
    if (f != null) {
      if (((f = f.$$typeof), f === S)) return 11;
      if (f === y) return 14;
    }
    return 2;
  }
  function ba(f, d) {
    var w = f.alternate;
    return (
      w === null
        ? ((w = ao(f.tag, d, f.key, f.mode)),
          (w.elementType = f.elementType),
          (w.type = f.type),
          (w.stateNode = f.stateNode),
          (w.alternate = f),
          (f.alternate = w))
        : ((w.pendingProps = d),
          (w.type = f.type),
          (w.flags = 0),
          (w.subtreeFlags = 0),
          (w.deletions = null)),
      (w.flags = f.flags & 14680064),
      (w.childLanes = f.childLanes),
      (w.lanes = f.lanes),
      (w.child = f.child),
      (w.memoizedProps = f.memoizedProps),
      (w.memoizedState = f.memoizedState),
      (w.updateQueue = f.updateQueue),
      (d = f.dependencies),
      (w.dependencies =
        d === null ? null : { lanes: d.lanes, firstContext: d.firstContext }),
      (w.sibling = f.sibling),
      (w.index = f.index),
      (w.ref = f.ref),
      w
    );
  }
  function Cm(f, d, w, E, R, O) {
    var ee = 2;
    if (((E = f), typeof f == "function")) Wx(f) && (ee = 1);
    else if (typeof f == "string") ee = 5;
    else
      e: switch (f) {
        case u:
          return Ol(w.children, R, O, d);
        case h:
          (ee = 8), (R |= 8);
          break;
        case p:
          return (
            (f = ao(12, w, d, R | 2)), (f.elementType = p), (f.lanes = O), f
          );
        case x:
          return (f = ao(13, w, d, R)), (f.elementType = x), (f.lanes = O), f;
        case g:
          return (f = ao(19, w, d, R)), (f.elementType = g), (f.lanes = O), f;
        case b:
          return Tm(w, R, O, d);
        default:
          if (typeof f == "object" && f !== null)
            switch (f.$$typeof) {
              case m:
                ee = 10;
                break e;
              case v:
                ee = 9;
                break e;
              case S:
                ee = 11;
                break e;
              case y:
                ee = 14;
                break e;
              case _:
                (ee = 16), (E = null);
                break e;
            }
          throw Error(s(130, f == null ? f : typeof f, ""));
      }
    return (
      (d = ao(ee, w, d, R)), (d.elementType = f), (d.type = E), (d.lanes = O), d
    );
  }
  function Ol(f, d, w, E) {
    return (f = ao(7, f, E, d)), (f.lanes = w), f;
  }
  function Tm(f, d, w, E) {
    return (
      (f = ao(22, f, E, d)),
      (f.elementType = b),
      (f.lanes = w),
      (f.stateNode = {}),
      f
    );
  }
  function $x(f, d, w) {
    return (f = ao(6, f, null, d)), (f.lanes = w), f;
  }
  function Xx(f, d, w) {
    return (
      (d = ao(4, f.children !== null ? f.children : [], f.key, d)),
      (d.lanes = w),
      (d.stateNode = {
        containerInfo: f.containerInfo,
        pendingChildren: null,
        implementation: f.implementation,
      }),
      d
    );
  }
  function dz(f, d, w, E, R) {
    (this.tag = d),
      (this.containerInfo = f),
      (this.finishedWork =
        this.pingCache =
        this.current =
        this.pendingChildren =
          null),
      (this.timeoutHandle = Ae),
      (this.callbackNode = this.pendingContext = this.context = null),
      (this.callbackPriority = 0),
      (this.eventTimes = $c(0)),
      (this.expirationTimes = $c(-1)),
      (this.entangledLanes =
        this.finishedLanes =
        this.mutableReadLanes =
        this.expiredLanes =
        this.pingedLanes =
        this.suspendedLanes =
        this.pendingLanes =
          0),
      (this.entanglements = $c(0)),
      (this.identifierPrefix = E),
      (this.onRecoverableError = R),
      xe && (this.mutableSourceEagerHydrationData = null);
  }
  function MC(f, d, w, E, R, O, ee, ce, Ie) {
    return (
      (f = new dz(f, d, w, ce, Ie)),
      d === 1 ? ((d = 1), O === !0 && (d |= 8)) : (d = 0),
      (O = ao(3, null, null, d)),
      (f.current = O),
      (O.stateNode = f),
      (O.memoizedState = {
        element: E,
        isDehydrated: w,
        cache: null,
        transitions: null,
      }),
      nx(O),
      f
    );
  }
  function CC(f) {
    if (!f) return yr;
    f = f._reactInternals;
    e: {
      if (A(f) !== f || f.tag !== 1) throw Error(s(170));
      var d = f;
      do {
        switch (d.tag) {
          case 3:
            d = d.stateNode.context;
            break e;
          case 1:
            if (In(d.type)) {
              d = d.stateNode.__reactInternalMemoizedMergedChildContext;
              break e;
            }
        }
        d = d.return;
      } while (d !== null);
      throw Error(s(171));
    }
    if (f.tag === 1) {
      var w = f.type;
      if (In(w)) return es(f, w, d);
    }
    return d;
  }
  function TC(f) {
    var d = f._reactInternals;
    if (d === void 0)
      throw typeof f.render == "function"
        ? Error(s(188))
        : ((f = Object.keys(f).join(",")), Error(s(268, f)));
    return (f = B(d)), f === null ? null : f.stateNode;
  }
  function AC(f, d) {
    if (((f = f.memoizedState), f !== null && f.dehydrated !== null)) {
      var w = f.retryLane;
      f.retryLane = w !== 0 && w < d ? w : d;
    }
  }
  function qx(f, d) {
    AC(f, d), (f = f.alternate) && AC(f, d);
  }
  function hz(f) {
    return (f = B(f)), f === null ? null : f.stateNode;
  }
  function pz() {
    return null;
  }
  return (
    (n.attemptContinuousHydration = function (f) {
      if (f.tag === 13) {
        var d = Jr();
        so(f, 134217728, d), qx(f, 134217728);
      }
    }),
    (n.attemptHydrationAtCurrentPriority = function (f) {
      if (f.tag === 13) {
        var d = Jr(),
          w = Sa(f);
        so(f, w, d), qx(f, w);
      }
    }),
    (n.attemptSynchronousHydration = function (f) {
      switch (f.tag) {
        case 3:
          var d = f.stateNode;
          if (d.current.memoizedState.isDehydrated) {
            var w = Ps(d.pendingLanes);
            w !== 0 && (ns(d, w | 1), di(d, bn()), !(Ut & 6) && (ou(), ui()));
          }
          break;
        case 13:
          var E = Jr();
          gC(function () {
            return so(f, 1, E);
          }),
            qx(f, 1);
      }
    }),
    (n.batchedUpdates = function (f, d) {
      var w = Ut;
      Ut |= 1;
      try {
        return f(d);
      } finally {
        (Ut = w), Ut === 0 && (ou(), rs && ui());
      }
    }),
    (n.createComponentSelector = function (f) {
      return { $$typeof: dm, value: f };
    }),
    (n.createContainer = function (f, d, w, E, R, O, ee) {
      return MC(f, d, !1, null, w, E, R, O, ee);
    }),
    (n.createHasPseudoClassSelector = function (f) {
      return { $$typeof: hm, value: f };
    }),
    (n.createHydrationContainer = function (f, d, w, E, R, O, ee, ce, Ie) {
      return (
        (f = MC(w, E, !0, f, R, O, ee, ce, Ie)),
        (f.context = CC(null)),
        (w = f.current),
        (E = Jr()),
        (R = Sa(w)),
        (O = Os(E, R)),
        (O.callback = d ?? null),
        ya(w, O),
        (f.current.lanes = R),
        ts(f, R, E),
        di(f, E),
        f
      );
    }),
    (n.createPortal = function (f, d, w) {
      var E =
        3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
      return {
        $$typeof: c,
        key: E == null ? null : "" + E,
        children: f,
        containerInfo: d,
        implementation: w,
      };
    }),
    (n.createRoleSelector = function (f) {
      return { $$typeof: pm, value: f };
    }),
    (n.createTestNameSelector = function (f) {
      return { $$typeof: mm, value: f };
    }),
    (n.createTextSelector = function (f) {
      return { $$typeof: gm, value: f };
    }),
    (n.deferredUpdates = function (f) {
      var d = zt,
        w = Vn.transition;
      try {
        return (Vn.transition = null), (zt = 16), f();
      } finally {
        (zt = d), (Vn.transition = w);
      }
    }),
    (n.discreteUpdates = function (f, d, w, E, R) {
      var O = zt,
        ee = Vn.transition;
      try {
        return (Vn.transition = null), (zt = 1), f(d, w, E, R);
      } finally {
        (zt = O), (Vn.transition = ee), Ut === 0 && ou();
      }
    }),
    (n.findAllNodes = Fx),
    (n.findBoundingRects = function (f, d) {
      if (!F) throw Error(s(363));
      (d = Fx(f, d)), (f = []);
      for (var w = 0; w < d.length; w++) f.push(ae(d[w]));
      for (d = f.length - 1; 0 < d; d--) {
        w = f[d];
        for (
          var E = w.x, R = E + w.width, O = w.y, ee = O + w.height, ce = d - 1;
          0 <= ce;
          ce--
        )
          if (d !== ce) {
            var Ie = f[ce],
              Ye = Ie.x,
              ct = Ye + Ie.width,
              At = Ie.y,
              _t = At + Ie.height;
            if (E >= Ye && O >= At && R <= ct && ee <= _t) {
              f.splice(d, 1);
              break;
            } else if (E !== Ye || w.width !== Ie.width || _t < O || At > ee) {
              if (!(O !== At || w.height !== Ie.height || ct < E || Ye > R)) {
                Ye > E && ((Ie.width += Ye - E), (Ie.x = E)),
                  ct < R && (Ie.width = R - Ye),
                  f.splice(d, 1);
                break;
              }
            } else {
              At > O && ((Ie.height += At - O), (Ie.y = O)),
                _t < ee && (Ie.height = ee - At),
                f.splice(d, 1);
              break;
            }
          }
      }
      return f;
    }),
    (n.findHostInstance = TC),
    (n.findHostInstanceWithNoPortals = function (f) {
      return (
        (f = k(f)),
        (f = f !== null ? D(f) : null),
        f === null ? null : f.stateNode
      );
    }),
    (n.findHostInstanceWithWarning = function (f) {
      return TC(f);
    }),
    (n.flushControlled = function (f) {
      var d = Ut;
      Ut |= 1;
      var w = Vn.transition,
        E = zt;
      try {
        (Vn.transition = null), (zt = 1), f();
      } finally {
        (zt = E), (Vn.transition = w), (Ut = d), Ut === 0 && (ou(), ui());
      }
    }),
    (n.flushPassiveEffects = Il),
    (n.flushSync = gC),
    (n.focusWithin = function (f, d) {
      if (!F) throw Error(s(363));
      for (f = Lx(f), d = hC(f, d), d = Array.from(d), f = 0; f < d.length; ) {
        var w = d[f++];
        if (!de(w)) {
          if (w.tag === 5 && ke(w.stateNode)) return !0;
          for (w = w.child; w !== null; ) d.push(w), (w = w.sibling);
        }
      }
      return !1;
    }),
    (n.getCurrentUpdatePriority = function () {
      return zt;
    }),
    (n.getFindAllNodesFailureDescription = function (f, d) {
      if (!F) throw Error(s(363));
      var w = 0,
        E = [];
      f = [Lx(f), 0];
      for (var R = 0; R < f.length; ) {
        var O = f[R++],
          ee = f[R++],
          ce = d[ee];
        if (
          (O.tag !== 5 || !de(O)) &&
          (Ix(O, ce) && (E.push(Ox(ce)), ee++, ee > w && (w = ee)),
          ee < d.length)
        )
          for (O = O.child; O !== null; ) f.push(O, ee), (O = O.sibling);
      }
      if (w < d.length) {
        for (f = []; w < d.length; w++) f.push(Ox(d[w]));
        return (
          `findAllNodes was able to match part of the selector:
  ` +
          (E.join(" > ") +
            `

No matching component was found for:
  `) +
          f.join(" > ")
        );
      }
      return null;
    }),
    (n.getPublicRootInstance = function (f) {
      if (((f = f.current), !f.child)) return null;
      switch (f.child.tag) {
        case 5:
          return j(f.child.stateNode);
        default:
          return f.child.stateNode;
      }
    }),
    (n.injectIntoDevTools = function (f) {
      if (
        ((f = {
          bundleType: f.bundleType,
          version: f.version,
          rendererPackageName: f.rendererPackageName,
          rendererConfig: f.rendererConfig,
          overrideHookState: null,
          overrideHookStateDeletePath: null,
          overrideHookStateRenamePath: null,
          overrideProps: null,
          overridePropsDeletePath: null,
          overridePropsRenamePath: null,
          setErrorHandler: null,
          setSuspenseHandler: null,
          scheduleUpdate: null,
          currentDispatcherRef: a.ReactCurrentDispatcher,
          findHostInstanceByFiber: hz,
          findFiberByHostInstance: f.findFiberByHostInstance || pz,
          findHostInstancesForRefresh: null,
          scheduleRefresh: null,
          scheduleRoot: null,
          setRefreshHandler: null,
          getCurrentFiber: null,
          reconcilerVersion: "18.0.0-fc46dba67-20220329",
        }),
        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u")
      )
        f = !1;
      else {
        var d = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (d.isDisabled || !d.supportsFiber) f = !0;
        else {
          try {
            (Sl = d.inject(f)), (Ci = d);
          } catch {}
          f = !!d.checkDCE;
        }
      }
      return f;
    }),
    (n.isAlreadyRendering = function () {
      return !1;
    }),
    (n.observeVisibleRects = function (f, d, w, E) {
      if (!F) throw Error(s(363));
      f = Fx(f, d);
      var R = Be(f, w, E).disconnect;
      return {
        disconnect: function () {
          R();
        },
      };
    }),
    (n.registerMutableSourceForHydration = function (f, d) {
      var w = d._getVersion;
      (w = w(d._source)),
        f.mutableSourceEagerHydrationData == null
          ? (f.mutableSourceEagerHydrationData = [d, w])
          : f.mutableSourceEagerHydrationData.push(d, w);
    }),
    (n.runWithPriority = function (f, d) {
      var w = zt;
      try {
        return (zt = f), d();
      } finally {
        zt = w;
      }
    }),
    (n.shouldError = function () {
      return null;
    }),
    (n.shouldSuspend = function () {
      return !1;
    }),
    (n.updateContainer = function (f, d, w, E) {
      var R = d.current,
        O = Jr(),
        ee = Sa(R);
      return (
        (w = CC(w)),
        d.context === null ? (d.context = w) : (d.pendingContext = w),
        (d = Os(O, ee)),
        (d.payload = { element: f }),
        (E = E === void 0 ? null : E),
        E !== null && (d.callback = E),
        ya(R, d),
        (f = so(R, ee, O)),
        f !== null && jp(f, R, ee),
        ee
      );
    }),
    n
  );
};
kF.exports = Oj;
var Fj = kF.exports;
const Nj = cp(Fj),
  Dj = (t) => typeof t == "object" && typeof t.then == "function",
  Ug = [];
function Uj(t, e, n = (r, i) => r === i) {
  if (t === e) return !0;
  if (!t || !e) return !1;
  const r = t.length;
  if (e.length !== r) return !1;
  for (let i = 0; i < r; i++) if (!n(t[i], e[i])) return !1;
  return !0;
}
function zj(t, e = null, n = !1, r = {}) {
  e === null && (e = [t]);
  for (const o of Ug)
    if (Uj(e, o.keys, o.equal)) {
      if (n) return;
      if (Object.prototype.hasOwnProperty.call(o, "error")) throw o.error;
      if (Object.prototype.hasOwnProperty.call(o, "response"))
        return (
          r.lifespan &&
            r.lifespan > 0 &&
            (o.timeout && clearTimeout(o.timeout),
            (o.timeout = setTimeout(o.remove, r.lifespan))),
          o.response
        );
      if (!n) throw o.promise;
    }
  const i = {
    keys: e,
    equal: r.equal,
    remove: () => {
      const o = Ug.indexOf(i);
      o !== -1 && Ug.splice(o, 1);
    },
    promise: (Dj(t) ? t : t(...e))
      .then((o) => {
        (i.response = o),
          r.lifespan &&
            r.lifespan > 0 &&
            (i.timeout = setTimeout(i.remove, r.lifespan));
      })
      .catch((o) => (i.error = o)),
  };
  if ((Ug.push(i), !n)) throw i.promise;
}
const kj = (t, e, n) => zj(t, e, !1, n),
  pM = {},
  Bj = (t) => void Object.assign(pM, t);
function Hj(t, e) {
  function n(u, { args: h = [], attach: p, ...m }, v) {
    let S = `${u[0].toUpperCase()}${u.slice(1)}`,
      x;
    if (u === "primitive") {
      if (m.object === void 0)
        throw new Error("R3F: Primitives without 'object' are invalid!");
      const g = m.object;
      x = Du(g, { type: u, root: v, attach: p, primitive: !0 });
    } else {
      const g = pM[S];
      if (!g)
        throw new Error(
          `R3F: ${S} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`
        );
      if (!Array.isArray(h))
        throw new Error("R3F: The args prop must be an array!");
      x = Du(new g(...h), {
        type: u,
        root: v,
        attach: p,
        memoizedProps: { args: h },
      });
    }
    return (
      x.__r3f.attach === void 0 &&
        (x instanceof It
          ? (x.__r3f.attach = "geometry")
          : x instanceof Rr && (x.__r3f.attach = "material")),
      S !== "inject" && s_(x, m),
      x
    );
  }
  function r(u, h) {
    let p = !1;
    if (h) {
      var m, v;
      (m = h.__r3f) != null && m.attach
        ? o_(u, h, h.__r3f.attach)
        : h.isObject3D && u.isObject3D && (u.add(h), (p = !0)),
        p || (v = u.__r3f) == null || v.objects.push(h),
        h.__r3f || Du(h, {}),
        (h.__r3f.parent = u),
        Lw(h),
        Uu(h);
    }
  }
  function i(u, h, p) {
    let m = !1;
    if (h) {
      var v, S;
      if ((v = h.__r3f) != null && v.attach) o_(u, h, h.__r3f.attach);
      else if (h.isObject3D && u.isObject3D) {
        (h.parent = u), h.dispatchEvent({ type: "added" });
        const x = u.children.filter((y) => y !== h),
          g = x.indexOf(p);
        (u.children = [...x.slice(0, g), h, ...x.slice(g)]), (m = !0);
      }
      m || (S = u.__r3f) == null || S.objects.push(h),
        h.__r3f || Du(h, {}),
        (h.__r3f.parent = u),
        Lw(h),
        Uu(h);
    }
  }
  function o(u, h, p = !1) {
    u && [...u].forEach((m) => s(h, m, p));
  }
  function s(u, h, p) {
    if (h) {
      var m, v, S;
      if (
        (h.__r3f && (h.__r3f.parent = null),
        (m = u.__r3f) != null &&
          m.objects &&
          (u.__r3f.objects = u.__r3f.objects.filter((b) => b !== h)),
        (v = h.__r3f) != null && v.attach)
      )
        yR(u, h, h.__r3f.attach);
      else if (h.isObject3D && u.isObject3D) {
        var x;
        u.remove(h), (x = h.__r3f) != null && x.root && Yj(Rv(h), h);
      }
      const y = (S = h.__r3f) == null ? void 0 : S.primitive,
        _ = !y && (p === void 0 ? h.dispose !== null : p);
      if (!y) {
        var g;
        o((g = h.__r3f) == null ? void 0 : g.objects, h, _),
          o(h.children, h, _);
      }
      if ((delete h.__r3f, _ && h.dispose && h.type !== "Scene")) {
        const b = () => {
          try {
            h.dispose();
          } catch {}
        };
        typeof IS_REACT_ACT_ENVIRONMENT > "u"
          ? Rw.unstable_scheduleCallback(Rw.unstable_IdlePriority, b)
          : b();
      }
      Uu(u);
    }
  }
  function a(u, h, p, m) {
    var v;
    const S = (v = u.__r3f) == null ? void 0 : v.parent;
    if (!S) return;
    const x = n(h, p, u.__r3f.root);
    if (u.children) {
      for (const g of u.children) g.__r3f && r(x, g);
      u.children = u.children.filter((g) => !g.__r3f);
    }
    u.__r3f.objects.forEach((g) => r(x, g)),
      (u.__r3f.objects = []),
      u.__r3f.autoRemovedBeforeAppend || s(S, u),
      x.parent && (x.__r3f.autoRemovedBeforeAppend = !0),
      r(S, x),
      x.raycast &&
        x.__r3f.eventCount &&
        Rv(x).getState().internal.interaction.push(x),
      [m, m.alternate].forEach((g) => {
        g !== null &&
          ((g.stateNode = x),
          g.ref &&
            (typeof g.ref == "function" ? g.ref(x) : (g.ref.current = x)));
      });
  }
  const l = () =>
    console.warn(
      "Text is not allowed in the R3F tree! This could be stray whitespace or characters."
    );
  return {
    reconciler: Nj({
      createInstance: n,
      removeChild: s,
      appendChild: r,
      appendInitialChild: r,
      insertBefore: i,
      supportsMutation: !0,
      isPrimaryRenderer: !1,
      supportsPersistence: !1,
      supportsHydration: !1,
      noTimeout: -1,
      appendChildToContainer: (u, h) => {
        if (!h) return;
        const p = u.getState().scene;
        p.__r3f && ((p.__r3f.root = u), r(p, h));
      },
      removeChildFromContainer: (u, h) => {
        h && s(u.getState().scene, h);
      },
      insertInContainerBefore: (u, h, p) => {
        if (!h || !p) return;
        const m = u.getState().scene;
        m.__r3f && i(m, h, p);
      },
      getRootHostContext: () => null,
      getChildHostContext: (u) => u,
      finalizeInitialChildren(u) {
        var h;
        return !!((h = u == null ? void 0 : u.__r3f) != null ? h : {}).handlers;
      },
      prepareUpdate(u, h, p, m) {
        var v;
        if (
          ((v = u == null ? void 0 : u.__r3f) != null ? v : {}).primitive &&
          m.object &&
          m.object !== u
        )
          return [!0];
        {
          const { args: x = [], children: g, ...y } = m,
            { args: _ = [], children: b, ...T } = p;
          if (!Array.isArray(x))
            throw new Error("R3F: the args prop must be an array!");
          if (x.some((C, L) => C !== _[L])) return [!0];
          const M = qF(u, y, T, !0);
          return M.changes.length ? [!1, M] : null;
        }
      },
      commitUpdate(u, [h, p], m, v, S, x) {
        h ? a(u, m, S, x) : s_(u, p);
      },
      commitMount(u, h, p, m) {
        var v;
        const S = (v = u.__r3f) != null ? v : {};
        u.raycast &&
          S.handlers &&
          S.eventCount &&
          Rv(u).getState().internal.interaction.push(u);
      },
      getPublicInstance: (u) => u,
      prepareForCommit: () => null,
      preparePortalMount: (u) => Du(u.getState().scene),
      resetAfterCommit: () => {},
      shouldSetTextContent: () => !1,
      clearContainer: () => !1,
      hideInstance(u) {
        var h;
        const { attach: p, parent: m } = (h = u.__r3f) != null ? h : {};
        p && m && yR(m, u, p), u.isObject3D && (u.visible = !1), Uu(u);
      },
      unhideInstance(u, h) {
        var p;
        const { attach: m, parent: v } = (p = u.__r3f) != null ? p : {};
        m && v && o_(v, u, m),
          ((u.isObject3D && h.visible == null) || h.visible) &&
            (u.visible = !0),
          Uu(u);
      },
      createTextInstance: l,
      hideTextInstance: l,
      unhideTextInstance: l,
      getCurrentEventPriority: () => (e ? e() : nf.DefaultEventPriority),
      beforeActiveInstanceBlur: () => {},
      afterActiveInstanceBlur: () => {},
      detachDeletedInstance: () => {},
      now:
        typeof performance < "u" && _n.fun(performance.now)
          ? performance.now
          : _n.fun(Date.now)
          ? Date.now
          : () => 0,
      scheduleTimeout: _n.fun(setTimeout) ? setTimeout : void 0,
      cancelTimeout: _n.fun(clearTimeout) ? clearTimeout : void 0,
    }),
    applyProps: s_,
  };
}
var pR, mR;
const i_ = (t) => "colorSpace" in t || "outputColorSpace" in t,
  VF = () => {
    var t;
    return (t = pM.ColorManagement) != null ? t : null;
  },
  GF = (t) => t && t.isOrthographicCamera,
  Vj = (t) => t && t.hasOwnProperty("current"),
  Cp =
    typeof window < "u" &&
    (((pR = window.document) != null && pR.createElement) ||
      ((mR = window.navigator) == null ? void 0 : mR.product) === "ReactNative")
      ? z.useLayoutEffect
      : z.useEffect;
function jF(t) {
  const e = z.useRef(t);
  return Cp(() => void (e.current = t), [t]), e;
}
function Gj({ set: t }) {
  return Cp(() => (t(new Promise(() => null)), () => t(!1)), [t]), null;
}
class WF extends z.Component {
  constructor(...e) {
    super(...e), (this.state = { error: !1 });
  }
  componentDidCatch(e) {
    this.props.set(e);
  }
  render() {
    return this.state.error ? null : this.props.children;
  }
}
WF.getDerivedStateFromError = () => ({ error: !0 });
const $F = "__default",
  gR = new Map(),
  jj = (t) => t && !!t.memoized && !!t.changes;
function XF(t) {
  var e;
  const n =
    typeof window < "u" ? ((e = window.devicePixelRatio) != null ? e : 2) : 1;
  return Array.isArray(t) ? Math.min(Math.max(t[0], n), t[1]) : t;
}
const Dd = (t) => {
  var e;
  return (e = t.__r3f) == null ? void 0 : e.root.getState();
};
function Rv(t) {
  let e = t.__r3f.root;
  for (; e.getState().previousRoot; ) e = e.getState().previousRoot;
  return e;
}
const _n = {
  obj: (t) => t === Object(t) && !_n.arr(t) && typeof t != "function",
  fun: (t) => typeof t == "function",
  str: (t) => typeof t == "string",
  num: (t) => typeof t == "number",
  boo: (t) => typeof t == "boolean",
  und: (t) => t === void 0,
  arr: (t) => Array.isArray(t),
  equ(
    t,
    e,
    { arrays: n = "shallow", objects: r = "reference", strict: i = !0 } = {}
  ) {
    if (typeof t != typeof e || !!t != !!e) return !1;
    if (_n.str(t) || _n.num(t)) return t === e;
    const o = _n.obj(t);
    if (o && r === "reference") return t === e;
    const s = _n.arr(t);
    if (s && n === "reference") return t === e;
    if ((s || o) && t === e) return !0;
    let a;
    for (a in t) if (!(a in e)) return !1;
    if (o && n === "shallow" && r === "shallow") {
      for (a in i ? e : t)
        if (!_n.equ(t[a], e[a], { strict: i, objects: "reference" })) return !1;
    } else for (a in i ? e : t) if (t[a] !== e[a]) return !1;
    if (_n.und(a)) {
      if (
        (s && t.length === 0 && e.length === 0) ||
        (o && Object.keys(t).length === 0 && Object.keys(e).length === 0)
      )
        return !0;
      if (t !== e) return !1;
    }
    return !0;
  },
};
function Wj(t) {
  t.dispose && t.type !== "Scene" && t.dispose();
  for (const e in t) e.dispose == null || e.dispose(), delete t[e];
}
function Du(t, e) {
  const n = t;
  return (
    (n.__r3f = {
      type: "",
      root: null,
      previousAttach: null,
      memoizedProps: {},
      eventCount: 0,
      handlers: {},
      objects: [],
      parent: null,
      ...e,
    }),
    t
  );
}
function Pw(t, e) {
  let n = t;
  if (e.includes("-")) {
    const r = e.split("-"),
      i = r.pop();
    return (n = r.reduce((o, s) => o[s], t)), { target: n, key: i };
  } else return { target: n, key: e };
}
const vR = /-\d+$/;
function o_(t, e, n) {
  if (_n.str(n)) {
    if (vR.test(n)) {
      const o = n.replace(vR, ""),
        { target: s, key: a } = Pw(t, o);
      Array.isArray(s[a]) || (s[a] = []);
    }
    const { target: r, key: i } = Pw(t, n);
    (e.__r3f.previousAttach = r[i]), (r[i] = e);
  } else e.__r3f.previousAttach = n(t, e);
}
function yR(t, e, n) {
  var r, i;
  if (_n.str(n)) {
    const { target: o, key: s } = Pw(t, n),
      a = e.__r3f.previousAttach;
    a === void 0 ? delete o[s] : (o[s] = a);
  } else
    (r = e.__r3f) == null || r.previousAttach == null || r.previousAttach(t, e);
  (i = e.__r3f) == null || delete i.previousAttach;
}
function qF(
  t,
  { children: e, key: n, ref: r, ...i },
  { children: o, key: s, ref: a, ...l } = {},
  c = !1
) {
  var u;
  const h = (u = t == null ? void 0 : t.__r3f) != null ? u : {},
    p = Object.entries(i),
    m = [];
  if (c) {
    const S = Object.keys(l);
    for (let x = 0; x < S.length; x++)
      i.hasOwnProperty(S[x]) || p.unshift([S[x], $F + "remove"]);
  }
  p.forEach(([S, x]) => {
    var g;
    if (
      ((g = t.__r3f) != null && g.primitive && S === "object") ||
      _n.equ(x, l[S])
    )
      return;
    if (/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(S))
      return m.push([S, x, !0, []]);
    let y = [];
    S.includes("-") && (y = S.split("-")), m.push([S, x, !1, y]);
    for (const _ in i) {
      const b = i[_];
      _.startsWith(`${S}-`) && m.push([_, b, !1, _.split("-")]);
    }
  });
  const v = { ...i };
  return (
    h.memoizedProps && h.memoizedProps.args && (v.args = h.memoizedProps.args),
    h.memoizedProps &&
      h.memoizedProps.attach &&
      (v.attach = h.memoizedProps.attach),
    { memoized: v, changes: m }
  );
}
const $j = typeof process < "u" && !1;
function s_(t, e) {
  var n, r, i;
  const o = (n = t.__r3f) != null ? n : {},
    s = o.root,
    a =
      (r = s == null || s.getState == null ? void 0 : s.getState()) != null
        ? r
        : {},
    { memoized: l, changes: c } = jj(e) ? e : qF(t, e),
    u = o.eventCount;
  t.__r3f && (t.__r3f.memoizedProps = l);
  for (let p = 0; p < c.length; p++) {
    let [m, v, S, x] = c[p];
    if (i_(t)) {
      const b = "srgb",
        T = "srgb-linear";
      m === "encoding"
        ? ((m = "colorSpace"), (v = v === 3001 ? b : T))
        : m === "outputEncoding" &&
          ((m = "outputColorSpace"), (v = v === 3001 ? b : T));
    }
    let g = t,
      y = g[m];
    if (x.length && ((y = x.reduce((_, b) => _[b], t)), !(y && y.set))) {
      const [_, ...b] = x.reverse();
      (g = b.reverse().reduce((T, M) => T[M], t)), (m = _);
    }
    if (v === $F + "remove")
      if (g.constructor) {
        let _ = gR.get(g.constructor);
        _ || ((_ = new g.constructor()), gR.set(g.constructor, _)), (v = _[m]);
      } else v = 0;
    if (S)
      v ? (o.handlers[m] = v) : delete o.handlers[m],
        (o.eventCount = Object.keys(o.handlers).length);
    else if (y && y.set && (y.copy || y instanceof mc)) {
      if (Array.isArray(v)) y.fromArray ? y.fromArray(v) : y.set(...v);
      else if (
        y.copy &&
        v &&
        v.constructor &&
        ($j
          ? y.constructor.name === v.constructor.name
          : y.constructor === v.constructor)
      )
        y.copy(v);
      else if (v !== void 0) {
        const _ = y instanceof nt;
        !_ && y.setScalar
          ? y.setScalar(v)
          : y instanceof mc && v instanceof mc
          ? (y.mask = v.mask)
          : y.set(v),
          !VF() && !a.linear && _ && y.convertSRGBToLinear();
      }
    } else if (
      ((g[m] = v), g[m] instanceof Pn && g[m].format === ri && g[m].type === xs)
    ) {
      const _ = g[m];
      i_(_) && i_(a.gl)
        ? (_.colorSpace = a.gl.outputColorSpace)
        : (_.encoding = a.gl.outputEncoding);
    }
    Uu(t);
  }
  if (o.parent && t.raycast && u !== o.eventCount) {
    const p = Rv(t).getState().internal,
      m = p.interaction.indexOf(t);
    m > -1 && p.interaction.splice(m, 1), o.eventCount && p.interaction.push(t);
  }
  return (
    !(c.length === 1 && c[0][0] === "onUpdate") &&
      c.length &&
      (i = t.__r3f) != null &&
      i.parent &&
      Lw(t),
    t
  );
}
function Uu(t) {
  var e, n;
  const r =
    (e = t.__r3f) == null || (n = e.root) == null || n.getState == null
      ? void 0
      : n.getState();
  r && r.internal.frames === 0 && r.invalidate();
}
function Lw(t) {
  t.onUpdate == null || t.onUpdate(t);
}
function Xj(t, e) {
  t.manual ||
    (GF(t)
      ? ((t.left = e.width / -2),
        (t.right = e.width / 2),
        (t.top = e.height / 2),
        (t.bottom = e.height / -2))
      : (t.aspect = e.width / e.height),
    t.updateProjectionMatrix(),
    t.updateMatrixWorld());
}
function zg(t) {
  return (t.eventObject || t.object).uuid + "/" + t.index + t.instanceId;
}
function qj() {
  var t;
  const e = (typeof self < "u" && self) || (typeof window < "u" && window);
  if (!e) return nf.DefaultEventPriority;
  switch ((t = e.event) == null ? void 0 : t.type) {
    case "click":
    case "contextmenu":
    case "dblclick":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
      return nf.DiscreteEventPriority;
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "pointerenter":
    case "pointerleave":
    case "wheel":
      return nf.ContinuousEventPriority;
    default:
      return nf.DefaultEventPriority;
  }
}
function YF(t, e, n, r) {
  const i = n.get(e);
  i &&
    (n.delete(e),
    n.size === 0 && (t.delete(r), i.target.releasePointerCapture(r)));
}
function Yj(t, e) {
  const { internal: n } = t.getState();
  (n.interaction = n.interaction.filter((r) => r !== e)),
    (n.initialHits = n.initialHits.filter((r) => r !== e)),
    n.hovered.forEach((r, i) => {
      (r.eventObject === e || r.object === e) && n.hovered.delete(i);
    }),
    n.capturedMap.forEach((r, i) => {
      YF(n.capturedMap, e, r, i);
    });
}
function Kj(t) {
  function e(l) {
    const { internal: c } = t.getState(),
      u = l.offsetX - c.initialClick[0],
      h = l.offsetY - c.initialClick[1];
    return Math.round(Math.sqrt(u * u + h * h));
  }
  function n(l) {
    return l.filter((c) =>
      ["Move", "Over", "Enter", "Out", "Leave"].some((u) => {
        var h;
        return (h = c.__r3f) == null ? void 0 : h.handlers["onPointer" + u];
      })
    );
  }
  function r(l, c) {
    const u = t.getState(),
      h = new Set(),
      p = [],
      m = c ? c(u.internal.interaction) : u.internal.interaction;
    for (let g = 0; g < m.length; g++) {
      const y = Dd(m[g]);
      y && (y.raycaster.camera = void 0);
    }
    u.previousRoot || u.events.compute == null || u.events.compute(l, u);
    function v(g) {
      const y = Dd(g);
      if (!y || !y.events.enabled || y.raycaster.camera === null) return [];
      if (y.raycaster.camera === void 0) {
        var _;
        y.events.compute == null ||
          y.events.compute(
            l,
            y,
            (_ = y.previousRoot) == null ? void 0 : _.getState()
          ),
          y.raycaster.camera === void 0 && (y.raycaster.camera = null);
      }
      return y.raycaster.camera ? y.raycaster.intersectObject(g, !0) : [];
    }
    let S = m
      .flatMap(v)
      .sort((g, y) => {
        const _ = Dd(g.object),
          b = Dd(y.object);
        return !_ || !b
          ? g.distance - y.distance
          : b.events.priority - _.events.priority || g.distance - y.distance;
      })
      .filter((g) => {
        const y = zg(g);
        return h.has(y) ? !1 : (h.add(y), !0);
      });
    u.events.filter && (S = u.events.filter(S, u));
    for (const g of S) {
      let y = g.object;
      for (; y; ) {
        var x;
        (x = y.__r3f) != null &&
          x.eventCount &&
          p.push({ ...g, eventObject: y }),
          (y = y.parent);
      }
    }
    if ("pointerId" in l && u.internal.capturedMap.has(l.pointerId))
      for (let g of u.internal.capturedMap.get(l.pointerId).values())
        h.has(zg(g.intersection)) || p.push(g.intersection);
    return p;
  }
  function i(l, c, u, h) {
    const p = t.getState();
    if (l.length) {
      const m = { stopped: !1 };
      for (const v of l) {
        const S = Dd(v.object) || p,
          { raycaster: x, pointer: g, camera: y, internal: _ } = S,
          b = new W(g.x, g.y, 0).unproject(y),
          T = (P) => {
            var k, B;
            return (k =
              (B = _.capturedMap.get(P)) == null
                ? void 0
                : B.has(v.eventObject)) != null
              ? k
              : !1;
          },
          M = (P) => {
            const k = { intersection: v, target: c.target };
            _.capturedMap.has(P)
              ? _.capturedMap.get(P).set(v.eventObject, k)
              : _.capturedMap.set(P, new Map([[v.eventObject, k]])),
              c.target.setPointerCapture(P);
          },
          C = (P) => {
            const k = _.capturedMap.get(P);
            k && YF(_.capturedMap, v.eventObject, k, P);
          };
        let L = {};
        for (let P in c) {
          let k = c[P];
          typeof k != "function" && (L[P] = k);
        }
        let A = {
          ...v,
          ...L,
          pointer: g,
          intersections: l,
          stopped: m.stopped,
          delta: u,
          unprojectedPoint: b,
          ray: x.ray,
          camera: y,
          stopPropagation() {
            const P = "pointerId" in c && _.capturedMap.get(c.pointerId);
            if (
              (!P || P.has(v.eventObject)) &&
              ((A.stopped = m.stopped = !0),
              _.hovered.size &&
                Array.from(_.hovered.values()).find(
                  (k) => k.eventObject === v.eventObject
                ))
            ) {
              const k = l.slice(0, l.indexOf(v));
              o([...k, v]);
            }
          },
          target: {
            hasPointerCapture: T,
            setPointerCapture: M,
            releasePointerCapture: C,
          },
          currentTarget: {
            hasPointerCapture: T,
            setPointerCapture: M,
            releasePointerCapture: C,
          },
          nativeEvent: c,
        };
        if ((h(A), m.stopped === !0)) break;
      }
    }
    return l;
  }
  function o(l) {
    const { internal: c } = t.getState();
    for (const u of c.hovered.values())
      if (
        !l.length ||
        !l.find(
          (h) =>
            h.object === u.object &&
            h.index === u.index &&
            h.instanceId === u.instanceId
        )
      ) {
        const p = u.eventObject.__r3f,
          m = p == null ? void 0 : p.handlers;
        if ((c.hovered.delete(zg(u)), p != null && p.eventCount)) {
          const v = { ...u, intersections: l };
          m.onPointerOut == null || m.onPointerOut(v),
            m.onPointerLeave == null || m.onPointerLeave(v);
        }
      }
  }
  function s(l, c) {
    for (let u = 0; u < c.length; u++) {
      const h = c[u].__r3f;
      h == null ||
        h.handlers.onPointerMissed == null ||
        h.handlers.onPointerMissed(l);
    }
  }
  function a(l) {
    switch (l) {
      case "onPointerLeave":
      case "onPointerCancel":
        return () => o([]);
      case "onLostPointerCapture":
        return (c) => {
          const { internal: u } = t.getState();
          "pointerId" in c &&
            u.capturedMap.has(c.pointerId) &&
            requestAnimationFrame(() => {
              u.capturedMap.has(c.pointerId) &&
                (u.capturedMap.delete(c.pointerId), o([]));
            });
        };
    }
    return function (u) {
      const { onPointerMissed: h, internal: p } = t.getState();
      p.lastEvent.current = u;
      const m = l === "onPointerMove",
        v = l === "onClick" || l === "onContextMenu" || l === "onDoubleClick",
        x = r(u, m ? n : void 0),
        g = v ? e(u) : 0;
      l === "onPointerDown" &&
        ((p.initialClick = [u.offsetX, u.offsetY]),
        (p.initialHits = x.map((_) => _.eventObject))),
        v && !x.length && g <= 2 && (s(u, p.interaction), h && h(u)),
        m && o(x);
      function y(_) {
        const b = _.eventObject,
          T = b.__r3f,
          M = T == null ? void 0 : T.handlers;
        if (T != null && T.eventCount)
          if (m) {
            if (
              M.onPointerOver ||
              M.onPointerEnter ||
              M.onPointerOut ||
              M.onPointerLeave
            ) {
              const C = zg(_),
                L = p.hovered.get(C);
              L
                ? L.stopped && _.stopPropagation()
                : (p.hovered.set(C, _),
                  M.onPointerOver == null || M.onPointerOver(_),
                  M.onPointerEnter == null || M.onPointerEnter(_));
            }
            M.onPointerMove == null || M.onPointerMove(_);
          } else {
            const C = M[l];
            C
              ? (!v || p.initialHits.includes(b)) &&
                (s(
                  u,
                  p.interaction.filter((L) => !p.initialHits.includes(L))
                ),
                C(_))
              : v &&
                p.initialHits.includes(b) &&
                s(
                  u,
                  p.interaction.filter((L) => !p.initialHits.includes(L))
                );
          }
      }
      i(x, u, g, y);
    };
  }
  return { handlePointer: a };
}
const KF = (t) => !!(t != null && t.render),
  ZF = z.createContext(null),
  Zj = (t, e) => {
    const n = Ij((a, l) => {
        const c = new W(),
          u = new W(),
          h = new W();
        function p(g = l().camera, y = u, _ = l().size) {
          const { width: b, height: T, top: M, left: C } = _,
            L = b / T;
          y instanceof W ? h.copy(y) : h.set(...y);
          const A = g.getWorldPosition(c).distanceTo(h);
          if (GF(g))
            return {
              width: b / g.zoom,
              height: T / g.zoom,
              top: M,
              left: C,
              factor: 1,
              distance: A,
              aspect: L,
            };
          {
            const P = (g.fov * Math.PI) / 180,
              k = 2 * Math.tan(P / 2) * A,
              B = k * (b / T);
            return {
              width: B,
              height: k,
              top: M,
              left: C,
              factor: b / B,
              distance: A,
              aspect: L,
            };
          }
        }
        let m;
        const v = (g) =>
            a((y) => ({ performance: { ...y.performance, current: g } })),
          S = new Fe();
        return {
          set: a,
          get: l,
          gl: null,
          camera: null,
          raycaster: null,
          events: { priority: 1, enabled: !0, connected: !1 },
          xr: null,
          scene: null,
          invalidate: (g = 1) => t(l(), g),
          advance: (g, y) => e(g, y, l()),
          legacy: !1,
          linear: !1,
          flat: !1,
          controls: null,
          clock: new uM(),
          pointer: S,
          mouse: S,
          frameloop: "always",
          onPointerMissed: void 0,
          performance: {
            current: 1,
            min: 0.5,
            max: 1,
            debounce: 200,
            regress: () => {
              const g = l();
              m && clearTimeout(m),
                g.performance.current !== g.performance.min &&
                  v(g.performance.min),
                (m = setTimeout(
                  () => v(l().performance.max),
                  g.performance.debounce
                ));
            },
          },
          size: { width: 0, height: 0, top: 0, left: 0, updateStyle: !1 },
          viewport: {
            initialDpr: 0,
            dpr: 0,
            width: 0,
            height: 0,
            top: 0,
            left: 0,
            aspect: 0,
            distance: 0,
            factor: 0,
            getCurrentViewport: p,
          },
          setEvents: (g) => a((y) => ({ ...y, events: { ...y.events, ...g } })),
          setSize: (g, y, _, b, T) => {
            const M = l().camera,
              C = {
                width: g,
                height: y,
                top: b || 0,
                left: T || 0,
                updateStyle: _,
              };
            a((L) => ({ size: C, viewport: { ...L.viewport, ...p(M, u, C) } }));
          },
          setDpr: (g) =>
            a((y) => {
              const _ = XF(g);
              return {
                viewport: {
                  ...y.viewport,
                  dpr: _,
                  initialDpr: y.viewport.initialDpr || _,
                },
              };
            }),
          setFrameloop: (g = "always") => {
            const y = l().clock;
            y.stop(),
              (y.elapsedTime = 0),
              g !== "never" && (y.start(), (y.elapsedTime = 0)),
              a(() => ({ frameloop: g }));
          },
          previousRoot: void 0,
          internal: {
            active: !1,
            priority: 0,
            frames: 0,
            lastEvent: z.createRef(),
            interaction: [],
            hovered: new Map(),
            subscribers: [],
            initialClick: [0, 0],
            initialHits: [],
            capturedMap: new Map(),
            subscribe: (g, y, _) => {
              const b = l().internal;
              return (
                (b.priority = b.priority + (y > 0 ? 1 : 0)),
                b.subscribers.push({ ref: g, priority: y, store: _ }),
                (b.subscribers = b.subscribers.sort(
                  (T, M) => T.priority - M.priority
                )),
                () => {
                  const T = l().internal;
                  T != null &&
                    T.subscribers &&
                    ((T.priority = T.priority - (y > 0 ? 1 : 0)),
                    (T.subscribers = T.subscribers.filter((M) => M.ref !== g)));
                }
              );
            },
          },
        };
      }),
      r = n.getState();
    let i = r.size,
      o = r.viewport.dpr,
      s = r.camera;
    return (
      n.subscribe(() => {
        const { camera: a, size: l, viewport: c, gl: u, set: h } = n.getState();
        if (l.width !== i.width || l.height !== i.height || c.dpr !== o) {
          var p;
          (i = l), (o = c.dpr), Xj(a, l), u.setPixelRatio(c.dpr);
          const m =
            (p = l.updateStyle) != null
              ? p
              : typeof HTMLCanvasElement < "u" &&
                u.domElement instanceof HTMLCanvasElement;
          u.setSize(l.width, l.height, m);
        }
        a !== s &&
          ((s = a),
          h((m) => ({
            viewport: { ...m.viewport, ...m.viewport.getCurrentViewport(a) },
          })));
      }),
      n.subscribe((a) => t(a)),
      n
    );
  };
let kg,
  Qj = new Set(),
  Jj = new Set(),
  eW = new Set();
function a_(t, e) {
  if (t.size) for (const { callback: n } of t.values()) n(e);
}
function Ud(t, e) {
  switch (t) {
    case "before":
      return a_(Qj, e);
    case "after":
      return a_(Jj, e);
    case "tail":
      return a_(eW, e);
  }
}
let l_, c_;
function u_(t, e, n) {
  let r = e.clock.getDelta();
  for (
    e.frameloop === "never" &&
      typeof t == "number" &&
      ((r = t - e.clock.elapsedTime),
      (e.clock.oldTime = e.clock.elapsedTime),
      (e.clock.elapsedTime = t)),
      l_ = e.internal.subscribers,
      kg = 0;
    kg < l_.length;
    kg++
  )
    (c_ = l_[kg]), c_.ref.current(c_.store.getState(), r, n);
  return (
    !e.internal.priority && e.gl.render && e.gl.render(e.scene, e.camera),
    (e.internal.frames = Math.max(0, e.internal.frames - 1)),
    e.frameloop === "always" ? 1 : e.internal.frames
  );
}
function tW(t) {
  let e = !1,
    n,
    r,
    i;
  function o(l) {
    (r = requestAnimationFrame(o)), (e = !0), (n = 0), Ud("before", l);
    for (const u of t.values()) {
      var c;
      (i = u.store.getState()),
        i.internal.active &&
          (i.frameloop === "always" || i.internal.frames > 0) &&
          !((c = i.gl.xr) != null && c.isPresenting) &&
          (n += u_(l, i));
    }
    if ((Ud("after", l), n === 0))
      return Ud("tail", l), (e = !1), cancelAnimationFrame(r);
  }
  function s(l, c = 1) {
    var u;
    if (!l) return t.forEach((h) => s(h.store.getState()), c);
    ((u = l.gl.xr) != null && u.isPresenting) ||
      !l.internal.active ||
      l.frameloop === "never" ||
      ((l.internal.frames = Math.min(60, l.internal.frames + c)),
      e || ((e = !0), requestAnimationFrame(o)));
  }
  function a(l, c = !0, u, h) {
    if ((c && Ud("before", l), u)) u_(l, u, h);
    else for (const p of t.values()) u_(l, p.store.getState());
    c && Ud("after", l);
  }
  return { loop: o, invalidate: s, advance: a };
}
function QF() {
  const t = z.useContext(ZF);
  if (!t)
    throw new Error("R3F: Hooks can only be used within the Canvas component!");
  return t;
}
function ds(t = (n) => n, e) {
  return QF()(t, e);
}
function JF(t, e = 0) {
  const n = QF(),
    r = n.getState().internal.subscribe,
    i = jF(t);
  return Cp(() => r(i, e, n), [e, r, n]), null;
}
const Rf = new Map(),
  { invalidate: xR, advance: _R } = tW(Rf),
  { reconciler: y0, applyProps: Au } = Hj(Rf, qj),
  Ru = { objects: "shallow", strict: !1 },
  nW = (t, e) => {
    const n = typeof t == "function" ? t(e) : t;
    return KF(n)
      ? n
      : new $E({
          powerPreference: "high-performance",
          canvas: e,
          antialias: !0,
          alpha: !0,
          ...t,
        });
  };
function rW(t, e) {
  const n = typeof HTMLCanvasElement < "u" && t instanceof HTMLCanvasElement;
  if (e) {
    const { width: r, height: i, top: o, left: s, updateStyle: a = n } = e;
    return { width: r, height: i, top: o, left: s, updateStyle: a };
  } else if (
    typeof HTMLCanvasElement < "u" &&
    t instanceof HTMLCanvasElement &&
    t.parentElement
  ) {
    const {
      width: r,
      height: i,
      top: o,
      left: s,
    } = t.parentElement.getBoundingClientRect();
    return { width: r, height: i, top: o, left: s, updateStyle: n };
  } else if (typeof OffscreenCanvas < "u" && t instanceof OffscreenCanvas)
    return {
      width: t.width,
      height: t.height,
      top: 0,
      left: 0,
      updateStyle: n,
    };
  return { width: 0, height: 0, top: 0, left: 0 };
}
function iW(t) {
  const e = Rf.get(t),
    n = e == null ? void 0 : e.fiber,
    r = e == null ? void 0 : e.store;
  e && console.warn("R3F.createRoot should only be called once!");
  const i = typeof reportError == "function" ? reportError : console.error,
    o = r || Zj(xR, _R),
    s =
      n ||
      y0.createContainer(o, nf.ConcurrentRoot, null, !1, null, "", i, null);
  e || Rf.set(t, { fiber: s, store: o });
  let a,
    l = !1,
    c;
  return {
    configure(u = {}) {
      let {
          gl: h,
          size: p,
          scene: m,
          events: v,
          onCreated: S,
          shadows: x = !1,
          linear: g = !1,
          flat: y = !1,
          legacy: _ = !1,
          orthographic: b = !1,
          frameloop: T = "always",
          dpr: M = [1, 2],
          performance: C,
          raycaster: L,
          camera: A,
          onPointerMissed: P,
        } = u,
        k = o.getState(),
        B = k.gl;
      k.gl || k.set({ gl: (B = nW(h, t)) });
      let $ = k.raycaster;
      $ || k.set({ raycaster: ($ = new NF()) });
      const { params: D, ...X } = L || {};
      if (
        (_n.equ(X, $, Ru) || Au($, { ...X }),
        _n.equ(D, $.params, Ru) || Au($, { params: { ...$.params, ...D } }),
        !k.camera || (k.camera === c && !_n.equ(c, A, Ru)))
      ) {
        c = A;
        const G = A instanceof xp,
          U = G
            ? A
            : b
            ? new ea(0, 0, 0, 0, 0.1, 1e3)
            : new Un(75, 0, 0.1, 1e3);
        G ||
          ((U.position.z = 5),
          A && Au(U, A),
          !k.camera && !(A != null && A.rotation) && U.lookAt(0, 0, 0)),
          k.set({ camera: U }),
          ($.camera = U);
      }
      if (!k.scene) {
        let G;
        m instanceof m0 ? (G = m) : ((G = new m0()), m && Au(G, m)),
          k.set({ scene: Du(G) });
      }
      if (!k.xr) {
        var j;
        const G = (Q, te) => {
            const re = o.getState();
            re.frameloop !== "never" && _R(Q, !0, re, te);
          },
          U = () => {
            const Q = o.getState();
            (Q.gl.xr.enabled = Q.gl.xr.isPresenting),
              Q.gl.xr.setAnimationLoop(Q.gl.xr.isPresenting ? G : null),
              Q.gl.xr.isPresenting || xR(Q);
          },
          Z = {
            connect() {
              const Q = o.getState().gl;
              Q.xr.addEventListener("sessionstart", U),
                Q.xr.addEventListener("sessionend", U);
            },
            disconnect() {
              const Q = o.getState().gl;
              Q.xr.removeEventListener("sessionstart", U),
                Q.xr.removeEventListener("sessionend", U);
            },
          };
        typeof ((j = B.xr) == null ? void 0 : j.addEventListener) ==
          "function" && Z.connect(),
          k.set({ xr: Z });
      }
      if (B.shadowMap) {
        const G = B.shadowMap.enabled,
          U = B.shadowMap.type;
        if (((B.shadowMap.enabled = !!x), _n.boo(x))) B.shadowMap.type = rh;
        else if (_n.str(x)) {
          var Y;
          const Z = { basic: PI, percentage: Z0, soft: rh, variance: No };
          B.shadowMap.type = (Y = Z[x]) != null ? Y : rh;
        } else _n.obj(x) && Object.assign(B.shadowMap, x);
        (G !== B.shadowMap.enabled || U !== B.shadowMap.type) &&
          (B.shadowMap.needsUpdate = !0);
      }
      const N = VF();
      N &&
        ("enabled" in N
          ? (N.enabled = !_)
          : "legacyMode" in N && (N.legacyMode = _)),
        l ||
          Au(B, { outputEncoding: g ? 3e3 : 3001, toneMapping: y ? ys : CE }),
        k.legacy !== _ && k.set(() => ({ legacy: _ })),
        k.linear !== g && k.set(() => ({ linear: g })),
        k.flat !== y && k.set(() => ({ flat: y })),
        h && !_n.fun(h) && !KF(h) && !_n.equ(h, B, Ru) && Au(B, h),
        v && !k.events.handlers && k.set({ events: v(o) });
      const V = rW(t, p);
      return (
        _n.equ(V, k.size, Ru) ||
          k.setSize(V.width, V.height, V.updateStyle, V.top, V.left),
        M && k.viewport.dpr !== XF(M) && k.setDpr(M),
        k.frameloop !== T && k.setFrameloop(T),
        k.onPointerMissed || k.set({ onPointerMissed: P }),
        C &&
          !_n.equ(C, k.performance, Ru) &&
          k.set((G) => ({ performance: { ...G.performance, ...C } })),
        (a = S),
        (l = !0),
        this
      );
    },
    render(u) {
      return (
        l || this.configure(),
        y0.updateContainer(
          z.createElement(oW, {
            store: o,
            children: u,
            onCreated: a,
            rootElement: t,
          }),
          s,
          null,
          () => {}
        ),
        o
      );
    },
    unmount() {
      eN(t);
    },
  };
}
function oW({ store: t, children: e, onCreated: n, rootElement: r }) {
  return (
    Cp(() => {
      const i = t.getState();
      i.set((o) => ({ internal: { ...o.internal, active: !0 } })),
        n && n(i),
        t.getState().events.connected ||
          i.events.connect == null ||
          i.events.connect(r);
    }, []),
    z.createElement(ZF.Provider, { value: t }, e)
  );
}
function eN(t, e) {
  const n = Rf.get(t),
    r = n == null ? void 0 : n.fiber;
  if (r) {
    const i = n == null ? void 0 : n.store.getState();
    i && (i.internal.active = !1),
      y0.updateContainer(null, r, null, () => {
        i &&
          setTimeout(() => {
            try {
              var o, s, a, l;
              i.events.disconnect == null || i.events.disconnect(),
                (o = i.gl) == null ||
                  (s = o.renderLists) == null ||
                  s.dispose == null ||
                  s.dispose(),
                (a = i.gl) == null ||
                  a.forceContextLoss == null ||
                  a.forceContextLoss(),
                (l = i.gl) != null && l.xr && i.xr.disconnect(),
                Wj(i),
                Rf.delete(t),
                e && e(t);
            } catch {}
          }, 500);
      });
  }
}
y0.injectIntoDevTools({
  bundleType: 0,
  rendererPackageName: "@react-three/fiber",
  version: z.version,
});
function mn() {
  return (
    (mn = Object.assign
      ? Object.assign.bind()
      : function (t) {
          for (var e = 1; e < arguments.length; e++) {
            var n = arguments[e];
            for (var r in n)
              Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
          }
          return t;
        }),
    mn.apply(this, arguments)
  );
}
function Iw(t, e, n) {
  var r, i, o, s, a;
  e == null && (e = 100);
  function l() {
    var u = Date.now() - s;
    u < e && u >= 0
      ? (r = setTimeout(l, e - u))
      : ((r = null), n || ((a = t.apply(o, i)), (o = i = null)));
  }
  var c = function () {
    (o = this), (i = arguments), (s = Date.now());
    var u = n && !r;
    return (
      r || (r = setTimeout(l, e)), u && ((a = t.apply(o, i)), (o = i = null)), a
    );
  };
  return (
    (c.clear = function () {
      r && (clearTimeout(r), (r = null));
    }),
    (c.flush = function () {
      r && ((a = t.apply(o, i)), (o = i = null), clearTimeout(r), (r = null));
    }),
    c
  );
}
Iw.debounce = Iw;
var sW = Iw;
const SR = cp(sW);
function aW(t) {
  let {
    debounce: e,
    scroll: n,
    polyfill: r,
    offsetSize: i,
  } = t === void 0 ? { debounce: 0, scroll: !1, offsetSize: !1 } : t;
  const o = r || (typeof window > "u" ? class {} : window.ResizeObserver);
  if (!o)
    throw new Error(
      "This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills"
    );
  const [s, a] = z.useState({
      left: 0,
      top: 0,
      width: 0,
      height: 0,
      bottom: 0,
      right: 0,
      x: 0,
      y: 0,
    }),
    l = z.useRef({
      element: null,
      scrollContainers: null,
      resizeObserver: null,
      lastBounds: s,
    }),
    c = e ? (typeof e == "number" ? e : e.scroll) : null,
    u = e ? (typeof e == "number" ? e : e.resize) : null,
    h = z.useRef(!1);
  z.useEffect(() => ((h.current = !0), () => void (h.current = !1)));
  const [p, m, v] = z.useMemo(() => {
    const y = () => {
      if (!l.current.element) return;
      const {
          left: _,
          top: b,
          width: T,
          height: M,
          bottom: C,
          right: L,
          x: A,
          y: P,
        } = l.current.element.getBoundingClientRect(),
        k = {
          left: _,
          top: b,
          width: T,
          height: M,
          bottom: C,
          right: L,
          x: A,
          y: P,
        };
      l.current.element instanceof HTMLElement &&
        i &&
        ((k.height = l.current.element.offsetHeight),
        (k.width = l.current.element.offsetWidth)),
        Object.freeze(k),
        h.current &&
          !fW(l.current.lastBounds, k) &&
          a((l.current.lastBounds = k));
    };
    return [y, u ? SR(y, u) : y, c ? SR(y, c) : y];
  }, [a, i, c, u]);
  function S() {
    l.current.scrollContainers &&
      (l.current.scrollContainers.forEach((y) =>
        y.removeEventListener("scroll", v, !0)
      ),
      (l.current.scrollContainers = null)),
      l.current.resizeObserver &&
        (l.current.resizeObserver.disconnect(),
        (l.current.resizeObserver = null));
  }
  function x() {
    l.current.element &&
      ((l.current.resizeObserver = new o(v)),
      l.current.resizeObserver.observe(l.current.element),
      n &&
        l.current.scrollContainers &&
        l.current.scrollContainers.forEach((y) =>
          y.addEventListener("scroll", v, { capture: !0, passive: !0 })
        ));
  }
  const g = (y) => {
    !y ||
      y === l.current.element ||
      (S(), (l.current.element = y), (l.current.scrollContainers = tN(y)), x());
  };
  return (
    cW(v, !!n),
    lW(m),
    z.useEffect(() => {
      S(), x();
    }, [n, v, m]),
    z.useEffect(() => S, []),
    [g, s, p]
  );
}
function lW(t) {
  z.useEffect(() => {
    const e = t;
    return (
      window.addEventListener("resize", e),
      () => void window.removeEventListener("resize", e)
    );
  }, [t]);
}
function cW(t, e) {
  z.useEffect(() => {
    if (e) {
      const n = t;
      return (
        window.addEventListener("scroll", n, { capture: !0, passive: !0 }),
        () => void window.removeEventListener("scroll", n, !0)
      );
    }
  }, [t, e]);
}
function tN(t) {
  const e = [];
  if (!t || t === document.body) return e;
  const {
    overflow: n,
    overflowX: r,
    overflowY: i,
  } = window.getComputedStyle(t);
  return (
    [n, r, i].some((o) => o === "auto" || o === "scroll") && e.push(t),
    [...e, ...tN(t.parentElement)]
  );
}
const uW = ["x", "y", "top", "bottom", "left", "right", "width", "height"],
  fW = (t, e) => uW.every((n) => t[n] === e[n]);
var dW = Object.defineProperty,
  hW = Object.defineProperties,
  pW = Object.getOwnPropertyDescriptors,
  wR = Object.getOwnPropertySymbols,
  mW = Object.prototype.hasOwnProperty,
  gW = Object.prototype.propertyIsEnumerable,
  bR = (t, e, n) =>
    e in t
      ? dW(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n })
      : (t[e] = n),
  ER = (t, e) => {
    for (var n in e || (e = {})) mW.call(e, n) && bR(t, n, e[n]);
    if (wR) for (var n of wR(e)) gW.call(e, n) && bR(t, n, e[n]);
    return t;
  },
  vW = (t, e) => hW(t, pW(e));
function nN(t, e, n) {
  if (!t) return;
  if (n(t) === !0) return t;
  let r = e ? t.return : t.child;
  for (; r; ) {
    const i = nN(r, e, n);
    if (i) return i;
    r = e ? null : r.sibling;
  }
}
function rN(t) {
  try {
    return Object.defineProperties(t, {
      _currentRenderer: {
        get() {
          return null;
        },
        set() {},
      },
      _currentRenderer2: {
        get() {
          return null;
        },
        set() {},
      },
    });
  } catch {
    return t;
  }
}
const mM = rN(z.createContext(null));
class iN extends z.Component {
  render() {
    return z.createElement(
      mM.Provider,
      { value: this._reactInternals },
      this.props.children
    );
  }
}
const { ReactCurrentOwner: MR, ReactCurrentDispatcher: CR } =
  z.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
function yW() {
  const t = z.useContext(mM);
  if (t === null)
    throw new Error(
      "its-fine: useFiber must be called within a <FiberProvider />!"
    );
  const e = z.useId();
  return z.useMemo(() => {
    for (const r of [
      MR == null ? void 0 : MR.current,
      t,
      t == null ? void 0 : t.alternate,
    ]) {
      if (!r) continue;
      const i = nN(r, !1, (o) => {
        let s = o.memoizedState;
        for (; s; ) {
          if (s.memoizedState === e) return !0;
          s = s.next;
        }
      });
      if (i) return i;
    }
  }, [t, e]);
}
function xW() {
  var t, e;
  const n = yW(),
    [r] = z.useState(() => new Map());
  r.clear();
  let i = n;
  for (; i; ) {
    const o = (t = i.type) == null ? void 0 : t._context;
    o &&
      o !== mM &&
      !r.has(o) &&
      r.set(
        o,
        (e = CR == null ? void 0 : CR.current) == null
          ? void 0
          : e.readContext(rN(o))
      ),
      (i = i.return);
  }
  return r;
}
function _W() {
  const t = xW();
  return z.useMemo(
    () =>
      Array.from(t.keys()).reduce(
        (e, n) => (r) =>
          z.createElement(
            e,
            null,
            z.createElement(n.Provider, vW(ER({}, r), { value: t.get(n) }))
          ),
        (e) => z.createElement(iN, ER({}, e))
      ),
    [t]
  );
}
const f_ = {
  onClick: ["click", !1],
  onContextMenu: ["contextmenu", !1],
  onDoubleClick: ["dblclick", !1],
  onWheel: ["wheel", !0],
  onPointerDown: ["pointerdown", !0],
  onPointerUp: ["pointerup", !0],
  onPointerLeave: ["pointerleave", !0],
  onPointerMove: ["pointermove", !0],
  onPointerCancel: ["pointercancel", !0],
  onLostPointerCapture: ["lostpointercapture", !0],
};
function SW(t) {
  const { handlePointer: e } = Kj(t);
  return {
    priority: 1,
    enabled: !0,
    compute(n, r, i) {
      r.pointer.set(
        (n.offsetX / r.size.width) * 2 - 1,
        -(n.offsetY / r.size.height) * 2 + 1
      ),
        r.raycaster.setFromCamera(r.pointer, r.camera);
    },
    connected: void 0,
    handlers: Object.keys(f_).reduce((n, r) => ({ ...n, [r]: e(r) }), {}),
    update: () => {
      var n;
      const { events: r, internal: i } = t.getState();
      (n = i.lastEvent) != null &&
        n.current &&
        r.handlers &&
        r.handlers.onPointerMove(i.lastEvent.current);
    },
    connect: (n) => {
      var r;
      const { set: i, events: o } = t.getState();
      o.disconnect == null || o.disconnect(),
        i((s) => ({ events: { ...s.events, connected: n } })),
        Object.entries((r = o.handlers) != null ? r : []).forEach(([s, a]) => {
          const [l, c] = f_[s];
          n.addEventListener(l, a, { passive: c });
        });
    },
    disconnect: () => {
      const { set: n, events: r } = t.getState();
      if (r.connected) {
        var i;
        Object.entries((i = r.handlers) != null ? i : []).forEach(([o, s]) => {
          if (r && r.connected instanceof HTMLElement) {
            const [a] = f_[o];
            r.connected.removeEventListener(a, s);
          }
        }),
          n((o) => ({ events: { ...o.events, connected: void 0 } }));
      }
    },
  };
}
const wW = z.forwardRef(function (
    {
      children: e,
      fallback: n,
      resize: r,
      style: i,
      gl: o,
      events: s = SW,
      eventSource: a,
      eventPrefix: l,
      shadows: c,
      linear: u,
      flat: h,
      legacy: p,
      orthographic: m,
      frameloop: v,
      dpr: S,
      performance: x,
      raycaster: g,
      camera: y,
      scene: _,
      onPointerMissed: b,
      onCreated: T,
      ...M
    },
    C
  ) {
    z.useMemo(() => Bj(Rj), []);
    const L = _W(),
      [A, P] = aW({ scroll: !0, debounce: { scroll: 50, resize: 0 }, ...r }),
      k = z.useRef(null),
      B = z.useRef(null);
    z.useImperativeHandle(C, () => k.current);
    const $ = jF(b),
      [D, X] = z.useState(!1),
      [j, Y] = z.useState(!1);
    if (D) throw D;
    if (j) throw j;
    const N = z.useRef(null);
    Cp(() => {
      const G = k.current;
      P.width > 0 &&
        P.height > 0 &&
        G &&
        (N.current || (N.current = iW(G)),
        N.current.configure({
          gl: o,
          events: s,
          shadows: c,
          linear: u,
          flat: h,
          legacy: p,
          orthographic: m,
          frameloop: v,
          dpr: S,
          performance: x,
          raycaster: g,
          camera: y,
          scene: _,
          size: P,
          onPointerMissed: (...U) =>
            $.current == null ? void 0 : $.current(...U),
          onCreated: (U) => {
            U.events.connect == null ||
              U.events.connect(a ? (Vj(a) ? a.current : a) : B.current),
              l &&
                U.setEvents({
                  compute: (Z, Q) => {
                    const te = Z[l + "X"],
                      re = Z[l + "Y"];
                    Q.pointer.set(
                      (te / Q.size.width) * 2 - 1,
                      -(re / Q.size.height) * 2 + 1
                    ),
                      Q.raycaster.setFromCamera(Q.pointer, Q.camera);
                  },
                }),
              T == null || T(U);
          },
        }),
        N.current.render(
          z.createElement(
            L,
            null,
            z.createElement(
              WF,
              { set: Y },
              z.createElement(
                z.Suspense,
                { fallback: z.createElement(Gj, { set: X }) },
                e
              )
            )
          )
        ));
    }),
      z.useEffect(() => {
        const G = k.current;
        if (G) return () => eN(G);
      }, []);
    const V = a ? "none" : "auto";
    return z.createElement(
      "div",
      mn(
        {
          ref: B,
          style: {
            position: "relative",
            width: "100%",
            height: "100%",
            overflow: "hidden",
            pointerEvents: V,
            ...i,
          },
        },
        M
      ),
      z.createElement(
        "div",
        { ref: A, style: { width: "100%", height: "100%" } },
        z.createElement("canvas", { ref: k, style: { display: "block" } }, n)
      )
    );
  }),
  bW = z.forwardRef(function (e, n) {
    return z.createElement(
      iN,
      null,
      z.createElement(wW, mn({}, e, { ref: n }))
    );
  });
var oN = { exports: {} },
  sN = {};
/**
 * @license React
 * use-sync-external-store-with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var Tp = z;
function EW(t, e) {
  return (t === e && (t !== 0 || 1 / t === 1 / e)) || (t !== t && e !== e);
}
var MW = typeof Object.is == "function" ? Object.is : EW,
  CW = Tp.useSyncExternalStore,
  TW = Tp.useRef,
  AW = Tp.useEffect,
  RW = Tp.useMemo,
  PW = Tp.useDebugValue;
sN.useSyncExternalStoreWithSelector = function (t, e, n, r, i) {
  var o = TW(null);
  if (o.current === null) {
    var s = { hasValue: !1, value: null };
    o.current = s;
  } else s = o.current;
  o = RW(
    function () {
      function l(m) {
        if (!c) {
          if (((c = !0), (u = m), (m = r(m)), i !== void 0 && s.hasValue)) {
            var v = s.value;
            if (i(v, m)) return (h = v);
          }
          return (h = m);
        }
        if (((v = h), MW(u, m))) return v;
        var S = r(m);
        return i !== void 0 && i(v, S) ? v : ((u = m), (h = S));
      }
      var c = !1,
        u,
        h,
        p = n === void 0 ? null : n;
      return [
        function () {
          return l(e());
        },
        p === null
          ? void 0
          : function () {
              return l(p());
            },
      ];
    },
    [e, n, r, i]
  );
  var a = CW(t, o[0], o[1]);
  return (
    AW(
      function () {
        (s.hasValue = !0), (s.value = a);
      },
      [a]
    ),
    PW(a),
    a
  );
};
oN.exports = sN;
var LW = oN.exports,
  Gi = "default" in vf ? at : vf,
  TR = Symbol.for("react-redux-context"),
  AR = typeof globalThis < "u" ? globalThis : {};
function IW() {
  if (!Gi.createContext) return {};
  const t = AR[TR] ?? (AR[TR] = new Map());
  let e = t.get(Gi.createContext);
  return e || ((e = Gi.createContext(null)), t.set(Gi.createContext, e)), e;
}
var al = IW(),
  OW = () => {
    throw new Error("uSES not initialized!");
  };
function gM(t = al) {
  return function () {
    return Gi.useContext(t);
  };
}
var aN = gM(),
  lN = OW,
  FW = (t) => {
    lN = t;
  },
  NW = (t, e) => t === e;
function DW(t = al) {
  const e = t === al ? aN : gM(t),
    n = (r, i = {}) => {
      const { equalityFn: o = NW, devModeChecks: s = {} } =
          typeof i == "function" ? { equalityFn: i } : i,
        {
          store: a,
          subscription: l,
          getServerState: c,
          stabilityCheck: u,
          identityFunctionCheck: h,
        } = e();
      Gi.useRef(!0);
      const p = Gi.useCallback(
          {
            [r.name](v) {
              return r(v);
            },
          }[r.name],
          [r, u, s.stabilityCheck]
        ),
        m = lN(l.addNestedSub, a.getState, c || a.getState, p, o);
      return Gi.useDebugValue(m), m;
    };
  return Object.assign(n, { withTypes: () => n }), n;
}
var Jo = DW();
function UW(t) {
  t();
}
function zW() {
  let t = null,
    e = null;
  return {
    clear() {
      (t = null), (e = null);
    },
    notify() {
      UW(() => {
        let n = t;
        for (; n; ) n.callback(), (n = n.next);
      });
    },
    get() {
      const n = [];
      let r = t;
      for (; r; ) n.push(r), (r = r.next);
      return n;
    },
    subscribe(n) {
      let r = !0;
      const i = (e = { callback: n, next: null, prev: e });
      return (
        i.prev ? (i.prev.next = i) : (t = i),
        function () {
          !r ||
            t === null ||
            ((r = !1),
            i.next ? (i.next.prev = i.prev) : (e = i.prev),
            i.prev ? (i.prev.next = i.next) : (t = i.next));
        }
      );
    },
  };
}
var RR = { notify() {}, get: () => [] };
function kW(t, e) {
  let n,
    r = RR,
    i = 0,
    o = !1;
  function s(S) {
    u();
    const x = r.subscribe(S);
    let g = !1;
    return () => {
      g || ((g = !0), x(), h());
    };
  }
  function a() {
    r.notify();
  }
  function l() {
    v.onStateChange && v.onStateChange();
  }
  function c() {
    return o;
  }
  function u() {
    i++, n || ((n = e ? e.addNestedSub(l) : t.subscribe(l)), (r = zW()));
  }
  function h() {
    i--, n && i === 0 && (n(), (n = void 0), r.clear(), (r = RR));
  }
  function p() {
    o || ((o = !0), u());
  }
  function m() {
    o && ((o = !1), h());
  }
  const v = {
    addNestedSub: s,
    notifyNestedSubs: a,
    handleChangeWrapper: l,
    isSubscribed: c,
    trySubscribe: p,
    tryUnsubscribe: m,
    getListeners: () => r,
  };
  return v;
}
var BW =
    typeof window < "u" &&
    typeof window.document < "u" &&
    typeof window.document.createElement < "u",
  HW = BW ? Gi.useLayoutEffect : Gi.useEffect;
function VW({
  store: t,
  context: e,
  children: n,
  serverState: r,
  stabilityCheck: i = "once",
  identityFunctionCheck: o = "once",
}) {
  const s = Gi.useMemo(() => {
      const c = kW(t);
      return {
        store: t,
        subscription: c,
        getServerState: r ? () => r : void 0,
        stabilityCheck: i,
        identityFunctionCheck: o,
      };
    }, [t, r, i, o]),
    a = Gi.useMemo(() => t.getState(), [t]);
  HW(() => {
    const { subscription: c } = s;
    return (
      (c.onStateChange = c.notifyNestedSubs),
      c.trySubscribe(),
      a !== t.getState() && c.notifyNestedSubs(),
      () => {
        c.tryUnsubscribe(), (c.onStateChange = void 0);
      }
    );
  }, [s, a]);
  const l = e || al;
  return Gi.createElement(l.Provider, { value: s }, n);
}
var GW = VW;
function cN(t = al) {
  const e = t === al ? aN : gM(t),
    n = () => {
      const { store: r } = e();
      return r;
    };
  return Object.assign(n, { withTypes: () => n }), n;
}
var jW = cN();
function WW(t = al) {
  const e = t === al ? jW : cN(t),
    n = () => e().dispatch;
  return Object.assign(n, { withTypes: () => n }), n;
}
var Vc = WW();
FW(LW.useSyncExternalStoreWithSelector);
function $W(t, e = Math.PI / 3) {
  const n = Math.cos(e),
    r = (1 + 1e-10) * 100,
    i = [new W(), new W(), new W()],
    o = new W(),
    s = new W(),
    a = new W(),
    l = new W();
  function c(S) {
    const x = ~~(S.x * r),
      g = ~~(S.y * r),
      y = ~~(S.z * r);
    return `${x},${g},${y}`;
  }
  const u = t.index ? t.toNonIndexed() : t,
    h = u.attributes.position,
    p = {};
  for (let S = 0, x = h.count / 3; S < x; S++) {
    const g = 3 * S,
      y = i[0].fromBufferAttribute(h, g + 0),
      _ = i[1].fromBufferAttribute(h, g + 1),
      b = i[2].fromBufferAttribute(h, g + 2);
    o.subVectors(b, _), s.subVectors(y, _);
    const T = new W().crossVectors(o, s).normalize();
    for (let M = 0; M < 3; M++) {
      const C = i[M],
        L = c(C);
      L in p || (p[L] = []), p[L].push(T);
    }
  }
  const m = new Float32Array(h.count * 3),
    v = new en(m, 3, !1);
  for (let S = 0, x = h.count / 3; S < x; S++) {
    const g = 3 * S,
      y = i[0].fromBufferAttribute(h, g + 0),
      _ = i[1].fromBufferAttribute(h, g + 1),
      b = i[2].fromBufferAttribute(h, g + 2);
    o.subVectors(b, _), s.subVectors(y, _), a.crossVectors(o, s).normalize();
    for (let T = 0; T < 3; T++) {
      const M = i[T],
        C = c(M),
        L = p[C];
      l.set(0, 0, 0);
      for (let A = 0, P = L.length; A < P; A++) {
        const k = L[A];
        a.dot(k) > n && l.add(k);
      }
      l.normalize(), v.setXYZ(g + T, l.x, l.y, l.z);
    }
  }
  return u.setAttribute("normal", v), u;
}
var XW = Object.defineProperty,
  qW = (t, e, n) =>
    e in t
      ? XW(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n })
      : (t[e] = n),
  Mt = (t, e, n) => (qW(t, typeof e != "symbol" ? e + "" : e, n), n);
const Bg = new Uc(),
  PR = new qs(),
  YW = Math.cos(70 * (Math.PI / 180)),
  LR = (t, e) => ((t % e) + e) % e;
let KW = class extends bs {
  constructor(e, n) {
    super(),
      Mt(this, "object"),
      Mt(this, "domElement"),
      Mt(this, "enabled", !0),
      Mt(this, "target", new W()),
      Mt(this, "minDistance", 0),
      Mt(this, "maxDistance", 1 / 0),
      Mt(this, "minZoom", 0),
      Mt(this, "maxZoom", 1 / 0),
      Mt(this, "minPolarAngle", 0),
      Mt(this, "maxPolarAngle", Math.PI),
      Mt(this, "minAzimuthAngle", -1 / 0),
      Mt(this, "maxAzimuthAngle", 1 / 0),
      Mt(this, "enableDamping", !1),
      Mt(this, "dampingFactor", 0.05),
      Mt(this, "enableZoom", !0),
      Mt(this, "zoomSpeed", 1),
      Mt(this, "enableRotate", !0),
      Mt(this, "rotateSpeed", 1),
      Mt(this, "enablePan", !0),
      Mt(this, "panSpeed", 1),
      Mt(this, "screenSpacePanning", !0),
      Mt(this, "keyPanSpeed", 7),
      Mt(this, "zoomToCursor", !1),
      Mt(this, "autoRotate", !1),
      Mt(this, "autoRotateSpeed", 2),
      Mt(this, "reverseOrbit", !1),
      Mt(this, "reverseHorizontalOrbit", !1),
      Mt(this, "reverseVerticalOrbit", !1),
      Mt(this, "keys", {
        LEFT: "ArrowLeft",
        UP: "ArrowUp",
        RIGHT: "ArrowRight",
        BOTTOM: "ArrowDown",
      }),
      Mt(this, "mouseButtons", {
        LEFT: Xl.ROTATE,
        MIDDLE: Xl.DOLLY,
        RIGHT: Xl.PAN,
      }),
      Mt(this, "touches", { ONE: ql.ROTATE, TWO: ql.DOLLY_PAN }),
      Mt(this, "target0"),
      Mt(this, "position0"),
      Mt(this, "zoom0"),
      Mt(this, "_domElementKeyEvents", null),
      Mt(this, "getPolarAngle"),
      Mt(this, "getAzimuthalAngle"),
      Mt(this, "setPolarAngle"),
      Mt(this, "setAzimuthalAngle"),
      Mt(this, "getDistance"),
      Mt(this, "listenToKeyEvents"),
      Mt(this, "stopListenToKeyEvents"),
      Mt(this, "saveState"),
      Mt(this, "reset"),
      Mt(this, "update"),
      Mt(this, "connect"),
      Mt(this, "dispose"),
      (this.object = e),
      (this.domElement = n),
      (this.target0 = this.target.clone()),
      (this.position0 = this.object.position.clone()),
      (this.zoom0 = this.object.zoom),
      (this.getPolarAngle = () => u.phi),
      (this.getAzimuthalAngle = () => u.theta),
      (this.setPolarAngle = (ne) => {
        let be = LR(ne, 2 * Math.PI),
          je = u.phi;
        je < 0 && (je += 2 * Math.PI), be < 0 && (be += 2 * Math.PI);
        let De = Math.abs(be - je);
        2 * Math.PI - De < De &&
          (be < je ? (be += 2 * Math.PI) : (je += 2 * Math.PI)),
          (h.phi = be - je),
          r.update();
      }),
      (this.setAzimuthalAngle = (ne) => {
        let be = LR(ne, 2 * Math.PI),
          je = u.theta;
        je < 0 && (je += 2 * Math.PI), be < 0 && (be += 2 * Math.PI);
        let De = Math.abs(be - je);
        2 * Math.PI - De < De &&
          (be < je ? (be += 2 * Math.PI) : (je += 2 * Math.PI)),
          (h.theta = be - je),
          r.update();
      }),
      (this.getDistance = () => r.object.position.distanceTo(r.target)),
      (this.listenToKeyEvents = (ne) => {
        ne.addEventListener("keydown", Ne), (this._domElementKeyEvents = ne);
      }),
      (this.stopListenToKeyEvents = () => {
        this._domElementKeyEvents.removeEventListener("keydown", Ne),
          (this._domElementKeyEvents = null);
      }),
      (this.saveState = () => {
        r.target0.copy(r.target),
          r.position0.copy(r.object.position),
          (r.zoom0 = r.object.zoom);
      }),
      (this.reset = () => {
        r.target.copy(r.target0),
          r.object.position.copy(r.position0),
          (r.object.zoom = r.zoom0),
          r.object.updateProjectionMatrix(),
          r.dispatchEvent(i),
          r.update(),
          (l = a.NONE);
      }),
      (this.update = (() => {
        const ne = new W(),
          be = new W(0, 1, 0),
          je = new Gr().setFromUnitVectors(e.up, be),
          De = je.clone().invert(),
          Le = new W(),
          ie = new Gr(),
          Ue = 2 * Math.PI;
        return function () {
          const ft = r.object.position;
          je.setFromUnitVectors(e.up, be),
            De.copy(je).invert(),
            ne.copy(ft).sub(r.target),
            ne.applyQuaternion(je),
            u.setFromVector3(ne),
            r.autoRotate && l === a.NONE && D(B()),
            r.enableDamping
              ? ((u.theta += h.theta * r.dampingFactor),
                (u.phi += h.phi * r.dampingFactor))
              : ((u.theta += h.theta), (u.phi += h.phi));
          let $e = r.minAzimuthAngle,
            it = r.maxAzimuthAngle;
          isFinite($e) &&
            isFinite(it) &&
            ($e < -Math.PI ? ($e += Ue) : $e > Math.PI && ($e -= Ue),
            it < -Math.PI ? (it += Ue) : it > Math.PI && (it -= Ue),
            $e <= it
              ? (u.theta = Math.max($e, Math.min(it, u.theta)))
              : (u.theta =
                  u.theta > ($e + it) / 2
                    ? Math.max($e, u.theta)
                    : Math.min(it, u.theta))),
            (u.phi = Math.max(
              r.minPolarAngle,
              Math.min(r.maxPolarAngle, u.phi)
            )),
            u.makeSafe(),
            r.enableDamping === !0
              ? r.target.addScaledVector(m, r.dampingFactor)
              : r.target.add(m),
            (r.zoomToCursor && A) || r.object.isOrthographicCamera
              ? (u.radius = Z(u.radius))
              : (u.radius = Z(u.radius * p)),
            ne.setFromSpherical(u),
            ne.applyQuaternion(De),
            ft.copy(r.target).add(ne),
            r.object.matrixAutoUpdate || r.object.updateMatrix(),
            r.object.lookAt(r.target),
            r.enableDamping === !0
              ? ((h.theta *= 1 - r.dampingFactor),
                (h.phi *= 1 - r.dampingFactor),
                m.multiplyScalar(1 - r.dampingFactor))
              : (h.set(0, 0, 0), m.set(0, 0, 0));
          let ot = !1;
          if (r.zoomToCursor && A) {
            let Tt = null;
            if (r.object instanceof Un && r.object.isPerspectiveCamera) {
              const St = ne.length();
              Tt = Z(St * p);
              const ht = St - Tt;
              r.object.position.addScaledVector(C, ht),
                r.object.updateMatrixWorld();
            } else if (r.object.isOrthographicCamera) {
              const St = new W(L.x, L.y, 0);
              St.unproject(r.object),
                (r.object.zoom = Math.max(
                  r.minZoom,
                  Math.min(r.maxZoom, r.object.zoom / p)
                )),
                r.object.updateProjectionMatrix(),
                (ot = !0);
              const ht = new W(L.x, L.y, 0);
              ht.unproject(r.object),
                r.object.position.sub(ht).add(St),
                r.object.updateMatrixWorld(),
                (Tt = ne.length());
            } else
              console.warn(
                "WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."
              ),
                (r.zoomToCursor = !1);
            Tt !== null &&
              (r.screenSpacePanning
                ? r.target
                    .set(0, 0, -1)
                    .transformDirection(r.object.matrix)
                    .multiplyScalar(Tt)
                    .add(r.object.position)
                : (Bg.origin.copy(r.object.position),
                  Bg.direction
                    .set(0, 0, -1)
                    .transformDirection(r.object.matrix),
                  Math.abs(r.object.up.dot(Bg.direction)) < YW
                    ? e.lookAt(r.target)
                    : (PR.setFromNormalAndCoplanarPoint(r.object.up, r.target),
                      Bg.intersectPlane(PR, r.target))));
          } else
            r.object instanceof ea &&
              r.object.isOrthographicCamera &&
              ((ot = p !== 1),
              ot &&
                ((r.object.zoom = Math.max(
                  r.minZoom,
                  Math.min(r.maxZoom, r.object.zoom / p)
                )),
                r.object.updateProjectionMatrix()));
          return (
            (p = 1),
            (A = !1),
            ot ||
            Le.distanceToSquared(r.object.position) > c ||
            8 * (1 - ie.dot(r.object.quaternion)) > c
              ? (r.dispatchEvent(i),
                Le.copy(r.object.position),
                ie.copy(r.object.quaternion),
                (ot = !1),
                !0)
              : !1
          );
        };
      })()),
      (this.connect = (ne) => {
        ne === document &&
          console.error(
            'THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'
          ),
          (r.domElement = ne),
          (r.domElement.style.touchAction = "none"),
          r.domElement.addEventListener("contextmenu", Je),
          r.domElement.addEventListener("pointerdown", K),
          r.domElement.addEventListener("pointercancel", de),
          r.domElement.addEventListener("wheel", Be);
      }),
      (this.dispose = () => {
        var ne, be, je, De, Le, ie;
        (ne = r.domElement) == null ||
          ne.removeEventListener("contextmenu", Je),
          (be = r.domElement) == null ||
            be.removeEventListener("pointerdown", K),
          (je = r.domElement) == null ||
            je.removeEventListener("pointercancel", de),
          (De = r.domElement) == null || De.removeEventListener("wheel", Be),
          (Le = r.domElement) == null ||
            Le.ownerDocument.removeEventListener("pointermove", ae),
          (ie = r.domElement) == null ||
            ie.ownerDocument.removeEventListener("pointerup", se),
          r._domElementKeyEvents !== null &&
            r._domElementKeyEvents.removeEventListener("keydown", Ne);
      });
    const r = this,
      i = { type: "change" },
      o = { type: "start" },
      s = { type: "end" },
      a = {
        NONE: -1,
        ROTATE: 0,
        DOLLY: 1,
        PAN: 2,
        TOUCH_ROTATE: 3,
        TOUCH_PAN: 4,
        TOUCH_DOLLY_PAN: 5,
        TOUCH_DOLLY_ROTATE: 6,
      };
    let l = a.NONE;
    const c = 1e-6,
      u = new Aw(),
      h = new Aw();
    let p = 1;
    const m = new W(),
      v = new Fe(),
      S = new Fe(),
      x = new Fe(),
      g = new Fe(),
      y = new Fe(),
      _ = new Fe(),
      b = new Fe(),
      T = new Fe(),
      M = new Fe(),
      C = new W(),
      L = new Fe();
    let A = !1;
    const P = [],
      k = {};
    function B() {
      return ((2 * Math.PI) / 60 / 60) * r.autoRotateSpeed;
    }
    function $() {
      return Math.pow(0.95, r.zoomSpeed);
    }
    function D(ne) {
      r.reverseOrbit || r.reverseHorizontalOrbit
        ? (h.theta += ne)
        : (h.theta -= ne);
    }
    function X(ne) {
      r.reverseOrbit || r.reverseVerticalOrbit ? (h.phi += ne) : (h.phi -= ne);
    }
    const j = (() => {
        const ne = new W();
        return function (je, De) {
          ne.setFromMatrixColumn(De, 0), ne.multiplyScalar(-je), m.add(ne);
        };
      })(),
      Y = (() => {
        const ne = new W();
        return function (je, De) {
          r.screenSpacePanning === !0
            ? ne.setFromMatrixColumn(De, 1)
            : (ne.setFromMatrixColumn(De, 0), ne.crossVectors(r.object.up, ne)),
            ne.multiplyScalar(je),
            m.add(ne);
        };
      })(),
      N = (() => {
        const ne = new W();
        return function (je, De) {
          const Le = r.domElement;
          if (Le && r.object instanceof Un && r.object.isPerspectiveCamera) {
            const ie = r.object.position;
            ne.copy(ie).sub(r.target);
            let Ue = ne.length();
            (Ue *= Math.tan(((r.object.fov / 2) * Math.PI) / 180)),
              j((2 * je * Ue) / Le.clientHeight, r.object.matrix),
              Y((2 * De * Ue) / Le.clientHeight, r.object.matrix);
          } else
            Le && r.object instanceof ea && r.object.isOrthographicCamera
              ? (j(
                  (je * (r.object.right - r.object.left)) /
                    r.object.zoom /
                    Le.clientWidth,
                  r.object.matrix
                ),
                Y(
                  (De * (r.object.top - r.object.bottom)) /
                    r.object.zoom /
                    Le.clientHeight,
                  r.object.matrix
                ))
              : (console.warn(
                  "WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."
                ),
                (r.enablePan = !1));
        };
      })();
    function V(ne) {
      (r.object instanceof Un && r.object.isPerspectiveCamera) ||
      (r.object instanceof ea && r.object.isOrthographicCamera)
        ? (p /= ne)
        : (console.warn(
            "WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."
          ),
          (r.enableZoom = !1));
    }
    function G(ne) {
      (r.object instanceof Un && r.object.isPerspectiveCamera) ||
      (r.object instanceof ea && r.object.isOrthographicCamera)
        ? (p *= ne)
        : (console.warn(
            "WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."
          ),
          (r.enableZoom = !1));
    }
    function U(ne) {
      if (!r.zoomToCursor || !r.domElement) return;
      A = !0;
      const be = r.domElement.getBoundingClientRect(),
        je = ne.clientX - be.left,
        De = ne.clientY - be.top,
        Le = be.width,
        ie = be.height;
      (L.x = (je / Le) * 2 - 1),
        (L.y = -(De / ie) * 2 + 1),
        C.set(L.x, L.y, 1)
          .unproject(r.object)
          .sub(r.object.position)
          .normalize();
    }
    function Z(ne) {
      return Math.max(r.minDistance, Math.min(r.maxDistance, ne));
    }
    function Q(ne) {
      v.set(ne.clientX, ne.clientY);
    }
    function te(ne) {
      U(ne), b.set(ne.clientX, ne.clientY);
    }
    function re(ne) {
      g.set(ne.clientX, ne.clientY);
    }
    function le(ne) {
      S.set(ne.clientX, ne.clientY),
        x.subVectors(S, v).multiplyScalar(r.rotateSpeed);
      const be = r.domElement;
      be &&
        (D((2 * Math.PI * x.x) / be.clientHeight),
        X((2 * Math.PI * x.y) / be.clientHeight)),
        v.copy(S),
        r.update();
    }
    function oe(ne) {
      T.set(ne.clientX, ne.clientY),
        M.subVectors(T, b),
        M.y > 0 ? V($()) : M.y < 0 && G($()),
        b.copy(T),
        r.update();
    }
    function ve(ne) {
      y.set(ne.clientX, ne.clientY),
        _.subVectors(y, g).multiplyScalar(r.panSpeed),
        N(_.x, _.y),
        g.copy(y),
        r.update();
    }
    function Ae(ne) {
      U(ne), ne.deltaY < 0 ? G($()) : ne.deltaY > 0 && V($()), r.update();
    }
    function Re(ne) {
      let be = !1;
      switch (ne.code) {
        case r.keys.UP:
          N(0, r.keyPanSpeed), (be = !0);
          break;
        case r.keys.BOTTOM:
          N(0, -r.keyPanSpeed), (be = !0);
          break;
        case r.keys.LEFT:
          N(r.keyPanSpeed, 0), (be = !0);
          break;
        case r.keys.RIGHT:
          N(-r.keyPanSpeed, 0), (be = !0);
          break;
      }
      be && (ne.preventDefault(), r.update());
    }
    function ye() {
      if (P.length == 1) v.set(P[0].pageX, P[0].pageY);
      else {
        const ne = 0.5 * (P[0].pageX + P[1].pageX),
          be = 0.5 * (P[0].pageY + P[1].pageY);
        v.set(ne, be);
      }
    }
    function q() {
      if (P.length == 1) g.set(P[0].pageX, P[0].pageY);
      else {
        const ne = 0.5 * (P[0].pageX + P[1].pageX),
          be = 0.5 * (P[0].pageY + P[1].pageY);
        g.set(ne, be);
      }
    }
    function xe() {
      const ne = P[0].pageX - P[1].pageX,
        be = P[0].pageY - P[1].pageY,
        je = Math.sqrt(ne * ne + be * be);
      b.set(0, je);
    }
    function he() {
      r.enableZoom && xe(), r.enablePan && q();
    }
    function me() {
      r.enableZoom && xe(), r.enableRotate && ye();
    }
    function fe(ne) {
      if (P.length == 1) S.set(ne.pageX, ne.pageY);
      else {
        const je = Oe(ne),
          De = 0.5 * (ne.pageX + je.x),
          Le = 0.5 * (ne.pageY + je.y);
        S.set(De, Le);
      }
      x.subVectors(S, v).multiplyScalar(r.rotateSpeed);
      const be = r.domElement;
      be &&
        (D((2 * Math.PI * x.x) / be.clientHeight),
        X((2 * Math.PI * x.y) / be.clientHeight)),
        v.copy(S);
    }
    function Ve(ne) {
      if (P.length == 1) y.set(ne.pageX, ne.pageY);
      else {
        const be = Oe(ne),
          je = 0.5 * (ne.pageX + be.x),
          De = 0.5 * (ne.pageY + be.y);
        y.set(je, De);
      }
      _.subVectors(y, g).multiplyScalar(r.panSpeed), N(_.x, _.y), g.copy(y);
    }
    function ge(ne) {
      const be = Oe(ne),
        je = ne.pageX - be.x,
        De = ne.pageY - be.y,
        Le = Math.sqrt(je * je + De * De);
      T.set(0, Le),
        M.set(0, Math.pow(T.y / b.y, r.zoomSpeed)),
        V(M.y),
        b.copy(T);
    }
    function H(ne) {
      r.enableZoom && ge(ne), r.enablePan && Ve(ne);
    }
    function F(ne) {
      r.enableZoom && ge(ne), r.enableRotate && fe(ne);
    }
    function K(ne) {
      var be, je;
      r.enabled !== !1 &&
        (P.length === 0 &&
          ((be = r.domElement) == null ||
            be.ownerDocument.addEventListener("pointermove", ae),
          (je = r.domElement) == null ||
            je.ownerDocument.addEventListener("pointerup", se)),
        qe(ne),
        ne.pointerType === "touch" ? ze(ne) : Pe(ne));
    }
    function ae(ne) {
      r.enabled !== !1 && (ne.pointerType === "touch" ? Ee(ne) : ke(ne));
    }
    function se(ne) {
      var be, je, De;
      Qe(ne),
        P.length === 0 &&
          ((be = r.domElement) == null ||
            be.releasePointerCapture(ne.pointerId),
          (je = r.domElement) == null ||
            je.ownerDocument.removeEventListener("pointermove", ae),
          (De = r.domElement) == null ||
            De.ownerDocument.removeEventListener("pointerup", se)),
        r.dispatchEvent(s),
        (l = a.NONE);
    }
    function de(ne) {
      Qe(ne);
    }
    function Pe(ne) {
      let be;
      switch (ne.button) {
        case 0:
          be = r.mouseButtons.LEFT;
          break;
        case 1:
          be = r.mouseButtons.MIDDLE;
          break;
        case 2:
          be = r.mouseButtons.RIGHT;
          break;
        default:
          be = -1;
      }
      switch (be) {
        case Xl.DOLLY:
          if (r.enableZoom === !1) return;
          te(ne), (l = a.DOLLY);
          break;
        case Xl.ROTATE:
          if (ne.ctrlKey || ne.metaKey || ne.shiftKey) {
            if (r.enablePan === !1) return;
            re(ne), (l = a.PAN);
          } else {
            if (r.enableRotate === !1) return;
            Q(ne), (l = a.ROTATE);
          }
          break;
        case Xl.PAN:
          if (ne.ctrlKey || ne.metaKey || ne.shiftKey) {
            if (r.enableRotate === !1) return;
            Q(ne), (l = a.ROTATE);
          } else {
            if (r.enablePan === !1) return;
            re(ne), (l = a.PAN);
          }
          break;
        default:
          l = a.NONE;
      }
      l !== a.NONE && r.dispatchEvent(o);
    }
    function ke(ne) {
      if (r.enabled !== !1)
        switch (l) {
          case a.ROTATE:
            if (r.enableRotate === !1) return;
            le(ne);
            break;
          case a.DOLLY:
            if (r.enableZoom === !1) return;
            oe(ne);
            break;
          case a.PAN:
            if (r.enablePan === !1) return;
            ve(ne);
            break;
        }
    }
    function Be(ne) {
      r.enabled === !1 ||
        r.enableZoom === !1 ||
        (l !== a.NONE && l !== a.ROTATE) ||
        (ne.preventDefault(), r.dispatchEvent(o), Ae(ne), r.dispatchEvent(s));
    }
    function Ne(ne) {
      r.enabled === !1 || r.enablePan === !1 || Re(ne);
    }
    function ze(ne) {
      switch ((Ge(ne), P.length)) {
        case 1:
          switch (r.touches.ONE) {
            case ql.ROTATE:
              if (r.enableRotate === !1) return;
              ye(), (l = a.TOUCH_ROTATE);
              break;
            case ql.PAN:
              if (r.enablePan === !1) return;
              q(), (l = a.TOUCH_PAN);
              break;
            default:
              l = a.NONE;
          }
          break;
        case 2:
          switch (r.touches.TWO) {
            case ql.DOLLY_PAN:
              if (r.enableZoom === !1 && r.enablePan === !1) return;
              he(), (l = a.TOUCH_DOLLY_PAN);
              break;
            case ql.DOLLY_ROTATE:
              if (r.enableZoom === !1 && r.enableRotate === !1) return;
              me(), (l = a.TOUCH_DOLLY_ROTATE);
              break;
            default:
              l = a.NONE;
          }
          break;
        default:
          l = a.NONE;
      }
      l !== a.NONE && r.dispatchEvent(o);
    }
    function Ee(ne) {
      switch ((Ge(ne), l)) {
        case a.TOUCH_ROTATE:
          if (r.enableRotate === !1) return;
          fe(ne), r.update();
          break;
        case a.TOUCH_PAN:
          if (r.enablePan === !1) return;
          Ve(ne), r.update();
          break;
        case a.TOUCH_DOLLY_PAN:
          if (r.enableZoom === !1 && r.enablePan === !1) return;
          H(ne), r.update();
          break;
        case a.TOUCH_DOLLY_ROTATE:
          if (r.enableZoom === !1 && r.enableRotate === !1) return;
          F(ne), r.update();
          break;
        default:
          l = a.NONE;
      }
    }
    function Je(ne) {
      r.enabled !== !1 && ne.preventDefault();
    }
    function qe(ne) {
      P.push(ne);
    }
    function Qe(ne) {
      delete k[ne.pointerId];
      for (let be = 0; be < P.length; be++)
        if (P[be].pointerId == ne.pointerId) {
          P.splice(be, 1);
          return;
        }
    }
    function Ge(ne) {
      let be = k[ne.pointerId];
      be === void 0 && ((be = new Fe()), (k[ne.pointerId] = be)),
        be.set(ne.pageX, ne.pageY);
    }
    function Oe(ne) {
      const be = ne.pointerId === P[0].pointerId ? P[1] : P[0];
      return k[be.pointerId];
    }
    n !== void 0 && this.connect(n), this.update();
  }
};
const IR = new or(),
  Hg = new W();
class vM extends Cy {
  constructor() {
    super(),
      (this.isLineSegmentsGeometry = !0),
      (this.type = "LineSegmentsGeometry");
    const e = [
        -1, 2, 0, 1, 2, 0, -1, 1, 0, 1, 1, 0, -1, 0, 0, 1, 0, 0, -1, -1, 0, 1,
        -1, 0,
      ],
      n = [-1, 2, 1, 2, -1, 1, 1, 1, -1, -1, 1, -1, -1, -2, 1, -2],
      r = [0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5];
    this.setIndex(r),
      this.setAttribute("position", new ut(e, 3)),
      this.setAttribute("uv", new ut(n, 2));
  }
  applyMatrix4(e) {
    const n = this.attributes.instanceStart,
      r = this.attributes.instanceEnd;
    return (
      n !== void 0 &&
        (n.applyMatrix4(e), r.applyMatrix4(e), (n.needsUpdate = !0)),
      this.boundingBox !== null && this.computeBoundingBox(),
      this.boundingSphere !== null && this.computeBoundingSphere(),
      this
    );
  }
  setPositions(e) {
    let n;
    e instanceof Float32Array
      ? (n = e)
      : Array.isArray(e) && (n = new Float32Array(e));
    const r = new v0(n, 6, 1);
    return (
      this.setAttribute("instanceStart", new Vi(r, 3, 0)),
      this.setAttribute("instanceEnd", new Vi(r, 3, 3)),
      this.computeBoundingBox(),
      this.computeBoundingSphere(),
      this
    );
  }
  setColors(e, n = 3) {
    let r;
    e instanceof Float32Array
      ? (r = e)
      : Array.isArray(e) && (r = new Float32Array(e));
    const i = new v0(r, n * 2, 1);
    return (
      this.setAttribute("instanceColorStart", new Vi(i, n, 0)),
      this.setAttribute("instanceColorEnd", new Vi(i, n, n)),
      this
    );
  }
  fromWireframeGeometry(e) {
    return this.setPositions(e.attributes.position.array), this;
  }
  fromEdgesGeometry(e) {
    return this.setPositions(e.attributes.position.array), this;
  }
  fromMesh(e) {
    return this.fromWireframeGeometry(new nM(e.geometry)), this;
  }
  fromLineSegments(e) {
    const n = e.geometry;
    return this.setPositions(n.attributes.position.array), this;
  }
  computeBoundingBox() {
    this.boundingBox === null && (this.boundingBox = new or());
    const e = this.attributes.instanceStart,
      n = this.attributes.instanceEnd;
    e !== void 0 &&
      n !== void 0 &&
      (this.boundingBox.setFromBufferAttribute(e),
      IR.setFromBufferAttribute(n),
      this.boundingBox.union(IR));
  }
  computeBoundingSphere() {
    this.boundingSphere === null && (this.boundingSphere = new sr()),
      this.boundingBox === null && this.computeBoundingBox();
    const e = this.attributes.instanceStart,
      n = this.attributes.instanceEnd;
    if (e !== void 0 && n !== void 0) {
      const r = this.boundingSphere.center;
      this.boundingBox.getCenter(r);
      let i = 0;
      for (let o = 0, s = e.count; o < s; o++)
        Hg.fromBufferAttribute(e, o),
          (i = Math.max(i, r.distanceToSquared(Hg))),
          Hg.fromBufferAttribute(n, o),
          (i = Math.max(i, r.distanceToSquared(Hg)));
      (this.boundingSphere.radius = Math.sqrt(i)),
        isNaN(this.boundingSphere.radius) &&
          console.error(
            "THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",
            this
          );
    }
  }
  toJSON() {}
  applyMatrix(e) {
    return (
      console.warn(
        "THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."
      ),
      this.applyMatrix4(e)
    );
  }
}
class uN extends vM {
  constructor() {
    super(), (this.isLineGeometry = !0), (this.type = "LineGeometry");
  }
  setPositions(e) {
    const n = e.length - 3,
      r = new Float32Array(2 * n);
    for (let i = 0; i < n; i += 3)
      (r[2 * i] = e[i]),
        (r[2 * i + 1] = e[i + 1]),
        (r[2 * i + 2] = e[i + 2]),
        (r[2 * i + 3] = e[i + 3]),
        (r[2 * i + 4] = e[i + 4]),
        (r[2 * i + 5] = e[i + 5]);
    return super.setPositions(r), this;
  }
  setColors(e, n = 3) {
    const r = e.length - n,
      i = new Float32Array(2 * r);
    if (n === 3)
      for (let o = 0; o < r; o += n)
        (i[2 * o] = e[o]),
          (i[2 * o + 1] = e[o + 1]),
          (i[2 * o + 2] = e[o + 2]),
          (i[2 * o + 3] = e[o + 3]),
          (i[2 * o + 4] = e[o + 4]),
          (i[2 * o + 5] = e[o + 5]);
    else
      for (let o = 0; o < r; o += n)
        (i[2 * o] = e[o]),
          (i[2 * o + 1] = e[o + 1]),
          (i[2 * o + 2] = e[o + 2]),
          (i[2 * o + 3] = e[o + 3]),
          (i[2 * o + 4] = e[o + 4]),
          (i[2 * o + 5] = e[o + 5]),
          (i[2 * o + 6] = e[o + 6]),
          (i[2 * o + 7] = e[o + 7]);
    return super.setColors(i, n), this;
  }
  fromLine(e) {
    const n = e.geometry;
    return this.setPositions(n.attributes.position.array), this;
  }
}
class yM extends Ko {
  constructor(e) {
    super({
      type: "LineMaterial",
      uniforms: Wh.clone(
        Wh.merge([
          Ze.common,
          Ze.fog,
          {
            worldUnits: { value: 1 },
            linewidth: { value: 1 },
            resolution: { value: new Fe(1, 1) },
            dashOffset: { value: 0 },
            dashScale: { value: 1 },
            dashSize: { value: 1 },
            gapSize: { value: 1 },
          },
        ])
      ),
      vertexShader: `
				#include <common>
				#include <fog_pars_vertex>
				#include <logdepthbuf_pars_vertex>
				#include <clipping_planes_pars_vertex>

				uniform float linewidth;
				uniform vec2 resolution;

				attribute vec3 instanceStart;
				attribute vec3 instanceEnd;

				#ifdef USE_COLOR
					#ifdef USE_LINE_COLOR_ALPHA
						varying vec4 vLineColor;
						attribute vec4 instanceColorStart;
						attribute vec4 instanceColorEnd;
					#else
						varying vec3 vLineColor;
						attribute vec3 instanceColorStart;
						attribute vec3 instanceColorEnd;
					#endif
				#endif

				#ifdef WORLD_UNITS

					varying vec4 worldPos;
					varying vec3 worldStart;
					varying vec3 worldEnd;

					#ifdef USE_DASH

						varying vec2 vUv;

					#endif

				#else

					varying vec2 vUv;

				#endif

				#ifdef USE_DASH

					uniform float dashScale;
					attribute float instanceDistanceStart;
					attribute float instanceDistanceEnd;
					varying float vLineDistance;

				#endif

				void trimSegment( const in vec4 start, inout vec4 end ) {

					// trim end segment so it terminates between the camera plane and the near plane

					// conservative estimate of the near plane
					float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
					float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
					float nearEstimate = - 0.5 * b / a;

					float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

					end.xyz = mix( start.xyz, end.xyz, alpha );

				}

				void main() {

					#ifdef USE_COLOR

						vLineColor = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

					#endif

					#ifdef USE_DASH

						vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;
						vUv = uv;

					#endif

					float aspect = resolution.x / resolution.y;

					// camera space
					vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
					vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

					#ifdef WORLD_UNITS

						worldStart = start.xyz;
						worldEnd = end.xyz;

					#else

						vUv = uv;

					#endif

					// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
					// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
					// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
					// perhaps there is a more elegant solution -- WestLangley

					bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

					if ( perspective ) {

						if ( start.z < 0.0 && end.z >= 0.0 ) {

							trimSegment( start, end );

						} else if ( end.z < 0.0 && start.z >= 0.0 ) {

							trimSegment( end, start );

						}

					}

					// clip space
					vec4 clipStart = projectionMatrix * start;
					vec4 clipEnd = projectionMatrix * end;

					// ndc space
					vec3 ndcStart = clipStart.xyz / clipStart.w;
					vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

					// direction
					vec2 dir = ndcEnd.xy - ndcStart.xy;

					// account for clip-space aspect ratio
					dir.x *= aspect;
					dir = normalize( dir );

					#ifdef WORLD_UNITS

						// get the offset direction as perpendicular to the view vector
						vec3 worldDir = normalize( end.xyz - start.xyz );
						vec3 offset;
						if ( position.y < 0.5 ) {

							offset = normalize( cross( start.xyz, worldDir ) );

						} else {

							offset = normalize( cross( end.xyz, worldDir ) );

						}

						// sign flip
						if ( position.x < 0.0 ) offset *= - 1.0;

						float forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );

						// don't extend the line if we're rendering dashes because we
						// won't be rendering the endcaps
						#ifndef USE_DASH

							// extend the line bounds to encompass  endcaps
							start.xyz += - worldDir * linewidth * 0.5;
							end.xyz += worldDir * linewidth * 0.5;

							// shift the position of the quad so it hugs the forward edge of the line
							offset.xy -= dir * forwardOffset;
							offset.z += 0.5;

						#endif

						// endcaps
						if ( position.y > 1.0 || position.y < 0.0 ) {

							offset.xy += dir * 2.0 * forwardOffset;

						}

						// adjust for linewidth
						offset *= linewidth * 0.5;

						// set the world position
						worldPos = ( position.y < 0.5 ) ? start : end;
						worldPos.xyz += offset;

						// project the worldpos
						vec4 clip = projectionMatrix * worldPos;

						// shift the depth of the projected points so the line
						// segments overlap neatly
						vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
						clip.z = clipPose.z * clip.w;

					#else

						vec2 offset = vec2( dir.y, - dir.x );
						// undo aspect ratio adjustment
						dir.x /= aspect;
						offset.x /= aspect;

						// sign flip
						if ( position.x < 0.0 ) offset *= - 1.0;

						// endcaps
						if ( position.y < 0.0 ) {

							offset += - dir;

						} else if ( position.y > 1.0 ) {

							offset += dir;

						}

						// adjust for linewidth
						offset *= linewidth;

						// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
						offset /= resolution.y;

						// select end
						vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

						// back to clip space
						offset *= clip.w;

						clip.xy += offset;

					#endif

					gl_Position = clip;

					vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

					#include <logdepthbuf_vertex>
					#include <clipping_planes_vertex>
					#include <fog_vertex>

				}
			`,
      fragmentShader: `
				uniform vec3 diffuse;
				uniform float opacity;
				uniform float linewidth;

				#ifdef USE_DASH

					uniform float dashOffset;
					uniform float dashSize;
					uniform float gapSize;

				#endif

				varying float vLineDistance;

				#ifdef WORLD_UNITS

					varying vec4 worldPos;
					varying vec3 worldStart;
					varying vec3 worldEnd;

					#ifdef USE_DASH

						varying vec2 vUv;

					#endif

				#else

					varying vec2 vUv;

				#endif

				#include <common>
				#include <fog_pars_fragment>
				#include <logdepthbuf_pars_fragment>
				#include <clipping_planes_pars_fragment>

				#ifdef USE_COLOR
					#ifdef USE_LINE_COLOR_ALPHA
						varying vec4 vLineColor;
					#else
						varying vec3 vLineColor;
					#endif
				#endif

				vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

					float mua;
					float mub;

					vec3 p13 = p1 - p3;
					vec3 p43 = p4 - p3;

					vec3 p21 = p2 - p1;

					float d1343 = dot( p13, p43 );
					float d4321 = dot( p43, p21 );
					float d1321 = dot( p13, p21 );
					float d4343 = dot( p43, p43 );
					float d2121 = dot( p21, p21 );

					float denom = d2121 * d4343 - d4321 * d4321;

					float numer = d1343 * d4321 - d1321 * d4343;

					mua = numer / denom;
					mua = clamp( mua, 0.0, 1.0 );
					mub = ( d1343 + d4321 * ( mua ) ) / d4343;
					mub = clamp( mub, 0.0, 1.0 );

					return vec2( mua, mub );

				}

				void main() {

					#include <clipping_planes_fragment>

					#ifdef USE_DASH

						if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

						if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

					#endif

					float alpha = opacity;

					#ifdef WORLD_UNITS

						// Find the closest points on the view ray and the line segment
						vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
						vec3 lineDir = worldEnd - worldStart;
						vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

						vec3 p1 = worldStart + lineDir * params.x;
						vec3 p2 = rayEnd * params.y;
						vec3 delta = p1 - p2;
						float len = length( delta );
						float norm = len / linewidth;

						#ifndef USE_DASH

							#ifdef USE_ALPHA_TO_COVERAGE

								float dnorm = fwidth( norm );
								alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

							#else

								if ( norm > 0.5 ) {

									discard;

								}

							#endif

						#endif

					#else

						#ifdef USE_ALPHA_TO_COVERAGE

							// artifacts appear on some hardware if a derivative is taken within a conditional
							float a = vUv.x;
							float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
							float len2 = a * a + b * b;
							float dlen = fwidth( len2 );

							if ( abs( vUv.y ) > 1.0 ) {

								alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

							}

						#else

							if ( abs( vUv.y ) > 1.0 ) {

								float a = vUv.x;
								float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
								float len2 = a * a + b * b;

								if ( len2 > 1.0 ) discard;

							}

						#endif

					#endif

					vec4 diffuseColor = vec4( diffuse, alpha );
					#ifdef USE_COLOR
						#ifdef USE_LINE_COLOR_ALPHA
							diffuseColor *= vLineColor;
						#else
							diffuseColor.rgb *= vLineColor;
						#endif
					#endif

					#include <logdepthbuf_fragment>

					gl_FragColor = diffuseColor;

					#include <tonemapping_fragment>
					#include <${
            parseInt(mp.replace(/\D+/g, "")) >= 154
              ? "colorspace_fragment"
              : "encodings_fragment"
          }>
					#include <fog_fragment>
					#include <premultiplied_alpha_fragment>

				}
			`,
      clipping: !0,
    }),
      (this.isLineMaterial = !0),
      (this.onBeforeCompile = function () {
        this.transparent
          ? (this.defines.USE_LINE_COLOR_ALPHA = "1")
          : delete this.defines.USE_LINE_COLOR_ALPHA;
      }),
      Object.defineProperties(this, {
        color: {
          enumerable: !0,
          get: function () {
            return this.uniforms.diffuse.value;
          },
          set: function (n) {
            this.uniforms.diffuse.value = n;
          },
        },
        worldUnits: {
          enumerable: !0,
          get: function () {
            return "WORLD_UNITS" in this.defines;
          },
          set: function (n) {
            n === !0
              ? (this.defines.WORLD_UNITS = "")
              : delete this.defines.WORLD_UNITS;
          },
        },
        linewidth: {
          enumerable: !0,
          get: function () {
            return this.uniforms.linewidth.value;
          },
          set: function (n) {
            this.uniforms.linewidth.value = n;
          },
        },
        dashed: {
          enumerable: !0,
          get: function () {
            return "USE_DASH" in this.defines;
          },
          set(n) {
            !!n != "USE_DASH" in this.defines && (this.needsUpdate = !0),
              n === !0
                ? (this.defines.USE_DASH = "")
                : delete this.defines.USE_DASH;
          },
        },
        dashScale: {
          enumerable: !0,
          get: function () {
            return this.uniforms.dashScale.value;
          },
          set: function (n) {
            this.uniforms.dashScale.value = n;
          },
        },
        dashSize: {
          enumerable: !0,
          get: function () {
            return this.uniforms.dashSize.value;
          },
          set: function (n) {
            this.uniforms.dashSize.value = n;
          },
        },
        dashOffset: {
          enumerable: !0,
          get: function () {
            return this.uniforms.dashOffset.value;
          },
          set: function (n) {
            this.uniforms.dashOffset.value = n;
          },
        },
        gapSize: {
          enumerable: !0,
          get: function () {
            return this.uniforms.gapSize.value;
          },
          set: function (n) {
            this.uniforms.gapSize.value = n;
          },
        },
        opacity: {
          enumerable: !0,
          get: function () {
            return this.uniforms.opacity.value;
          },
          set: function (n) {
            this.uniforms.opacity.value = n;
          },
        },
        resolution: {
          enumerable: !0,
          get: function () {
            return this.uniforms.resolution.value;
          },
          set: function (n) {
            this.uniforms.resolution.value.copy(n);
          },
        },
        alphaToCoverage: {
          enumerable: !0,
          get: function () {
            return "USE_ALPHA_TO_COVERAGE" in this.defines;
          },
          set: function (n) {
            !!n != "USE_ALPHA_TO_COVERAGE" in this.defines &&
              (this.needsUpdate = !0),
              n === !0
                ? ((this.defines.USE_ALPHA_TO_COVERAGE = ""),
                  (this.extensions.derivatives = !0))
                : (delete this.defines.USE_ALPHA_TO_COVERAGE,
                  (this.extensions.derivatives = !1));
          },
        },
      }),
      this.setValues(e);
  }
}
const OR = new W(),
  FR = new W(),
  Sr = new Ht(),
  wr = new Ht(),
  ls = new Ht(),
  d_ = new W(),
  h_ = new bt(),
  kr = new DF(),
  NR = new W(),
  Vg = new or(),
  Gg = new sr(),
  cs = new Ht();
let ps, Ow, fN, vc;
function DR(t, e, n) {
  return (
    cs.set(0, 0, -e, 1).applyMatrix4(t.projectionMatrix),
    cs.multiplyScalar(1 / cs.w),
    (cs.x = vc / n.width),
    (cs.y = vc / n.height),
    cs.applyMatrix4(t.projectionMatrixInverse),
    cs.multiplyScalar(1 / cs.w),
    Math.abs(Math.max(cs.x, cs.y))
  );
}
function ZW(t, e) {
  for (let n = 0, r = Ow.count; n < r; n++) {
    kr.start.fromBufferAttribute(Ow, n), kr.end.fromBufferAttribute(fN, n);
    const i = new W(),
      o = new W();
    ps.distanceSqToSegment(kr.start, kr.end, o, i),
      o.distanceTo(i) < vc * 0.5 &&
        e.push({
          point: o,
          pointOnLine: i,
          distance: ps.origin.distanceTo(o),
          object: t,
          face: null,
          faceIndex: n,
          uv: null,
          uv2: null,
        });
  }
}
function QW(t, e, n) {
  const r = e.projectionMatrix,
    o = t.material.resolution,
    s = t.matrixWorld,
    a = t.geometry,
    l = a.attributes.instanceStart,
    c = a.attributes.instanceEnd,
    u = -e.near;
  ps.at(1, ls),
    (ls.w = 1),
    ls.applyMatrix4(e.matrixWorldInverse),
    ls.applyMatrix4(r),
    ls.multiplyScalar(1 / ls.w),
    (ls.x *= o.x / 2),
    (ls.y *= o.y / 2),
    (ls.z = 0),
    d_.copy(ls),
    h_.multiplyMatrices(e.matrixWorldInverse, s);
  for (let h = 0, p = l.count; h < p; h++) {
    if (
      (Sr.fromBufferAttribute(l, h),
      wr.fromBufferAttribute(c, h),
      (Sr.w = 1),
      (wr.w = 1),
      Sr.applyMatrix4(h_),
      wr.applyMatrix4(h_),
      Sr.z > u && wr.z > u)
    )
      continue;
    if (Sr.z > u) {
      const y = Sr.z - wr.z,
        _ = (Sr.z - u) / y;
      Sr.lerp(wr, _);
    } else if (wr.z > u) {
      const y = wr.z - Sr.z,
        _ = (wr.z - u) / y;
      wr.lerp(Sr, _);
    }
    Sr.applyMatrix4(r),
      wr.applyMatrix4(r),
      Sr.multiplyScalar(1 / Sr.w),
      wr.multiplyScalar(1 / wr.w),
      (Sr.x *= o.x / 2),
      (Sr.y *= o.y / 2),
      (wr.x *= o.x / 2),
      (wr.y *= o.y / 2),
      kr.start.copy(Sr),
      (kr.start.z = 0),
      kr.end.copy(wr),
      (kr.end.z = 0);
    const v = kr.closestPointToPointParameter(d_, !0);
    kr.at(v, NR);
    const S = AO.lerp(Sr.z, wr.z, v),
      x = S >= -1 && S <= 1,
      g = d_.distanceTo(NR) < vc * 0.5;
    if (x && g) {
      kr.start.fromBufferAttribute(l, h),
        kr.end.fromBufferAttribute(c, h),
        kr.start.applyMatrix4(s),
        kr.end.applyMatrix4(s);
      const y = new W(),
        _ = new W();
      ps.distanceSqToSegment(kr.start, kr.end, _, y),
        n.push({
          point: _,
          pointOnLine: y,
          distance: ps.origin.distanceTo(_),
          object: t,
          face: null,
          faceIndex: h,
          uv: null,
          uv2: null,
        });
    }
  }
}
class dN extends An {
  constructor(e = new vM(), n = new yM({ color: Math.random() * 16777215 })) {
    super(e, n), (this.isLineSegments2 = !0), (this.type = "LineSegments2");
  }
  computeLineDistances() {
    const e = this.geometry,
      n = e.attributes.instanceStart,
      r = e.attributes.instanceEnd,
      i = new Float32Array(2 * n.count);
    for (let s = 0, a = 0, l = n.count; s < l; s++, a += 2)
      OR.fromBufferAttribute(n, s),
        FR.fromBufferAttribute(r, s),
        (i[a] = a === 0 ? 0 : i[a - 1]),
        (i[a + 1] = i[a] + OR.distanceTo(FR));
    const o = new v0(i, 2, 1);
    return (
      e.setAttribute("instanceDistanceStart", new Vi(o, 1, 0)),
      e.setAttribute("instanceDistanceEnd", new Vi(o, 1, 1)),
      this
    );
  }
  raycast(e, n) {
    const r = this.material.worldUnits,
      i = e.camera;
    i === null &&
      !r &&
      console.error(
        'LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.'
      );
    const o = (e.params.Line2 !== void 0 && e.params.Line2.threshold) || 0;
    ps = e.ray;
    const s = this.matrixWorld,
      a = this.geometry,
      l = this.material;
    (vc = l.linewidth + o),
      (Ow = a.attributes.instanceStart),
      (fN = a.attributes.instanceEnd),
      a.boundingSphere === null && a.computeBoundingSphere(),
      Gg.copy(a.boundingSphere).applyMatrix4(s);
    let c;
    if (r) c = vc * 0.5;
    else {
      const h = Math.max(i.near, Gg.distanceToPoint(ps.origin));
      c = DR(i, h, l.resolution);
    }
    if (((Gg.radius += c), ps.intersectsSphere(Gg) === !1)) return;
    a.boundingBox === null && a.computeBoundingBox(),
      Vg.copy(a.boundingBox).applyMatrix4(s);
    let u;
    if (r) u = vc * 0.5;
    else {
      const h = Math.max(i.near, Vg.distanceToPoint(ps.origin));
      u = DR(i, h, l.resolution);
    }
    Vg.expandByScalar(u),
      ps.intersectsBox(Vg) !== !1 && (r ? ZW(this, n) : QW(this, i, n));
  }
}
class JW extends dN {
  constructor(e = new uN(), n = new yM({ color: Math.random() * 16777215 })) {
    super(e, n), (this.isLine2 = !0), (this.type = "Line2");
  }
}
const vo = z.forwardRef(function (
  {
    points: e,
    color: n = "black",
    vertexColors: r,
    linewidth: i,
    lineWidth: o,
    segments: s,
    dashed: a,
    ...l
  },
  c
) {
  var u;
  const h = ds((x) => x.size),
    p = z.useMemo(() => (s ? new dN() : new JW()), [s]),
    [m] = z.useState(() => new yM()),
    v = (r == null || (u = r[0]) == null ? void 0 : u.length) === 4 ? 4 : 3,
    S = z.useMemo(() => {
      const x = s ? new vM() : new uN(),
        g = e.map((y) => {
          const _ = Array.isArray(y);
          return y instanceof W || y instanceof Ht
            ? [y.x, y.y, y.z]
            : y instanceof Fe
            ? [y.x, y.y, 0]
            : _ && y.length === 3
            ? [y[0], y[1], y[2]]
            : _ && y.length === 2
            ? [y[0], y[1], 0]
            : y;
        });
      if ((x.setPositions(g.flat()), r)) {
        const y = r.map((_) => (_ instanceof nt ? _.toArray() : _));
        x.setColors(y.flat(), v);
      }
      return x;
    }, [e, s, r, v]);
  return (
    z.useLayoutEffect(() => {
      p.computeLineDistances();
    }, [e, p]),
    z.useLayoutEffect(() => {
      a ? (m.defines.USE_DASH = "") : delete m.defines.USE_DASH,
        (m.needsUpdate = !0);
    }, [a, m]),
    z.useEffect(() => () => S.dispose(), [S]),
    z.createElement(
      "primitive",
      mn({ object: p, ref: c }, l),
      z.createElement("primitive", { object: S, attach: "geometry" }),
      z.createElement(
        "primitive",
        mn(
          {
            object: m,
            attach: "material",
            color: n,
            vertexColors: !!r,
            resolution: [h.width, h.height],
            linewidth: i ?? o,
            dashed: a,
            transparent: v === 4,
          },
          l
        )
      )
    )
  );
});
function e9() {
  var t = Object.create(null);
  function e(i, o) {
    var s = i.id,
      a = i.name,
      l = i.dependencies;
    l === void 0 && (l = []);
    var c = i.init;
    c === void 0 && (c = function () {});
    var u = i.getTransferables;
    if ((u === void 0 && (u = null), !t[s]))
      try {
        (l = l.map(function (p) {
          return (
            p &&
              p.isWorkerModule &&
              (e(p, function (m) {
                if (m instanceof Error) throw m;
              }),
              (p = t[p.id].value)),
            p
          );
        })),
          (c = r("<" + a + ">.init", c)),
          u && (u = r("<" + a + ">.getTransferables", u));
        var h = null;
        typeof c == "function"
          ? (h = c.apply(void 0, l))
          : console.error("worker module init function failed to rehydrate"),
          (t[s] = { id: s, value: h, getTransferables: u }),
          o(h);
      } catch (p) {
        (p && p.noLog) || console.error(p), o(p);
      }
  }
  function n(i, o) {
    var s,
      a = i.id,
      l = i.args;
    (!t[a] || typeof t[a].value != "function") &&
      o(
        new Error(
          "Worker module " +
            a +
            ": not found or its 'init' did not return a function"
        )
      );
    try {
      var c = (s = t[a]).value.apply(s, l);
      c && typeof c.then == "function"
        ? c.then(u, function (h) {
            return o(h instanceof Error ? h : new Error("" + h));
          })
        : u(c);
    } catch (h) {
      o(h);
    }
    function u(h) {
      try {
        var p = t[a].getTransferables && t[a].getTransferables(h);
        (!p || !Array.isArray(p) || !p.length) && (p = void 0), o(h, p);
      } catch (m) {
        console.error(m), o(m);
      }
    }
  }
  function r(i, o) {
    var s = void 0;
    self.troikaDefine = function (l) {
      return (s = l);
    };
    var a = URL.createObjectURL(
      new Blob(
        [
          "/** " +
            i.replace(/\*/g, "") +
            ` **/

troikaDefine(
` +
            o +
            `
)`,
        ],
        { type: "application/javascript" }
      )
    );
    try {
      importScripts(a);
    } catch (l) {
      console.error(l);
    }
    return URL.revokeObjectURL(a), delete self.troikaDefine, s;
  }
  self.addEventListener("message", function (i) {
    var o = i.data,
      s = o.messageId,
      a = o.action,
      l = o.data;
    try {
      a === "registerModule" &&
        e(l, function (c) {
          c instanceof Error
            ? postMessage({ messageId: s, success: !1, error: c.message })
            : postMessage({
                messageId: s,
                success: !0,
                result: { isCallable: typeof c == "function" },
              });
        }),
        a === "callModule" &&
          n(l, function (c, u) {
            c instanceof Error
              ? postMessage({ messageId: s, success: !1, error: c.message })
              : postMessage(
                  { messageId: s, success: !0, result: c },
                  u || void 0
                );
          });
    } catch (c) {
      postMessage({ messageId: s, success: !1, error: c.stack });
    }
  });
}
function t9(t) {
  var e = function () {
    for (var n = [], r = arguments.length; r--; ) n[r] = arguments[r];
    return e._getInitResult().then(function (i) {
      if (typeof i == "function") return i.apply(void 0, n);
      throw new Error(
        "Worker module function was called but `init` did not return a callable function"
      );
    });
  };
  return (
    (e._getInitResult = function () {
      var n = t.dependencies,
        r = t.init;
      n = Array.isArray(n)
        ? n.map(function (o) {
            return o && o._getInitResult ? o._getInitResult() : o;
          })
        : [];
      var i = Promise.all(n).then(function (o) {
        return r.apply(null, o);
      });
      return (
        (e._getInitResult = function () {
          return i;
        }),
        i
      );
    }),
    e
  );
}
var hN = function () {
    var t = !1;
    if (typeof window < "u" && typeof window.document < "u")
      try {
        var e = new Worker(
          URL.createObjectURL(
            new Blob([""], { type: "application/javascript" })
          )
        );
        e.terminate(), (t = !0);
      } catch (n) {
        typeof process < "u",
          console.log(
            "Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: [" +
              n.message +
              "]"
          );
      }
    return (
      (hN = function () {
        return t;
      }),
      t
    );
  },
  n9 = 0,
  r9 = 0,
  p_ = !1,
  ch = Object.create(null),
  uh = Object.create(null),
  Fw = Object.create(null);
function Ap(t) {
  if ((!t || typeof t.init != "function") && !p_)
    throw new Error("requires `options.init` function");
  var e = t.dependencies,
    n = t.init,
    r = t.getTransferables,
    i = t.workerId;
  if (!hN()) return t9(t);
  i == null && (i = "#default");
  var o = "workerModule" + ++n9,
    s = t.name || o,
    a = null;
  e =
    e &&
    e.map(function (c) {
      return (
        typeof c == "function" &&
          !c.workerModuleData &&
          ((p_ = !0),
          (c = Ap({
            workerId: i,
            name: "<" + s + "> function dependency: " + c.name,
            init:
              `function(){return (
` +
              Pv(c) +
              `
)}`,
          })),
          (p_ = !1)),
        c && c.workerModuleData && (c = c.workerModuleData),
        c
      );
    });
  function l() {
    for (var c = [], u = arguments.length; u--; ) c[u] = arguments[u];
    if (!a) {
      a = UR(i, "registerModule", l.workerModuleData);
      var h = function () {
        (a = null), uh[i].delete(h);
      };
      (uh[i] || (uh[i] = new Set())).add(h);
    }
    return a.then(function (p) {
      var m = p.isCallable;
      if (m) return UR(i, "callModule", { id: o, args: c });
      throw new Error(
        "Worker module function was called but `init` did not return a callable function"
      );
    });
  }
  return (
    (l.workerModuleData = {
      isWorkerModule: !0,
      id: o,
      name: s,
      dependencies: e,
      init: Pv(n),
      getTransferables: r && Pv(r),
    }),
    l
  );
}
function i9(t) {
  uh[t] &&
    uh[t].forEach(function (e) {
      e();
    }),
    ch[t] && (ch[t].terminate(), delete ch[t]);
}
function Pv(t) {
  var e = t.toString();
  return (
    !/^function/.test(e) && /^\w+\s*\(/.test(e) && (e = "function " + e), e
  );
}
function o9(t) {
  var e = ch[t];
  if (!e) {
    var n = Pv(e9);
    (e = ch[t] =
      new Worker(
        URL.createObjectURL(
          new Blob(
            [
              "/** Worker Module Bootstrap: " +
                t.replace(/\*/g, "") +
                ` **/

;(` +
                n +
                ")()",
            ],
            { type: "application/javascript" }
          )
        )
      )),
      (e.onmessage = function (r) {
        var i = r.data,
          o = i.messageId,
          s = Fw[o];
        if (!s)
          throw new Error(
            "WorkerModule response with empty or unknown messageId"
          );
        delete Fw[o], s(i);
      });
  }
  return e;
}
function UR(t, e, n) {
  return new Promise(function (r, i) {
    var o = ++r9;
    (Fw[o] = function (s) {
      s.success
        ? r(s.result)
        : i(new Error("Error in worker " + e + " call: " + s.error));
    }),
      o9(t).postMessage({ messageId: o, action: e, data: n });
  });
}
function pN() {
  var t = (function (e) {
    function n(V, G, U, Z, Q, te, re, le) {
      var oe = 1 - re;
      (le.x = oe * oe * V + 2 * oe * re * U + re * re * Q),
        (le.y = oe * oe * G + 2 * oe * re * Z + re * re * te);
    }
    function r(V, G, U, Z, Q, te, re, le, oe, ve) {
      var Ae = 1 - oe;
      (ve.x =
        Ae * Ae * Ae * V +
        3 * Ae * Ae * oe * U +
        3 * Ae * oe * oe * Q +
        oe * oe * oe * re),
        (ve.y =
          Ae * Ae * Ae * G +
          3 * Ae * Ae * oe * Z +
          3 * Ae * oe * oe * te +
          oe * oe * oe * le);
    }
    function i(V, G) {
      for (
        var U = /([MLQCZ])([^MLQCZ]*)/g, Z, Q, te, re, le;
        (Z = U.exec(V));

      ) {
        var oe = Z[2]
          .replace(/^\s*|\s*$/g, "")
          .split(/[,\s]+/)
          .map(function (ve) {
            return parseFloat(ve);
          });
        switch (Z[1]) {
          case "M":
            (re = Q = oe[0]), (le = te = oe[1]);
            break;
          case "L":
            (oe[0] !== re || oe[1] !== le) &&
              G("L", re, le, (re = oe[0]), (le = oe[1]));
            break;
          case "Q": {
            G("Q", re, le, (re = oe[2]), (le = oe[3]), oe[0], oe[1]);
            break;
          }
          case "C": {
            G(
              "C",
              re,
              le,
              (re = oe[4]),
              (le = oe[5]),
              oe[0],
              oe[1],
              oe[2],
              oe[3]
            );
            break;
          }
          case "Z":
            (re !== Q || le !== te) && G("L", re, le, Q, te);
            break;
        }
      }
    }
    function o(V, G, U) {
      U === void 0 && (U = 16);
      var Z = { x: 0, y: 0 };
      i(V, function (Q, te, re, le, oe, ve, Ae, Re, ye) {
        switch (Q) {
          case "L":
            G(te, re, le, oe);
            break;
          case "Q": {
            for (var q = te, xe = re, he = 1; he < U; he++)
              n(te, re, ve, Ae, le, oe, he / (U - 1), Z),
                G(q, xe, Z.x, Z.y),
                (q = Z.x),
                (xe = Z.y);
            break;
          }
          case "C": {
            for (var me = te, fe = re, Ve = 1; Ve < U; Ve++)
              r(te, re, ve, Ae, Re, ye, le, oe, Ve / (U - 1), Z),
                G(me, fe, Z.x, Z.y),
                (me = Z.x),
                (fe = Z.y);
            break;
          }
        }
      });
    }
    var s =
        "precision highp float;attribute vec2 aUV;varying vec2 vUV;void main(){vUV=aUV;gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",
      a =
        "precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){gl_FragColor=texture2D(tex,vUV);}",
      l = new WeakMap(),
      c = {
        premultipliedAlpha: !1,
        preserveDrawingBuffer: !0,
        antialias: !1,
        depth: !1,
      };
    function u(V, G) {
      var U = V.getContext ? V.getContext("webgl", c) : V,
        Z = l.get(U);
      if (!Z) {
        let me = function (K) {
            var ae = te[K];
            if (!ae && ((ae = te[K] = U.getExtension(K)), !ae))
              throw new Error(K + " not supported");
            return ae;
          },
          fe = function (K, ae) {
            var se = U.createShader(ae);
            return U.shaderSource(se, K), U.compileShader(se), se;
          },
          Ve = function (K, ae, se, de) {
            if (!re[K]) {
              var Pe = {},
                ke = {},
                Be = U.createProgram();
              U.attachShader(Be, fe(ae, U.VERTEX_SHADER)),
                U.attachShader(Be, fe(se, U.FRAGMENT_SHADER)),
                U.linkProgram(Be),
                (re[K] = {
                  program: Be,
                  transaction: function (ze) {
                    U.useProgram(Be),
                      ze({
                        setUniform: function (Je, qe) {
                          for (
                            var Qe = [], Ge = arguments.length - 2;
                            Ge-- > 0;

                          )
                            Qe[Ge] = arguments[Ge + 2];
                          var Oe =
                            ke[qe] || (ke[qe] = U.getUniformLocation(Be, qe));
                          U["uniform" + Je].apply(U, [Oe].concat(Qe));
                        },
                        setAttribute: function (Je, qe, Qe, Ge, Oe) {
                          var ne = Pe[Je];
                          ne ||
                            (ne = Pe[Je] =
                              {
                                buf: U.createBuffer(),
                                loc: U.getAttribLocation(Be, Je),
                                data: null,
                              }),
                            U.bindBuffer(U.ARRAY_BUFFER, ne.buf),
                            U.vertexAttribPointer(
                              ne.loc,
                              qe,
                              U.FLOAT,
                              !1,
                              0,
                              0
                            ),
                            U.enableVertexAttribArray(ne.loc),
                            Q
                              ? U.vertexAttribDivisor(ne.loc, Ge)
                              : me(
                                  "ANGLE_instanced_arrays"
                                ).vertexAttribDivisorANGLE(ne.loc, Ge),
                            Oe !== ne.data &&
                              (U.bufferData(U.ARRAY_BUFFER, Oe, Qe),
                              (ne.data = Oe));
                        },
                      });
                  },
                });
            }
            re[K].transaction(de);
          },
          ge = function (K, ae) {
            oe++;
            try {
              U.activeTexture(U.TEXTURE0 + oe);
              var se = le[K];
              se ||
                ((se = le[K] = U.createTexture()),
                U.bindTexture(U.TEXTURE_2D, se),
                U.texParameteri(U.TEXTURE_2D, U.TEXTURE_MIN_FILTER, U.NEAREST),
                U.texParameteri(U.TEXTURE_2D, U.TEXTURE_MAG_FILTER, U.NEAREST)),
                U.bindTexture(U.TEXTURE_2D, se),
                ae(se, oe);
            } finally {
              oe--;
            }
          },
          H = function (K, ae, se) {
            var de = U.createFramebuffer();
            ve.push(de),
              U.bindFramebuffer(U.FRAMEBUFFER, de),
              U.activeTexture(U.TEXTURE0 + ae),
              U.bindTexture(U.TEXTURE_2D, K),
              U.framebufferTexture2D(
                U.FRAMEBUFFER,
                U.COLOR_ATTACHMENT0,
                U.TEXTURE_2D,
                K,
                0
              );
            try {
              se(de);
            } finally {
              U.deleteFramebuffer(de),
                U.bindFramebuffer(U.FRAMEBUFFER, ve[--ve.length - 1] || null);
            }
          },
          F = function () {
            (te = {}), (re = {}), (le = {}), (oe = -1), (ve.length = 0);
          };
        var Ae = me,
          Re = fe,
          ye = Ve,
          q = ge,
          xe = H,
          he = F,
          Q =
            typeof WebGL2RenderingContext < "u" &&
            U instanceof WebGL2RenderingContext,
          te = {},
          re = {},
          le = {},
          oe = -1,
          ve = [];
        U.canvas.addEventListener(
          "webglcontextlost",
          function (K) {
            F(), K.preventDefault();
          },
          !1
        ),
          l.set(
            U,
            (Z = {
              gl: U,
              isWebGL2: Q,
              getExtension: me,
              withProgram: Ve,
              withTexture: ge,
              withTextureFramebuffer: H,
              handleContextLoss: F,
            })
          );
      }
      G(Z);
    }
    function h(V, G, U, Z, Q, te, re, le) {
      re === void 0 && (re = 15),
        le === void 0 && (le = null),
        u(V, function (oe) {
          var ve = oe.gl,
            Ae = oe.withProgram,
            Re = oe.withTexture;
          Re("copy", function (ye, q) {
            ve.texImage2D(
              ve.TEXTURE_2D,
              0,
              ve.RGBA,
              Q,
              te,
              0,
              ve.RGBA,
              ve.UNSIGNED_BYTE,
              G
            ),
              Ae("copy", s, a, function (xe) {
                var he = xe.setUniform,
                  me = xe.setAttribute;
                me(
                  "aUV",
                  2,
                  ve.STATIC_DRAW,
                  0,
                  new Float32Array([0, 0, 2, 0, 0, 2])
                ),
                  he("1i", "image", q),
                  ve.bindFramebuffer(ve.FRAMEBUFFER, le || null),
                  ve.disable(ve.BLEND),
                  ve.colorMask(re & 8, re & 4, re & 2, re & 1),
                  ve.viewport(U, Z, Q, te),
                  ve.scissor(U, Z, Q, te),
                  ve.drawArrays(ve.TRIANGLES, 0, 3);
              });
          });
        });
    }
    function p(V, G, U) {
      var Z = V.width,
        Q = V.height;
      u(V, function (te) {
        var re = te.gl,
          le = new Uint8Array(Z * Q * 4);
        re.readPixels(0, 0, Z, Q, re.RGBA, re.UNSIGNED_BYTE, le),
          (V.width = G),
          (V.height = U),
          h(re, le, 0, 0, Z, Q);
      });
    }
    var m = Object.freeze({
      __proto__: null,
      withWebGLContext: u,
      renderImageData: h,
      resizeWebGLCanvasWithoutClearing: p,
    });
    function v(V, G, U, Z, Q, te) {
      te === void 0 && (te = 1);
      var re = new Uint8Array(V * G),
        le = Z[2] - Z[0],
        oe = Z[3] - Z[1],
        ve = [];
      o(U, function (me, fe, Ve, ge) {
        ve.push({
          x1: me,
          y1: fe,
          x2: Ve,
          y2: ge,
          minX: Math.min(me, Ve),
          minY: Math.min(fe, ge),
          maxX: Math.max(me, Ve),
          maxY: Math.max(fe, ge),
        });
      }),
        ve.sort(function (me, fe) {
          return me.maxX - fe.maxX;
        });
      for (var Ae = 0; Ae < V; Ae++)
        for (var Re = 0; Re < G; Re++) {
          var ye = xe(
              Z[0] + (le * (Ae + 0.5)) / V,
              Z[1] + (oe * (Re + 0.5)) / G
            ),
            q = Math.pow(1 - Math.abs(ye) / Q, te) / 2;
          ye < 0 && (q = 1 - q),
            (q = Math.max(0, Math.min(255, Math.round(q * 255)))),
            (re[Re * V + Ae] = q);
        }
      return re;
      function xe(me, fe) {
        for (var Ve = 1 / 0, ge = 1 / 0, H = ve.length; H--; ) {
          var F = ve[H];
          if (F.maxX + ge <= me) break;
          if (me + ge > F.minX && fe - ge < F.maxY && fe + ge > F.minY) {
            var K = g(me, fe, F.x1, F.y1, F.x2, F.y2);
            K < Ve && ((Ve = K), (ge = Math.sqrt(Ve)));
          }
        }
        return he(me, fe) && (ge = -ge), ge;
      }
      function he(me, fe) {
        for (var Ve = 0, ge = ve.length; ge--; ) {
          var H = ve[ge];
          if (H.maxX <= me) break;
          var F =
            H.y1 > fe != H.y2 > fe &&
            me < ((H.x2 - H.x1) * (fe - H.y1)) / (H.y2 - H.y1) + H.x1;
          F && (Ve += H.y1 < H.y2 ? 1 : -1);
        }
        return Ve !== 0;
      }
    }
    function S(V, G, U, Z, Q, te, re, le, oe, ve) {
      te === void 0 && (te = 1),
        le === void 0 && (le = 0),
        oe === void 0 && (oe = 0),
        ve === void 0 && (ve = 0),
        x(V, G, U, Z, Q, te, re, null, le, oe, ve);
    }
    function x(V, G, U, Z, Q, te, re, le, oe, ve, Ae) {
      te === void 0 && (te = 1),
        oe === void 0 && (oe = 0),
        ve === void 0 && (ve = 0),
        Ae === void 0 && (Ae = 0);
      for (
        var Re = v(V, G, U, Z, Q, te),
          ye = new Uint8Array(Re.length * 4),
          q = 0;
        q < Re.length;
        q++
      )
        ye[q * 4 + Ae] = Re[q];
      h(re, ye, oe, ve, V, G, 1 << (3 - Ae), le);
    }
    function g(V, G, U, Z, Q, te) {
      var re = Q - U,
        le = te - Z,
        oe = re * re + le * le,
        ve = oe
          ? Math.max(0, Math.min(1, ((V - U) * re + (G - Z) * le) / oe))
          : 0,
        Ae = V - (U + ve * re),
        Re = G - (Z + ve * le);
      return Ae * Ae + Re * Re;
    }
    var y = Object.freeze({
        __proto__: null,
        generate: v,
        generateIntoCanvas: S,
        generateIntoFramebuffer: x,
      }),
      _ =
        "precision highp float;uniform vec4 uGlyphBounds;attribute vec2 aUV;attribute vec4 aLineSegment;varying vec4 vLineSegment;varying vec2 vGlyphXY;void main(){vLineSegment=aLineSegment;vGlyphXY=mix(uGlyphBounds.xy,uGlyphBounds.zw,aUV);gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",
      b =
        "precision highp float;uniform vec4 uGlyphBounds;uniform float uMaxDistance;uniform float uExponent;varying vec4 vLineSegment;varying vec2 vGlyphXY;float absDistToSegment(vec2 point,vec2 lineA,vec2 lineB){vec2 lineDir=lineB-lineA;float lenSq=dot(lineDir,lineDir);float t=lenSq==0.0 ? 0.0 : clamp(dot(point-lineA,lineDir)/lenSq,0.0,1.0);vec2 linePt=lineA+t*lineDir;return distance(point,linePt);}void main(){vec4 seg=vLineSegment;vec2 p=vGlyphXY;float dist=absDistToSegment(p,seg.xy,seg.zw);float val=pow(1.0-clamp(dist/uMaxDistance,0.0,1.0),uExponent)*0.5;bool crossing=(seg.y>p.y!=seg.w>p.y)&&(p.x<(seg.z-seg.x)*(p.y-seg.y)/(seg.w-seg.y)+seg.x);bool crossingUp=crossing&&vLineSegment.y<vLineSegment.w;gl_FragColor=vec4(crossingUp ? 1.0/255.0 : 0.0,crossing&&!crossingUp ? 1.0/255.0 : 0.0,0.0,val);}",
      T =
        "precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){vec4 color=texture2D(tex,vUV);bool inside=color.r!=color.g;float val=inside ? 1.0-color.a : color.a;gl_FragColor=vec4(val);}",
      M = new Float32Array([0, 0, 2, 0, 0, 2]),
      C = null,
      L = !1,
      A = {},
      P = new WeakMap();
    function k(V) {
      if (!L && !X(V)) throw new Error("WebGL generation not supported");
    }
    function B(V, G, U, Z, Q, te, re) {
      if (
        (te === void 0 && (te = 1),
        re === void 0 && (re = null),
        !re && ((re = C), !re))
      ) {
        var le =
          typeof OffscreenCanvas == "function"
            ? new OffscreenCanvas(1, 1)
            : typeof document < "u"
            ? document.createElement("canvas")
            : null;
        if (!le) throw new Error("OffscreenCanvas or DOM canvas not supported");
        re = C = le.getContext("webgl", { depth: !1 });
      }
      k(re);
      var oe = new Uint8Array(V * G * 4);
      u(re, function (ye) {
        var q = ye.gl,
          xe = ye.withTexture,
          he = ye.withTextureFramebuffer;
        xe("readable", function (me, fe) {
          q.texImage2D(
            q.TEXTURE_2D,
            0,
            q.RGBA,
            V,
            G,
            0,
            q.RGBA,
            q.UNSIGNED_BYTE,
            null
          ),
            he(me, fe, function (Ve) {
              D(V, G, U, Z, Q, te, q, Ve, 0, 0, 0),
                q.readPixels(0, 0, V, G, q.RGBA, q.UNSIGNED_BYTE, oe);
            });
        });
      });
      for (
        var ve = new Uint8Array(V * G), Ae = 0, Re = 0;
        Ae < oe.length;
        Ae += 4
      )
        ve[Re++] = oe[Ae];
      return ve;
    }
    function $(V, G, U, Z, Q, te, re, le, oe, ve) {
      te === void 0 && (te = 1),
        le === void 0 && (le = 0),
        oe === void 0 && (oe = 0),
        ve === void 0 && (ve = 0),
        D(V, G, U, Z, Q, te, re, null, le, oe, ve);
    }
    function D(V, G, U, Z, Q, te, re, le, oe, ve, Ae) {
      te === void 0 && (te = 1),
        oe === void 0 && (oe = 0),
        ve === void 0 && (ve = 0),
        Ae === void 0 && (Ae = 0),
        k(re);
      var Re = [];
      o(U, function (ye, q, xe, he) {
        Re.push(ye, q, xe, he);
      }),
        (Re = new Float32Array(Re)),
        u(re, function (ye) {
          var q = ye.gl,
            xe = ye.isWebGL2,
            he = ye.getExtension,
            me = ye.withProgram,
            fe = ye.withTexture,
            Ve = ye.withTextureFramebuffer,
            ge = ye.handleContextLoss;
          if (
            (fe("rawDistances", function (H, F) {
              (V !== H._lastWidth || G !== H._lastHeight) &&
                q.texImage2D(
                  q.TEXTURE_2D,
                  0,
                  q.RGBA,
                  (H._lastWidth = V),
                  (H._lastHeight = G),
                  0,
                  q.RGBA,
                  q.UNSIGNED_BYTE,
                  null
                ),
                me("main", _, b, function (K) {
                  var ae = K.setAttribute,
                    se = K.setUniform,
                    de = !xe && he("ANGLE_instanced_arrays"),
                    Pe = !xe && he("EXT_blend_minmax");
                  ae("aUV", 2, q.STATIC_DRAW, 0, M),
                    ae("aLineSegment", 4, q.DYNAMIC_DRAW, 1, Re),
                    se.apply(void 0, ["4f", "uGlyphBounds"].concat(Z)),
                    se("1f", "uMaxDistance", Q),
                    se("1f", "uExponent", te),
                    Ve(H, F, function (ke) {
                      q.enable(q.BLEND),
                        q.colorMask(!0, !0, !0, !0),
                        q.viewport(0, 0, V, G),
                        q.scissor(0, 0, V, G),
                        q.blendFunc(q.ONE, q.ONE),
                        q.blendEquationSeparate(
                          q.FUNC_ADD,
                          xe ? q.MAX : Pe.MAX_EXT
                        ),
                        q.clear(q.COLOR_BUFFER_BIT),
                        xe
                          ? q.drawArraysInstanced(
                              q.TRIANGLES,
                              0,
                              3,
                              Re.length / 4
                            )
                          : de.drawArraysInstancedANGLE(
                              q.TRIANGLES,
                              0,
                              3,
                              Re.length / 4
                            );
                    });
                }),
                me("post", s, T, function (K) {
                  K.setAttribute("aUV", 2, q.STATIC_DRAW, 0, M),
                    K.setUniform("1i", "tex", F),
                    q.bindFramebuffer(q.FRAMEBUFFER, le),
                    q.disable(q.BLEND),
                    q.colorMask(Ae === 0, Ae === 1, Ae === 2, Ae === 3),
                    q.viewport(oe, ve, V, G),
                    q.scissor(oe, ve, V, G),
                    q.drawArrays(q.TRIANGLES, 0, 3);
                });
            }),
            q.isContextLost())
          )
            throw (ge(), new Error("webgl context lost"));
        });
    }
    function X(V) {
      var G = !V || V === C ? A : V.canvas || V,
        U = P.get(G);
      if (U === void 0) {
        L = !0;
        var Z = null;
        try {
          var Q = [
              97, 106, 97, 61, 99, 137, 118, 80, 80, 118, 137, 99, 61, 97, 106,
              97,
            ],
            te = B(4, 4, "M8,8L16,8L24,24L16,24Z", [0, 0, 32, 32], 24, 1, V);
          (U =
            te &&
            Q.length === te.length &&
            te.every(function (re, le) {
              return re === Q[le];
            })),
            U || ((Z = "bad trial run results"), console.info(Q, te));
        } catch (re) {
          (U = !1), (Z = re.message);
        }
        Z && console.warn("WebGL SDF generation not supported:", Z),
          (L = !1),
          P.set(G, U);
      }
      return U;
    }
    var j = Object.freeze({
      __proto__: null,
      generate: B,
      generateIntoCanvas: $,
      generateIntoFramebuffer: D,
      isSupported: X,
    });
    function Y(V, G, U, Z, Q, te) {
      Q === void 0 && (Q = Math.max(Z[2] - Z[0], Z[3] - Z[1]) / 2),
        te === void 0 && (te = 1);
      try {
        return B.apply(j, arguments);
      } catch (re) {
        return (
          console.info("WebGL SDF generation failed, falling back to JS", re),
          v.apply(y, arguments)
        );
      }
    }
    function N(V, G, U, Z, Q, te, re, le, oe, ve) {
      Q === void 0 && (Q = Math.max(Z[2] - Z[0], Z[3] - Z[1]) / 2),
        te === void 0 && (te = 1),
        le === void 0 && (le = 0),
        oe === void 0 && (oe = 0),
        ve === void 0 && (ve = 0);
      try {
        return $.apply(j, arguments);
      } catch (Ae) {
        return (
          console.info("WebGL SDF generation failed, falling back to JS", Ae),
          S.apply(y, arguments)
        );
      }
    }
    return (
      (e.forEachPathCommand = i),
      (e.generate = Y),
      (e.generateIntoCanvas = N),
      (e.javascript = y),
      (e.pathToLineSegments = o),
      (e.webgl = j),
      (e.webglUtils = m),
      Object.defineProperty(e, "__esModule", { value: !0 }),
      e
    );
  })({});
  return t;
}
function s9() {
  var t = (function (e) {
    var n = {
        R: "13k,1a,2,3,3,2+1j,ch+16,a+1,5+2,2+n,5,a,4,6+16,4+3,h+1b,4mo,179q,2+9,2+11,2i9+7y,2+68,4,3+4,5+13,4+3,2+4k,3+29,8+cf,1t+7z,w+17,3+3m,1t+3z,16o1+5r,8+30,8+mc,29+1r,29+4v,75+73",
        EN: "1c+9,3d+1,6,187+9,513,4+5,7+9,sf+j,175h+9,qw+q,161f+1d,4xt+a,25i+9",
        ES: "17,2,6dp+1,f+1,av,16vr,mx+1,4o,2",
        ET: "z+2,3h+3,b+1,ym,3e+1,2o,p4+1,8,6u,7c,g6,1wc,1n9+4,30+1b,2n,6d,qhx+1,h0m,a+1,49+2,63+1,4+1,6bb+3,12jj",
        AN: "16o+5,2j+9,2+1,35,ed,1ff2+9,87+u",
        CS: "18,2+1,b,2u,12k,55v,l,17v0,2,3,53,2+1,b",
        B: "a,3,f+2,2v,690",
        S: "9,2,k",
        WS: "c,k,4f4,1vk+a,u,1j,335",
        ON: "x+1,4+4,h+5,r+5,r+3,z,5+3,2+1,2+1,5,2+2,3+4,o,w,ci+1,8+d,3+d,6+8,2+g,39+1,9,6+1,2,33,b8,3+1,3c+1,7+1,5r,b,7h+3,sa+5,2,3i+6,jg+3,ur+9,2v,ij+1,9g+9,7+a,8m,4+1,49+x,14u,2+2,c+2,e+2,e+2,e+1,i+n,e+e,2+p,u+2,e+2,36+1,2+3,2+1,b,2+2,6+5,2,2,2,h+1,5+4,6+3,3+f,16+2,5+3l,3+81,1y+p,2+40,q+a,m+13,2r+ch,2+9e,75+hf,3+v,2+2w,6e+5,f+6,75+2a,1a+p,2+2g,d+5x,r+b,6+3,4+o,g,6+1,6+2,2k+1,4,2j,5h+z,1m+1,1e+f,t+2,1f+e,d+3,4o+3,2s+1,w,535+1r,h3l+1i,93+2,2s,b+1,3l+x,2v,4g+3,21+3,kz+1,g5v+1,5a,j+9,n+v,2,3,2+8,2+1,3+2,2,3,46+1,4+4,h+5,r+5,r+a,3h+2,4+6,b+4,78,1r+24,4+c,4,1hb,ey+6,103+j,16j+c,1ux+7,5+g,fsh,jdq+1t,4,57+2e,p1,1m,1m,1m,1m,4kt+1,7j+17,5+2r,d+e,3+e,2+e,2+10,m+4,w,1n+5,1q,4z+5,4b+rb,9+c,4+c,4+37,d+2g,8+b,l+b,5+1j,9+9,7+13,9+t,3+1,27+3c,2+29,2+3q,d+d,3+4,4+2,6+6,a+o,8+6,a+2,e+6,16+42,2+1i",
        BN: "0+8,6+d,2s+5,2+p,e,4m9,1kt+2,2b+5,5+5,17q9+v,7k,6p+8,6+1,119d+3,440+7,96s+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+75,6p+2rz,1ben+1,1ekf+1,1ekf+1",
        NSM: "lc+33,7o+6,7c+18,2,2+1,2+1,2,21+a,1d+k,h,2u+6,3+5,3+1,2+3,10,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,g+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+g,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,k1+w,2db+2,3y,2p+v,ff+3,30+1,n9x+3,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,r2,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+5,3+1,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2d+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,f0c+4,1o+6,t5,1s+3,2a,f5l+1,43t+2,i+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,gzhy+6n",
        AL: "16w,3,2,e+1b,z+2,2+2s,g+1,8+1,b+m,2+t,s+2i,c+e,4h+f,1d+1e,1bwe+dp,3+3z,x+c,2+1,35+3y,2rm+z,5+7,b+5,dt+l,c+u,17nl+27,1t+27,4x+6n,3+d",
        LRO: "6ct",
        RLO: "6cu",
        LRE: "6cq",
        RLE: "6cr",
        PDF: "6cs",
        LRI: "6ee",
        RLI: "6ef",
        FSI: "6eg",
        PDI: "6eh",
      },
      r = {},
      i = {};
    (r.L = 1),
      (i[1] = "L"),
      Object.keys(n).forEach(function (ge, H) {
        (r[ge] = 1 << (H + 1)), (i[r[ge]] = ge);
      }),
      Object.freeze(r);
    var o = r.LRI | r.RLI | r.FSI,
      s = r.L | r.R | r.AL,
      a = r.B | r.S | r.WS | r.ON | r.FSI | r.LRI | r.RLI | r.PDI,
      l = r.BN | r.RLE | r.LRE | r.RLO | r.LRO | r.PDF,
      c = r.S | r.WS | r.B | o | r.PDI | l,
      u = null;
    function h() {
      if (!u) {
        u = new Map();
        var ge = function (F) {
          if (n.hasOwnProperty(F)) {
            var K = 0;
            n[F].split(",").forEach(function (ae) {
              var se = ae.split("+"),
                de = se[0],
                Pe = se[1];
              (de = parseInt(de, 36)),
                (Pe = Pe ? parseInt(Pe, 36) : 0),
                u.set((K += de), r[F]);
              for (var ke = 0; ke < Pe; ke++) u.set(++K, r[F]);
            });
          }
        };
        for (var H in n) ge(H);
      }
    }
    function p(ge) {
      return h(), u.get(ge.codePointAt(0)) || r.L;
    }
    function m(ge) {
      return i[p(ge)];
    }
    var v = {
      pairs:
        "14>1,1e>2,u>2,2wt>1,1>1,1ge>1,1wp>1,1j>1,f>1,hm>1,1>1,u>1,u6>1,1>1,+5,28>1,w>1,1>1,+3,b8>1,1>1,+3,1>3,-1>-1,3>1,1>1,+2,1s>1,1>1,x>1,th>1,1>1,+2,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,4q>1,1e>2,u>2,2>1,+1",
      canonical:
        "6f1>-6dx,6dy>-6dx,6ec>-6ed,6ee>-6ed,6ww>2jj,-2ji>2jj,14r4>-1e7l,1e7m>-1e7l,1e7m>-1e5c,1e5d>-1e5b,1e5c>-14qx,14qy>-14qx,14vn>-1ecg,1ech>-1ecg,1edu>-1ecg,1eci>-1ecg,1eda>-1ecg,1eci>-1ecg,1eci>-168q,168r>-168q,168s>-14ye,14yf>-14ye",
    };
    function S(ge, H) {
      var F = 36,
        K = 0,
        ae = new Map(),
        se = H && new Map(),
        de;
      return (
        ge.split(",").forEach(function Pe(ke) {
          if (ke.indexOf("+") !== -1) for (var Be = +ke; Be--; ) Pe(de);
          else {
            de = ke;
            var Ne = ke.split(">"),
              ze = Ne[0],
              Ee = Ne[1];
            (ze = String.fromCodePoint((K += parseInt(ze, F)))),
              (Ee = String.fromCodePoint((K += parseInt(Ee, F)))),
              ae.set(ze, Ee),
              H && se.set(Ee, ze);
          }
        }),
        { map: ae, reverseMap: se }
      );
    }
    var x, g, y;
    function _() {
      if (!x) {
        var ge = S(v.pairs, !0),
          H = ge.map,
          F = ge.reverseMap;
        (x = H), (g = F), (y = S(v.canonical, !1).map);
      }
    }
    function b(ge) {
      return _(), x.get(ge) || null;
    }
    function T(ge) {
      return _(), g.get(ge) || null;
    }
    function M(ge) {
      return _(), y.get(ge) || null;
    }
    var C = r.L,
      L = r.R,
      A = r.EN,
      P = r.ES,
      k = r.ET,
      B = r.AN,
      $ = r.CS,
      D = r.B,
      X = r.S,
      j = r.ON,
      Y = r.BN,
      N = r.NSM,
      V = r.AL,
      G = r.LRO,
      U = r.RLO,
      Z = r.LRE,
      Q = r.RLE,
      te = r.PDF,
      re = r.LRI,
      le = r.RLI,
      oe = r.FSI,
      ve = r.PDI;
    function Ae(ge, H) {
      for (
        var F = 125, K = new Uint32Array(ge.length), ae = 0;
        ae < ge.length;
        ae++
      )
        K[ae] = p(ge[ae]);
      var se = new Map();
      function de(dr, Zr) {
        var Bn = K[dr];
        (K[dr] = Zr),
          se.set(Bn, se.get(Bn) - 1),
          Bn & a && se.set(a, se.get(a) - 1),
          se.set(Zr, (se.get(Zr) || 0) + 1),
          Zr & a && se.set(a, (se.get(a) || 0) + 1);
      }
      for (
        var Pe = new Uint8Array(ge.length),
          ke = new Map(),
          Be = [],
          Ne = null,
          ze = 0;
        ze < ge.length;
        ze++
      )
        Ne ||
          Be.push(
            (Ne = {
              start: ze,
              end: ge.length - 1,
              level: H === "rtl" ? 1 : H === "ltr" ? 0 : Yc(ze, !1),
            })
          ),
          K[ze] & D && ((Ne.end = ze), (Ne = null));
      for (
        var Ee = Q | Z | U | G | o | ve | te | D,
          Je = function (dr) {
            return dr + (dr & 1 ? 1 : 2);
          },
          qe = function (dr) {
            return dr + (dr & 1 ? 2 : 1);
          },
          Qe = 0;
        Qe < Be.length;
        Qe++
      ) {
        Ne = Be[Qe];
        var Ge = [{ _level: Ne.level, _override: 0, _isolate: 0 }],
          Oe = void 0,
          ne = 0,
          be = 0,
          je = 0;
        se.clear();
        for (var De = Ne.start; De <= Ne.end; De++) {
          var Le = K[De];
          if (
            ((Oe = Ge[Ge.length - 1]),
            se.set(Le, (se.get(Le) || 0) + 1),
            Le & a && se.set(a, (se.get(a) || 0) + 1),
            Le & Ee)
          )
            if (Le & (Q | Z)) {
              Pe[De] = Oe._level;
              var ie = (Le === Q ? qe : Je)(Oe._level);
              ie <= F && !ne && !be
                ? Ge.push({ _level: ie, _override: 0, _isolate: 0 })
                : ne || be++;
            } else if (Le & (U | G)) {
              Pe[De] = Oe._level;
              var Ue = (Le === U ? qe : Je)(Oe._level);
              Ue <= F && !ne && !be
                ? Ge.push({
                    _level: Ue,
                    _override: Le & U ? L : C,
                    _isolate: 0,
                  })
                : ne || be++;
            } else if (Le & o) {
              Le & oe && (Le = Yc(De + 1, !0) === 1 ? le : re),
                (Pe[De] = Oe._level),
                Oe._override && de(De, Oe._override);
              var Ke = (Le === le ? qe : Je)(Oe._level);
              Ke <= F && ne === 0 && be === 0
                ? (je++,
                  Ge.push({
                    _level: Ke,
                    _override: 0,
                    _isolate: 1,
                    _isolInitIndex: De,
                  }))
                : ne++;
            } else if (Le & ve) {
              if (ne > 0) ne--;
              else if (je > 0) {
                for (be = 0; !Ge[Ge.length - 1]._isolate; ) Ge.pop();
                var ft = Ge[Ge.length - 1]._isolInitIndex;
                ft != null && (ke.set(ft, De), ke.set(De, ft)), Ge.pop(), je--;
              }
              (Oe = Ge[Ge.length - 1]),
                (Pe[De] = Oe._level),
                Oe._override && de(De, Oe._override);
            } else
              Le & te
                ? (ne === 0 &&
                    (be > 0
                      ? be--
                      : !Oe._isolate &&
                        Ge.length > 1 &&
                        (Ge.pop(), (Oe = Ge[Ge.length - 1]))),
                  (Pe[De] = Oe._level))
                : Le & D && (Pe[De] = Ne.level);
          else
            (Pe[De] = Oe._level),
              Oe._override && Le !== Y && de(De, Oe._override);
        }
        for (var $e = [], it = null, ot = Ne.start; ot <= Ne.end; ot++) {
          var Tt = K[ot];
          if (!(Tt & l)) {
            var St = Pe[ot],
              ht = Tt & o,
              qt = Tt === ve;
            it && St === it._level
              ? ((it._end = ot), (it._endsWithIsolInit = ht))
              : $e.push(
                  (it = {
                    _start: ot,
                    _end: ot,
                    _level: St,
                    _startsWithPDI: qt,
                    _endsWithIsolInit: ht,
                  })
                );
          }
        }
        for (var Jt = [], kt = 0; kt < $e.length; kt++) {
          var gn = $e[kt];
          if (!gn._startsWithPDI || (gn._startsWithPDI && !ke.has(gn._start))) {
            for (
              var zn = [(it = gn)], cn = void 0;
              it && it._endsWithIsolInit && (cn = ke.get(it._end)) != null;

            )
              for (var jt = kt + 1; jt < $e.length; jt++)
                if ($e[jt]._start === cn) {
                  zn.push((it = $e[jt]));
                  break;
                }
            for (var qn = [], Ei = 0; Ei < zn.length; Ei++)
              for (var $r = zn[Ei], Mo = $r._start; Mo <= $r._end; Mo++)
                qn.push(Mo);
            for (
              var $f = Pe[qn[0]], J = Ne.level, pe = qn[0] - 1;
              pe >= 0;
              pe--
            )
              if (!(K[pe] & l)) {
                J = Pe[pe];
                break;
              }
            var we = qn[qn.length - 1],
              Ce = Pe[we],
              Se = Ne.level;
            if (!(K[we] & o)) {
              for (var et = we + 1; et <= Ne.end; et++)
                if (!(K[et] & l)) {
                  Se = Pe[et];
                  break;
                }
            }
            Jt.push({
              _seqIndices: qn,
              _sosType: Math.max(J, $f) % 2 ? L : C,
              _eosType: Math.max(Se, Ce) % 2 ? L : C,
            });
          }
        }
        for (var dt = 0; dt < Jt.length; dt++) {
          var gt = Jt[dt],
            He = gt._seqIndices,
            wt = gt._sosType,
            Et = gt._eosType,
            xt = Pe[He[0]] & 1 ? L : C;
          if (se.get(N))
            for (var sn = 0; sn < He.length; sn++) {
              var Yn = He[sn];
              if (K[Yn] & N) {
                for (var tn = wt, wn = sn - 1; wn >= 0; wn--)
                  if (!(K[He[wn]] & l)) {
                    tn = K[He[wn]];
                    break;
                  }
                de(Yn, tn & (o | ve) ? j : tn);
              }
            }
          if (se.get(A))
            for (var vt = 0; vt < He.length; vt++) {
              var st = He[vt];
              if (K[st] & A)
                for (var yr = vt - 1; yr >= -1; yr--) {
                  var Pt = yr === -1 ? wt : K[He[yr]];
                  if (Pt & s) {
                    Pt === V && de(st, B);
                    break;
                  }
                }
            }
          if (se.get(V))
            for (var fn = 0; fn < He.length; fn++) {
              var Mi = He[fn];
              K[Mi] & V && de(Mi, L);
            }
          if (se.get(P) || se.get($))
            for (var ur = 1; ur < He.length - 1; ur++) {
              var In = He[ur];
              if (K[In] & (P | $)) {
                for (
                  var an = 0, ci = 0, es = ur - 1;
                  es >= 0 && ((an = K[He[es]]), !!(an & l));
                  es--
                );
                for (
                  var kn = ur + 1;
                  kn < He.length && ((ci = K[He[kn]]), !!(ci & l));
                  kn++
                );
                an === ci &&
                  (K[In] === P ? an === A : an & (A | B)) &&
                  de(In, an);
              }
            }
          if (se.get(A))
            for (var xr = 0; xr < He.length; xr++) {
              var Xr = He[xr];
              if (K[Xr] & A) {
                for (var Ts = xr - 1; Ts >= 0 && K[He[Ts]] & (k | l); Ts--)
                  de(He[Ts], A);
                for (xr++; xr < He.length && K[He[xr]] & (k | l | A); xr++)
                  K[He[xr]] !== A && de(He[xr], A);
              }
            }
          if (se.get(k) || se.get(P) || se.get($))
            for (var yl = 0; yl < He.length; yl++) {
              var zp = He[yl];
              if (K[zp] & (k | P | $)) {
                de(zp, j);
                for (var As = yl - 1; As >= 0 && K[He[As]] & l; As--)
                  de(He[As], j);
                for (var Rs = yl + 1; Rs < He.length && K[He[Rs]] & l; Rs++)
                  de(He[Rs], j);
              }
            }
          if (se.get(A))
            for (var Ps = 0, xl = wt; Ps < He.length; Ps++) {
              var kp = He[Ps],
                Xf = K[kp];
              Xf & A ? xl === C && de(kp, C) : Xf & s && (xl = Xf);
            }
          if (se.get(a)) {
            var Ls = L | A | B,
              $c = Ls | C,
              ts = [];
            {
              for (var ma = [], ns = 0; ns < He.length; ns++)
                if (K[He[ns]] & a) {
                  var zt = ge[He[ns]],
                    qf = void 0;
                  if (b(zt) !== null)
                    if (ma.length < 63) ma.push({ char: zt, seqIndex: ns });
                    else break;
                  else if ((qf = T(zt)) !== null)
                    for (var Is = ma.length - 1; Is >= 0; Is--) {
                      var Xc = ma[Is].char;
                      if (Xc === qf || Xc === T(M(zt)) || b(M(Xc)) === zt) {
                        ts.push([ma[Is].seqIndex, ns]), (ma.length = Is);
                        break;
                      }
                    }
                }
              ts.sort(function (dr, Zr) {
                return dr[0] - Zr[0];
              });
            }
            for (var Yf = 0; Yf < ts.length; Yf++) {
              for (
                var Bp = ts[Yf],
                  bn = Bp[0],
                  _l = Bp[1],
                  Hp = !1,
                  qr = 0,
                  Kf = bn + 1;
                Kf < _l;
                Kf++
              ) {
                var Sl = He[Kf];
                if (K[Sl] & $c) {
                  Hp = !0;
                  var Ci = K[Sl] & Ls ? L : C;
                  if (Ci === xt) {
                    qr = Ci;
                    break;
                  }
                }
              }
              if (Hp && !qr) {
                qr = wt;
                for (var Zf = bn - 1; Zf >= 0; Zf--) {
                  var Vp = He[Zf];
                  if (K[Vp] & $c) {
                    var Ti = K[Vp] & Ls ? L : C;
                    Ti !== xt ? (qr = Ti) : (qr = xt);
                    break;
                  }
                }
              }
              if (qr) {
                if (((K[He[bn]] = K[He[_l]] = qr), qr !== xt)) {
                  for (var Yr = bn + 1; Yr < He.length; Yr++)
                    if (!(K[He[Yr]] & l)) {
                      p(ge[He[Yr]]) & N && (K[He[Yr]] = qr);
                      break;
                    }
                }
                if (qr !== xt) {
                  for (var rs = _l + 1; rs < He.length; rs++)
                    if (!(K[He[rs]] & l)) {
                      p(ge[He[rs]]) & N && (K[He[rs]] = qr);
                      break;
                    }
                }
              }
            }
            for (var to = 0; to < He.length; to++)
              if (K[He[to]] & a) {
                for (var Qf = to, Jf = to, ui = wt, wl = to - 1; wl >= 0; wl--)
                  if (K[He[wl]] & l) Qf = wl;
                  else {
                    ui = K[He[wl]] & Ls ? L : C;
                    break;
                  }
                for (var bl = Et, El = to + 1; El < He.length; El++)
                  if (K[He[El]] & (a | l)) Jf = El;
                  else {
                    bl = K[He[El]] & Ls ? L : C;
                    break;
                  }
                for (var Kr = Qf; Kr <= Jf; Kr++)
                  K[He[Kr]] = ui === bl ? ui : xt;
                to = Jf;
              }
          }
        }
        for (var fr = Ne.start; fr <= Ne.end; fr++) {
          var qc = Pe[fr],
            Co = K[fr];
          if (
            (qc & 1
              ? Co & (C | A | B) && Pe[fr]++
              : Co & L
              ? Pe[fr]++
              : Co & (B | A) && (Pe[fr] += 2),
            Co & l && (Pe[fr] = fr === 0 ? Ne.level : Pe[fr - 1]),
            fr === Ne.end || p(ge[fr]) & (X | D))
          )
            for (var ga = fr; ga >= 0 && p(ge[ga]) & c; ga--) Pe[ga] = Ne.level;
        }
      }
      return { levels: Pe, paragraphs: Be };
      function Yc(dr, Zr) {
        for (var Bn = dr; Bn < ge.length; Bn++) {
          var Hn = K[Bn];
          if (Hn & (L | V)) return 1;
          if (Hn & (D | C) || (Zr && Hn === ve)) return 0;
          if (Hn & o) {
            var Ai = Gp(Bn);
            Bn = Ai === -1 ? ge.length : Ai;
          }
        }
        return 0;
      }
      function Gp(dr) {
        for (var Zr = 1, Bn = dr + 1; Bn < ge.length; Bn++) {
          var Hn = K[Bn];
          if (Hn & D) break;
          if (Hn & ve) {
            if (--Zr === 0) return Bn;
          } else Hn & o && Zr++;
        }
        return -1;
      }
    }
    var Re =
        "14>1,j>2,t>2,u>2,1a>g,2v3>1,1>1,1ge>1,1wd>1,b>1,1j>1,f>1,ai>3,-2>3,+1,8>1k0,-1jq>1y7,-1y6>1hf,-1he>1h6,-1h5>1ha,-1h8>1qi,-1pu>1,6>3u,-3s>7,6>1,1>1,f>1,1>1,+2,3>1,1>1,+13,4>1,1>1,6>1eo,-1ee>1,3>1mg,-1me>1mk,-1mj>1mi,-1mg>1mi,-1md>1,1>1,+2,1>10k,-103>1,1>1,4>1,5>1,1>1,+10,3>1,1>8,-7>8,+1,-6>7,+1,a>1,1>1,u>1,u6>1,1>1,+5,26>1,1>1,2>1,2>2,8>1,7>1,4>1,1>1,+5,b8>1,1>1,+3,1>3,-2>1,2>1,1>1,+2,c>1,3>1,1>1,+2,h>1,3>1,a>1,1>1,2>1,3>1,1>1,d>1,f>1,3>1,1a>1,1>1,6>1,7>1,13>1,k>1,1>1,+19,4>1,1>1,+2,2>1,1>1,+18,m>1,a>1,1>1,lk>1,1>1,4>1,2>1,f>1,3>1,1>1,+3,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,6>1,4j>1,j>2,t>2,u>2,2>1,+1",
      ye;
    function q() {
      if (!ye) {
        var ge = S(Re, !0),
          H = ge.map,
          F = ge.reverseMap;
        F.forEach(function (K, ae) {
          H.set(ae, K);
        }),
          (ye = H);
      }
    }
    function xe(ge) {
      return q(), ye.get(ge) || null;
    }
    function he(ge, H, F, K) {
      var ae = ge.length;
      (F = Math.max(0, F == null ? 0 : +F)),
        (K = Math.min(ae - 1, K == null ? ae - 1 : +K));
      for (var se = new Map(), de = F; de <= K; de++)
        if (H[de] & 1) {
          var Pe = xe(ge[de]);
          Pe !== null && se.set(de, Pe);
        }
      return se;
    }
    function me(ge, H, F, K) {
      var ae = ge.length;
      (F = Math.max(0, F == null ? 0 : +F)),
        (K = Math.min(ae - 1, K == null ? ae - 1 : +K));
      var se = [];
      return (
        H.paragraphs.forEach(function (de) {
          var Pe = Math.max(F, de.start),
            ke = Math.min(K, de.end);
          if (Pe < ke) {
            for (
              var Be = H.levels.slice(Pe, ke + 1), Ne = ke;
              Ne >= Pe && p(ge[Ne]) & c;
              Ne--
            )
              Be[Ne] = de.level;
            for (var ze = de.level, Ee = 1 / 0, Je = 0; Je < Be.length; Je++) {
              var qe = Be[Je];
              qe > ze && (ze = qe), qe < Ee && (Ee = qe | 1);
            }
            for (var Qe = ze; Qe >= Ee; Qe--)
              for (var Ge = 0; Ge < Be.length; Ge++)
                if (Be[Ge] >= Qe) {
                  for (var Oe = Ge; Ge + 1 < Be.length && Be[Ge + 1] >= Qe; )
                    Ge++;
                  Ge > Oe && se.push([Oe + Pe, Ge + Pe]);
                }
          }
        }),
        se
      );
    }
    function fe(ge, H, F, K) {
      var ae = Ve(ge, H, F, K),
        se = [].concat(ge);
      return (
        ae.forEach(function (de, Pe) {
          se[Pe] = (H.levels[de] & 1 ? xe(ge[de]) : null) || ge[de];
        }),
        se.join("")
      );
    }
    function Ve(ge, H, F, K) {
      for (var ae = me(ge, H, F, K), se = [], de = 0; de < ge.length; de++)
        se[de] = de;
      return (
        ae.forEach(function (Pe) {
          for (
            var ke = Pe[0],
              Be = Pe[1],
              Ne = se.slice(ke, Be + 1),
              ze = Ne.length;
            ze--;

          )
            se[Be - ze] = Ne[ze];
        }),
        se
      );
    }
    return (
      (e.closingToOpeningBracket = T),
      (e.getBidiCharType = p),
      (e.getBidiCharTypeName = m),
      (e.getCanonicalBracket = M),
      (e.getEmbeddingLevels = Ae),
      (e.getMirroredCharacter = xe),
      (e.getMirroredCharactersMap = he),
      (e.getReorderSegments = me),
      (e.getReorderedIndices = Ve),
      (e.getReorderedString = fe),
      (e.openingToClosingBracket = b),
      Object.defineProperty(e, "__esModule", { value: !0 }),
      e
    );
  })({});
  return t;
}
const mN = /\bvoid\s+main\s*\(\s*\)\s*{/g;
function Nw(t) {
  const e = /^[ \t]*#include +<([\w\d./]+)>/gm;
  function n(r, i) {
    let o = Lt[i];
    return o ? Nw(o) : r;
  }
  return t.replace(e, n);
}
const br = [];
for (let t = 0; t < 256; t++) br[t] = (t < 16 ? "0" : "") + t.toString(16);
function a9() {
  const t = (Math.random() * 4294967295) | 0,
    e = (Math.random() * 4294967295) | 0,
    n = (Math.random() * 4294967295) | 0,
    r = (Math.random() * 4294967295) | 0;
  return (
    br[t & 255] +
    br[(t >> 8) & 255] +
    br[(t >> 16) & 255] +
    br[(t >> 24) & 255] +
    "-" +
    br[e & 255] +
    br[(e >> 8) & 255] +
    "-" +
    br[((e >> 16) & 15) | 64] +
    br[(e >> 24) & 255] +
    "-" +
    br[(n & 63) | 128] +
    br[(n >> 8) & 255] +
    "-" +
    br[(n >> 16) & 255] +
    br[(n >> 24) & 255] +
    br[r & 255] +
    br[(r >> 8) & 255] +
    br[(r >> 16) & 255] +
    br[(r >> 24) & 255]
  ).toUpperCase();
}
const jl =
    Object.assign ||
    function () {
      let t = arguments[0];
      for (let e = 1, n = arguments.length; e < n; e++) {
        let r = arguments[e];
        if (r)
          for (let i in r)
            Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]);
      }
      return t;
    },
  l9 = Date.now(),
  zR = new WeakMap(),
  kR = new Map();
let c9 = 1e10;
function Dw(t, e) {
  const n = h9(e);
  let r = zR.get(t);
  if ((r || zR.set(t, (r = Object.create(null))), r[n])) return new r[n]();
  const i = `_onBeforeCompile${n}`,
    o = function (c, u) {
      t.onBeforeCompile.call(this, c, u);
      const h =
        this.customProgramCacheKey() +
        "|" +
        c.vertexShader +
        "|" +
        c.fragmentShader;
      let p = kR[h];
      if (!p) {
        const m = u9(this, c, e, n);
        p = kR[h] = m;
      }
      (c.vertexShader = p.vertexShader),
        (c.fragmentShader = p.fragmentShader),
        jl(c.uniforms, this.uniforms),
        e.timeUniform &&
          (c.uniforms[e.timeUniform] = {
            get value() {
              return Date.now() - l9;
            },
          }),
        this[i] && this[i](c);
    },
    s = function () {
      return a(e.chained ? t : t.clone());
    },
    a = function (c) {
      const u = Object.create(c, l);
      return (
        Object.defineProperty(u, "baseMaterial", { value: t }),
        Object.defineProperty(u, "id", { value: c9++ }),
        (u.uuid = a9()),
        (u.uniforms = jl({}, c.uniforms, e.uniforms)),
        (u.defines = jl({}, c.defines, e.defines)),
        (u.defines[`TROIKA_DERIVED_MATERIAL_${n}`] = ""),
        (u.extensions = jl({}, c.extensions, e.extensions)),
        (u._listeners = void 0),
        u
      );
    },
    l = {
      constructor: { value: s },
      isDerivedMaterial: { value: !0 },
      customProgramCacheKey: {
        writable: !0,
        configurable: !0,
        value: function () {
          return t.customProgramCacheKey() + "|" + n;
        },
      },
      onBeforeCompile: {
        get() {
          return o;
        },
        set(c) {
          this[i] = c;
        },
      },
      copy: {
        writable: !0,
        configurable: !0,
        value: function (c) {
          return (
            t.copy.call(this, c),
            !t.isShaderMaterial &&
              !t.isDerivedMaterial &&
              (jl(this.extensions, c.extensions),
              jl(this.defines, c.defines),
              jl(this.uniforms, Wh.clone(c.uniforms))),
            this
          );
        },
      },
      clone: {
        writable: !0,
        configurable: !0,
        value: function () {
          const c = new t.constructor();
          return a(c).copy(this);
        },
      },
      getDepthMaterial: {
        writable: !0,
        configurable: !0,
        value: function () {
          let c = this._depthMaterial;
          return (
            c ||
              ((c = this._depthMaterial =
                Dw(
                  t.isDerivedMaterial
                    ? t.getDepthMaterial()
                    : new iy({ depthPacking: UE }),
                  e
                )),
              (c.defines.IS_DEPTH_MATERIAL = ""),
              (c.uniforms = this.uniforms)),
            c
          );
        },
      },
      getDistanceMaterial: {
        writable: !0,
        configurable: !0,
        value: function () {
          let c = this._distanceMaterial;
          return (
            c ||
              ((c = this._distanceMaterial =
                Dw(
                  t.isDerivedMaterial ? t.getDistanceMaterial() : new oy(),
                  e
                )),
              (c.defines.IS_DISTANCE_MATERIAL = ""),
              (c.uniforms = this.uniforms)),
            c
          );
        },
      },
      dispose: {
        writable: !0,
        configurable: !0,
        value() {
          const { _depthMaterial: c, _distanceMaterial: u } = this;
          c && c.dispose(), u && u.dispose(), t.dispose.call(this);
        },
      },
    };
  return (r[n] = s), new s();
}
function u9(t, { vertexShader: e, fragmentShader: n }, r, i) {
  let {
    vertexDefs: o,
    vertexMainIntro: s,
    vertexMainOutro: a,
    vertexTransform: l,
    fragmentDefs: c,
    fragmentMainIntro: u,
    fragmentMainOutro: h,
    fragmentColorTransform: p,
    customRewriter: m,
    timeUniform: v,
  } = r;
  if (
    ((o = o || ""),
    (s = s || ""),
    (a = a || ""),
    (c = c || ""),
    (u = u || ""),
    (h = h || ""),
    (l || m) && (e = Nw(e)),
    (p || m) &&
      ((n = n.replace(
        /^[ \t]*#include <((?:tonemapping|encodings|fog|premultiplied_alpha|dithering)_fragment)>/gm,
        `
//!BEGIN_POST_CHUNK $1
$&
//!END_POST_CHUNK
`
      )),
      (n = Nw(n))),
    m)
  ) {
    let S = m({ vertexShader: e, fragmentShader: n });
    (e = S.vertexShader), (n = S.fragmentShader);
  }
  if (p) {
    let S = [];
    (n = n.replace(
      /^\/\/!BEGIN_POST_CHUNK[^]+?^\/\/!END_POST_CHUNK/gm,
      (x) => (S.push(x), "")
    )),
      (h = `${p}
${S.join(`
`)}
${h}`);
  }
  if (v) {
    const S = `
uniform float ${v};
`;
    (o = S + o), (c = S + c);
  }
  return (
    l &&
      ((e = `vec3 troika_position_${i};
vec3 troika_normal_${i};
vec2 troika_uv_${i};
${e}
`),
      (o = `${o}
void troikaVertexTransform${i}(inout vec3 position, inout vec3 normal, inout vec2 uv) {
  ${l}
}
`),
      (s = `
troika_position_${i} = vec3(position);
troika_normal_${i} = vec3(normal);
troika_uv_${i} = vec2(uv);
troikaVertexTransform${i}(troika_position_${i}, troika_normal_${i}, troika_uv_${i});
${s}
`),
      (e = e.replace(/\b(position|normal|uv)\b/g, (S, x, g, y) =>
        /\battribute\s+vec[23]\s+$/.test(y.substr(0, g))
          ? x
          : `troika_${x}_${i}`
      )),
      (t.map && t.map.channel > 0) ||
        (e = e.replace(/\bMAP_UV\b/g, `troika_uv_${i}`))),
    (e = BR(e, i, o, s, a)),
    (n = BR(n, i, c, u, h)),
    { vertexShader: e, fragmentShader: n }
  );
}
function BR(t, e, n, r, i) {
  return (
    (r || i || n) &&
      ((t = t.replace(
        mN,
        `
${n}
void troikaOrigMain${e}() {`
      )),
      (t += `
void main() {
  ${r}
  troikaOrigMain${e}();
  ${i}
}`)),
    t
  );
}
function f9(t, e) {
  return t === "uniforms" ? void 0 : typeof e == "function" ? e.toString() : e;
}
let d9 = 0;
const HR = new Map();
function h9(t) {
  const e = JSON.stringify(t, f9);
  let n = HR.get(e);
  return n == null && HR.set(e, (n = ++d9)), n;
}
function p9(t, e, n) {
  const { defaultFontURL: r } = n,
    i = Object.create(null),
    o = 1 / 0,
    s =
      /[\u00AD\u034F\u061C\u115F-\u1160\u17B4-\u17B5\u180B-\u180E\u200B-\u200F\u202A-\u202E\u2060-\u206F\u3164\uFE00-\uFE0F\uFEFF\uFFA0\uFFF0-\uFFF8]/,
    a = "[^\\S\\u00A0]",
    l = new RegExp(
      `${a}|[\\-\\u007C\\u00AD\\u2010\\u2012-\\u2014\\u2027\\u2056\\u2E17\\u2E40]`
    );
  function c(y, _) {
    function b() {
      const T = (M) => {
        console.error(
          `Failure loading font ${y}${y === r ? "" : "; trying fallback"}`,
          M
        ),
          y !== r && ((y = r), b());
      };
      try {
        const M = new XMLHttpRequest();
        M.open("get", y, !0),
          (M.responseType = "arraybuffer"),
          (M.onload = function () {
            if (M.status >= 400) T(new Error(M.statusText));
            else if (M.status > 0)
              try {
                const C = t(M.response);
                _(C);
              } catch (C) {
                T(C);
              }
          }),
          (M.onerror = T),
          M.send();
      } catch (M) {
        T(M);
      }
    }
    b();
  }
  function u(y, _) {
    y || (y = r);
    let b = i[y];
    b
      ? b.pending
        ? b.pending.push(_)
        : _(b)
      : ((i[y] = { pending: [_] }),
        c(y, (T) => {
          let M = i[y].pending;
          (i[y] = T), M.forEach((C) => C(T));
        }));
  }
  function h(
    {
      text: y = "",
      font: _ = r,
      sdfGlyphSize: b = 64,
      fontSize: T = 1,
      letterSpacing: M = 0,
      lineHeight: C = "normal",
      maxWidth: L = o,
      direction: A,
      textAlign: P = "left",
      textIndent: k = 0,
      whiteSpace: B = "normal",
      overflowWrap: $ = "normal",
      anchorX: D = 0,
      anchorY: X = 0,
      includeCaretPositions: j = !1,
      chunkedBoundsSize: Y = 8192,
      colorRanges: N = null,
    },
    V,
    G = !1
  ) {
    const U = S(),
      Z = { fontLoad: 0, typesetting: 0 };
    y.indexOf("\r") > -1 &&
      (console.info("Typesetter: got text with \\r chars; normalizing to \\n"),
      (y = y
        .replace(
          /\r\n/g,
          `
`
        )
        .replace(
          /\r/g,
          `
`
        ))),
      (T = +T),
      (M = +M),
      (L = +L),
      (C = C || "normal"),
      (k = +k),
      u(_, (Q) => {
        const te = isFinite(L);
        let re = null,
          le = null,
          oe = null,
          ve = null,
          Ae = null,
          Re = null,
          ye = null,
          q = 0,
          xe = 0,
          he = B !== "nowrap";
        const {
          ascender: me,
          descender: fe,
          unitsPerEm: Ve,
          lineGap: ge,
          capHeight: H,
          xHeight: F,
        } = Q;
        Z.fontLoad = S() - U;
        const K = S(),
          ae = T / Ve;
        C === "normal" && (C = (me - fe + ge) / Ve), (C = C * T);
        const se = (C - (me - fe) * ae) / 2,
          de = -(me * ae + se),
          Pe = Math.min(C, (me - fe) * ae),
          ke = ((me + fe) / 2) * ae - Pe / 2;
        let Be = k,
          Ne = new x();
        const ze = [Ne];
        Q.forEachGlyph(y, T, M, (qe, Qe, Ge) => {
          const Oe = y.charAt(Ge),
            ne = qe.advanceWidth * ae,
            be = Ne.count;
          let je;
          if (
            ("isEmpty" in qe ||
              ((qe.isWhitespace = !!Oe && new RegExp(a).test(Oe)),
              (qe.canBreakAfter = !!Oe && l.test(Oe)),
              (qe.isEmpty =
                qe.xMin === qe.xMax || qe.yMin === qe.yMax || s.test(Oe))),
            !qe.isWhitespace && !qe.isEmpty && xe++,
            he && te && !qe.isWhitespace && Qe + ne + Be > L && be)
          ) {
            if (Ne.glyphAt(be - 1).glyphObj.canBreakAfter)
              (je = new x()), (Be = -Qe);
            else
              for (let Le = be; Le--; )
                if (Le === 0 && $ === "break-word") {
                  (je = new x()), (Be = -Qe);
                  break;
                } else if (Ne.glyphAt(Le).glyphObj.canBreakAfter) {
                  je = Ne.splitAt(Le + 1);
                  const ie = je.glyphAt(0).x;
                  Be -= ie;
                  for (let Ue = je.count; Ue--; ) je.glyphAt(Ue).x -= ie;
                  break;
                }
            je && ((Ne.isSoftWrapped = !0), (Ne = je), ze.push(Ne), (q = L));
          }
          let De = Ne.glyphAt(Ne.count);
          (De.glyphObj = qe),
            (De.x = Qe + Be),
            (De.width = ne),
            (De.charIndex = Ge),
            Oe ===
              `
` && ((Ne = new x()), ze.push(Ne), (Be = -(Qe + ne + M * T) + k));
        }),
          ze.forEach((qe) => {
            for (let Qe = qe.count; Qe--; ) {
              let { glyphObj: Ge, x: Oe, width: ne } = qe.glyphAt(Qe);
              if (!Ge.isWhitespace) {
                (qe.width = Oe + ne), qe.width > q && (q = qe.width);
                return;
              }
            }
          });
        let Ee = 0,
          Je = 0;
        if (
          (D &&
            (typeof D == "number"
              ? (Ee = -D)
              : typeof D == "string" &&
                (Ee =
                  -q *
                  (D === "left"
                    ? 0
                    : D === "center"
                    ? 0.5
                    : D === "right"
                    ? 1
                    : m(D)))),
          X)
        ) {
          if (typeof X == "number") Je = -X;
          else if (typeof X == "string") {
            let qe = ze.length * C;
            Je =
              X === "top"
                ? 0
                : X === "top-baseline"
                ? -de
                : X === "top-cap"
                ? -de - H * ae
                : X === "top-ex"
                ? -de - F * ae
                : X === "middle"
                ? qe / 2
                : X === "bottom"
                ? qe
                : X === "bottom-baseline"
                ? qe - se + fe * ae
                : m(X) * qe;
          }
        }
        if (!G) {
          const qe = e.getEmbeddingLevels(y, A);
          (re = new Uint16Array(xe)),
            (le = new Float32Array(xe * 2)),
            (oe = {}),
            (Re = [o, o, -o, -o]),
            (ye = []);
          let Qe = de;
          j && (Ae = new Float32Array(y.length * 3)),
            N && (ve = new Uint8Array(xe * 3));
          let Ge = 0,
            Oe = -1,
            ne = -1,
            be,
            je;
          if (
            (ze.forEach((De, Le) => {
              let { count: ie, width: Ue } = De;
              if (ie > 0) {
                let Ke = 0;
                for (
                  let St = ie;
                  St-- && De.glyphAt(St).glyphObj.isWhitespace;

                )
                  Ke++;
                let ft = 0,
                  $e = 0;
                if (P === "center") ft = (q - Ue) / 2;
                else if (P === "right") ft = q - Ue;
                else if (P === "justify" && De.isSoftWrapped) {
                  let St = 0;
                  for (let ht = ie - Ke; ht--; )
                    De.glyphAt(ht).glyphObj.isWhitespace && St++;
                  $e = (q - Ue) / St;
                }
                if ($e || ft) {
                  let St = 0;
                  for (let ht = 0; ht < ie; ht++) {
                    let qt = De.glyphAt(ht);
                    const Jt = qt.glyphObj;
                    (qt.x += ft + St),
                      $e !== 0 &&
                        Jt.isWhitespace &&
                        ht < ie - Ke &&
                        ((St += $e), (qt.width += $e));
                  }
                }
                const it = e.getReorderSegments(
                  y,
                  qe,
                  De.glyphAt(0).charIndex,
                  De.glyphAt(De.count - 1).charIndex
                );
                for (let St = 0; St < it.length; St++) {
                  const [ht, qt] = it[St];
                  let Jt = 1 / 0,
                    kt = -1 / 0;
                  for (let gn = 0; gn < ie; gn++)
                    if (De.glyphAt(gn).charIndex >= ht) {
                      let zn = gn,
                        cn = gn;
                      for (; cn < ie; cn++) {
                        let jt = De.glyphAt(cn);
                        if (jt.charIndex > qt) break;
                        cn < ie - Ke &&
                          ((Jt = Math.min(Jt, jt.x)),
                          (kt = Math.max(kt, jt.x + jt.width)));
                      }
                      for (let jt = zn; jt < cn; jt++) {
                        const qn = De.glyphAt(jt);
                        qn.x = kt - (qn.x + qn.width - Jt);
                      }
                      break;
                    }
                }
                let ot;
                const Tt = (St) => (ot = St);
                for (let St = 0; St < ie; St++) {
                  let ht = De.glyphAt(St);
                  ot = ht.glyphObj;
                  const qt = ot.index,
                    Jt = qe.levels[ht.charIndex] & 1;
                  if (Jt) {
                    const kt = e.getMirroredCharacter(y[ht.charIndex]);
                    kt && Q.forEachGlyph(kt, 0, 0, Tt);
                  }
                  if (j) {
                    const { charIndex: kt } = ht,
                      gn = ht.x + Ee,
                      zn = ht.x + ht.width + Ee;
                    (Ae[kt * 3] = Jt ? zn : gn),
                      (Ae[kt * 3 + 1] = Jt ? gn : zn),
                      (Ae[kt * 3 + 2] = Qe + ke + Je);
                    const cn = kt - Oe;
                    cn > 1 && v(Ae, Oe, cn), (Oe = kt);
                  }
                  if (N) {
                    const { charIndex: kt } = ht;
                    for (; kt > ne; )
                      ne++, N.hasOwnProperty(ne) && (je = N[ne]);
                  }
                  if (!ot.isWhitespace && !ot.isEmpty) {
                    const kt = Ge++;
                    oe[qt] ||
                      (oe[qt] = {
                        path: ot.path,
                        pathBounds: [ot.xMin, ot.yMin, ot.xMax, ot.yMax],
                      });
                    const gn = ht.x + Ee,
                      zn = Qe + Je;
                    (le[kt * 2] = gn), (le[kt * 2 + 1] = zn);
                    const cn = gn + ot.xMin * ae,
                      jt = zn + ot.yMin * ae,
                      qn = gn + ot.xMax * ae,
                      Ei = zn + ot.yMax * ae;
                    cn < Re[0] && (Re[0] = cn),
                      jt < Re[1] && (Re[1] = jt),
                      qn > Re[2] && (Re[2] = qn),
                      Ei > Re[3] && (Re[3] = Ei),
                      kt % Y === 0 &&
                        ((be = { start: kt, end: kt, rect: [o, o, -o, -o] }),
                        ye.push(be)),
                      be.end++;
                    const $r = be.rect;
                    if (
                      (cn < $r[0] && ($r[0] = cn),
                      jt < $r[1] && ($r[1] = jt),
                      qn > $r[2] && ($r[2] = qn),
                      Ei > $r[3] && ($r[3] = Ei),
                      (re[kt] = qt),
                      N)
                    ) {
                      const Mo = kt * 3;
                      (ve[Mo] = (je >> 16) & 255),
                        (ve[Mo + 1] = (je >> 8) & 255),
                        (ve[Mo + 2] = je & 255);
                    }
                  }
                }
              }
              Qe -= C;
            }),
            Ae)
          ) {
            const De = y.length - Oe;
            De > 1 && v(Ae, Oe, De);
          }
        }
        (Z.typesetting = S() - K),
          V({
            glyphIds: re,
            glyphPositions: le,
            glyphData: oe,
            caretPositions: Ae,
            caretHeight: Pe,
            glyphColors: ve,
            chunkedBounds: ye,
            fontSize: T,
            unitsPerEm: Ve,
            ascender: me * ae,
            descender: fe * ae,
            capHeight: H * ae,
            xHeight: F * ae,
            lineHeight: C,
            topBaseline: de,
            blockBounds: [Ee, Je - ze.length * C, Ee + q, Je],
            visibleBounds: Re,
            timings: Z,
          });
      });
  }
  function p(y, _) {
    h(
      y,
      (b) => {
        const [T, M, C, L] = b.blockBounds;
        _({ width: C - T, height: L - M });
      },
      { metricsOnly: !0 }
    );
  }
  function m(y) {
    let _ = y.match(/^([\d.]+)%$/),
      b = _ ? parseFloat(_[1]) : NaN;
    return isNaN(b) ? 0 : b / 100;
  }
  function v(y, _, b) {
    const T = y[_ * 3],
      M = y[_ * 3 + 1],
      C = y[_ * 3 + 2],
      L = (M - T) / b;
    for (let A = 0; A < b; A++) {
      const P = (_ + A) * 3;
      (y[P] = T + L * A), (y[P + 1] = T + L * (A + 1)), (y[P + 2] = C);
    }
  }
  function S() {
    return (self.performance || Date).now();
  }
  function x() {
    this.data = [];
  }
  const g = ["glyphObj", "x", "width", "charIndex"];
  return (
    (x.prototype = {
      width: 0,
      isSoftWrapped: !1,
      get count() {
        return Math.ceil(this.data.length / g.length);
      },
      glyphAt(y) {
        let _ = x.flyweight;
        return (_.data = this.data), (_.index = y), _;
      },
      splitAt(y) {
        let _ = new x();
        return (_.data = this.data.splice(y * g.length)), _;
      },
    }),
    (x.flyweight = g.reduce(
      (y, _, b, T) => (
        Object.defineProperty(y, _, {
          get() {
            return this.data[this.index * g.length + b];
          },
          set(M) {
            this.data[this.index * g.length + b] = M;
          },
        }),
        y
      ),
      { data: null, index: 0 }
    )),
    { typeset: h, measure: p, loadFont: u }
  );
}
const yc = () => (self.performance || Date).now(),
  Ty = pN();
let VR;
function m9(t, e, n, r, i, o, s, a, l, c, u = !0) {
  return u
    ? v9(t, e, n, r, i, o, s, a, l, c).then(
        null,
        (h) => (
          VR ||
            (console.warn("WebGL SDF generation failed, falling back to JS", h),
            (VR = !0)),
          jR(t, e, n, r, i, o, s, a, l, c)
        )
      )
    : jR(t, e, n, r, i, o, s, a, l, c);
}
const Lv = [],
  g9 = 5;
let Uw = 0;
function gN() {
  const t = yc();
  for (; Lv.length && yc() - t < g9; ) Lv.shift()();
  Uw = Lv.length ? setTimeout(gN, 0) : 0;
}
const v9 = (...t) =>
    new Promise((e, n) => {
      Lv.push(() => {
        const r = yc();
        try {
          Ty.webgl.generateIntoCanvas(...t), e({ timing: yc() - r });
        } catch (i) {
          n(i);
        }
      }),
        Uw || (Uw = setTimeout(gN, 0));
    }),
  y9 = 4,
  x9 = 2e3,
  GR = {};
let _9 = 0;
function jR(t, e, n, r, i, o, s, a, l, c) {
  const u = "TroikaTextSDFGenerator_JS_" + (_9++ % y9);
  let h = GR[u];
  return (
    h ||
      (h = GR[u] =
        {
          workerModule: Ap({
            name: u,
            workerId: u,
            dependencies: [pN, yc],
            init(p, m) {
              const v = p().javascript.generate;
              return function (...S) {
                const x = m();
                return { textureData: v(...S), timing: m() - x };
              };
            },
            getTransferables(p) {
              return [p.textureData.buffer];
            },
          }),
          requests: 0,
          idleTimer: null,
        }),
    h.requests++,
    clearTimeout(h.idleTimer),
    h.workerModule(t, e, n, r, i, o).then(({ textureData: p, timing: m }) => {
      const v = yc(),
        S = new Uint8Array(p.length * 4);
      for (let x = 0; x < p.length; x++) S[x * 4 + c] = p[x];
      return (
        Ty.webglUtils.renderImageData(s, S, a, l, t, e, 1 << (3 - c)),
        (m += yc() - v),
        --h.requests === 0 &&
          (h.idleTimer = setTimeout(() => {
            i9(u);
          }, x9)),
        { timing: m }
      );
    })
  );
}
function S9(t) {
  t._warm || (Ty.webgl.isSupported(t), (t._warm = !0));
}
const w9 = Ty.webglUtils.resizeWebGLCanvasWithoutClearing;
/*!
Custom build of Typr.ts (https://github.com/fredli74/Typr.ts) for use in Troika text rendering.
Original MIT license applies: https://github.com/fredli74/Typr.ts/blob/master/LICENSE
*/ function b9() {
  return (
    typeof window > "u" && (self.window = self),
    (function (t) {
      var e = {
        parse: function (i) {
          var o = e._bin,
            s = new Uint8Array(i);
          if (o.readASCII(s, 0, 4) == "ttcf") {
            var a = 4;
            o.readUshort(s, a), (a += 2), o.readUshort(s, a), (a += 2);
            var l = o.readUint(s, a);
            a += 4;
            for (var c = [], u = 0; u < l; u++) {
              var h = o.readUint(s, a);
              (a += 4), c.push(e._readFont(s, h));
            }
            return c;
          }
          return [e._readFont(s, 0)];
        },
        _readFont: function (i, o) {
          var s = e._bin,
            a = o;
          s.readFixed(i, o), (o += 4);
          var l = s.readUshort(i, o);
          (o += 2),
            s.readUshort(i, o),
            (o += 2),
            s.readUshort(i, o),
            (o += 2),
            s.readUshort(i, o),
            (o += 2);
          for (
            var c = [
                "cmap",
                "head",
                "hhea",
                "maxp",
                "hmtx",
                "name",
                "OS/2",
                "post",
                "loca",
                "glyf",
                "kern",
                "CFF ",
                "GPOS",
                "GSUB",
                "SVG ",
              ],
              u = { _data: i, _offset: a },
              h = {},
              p = 0;
            p < l;
            p++
          ) {
            var m = s.readASCII(i, o, 4);
            (o += 4), s.readUint(i, o), (o += 4);
            var v = s.readUint(i, o);
            o += 4;
            var S = s.readUint(i, o);
            (o += 4), (h[m] = { offset: v, length: S });
          }
          for (p = 0; p < c.length; p++) {
            var x = c[p];
            h[x] &&
              (u[x.trim()] = e[x.trim()].parse(i, h[x].offset, h[x].length, u));
          }
          return u;
        },
        _tabOffset: function (i, o, s) {
          for (
            var a = e._bin, l = a.readUshort(i, s + 4), c = s + 12, u = 0;
            u < l;
            u++
          ) {
            var h = a.readASCII(i, c, 4);
            (c += 4), a.readUint(i, c), (c += 4);
            var p = a.readUint(i, c);
            if (((c += 4), a.readUint(i, c), (c += 4), h == o)) return p;
          }
          return 0;
        },
      };
      (e._bin = {
        readFixed: function (i, o) {
          return (
            ((i[o] << 8) | i[o + 1]) + ((i[o + 2] << 8) | i[o + 3]) / 65540
          );
        },
        readF2dot14: function (i, o) {
          return e._bin.readShort(i, o) / 16384;
        },
        readInt: function (i, o) {
          return e._bin._view(i).getInt32(o);
        },
        readInt8: function (i, o) {
          return e._bin._view(i).getInt8(o);
        },
        readShort: function (i, o) {
          return e._bin._view(i).getInt16(o);
        },
        readUshort: function (i, o) {
          return e._bin._view(i).getUint16(o);
        },
        readUshorts: function (i, o, s) {
          for (var a = [], l = 0; l < s; l++)
            a.push(e._bin.readUshort(i, o + 2 * l));
          return a;
        },
        readUint: function (i, o) {
          return e._bin._view(i).getUint32(o);
        },
        readUint64: function (i, o) {
          return 4294967296 * e._bin.readUint(i, o) + e._bin.readUint(i, o + 4);
        },
        readASCII: function (i, o, s) {
          for (var a = "", l = 0; l < s; l++)
            a += String.fromCharCode(i[o + l]);
          return a;
        },
        readUnicode: function (i, o, s) {
          for (var a = "", l = 0; l < s; l++) {
            var c = (i[o++] << 8) | i[o++];
            a += String.fromCharCode(c);
          }
          return a;
        },
        _tdec:
          typeof window < "u" && window.TextDecoder
            ? new window.TextDecoder()
            : null,
        readUTF8: function (i, o, s) {
          var a = e._bin._tdec;
          return a && o == 0 && s == i.length
            ? a.decode(i)
            : e._bin.readASCII(i, o, s);
        },
        readBytes: function (i, o, s) {
          for (var a = [], l = 0; l < s; l++) a.push(i[o + l]);
          return a;
        },
        readASCIIArray: function (i, o, s) {
          for (var a = [], l = 0; l < s; l++)
            a.push(String.fromCharCode(i[o + l]));
          return a;
        },
        _view: function (i) {
          return (
            i._dataView ||
            (i._dataView = i.buffer
              ? new DataView(i.buffer, i.byteOffset, i.byteLength)
              : new DataView(new Uint8Array(i).buffer))
          );
        },
      }),
        (e._lctf = {}),
        (e._lctf.parse = function (i, o, s, a, l) {
          var c = e._bin,
            u = {},
            h = o;
          c.readFixed(i, o), (o += 4);
          var p = c.readUshort(i, o);
          o += 2;
          var m = c.readUshort(i, o);
          o += 2;
          var v = c.readUshort(i, o);
          return (
            (o += 2),
            (u.scriptList = e._lctf.readScriptList(i, h + p)),
            (u.featureList = e._lctf.readFeatureList(i, h + m)),
            (u.lookupList = e._lctf.readLookupList(i, h + v, l)),
            u
          );
        }),
        (e._lctf.readLookupList = function (i, o, s) {
          var a = e._bin,
            l = o,
            c = [],
            u = a.readUshort(i, o);
          o += 2;
          for (var h = 0; h < u; h++) {
            var p = a.readUshort(i, o);
            o += 2;
            var m = e._lctf.readLookupTable(i, l + p, s);
            c.push(m);
          }
          return c;
        }),
        (e._lctf.readLookupTable = function (i, o, s) {
          var a = e._bin,
            l = o,
            c = { tabs: [] };
          (c.ltype = a.readUshort(i, o)),
            (o += 2),
            (c.flag = a.readUshort(i, o)),
            (o += 2);
          var u = a.readUshort(i, o);
          o += 2;
          for (var h = c.ltype, p = 0; p < u; p++) {
            var m = a.readUshort(i, o);
            o += 2;
            var v = s(i, h, l + m, c);
            c.tabs.push(v);
          }
          return c;
        }),
        (e._lctf.numOfOnes = function (i) {
          for (var o = 0, s = 0; s < 32; s++) (i >>> s) & 1 && o++;
          return o;
        }),
        (e._lctf.readClassDef = function (i, o) {
          var s = e._bin,
            a = [],
            l = s.readUshort(i, o);
          if (((o += 2), l == 1)) {
            var c = s.readUshort(i, o);
            o += 2;
            var u = s.readUshort(i, o);
            o += 2;
            for (var h = 0; h < u; h++)
              a.push(c + h),
                a.push(c + h),
                a.push(s.readUshort(i, o)),
                (o += 2);
          }
          if (l == 2) {
            var p = s.readUshort(i, o);
            for (o += 2, h = 0; h < p; h++)
              a.push(s.readUshort(i, o)),
                (o += 2),
                a.push(s.readUshort(i, o)),
                (o += 2),
                a.push(s.readUshort(i, o)),
                (o += 2);
          }
          return a;
        }),
        (e._lctf.getInterval = function (i, o) {
          for (var s = 0; s < i.length; s += 3) {
            var a = i[s],
              l = i[s + 1];
            if ((i[s + 2], a <= o && o <= l)) return s;
          }
          return -1;
        }),
        (e._lctf.readCoverage = function (i, o) {
          var s = e._bin,
            a = {};
          (a.fmt = s.readUshort(i, o)), (o += 2);
          var l = s.readUshort(i, o);
          return (
            (o += 2),
            a.fmt == 1 && (a.tab = s.readUshorts(i, o, l)),
            a.fmt == 2 && (a.tab = s.readUshorts(i, o, 3 * l)),
            a
          );
        }),
        (e._lctf.coverageIndex = function (i, o) {
          var s = i.tab;
          if (i.fmt == 1) return s.indexOf(o);
          if (i.fmt == 2) {
            var a = e._lctf.getInterval(s, o);
            if (a != -1) return s[a + 2] + (o - s[a]);
          }
          return -1;
        }),
        (e._lctf.readFeatureList = function (i, o) {
          var s = e._bin,
            a = o,
            l = [],
            c = s.readUshort(i, o);
          o += 2;
          for (var u = 0; u < c; u++) {
            var h = s.readASCII(i, o, 4);
            o += 4;
            var p = s.readUshort(i, o);
            o += 2;
            var m = e._lctf.readFeatureTable(i, a + p);
            (m.tag = h.trim()), l.push(m);
          }
          return l;
        }),
        (e._lctf.readFeatureTable = function (i, o) {
          var s = e._bin,
            a = o,
            l = {},
            c = s.readUshort(i, o);
          (o += 2), c > 0 && (l.featureParams = a + c);
          var u = s.readUshort(i, o);
          (o += 2), (l.tab = []);
          for (var h = 0; h < u; h++) l.tab.push(s.readUshort(i, o + 2 * h));
          return l;
        }),
        (e._lctf.readScriptList = function (i, o) {
          var s = e._bin,
            a = o,
            l = {},
            c = s.readUshort(i, o);
          o += 2;
          for (var u = 0; u < c; u++) {
            var h = s.readASCII(i, o, 4);
            o += 4;
            var p = s.readUshort(i, o);
            (o += 2), (l[h.trim()] = e._lctf.readScriptTable(i, a + p));
          }
          return l;
        }),
        (e._lctf.readScriptTable = function (i, o) {
          var s = e._bin,
            a = o,
            l = {},
            c = s.readUshort(i, o);
          (o += 2), (l.default = e._lctf.readLangSysTable(i, a + c));
          var u = s.readUshort(i, o);
          o += 2;
          for (var h = 0; h < u; h++) {
            var p = s.readASCII(i, o, 4);
            o += 4;
            var m = s.readUshort(i, o);
            (o += 2), (l[p.trim()] = e._lctf.readLangSysTable(i, a + m));
          }
          return l;
        }),
        (e._lctf.readLangSysTable = function (i, o) {
          var s = e._bin,
            a = {};
          s.readUshort(i, o),
            (o += 2),
            (a.reqFeature = s.readUshort(i, o)),
            (o += 2);
          var l = s.readUshort(i, o);
          return (o += 2), (a.features = s.readUshorts(i, o, l)), a;
        }),
        (e.CFF = {}),
        (e.CFF.parse = function (i, o, s) {
          var a = e._bin;
          (i = new Uint8Array(i.buffer, o, s))[(o = 0)],
            i[++o],
            i[++o],
            i[++o],
            o++;
          var l = [];
          o = e.CFF.readIndex(i, o, l);
          for (var c = [], u = 0; u < l.length - 1; u++)
            c.push(a.readASCII(i, o + l[u], l[u + 1] - l[u]));
          o += l[l.length - 1];
          var h = [];
          o = e.CFF.readIndex(i, o, h);
          var p = [];
          for (u = 0; u < h.length - 1; u++)
            p.push(e.CFF.readDict(i, o + h[u], o + h[u + 1]));
          o += h[h.length - 1];
          var m = p[0],
            v = [];
          o = e.CFF.readIndex(i, o, v);
          var S = [];
          for (u = 0; u < v.length - 1; u++)
            S.push(a.readASCII(i, o + v[u], v[u + 1] - v[u]));
          if (
            ((o += v[v.length - 1]), e.CFF.readSubrs(i, o, m), m.CharStrings)
          ) {
            (o = m.CharStrings), (v = []), (o = e.CFF.readIndex(i, o, v));
            var x = [];
            for (u = 0; u < v.length - 1; u++)
              x.push(a.readBytes(i, o + v[u], v[u + 1] - v[u]));
            m.CharStrings = x;
          }
          if (m.ROS) {
            o = m.FDArray;
            var g = [];
            for (
              o = e.CFF.readIndex(i, o, g), m.FDArray = [], u = 0;
              u < g.length - 1;
              u++
            ) {
              var y = e.CFF.readDict(i, o + g[u], o + g[u + 1]);
              e.CFF._readFDict(i, y, S), m.FDArray.push(y);
            }
            (o += g[g.length - 1]), (o = m.FDSelect), (m.FDSelect = []);
            var _ = i[o];
            if ((o++, _ != 3)) throw _;
            var b = a.readUshort(i, o);
            for (o += 2, u = 0; u < b + 1; u++)
              m.FDSelect.push(a.readUshort(i, o), i[o + 2]), (o += 3);
          }
          return (
            m.Encoding &&
              (m.Encoding = e.CFF.readEncoding(
                i,
                m.Encoding,
                m.CharStrings.length
              )),
            m.charset &&
              (m.charset = e.CFF.readCharset(
                i,
                m.charset,
                m.CharStrings.length
              )),
            e.CFF._readFDict(i, m, S),
            m
          );
        }),
        (e.CFF._readFDict = function (i, o, s) {
          var a;
          for (var l in (o.Private &&
            ((a = o.Private[1]),
            (o.Private = e.CFF.readDict(i, a, a + o.Private[0])),
            o.Private.Subrs &&
              e.CFF.readSubrs(i, a + o.Private.Subrs, o.Private)),
          o))
            [
              "FamilyName",
              "FontName",
              "FullName",
              "Notice",
              "version",
              "Copyright",
            ].indexOf(l) != -1 && (o[l] = s[o[l] - 426 + 35]);
        }),
        (e.CFF.readSubrs = function (i, o, s) {
          var a = e._bin,
            l = [];
          o = e.CFF.readIndex(i, o, l);
          var c,
            u = l.length;
          (c = u < 1240 ? 107 : u < 33900 ? 1131 : 32768),
            (s.Bias = c),
            (s.Subrs = []);
          for (var h = 0; h < l.length - 1; h++)
            s.Subrs.push(a.readBytes(i, o + l[h], l[h + 1] - l[h]));
        }),
        (e.CFF.tableSE = [
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
          14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
          31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
          48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
          65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
          82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
          107, 108, 109, 110, 0, 111, 112, 113, 114, 0, 115, 116, 117, 118, 119,
          120, 121, 122, 0, 123, 0, 124, 125, 126, 127, 128, 129, 130, 131, 0,
          132, 133, 0, 134, 135, 136, 137, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 138, 0, 139, 0, 0, 0, 0, 140, 141, 142, 143, 0, 0, 0, 0,
          0, 144, 0, 0, 0, 145, 0, 0, 146, 147, 148, 149, 0, 0, 0, 0,
        ]),
        (e.CFF.glyphByUnicode = function (i, o) {
          for (var s = 0; s < i.charset.length; s++)
            if (i.charset[s] == o) return s;
          return -1;
        }),
        (e.CFF.glyphBySE = function (i, o) {
          return o < 0 || o > 255
            ? -1
            : e.CFF.glyphByUnicode(i, e.CFF.tableSE[o]);
        }),
        (e.CFF.readEncoding = function (i, o, s) {
          e._bin;
          var a = [".notdef"],
            l = i[o];
          if ((o++, l != 0)) throw "error: unknown encoding format: " + l;
          var c = i[o];
          o++;
          for (var u = 0; u < c; u++) a.push(i[o + u]);
          return a;
        }),
        (e.CFF.readCharset = function (i, o, s) {
          var a = e._bin,
            l = [".notdef"],
            c = i[o];
          if ((o++, c == 0))
            for (var u = 0; u < s; u++) {
              var h = a.readUshort(i, o);
              (o += 2), l.push(h);
            }
          else {
            if (c != 1 && c != 2) throw "error: format: " + c;
            for (; l.length < s; ) {
              (h = a.readUshort(i, o)), (o += 2);
              var p = 0;
              for (
                c == 1
                  ? ((p = i[o]), o++)
                  : ((p = a.readUshort(i, o)), (o += 2)),
                  u = 0;
                u <= p;
                u++
              )
                l.push(h), h++;
            }
          }
          return l;
        }),
        (e.CFF.readIndex = function (i, o, s) {
          var a = e._bin,
            l = a.readUshort(i, o) + 1,
            c = i[(o += 2)];
          if ((o++, c == 1)) for (var u = 0; u < l; u++) s.push(i[o + u]);
          else if (c == 2)
            for (u = 0; u < l; u++) s.push(a.readUshort(i, o + 2 * u));
          else if (c == 3)
            for (u = 0; u < l; u++)
              s.push(16777215 & a.readUint(i, o + 3 * u - 1));
          else if (l != 1)
            throw "unsupported offset size: " + c + ", count: " + l;
          return (o += l * c) - 1;
        }),
        (e.CFF.getCharString = function (i, o, s) {
          var a = e._bin,
            l = i[o],
            c = i[o + 1];
          i[o + 2], i[o + 3], i[o + 4];
          var u = 1,
            h = null,
            p = null;
          l <= 20 && ((h = l), (u = 1)),
            l == 12 && ((h = 100 * l + c), (u = 2)),
            21 <= l && l <= 27 && ((h = l), (u = 1)),
            l == 28 && ((p = a.readShort(i, o + 1)), (u = 3)),
            29 <= l && l <= 31 && ((h = l), (u = 1)),
            32 <= l && l <= 246 && ((p = l - 139), (u = 1)),
            247 <= l && l <= 250 && ((p = 256 * (l - 247) + c + 108), (u = 2)),
            251 <= l && l <= 254 && ((p = 256 * -(l - 251) - c - 108), (u = 2)),
            l == 255 && ((p = a.readInt(i, o + 1) / 65535), (u = 5)),
            (s.val = p ?? "o" + h),
            (s.size = u);
        }),
        (e.CFF.readCharString = function (i, o, s) {
          for (var a = o + s, l = e._bin, c = []; o < a; ) {
            var u = i[o],
              h = i[o + 1];
            i[o + 2], i[o + 3], i[o + 4];
            var p = 1,
              m = null,
              v = null;
            u <= 20 && ((m = u), (p = 1)),
              u == 12 && ((m = 100 * u + h), (p = 2)),
              (u != 19 && u != 20) || ((m = u), (p = 2)),
              21 <= u && u <= 27 && ((m = u), (p = 1)),
              u == 28 && ((v = l.readShort(i, o + 1)), (p = 3)),
              29 <= u && u <= 31 && ((m = u), (p = 1)),
              32 <= u && u <= 246 && ((v = u - 139), (p = 1)),
              247 <= u &&
                u <= 250 &&
                ((v = 256 * (u - 247) + h + 108), (p = 2)),
              251 <= u &&
                u <= 254 &&
                ((v = 256 * -(u - 251) - h - 108), (p = 2)),
              u == 255 && ((v = l.readInt(i, o + 1) / 65535), (p = 5)),
              c.push(v ?? "o" + m),
              (o += p);
          }
          return c;
        }),
        (e.CFF.readDict = function (i, o, s) {
          for (var a = e._bin, l = {}, c = []; o < s; ) {
            var u = i[o],
              h = i[o + 1];
            i[o + 2], i[o + 3], i[o + 4];
            var p = 1,
              m = null,
              v = null;
            if (
              (u == 28 && ((v = a.readShort(i, o + 1)), (p = 3)),
              u == 29 && ((v = a.readInt(i, o + 1)), (p = 5)),
              32 <= u && u <= 246 && ((v = u - 139), (p = 1)),
              247 <= u &&
                u <= 250 &&
                ((v = 256 * (u - 247) + h + 108), (p = 2)),
              251 <= u &&
                u <= 254 &&
                ((v = 256 * -(u - 251) - h - 108), (p = 2)),
              u == 255)
            )
              throw (
                ((v = a.readInt(i, o + 1) / 65535), (p = 5), "unknown number")
              );
            if (u == 30) {
              var S = [];
              for (p = 1; ; ) {
                var x = i[o + p];
                p++;
                var g = x >> 4,
                  y = 15 & x;
                if ((g != 15 && S.push(g), y != 15 && S.push(y), y == 15))
                  break;
              }
              for (
                var _ = "",
                  b = [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    ".",
                    "e",
                    "e-",
                    "reserved",
                    "-",
                    "endOfNumber",
                  ],
                  T = 0;
                T < S.length;
                T++
              )
                _ += b[S[T]];
              v = parseFloat(_);
            }
            u <= 21 &&
              ((m = [
                "version",
                "Notice",
                "FullName",
                "FamilyName",
                "Weight",
                "FontBBox",
                "BlueValues",
                "OtherBlues",
                "FamilyBlues",
                "FamilyOtherBlues",
                "StdHW",
                "StdVW",
                "escape",
                "UniqueID",
                "XUID",
                "charset",
                "Encoding",
                "CharStrings",
                "Private",
                "Subrs",
                "defaultWidthX",
                "nominalWidthX",
              ][u]),
              (p = 1),
              u == 12 &&
                ((m = [
                  "Copyright",
                  "isFixedPitch",
                  "ItalicAngle",
                  "UnderlinePosition",
                  "UnderlineThickness",
                  "PaintType",
                  "CharstringType",
                  "FontMatrix",
                  "StrokeWidth",
                  "BlueScale",
                  "BlueShift",
                  "BlueFuzz",
                  "StemSnapH",
                  "StemSnapV",
                  "ForceBold",
                  0,
                  0,
                  "LanguageGroup",
                  "ExpansionFactor",
                  "initialRandomSeed",
                  "SyntheticBase",
                  "PostScript",
                  "BaseFontName",
                  "BaseFontBlend",
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  "ROS",
                  "CIDFontVersion",
                  "CIDFontRevision",
                  "CIDFontType",
                  "CIDCount",
                  "UIDBase",
                  "FDArray",
                  "FDSelect",
                  "FontName",
                ][h]),
                (p = 2))),
              m != null
                ? ((l[m] = c.length == 1 ? c[0] : c), (c = []))
                : c.push(v),
              (o += p);
          }
          return l;
        }),
        (e.cmap = {}),
        (e.cmap.parse = function (i, o, s) {
          (i = new Uint8Array(i.buffer, o, s)), (o = 0);
          var a = e._bin,
            l = {};
          a.readUshort(i, o), (o += 2);
          var c = a.readUshort(i, o);
          o += 2;
          var u = [];
          l.tables = [];
          for (var h = 0; h < c; h++) {
            var p = a.readUshort(i, o);
            o += 2;
            var m = a.readUshort(i, o);
            o += 2;
            var v = a.readUint(i, o);
            o += 4;
            var S = "p" + p + "e" + m,
              x = u.indexOf(v);
            if (x == -1) {
              var g;
              (x = l.tables.length), u.push(v);
              var y = a.readUshort(i, v);
              y == 0
                ? (g = e.cmap.parse0(i, v))
                : y == 4
                ? (g = e.cmap.parse4(i, v))
                : y == 6
                ? (g = e.cmap.parse6(i, v))
                : y == 12
                ? (g = e.cmap.parse12(i, v))
                : console.debug("unknown format: " + y, p, m, v),
                l.tables.push(g);
            }
            if (l[S] != null) throw "multiple tables for one platform+encoding";
            l[S] = x;
          }
          return l;
        }),
        (e.cmap.parse0 = function (i, o) {
          var s = e._bin,
            a = {};
          (a.format = s.readUshort(i, o)), (o += 2);
          var l = s.readUshort(i, o);
          (o += 2), s.readUshort(i, o), (o += 2), (a.map = []);
          for (var c = 0; c < l - 6; c++) a.map.push(i[o + c]);
          return a;
        }),
        (e.cmap.parse4 = function (i, o) {
          var s = e._bin,
            a = o,
            l = {};
          (l.format = s.readUshort(i, o)), (o += 2);
          var c = s.readUshort(i, o);
          (o += 2), s.readUshort(i, o), (o += 2);
          var u = s.readUshort(i, o);
          o += 2;
          var h = u / 2;
          (l.searchRange = s.readUshort(i, o)),
            (o += 2),
            (l.entrySelector = s.readUshort(i, o)),
            (o += 2),
            (l.rangeShift = s.readUshort(i, o)),
            (o += 2),
            (l.endCount = s.readUshorts(i, o, h)),
            (o += 2 * h),
            (o += 2),
            (l.startCount = s.readUshorts(i, o, h)),
            (o += 2 * h),
            (l.idDelta = []);
          for (var p = 0; p < h; p++)
            l.idDelta.push(s.readShort(i, o)), (o += 2);
          for (
            l.idRangeOffset = s.readUshorts(i, o, h),
              o += 2 * h,
              l.glyphIdArray = [];
            o < a + c;

          )
            l.glyphIdArray.push(s.readUshort(i, o)), (o += 2);
          return l;
        }),
        (e.cmap.parse6 = function (i, o) {
          var s = e._bin,
            a = {};
          (a.format = s.readUshort(i, o)),
            (o += 2),
            s.readUshort(i, o),
            (o += 2),
            s.readUshort(i, o),
            (o += 2),
            (a.firstCode = s.readUshort(i, o)),
            (o += 2);
          var l = s.readUshort(i, o);
          (o += 2), (a.glyphIdArray = []);
          for (var c = 0; c < l; c++)
            a.glyphIdArray.push(s.readUshort(i, o)), (o += 2);
          return a;
        }),
        (e.cmap.parse12 = function (i, o) {
          var s = e._bin,
            a = {};
          (a.format = s.readUshort(i, o)),
            (o += 2),
            (o += 2),
            s.readUint(i, o),
            (o += 4),
            s.readUint(i, o),
            (o += 4);
          var l = s.readUint(i, o);
          (o += 4), (a.groups = []);
          for (var c = 0; c < l; c++) {
            var u = o + 12 * c,
              h = s.readUint(i, u + 0),
              p = s.readUint(i, u + 4),
              m = s.readUint(i, u + 8);
            a.groups.push([h, p, m]);
          }
          return a;
        }),
        (e.glyf = {}),
        (e.glyf.parse = function (i, o, s, a) {
          for (var l = [], c = 0; c < a.maxp.numGlyphs; c++) l.push(null);
          return l;
        }),
        (e.glyf._parseGlyf = function (i, o) {
          var s = e._bin,
            a = i._data,
            l = e._tabOffset(a, "glyf", i._offset) + i.loca[o];
          if (i.loca[o] == i.loca[o + 1]) return null;
          var c = {};
          if (
            ((c.noc = s.readShort(a, l)),
            (l += 2),
            (c.xMin = s.readShort(a, l)),
            (l += 2),
            (c.yMin = s.readShort(a, l)),
            (l += 2),
            (c.xMax = s.readShort(a, l)),
            (l += 2),
            (c.yMax = s.readShort(a, l)),
            (l += 2),
            c.xMin >= c.xMax || c.yMin >= c.yMax)
          )
            return null;
          if (c.noc > 0) {
            c.endPts = [];
            for (var u = 0; u < c.noc; u++)
              c.endPts.push(s.readUshort(a, l)), (l += 2);
            var h = s.readUshort(a, l);
            if (((l += 2), a.length - l < h)) return null;
            (c.instructions = s.readBytes(a, l, h)), (l += h);
            var p = c.endPts[c.noc - 1] + 1;
            for (c.flags = [], u = 0; u < p; u++) {
              var m = a[l];
              if ((l++, c.flags.push(m), (8 & m) != 0)) {
                var v = a[l];
                l++;
                for (var S = 0; S < v; S++) c.flags.push(m), u++;
              }
            }
            for (c.xs = [], u = 0; u < p; u++) {
              var x = (2 & c.flags[u]) != 0,
                g = (16 & c.flags[u]) != 0;
              x
                ? (c.xs.push(g ? a[l] : -a[l]), l++)
                : g
                ? c.xs.push(0)
                : (c.xs.push(s.readShort(a, l)), (l += 2));
            }
            for (c.ys = [], u = 0; u < p; u++)
              (x = (4 & c.flags[u]) != 0),
                (g = (32 & c.flags[u]) != 0),
                x
                  ? (c.ys.push(g ? a[l] : -a[l]), l++)
                  : g
                  ? c.ys.push(0)
                  : (c.ys.push(s.readShort(a, l)), (l += 2));
            var y = 0,
              _ = 0;
            for (u = 0; u < p; u++)
              (y += c.xs[u]), (_ += c.ys[u]), (c.xs[u] = y), (c.ys[u] = _);
          } else {
            var b;
            c.parts = [];
            do {
              (b = s.readUshort(a, l)), (l += 2);
              var T = {
                m: { a: 1, b: 0, c: 0, d: 1, tx: 0, ty: 0 },
                p1: -1,
                p2: -1,
              };
              if (
                (c.parts.push(T),
                (T.glyphIndex = s.readUshort(a, l)),
                (l += 2),
                1 & b)
              ) {
                var M = s.readShort(a, l);
                l += 2;
                var C = s.readShort(a, l);
                l += 2;
              } else (M = s.readInt8(a, l)), l++, (C = s.readInt8(a, l)), l++;
              2 & b ? ((T.m.tx = M), (T.m.ty = C)) : ((T.p1 = M), (T.p2 = C)),
                8 & b
                  ? ((T.m.a = T.m.d = s.readF2dot14(a, l)), (l += 2))
                  : 64 & b
                  ? ((T.m.a = s.readF2dot14(a, l)),
                    (l += 2),
                    (T.m.d = s.readF2dot14(a, l)),
                    (l += 2))
                  : 128 & b &&
                    ((T.m.a = s.readF2dot14(a, l)),
                    (l += 2),
                    (T.m.b = s.readF2dot14(a, l)),
                    (l += 2),
                    (T.m.c = s.readF2dot14(a, l)),
                    (l += 2),
                    (T.m.d = s.readF2dot14(a, l)),
                    (l += 2));
            } while (32 & b);
            if (256 & b) {
              var L = s.readUshort(a, l);
              for (l += 2, c.instr = [], u = 0; u < L; u++)
                c.instr.push(a[l]), l++;
            }
          }
          return c;
        }),
        (e.GPOS = {}),
        (e.GPOS.parse = function (i, o, s, a) {
          return e._lctf.parse(i, o, s, a, e.GPOS.subt);
        }),
        (e.GPOS.subt = function (i, o, s, a) {
          var l = e._bin,
            c = s,
            u = {};
          if (
            ((u.fmt = l.readUshort(i, s)),
            (s += 2),
            o == 1 || o == 2 || o == 3 || o == 7 || (o == 8 && u.fmt <= 2))
          ) {
            var h = l.readUshort(i, s);
            (s += 2), (u.coverage = e._lctf.readCoverage(i, h + c));
          }
          if (o == 1 && u.fmt == 1) {
            var p = l.readUshort(i, s);
            s += 2;
            var m = e._lctf.numOfOnes(p);
            p != 0 && (u.pos = e.GPOS.readValueRecord(i, s, p));
          } else if (o == 2 && u.fmt >= 1 && u.fmt <= 2) {
            (p = l.readUshort(i, s)), (s += 2);
            var v = l.readUshort(i, s);
            (s += 2), (m = e._lctf.numOfOnes(p));
            var S = e._lctf.numOfOnes(v);
            if (u.fmt == 1) {
              u.pairsets = [];
              var x = l.readUshort(i, s);
              s += 2;
              for (var g = 0; g < x; g++) {
                var y = c + l.readUshort(i, s);
                s += 2;
                var _ = l.readUshort(i, y);
                y += 2;
                for (var b = [], T = 0; T < _; T++) {
                  var M = l.readUshort(i, y);
                  (y += 2),
                    p != 0 &&
                      ((B = e.GPOS.readValueRecord(i, y, p)), (y += 2 * m)),
                    v != 0 &&
                      (($ = e.GPOS.readValueRecord(i, y, v)), (y += 2 * S)),
                    b.push({ gid2: M, val1: B, val2: $ });
                }
                u.pairsets.push(b);
              }
            }
            if (u.fmt == 2) {
              var C = l.readUshort(i, s);
              s += 2;
              var L = l.readUshort(i, s);
              s += 2;
              var A = l.readUshort(i, s);
              s += 2;
              var P = l.readUshort(i, s);
              for (
                s += 2,
                  u.classDef1 = e._lctf.readClassDef(i, c + C),
                  u.classDef2 = e._lctf.readClassDef(i, c + L),
                  u.matrix = [],
                  g = 0;
                g < A;
                g++
              ) {
                var k = [];
                for (T = 0; T < P; T++) {
                  var B = null,
                    $ = null;
                  p != 0 &&
                    ((B = e.GPOS.readValueRecord(i, s, p)), (s += 2 * m)),
                    v != 0 &&
                      (($ = e.GPOS.readValueRecord(i, s, v)), (s += 2 * S)),
                    k.push({ val1: B, val2: $ });
                }
                u.matrix.push(k);
              }
            }
          } else {
            if (o == 9 && u.fmt == 1) {
              var D = l.readUshort(i, s);
              s += 2;
              var X = l.readUint(i, s);
              if (((s += 4), a.ltype == 9)) a.ltype = D;
              else if (a.ltype != D) throw "invalid extension substitution";
              return e.GPOS.subt(i, a.ltype, c + X);
            }
            console.debug(
              "unsupported GPOS table LookupType",
              o,
              "format",
              u.fmt
            );
          }
          return u;
        }),
        (e.GPOS.readValueRecord = function (i, o, s) {
          var a = e._bin,
            l = [];
          return (
            l.push(1 & s ? a.readShort(i, o) : 0),
            (o += 1 & s ? 2 : 0),
            l.push(2 & s ? a.readShort(i, o) : 0),
            (o += 2 & s ? 2 : 0),
            l.push(4 & s ? a.readShort(i, o) : 0),
            (o += 4 & s ? 2 : 0),
            l.push(8 & s ? a.readShort(i, o) : 0),
            (o += 8 & s ? 2 : 0),
            l
          );
        }),
        (e.GSUB = {}),
        (e.GSUB.parse = function (i, o, s, a) {
          return e._lctf.parse(i, o, s, a, e.GSUB.subt);
        }),
        (e.GSUB.subt = function (i, o, s, a) {
          var l = e._bin,
            c = s,
            u = {};
          if (
            ((u.fmt = l.readUshort(i, s)),
            (s += 2),
            o != 1 && o != 4 && o != 5 && o != 6)
          )
            return null;
          if (
            o == 1 ||
            o == 4 ||
            (o == 5 && u.fmt <= 2) ||
            (o == 6 && u.fmt <= 2)
          ) {
            var h = l.readUshort(i, s);
            (s += 2), (u.coverage = e._lctf.readCoverage(i, c + h));
          }
          if (o == 1 && u.fmt >= 1 && u.fmt <= 2) {
            if (u.fmt == 1) (u.delta = l.readShort(i, s)), (s += 2);
            else if (u.fmt == 2) {
              var p = l.readUshort(i, s);
              (s += 2),
                (u.newg = l.readUshorts(i, s, p)),
                (s += 2 * u.newg.length);
            }
          } else if (o == 4) {
            (u.vals = []), (p = l.readUshort(i, s)), (s += 2);
            for (var m = 0; m < p; m++) {
              var v = l.readUshort(i, s);
              (s += 2), u.vals.push(e.GSUB.readLigatureSet(i, c + v));
            }
          } else if (o == 5 && u.fmt == 2) {
            if (u.fmt == 2) {
              var S = l.readUshort(i, s);
              (s += 2),
                (u.cDef = e._lctf.readClassDef(i, c + S)),
                (u.scset = []);
              var x = l.readUshort(i, s);
              for (s += 2, m = 0; m < x; m++) {
                var g = l.readUshort(i, s);
                (s += 2),
                  u.scset.push(
                    g == 0 ? null : e.GSUB.readSubClassSet(i, c + g)
                  );
              }
            }
          } else if (o == 6 && u.fmt == 3) {
            if (u.fmt == 3) {
              for (m = 0; m < 3; m++) {
                (p = l.readUshort(i, s)), (s += 2);
                for (var y = [], _ = 0; _ < p; _++)
                  y.push(
                    e._lctf.readCoverage(i, c + l.readUshort(i, s + 2 * _))
                  );
                (s += 2 * p),
                  m == 0 && (u.backCvg = y),
                  m == 1 && (u.inptCvg = y),
                  m == 2 && (u.ahedCvg = y);
              }
              (p = l.readUshort(i, s)),
                (s += 2),
                (u.lookupRec = e.GSUB.readSubstLookupRecords(i, s, p));
            }
          } else {
            if (o == 7 && u.fmt == 1) {
              var b = l.readUshort(i, s);
              s += 2;
              var T = l.readUint(i, s);
              if (((s += 4), a.ltype == 9)) a.ltype = b;
              else if (a.ltype != b) throw "invalid extension substitution";
              return e.GSUB.subt(i, a.ltype, c + T);
            }
            console.debug(
              "unsupported GSUB table LookupType",
              o,
              "format",
              u.fmt
            );
          }
          return u;
        }),
        (e.GSUB.readSubClassSet = function (i, o) {
          var s = e._bin.readUshort,
            a = o,
            l = [],
            c = s(i, o);
          o += 2;
          for (var u = 0; u < c; u++) {
            var h = s(i, o);
            (o += 2), l.push(e.GSUB.readSubClassRule(i, a + h));
          }
          return l;
        }),
        (e.GSUB.readSubClassRule = function (i, o) {
          var s = e._bin.readUshort,
            a = {},
            l = s(i, o),
            c = s(i, (o += 2));
          (o += 2), (a.input = []);
          for (var u = 0; u < l - 1; u++) a.input.push(s(i, o)), (o += 2);
          return (
            (a.substLookupRecords = e.GSUB.readSubstLookupRecords(i, o, c)), a
          );
        }),
        (e.GSUB.readSubstLookupRecords = function (i, o, s) {
          for (var a = e._bin.readUshort, l = [], c = 0; c < s; c++)
            l.push(a(i, o), a(i, o + 2)), (o += 4);
          return l;
        }),
        (e.GSUB.readChainSubClassSet = function (i, o) {
          var s = e._bin,
            a = o,
            l = [],
            c = s.readUshort(i, o);
          o += 2;
          for (var u = 0; u < c; u++) {
            var h = s.readUshort(i, o);
            (o += 2), l.push(e.GSUB.readChainSubClassRule(i, a + h));
          }
          return l;
        }),
        (e.GSUB.readChainSubClassRule = function (i, o) {
          for (
            var s = e._bin,
              a = {},
              l = ["backtrack", "input", "lookahead"],
              c = 0;
            c < l.length;
            c++
          ) {
            var u = s.readUshort(i, o);
            (o += 2),
              c == 1 && u--,
              (a[l[c]] = s.readUshorts(i, o, u)),
              (o += 2 * a[l[c]].length);
          }
          return (
            (u = s.readUshort(i, o)),
            (o += 2),
            (a.subst = s.readUshorts(i, o, 2 * u)),
            (o += 2 * a.subst.length),
            a
          );
        }),
        (e.GSUB.readLigatureSet = function (i, o) {
          var s = e._bin,
            a = o,
            l = [],
            c = s.readUshort(i, o);
          o += 2;
          for (var u = 0; u < c; u++) {
            var h = s.readUshort(i, o);
            (o += 2), l.push(e.GSUB.readLigature(i, a + h));
          }
          return l;
        }),
        (e.GSUB.readLigature = function (i, o) {
          var s = e._bin,
            a = { chain: [] };
          (a.nglyph = s.readUshort(i, o)), (o += 2);
          var l = s.readUshort(i, o);
          o += 2;
          for (var c = 0; c < l - 1; c++)
            a.chain.push(s.readUshort(i, o)), (o += 2);
          return a;
        }),
        (e.head = {}),
        (e.head.parse = function (i, o, s) {
          var a = e._bin,
            l = {};
          return (
            a.readFixed(i, o),
            (o += 4),
            (l.fontRevision = a.readFixed(i, o)),
            (o += 4),
            a.readUint(i, o),
            (o += 4),
            a.readUint(i, o),
            (o += 4),
            (l.flags = a.readUshort(i, o)),
            (o += 2),
            (l.unitsPerEm = a.readUshort(i, o)),
            (o += 2),
            (l.created = a.readUint64(i, o)),
            (o += 8),
            (l.modified = a.readUint64(i, o)),
            (o += 8),
            (l.xMin = a.readShort(i, o)),
            (o += 2),
            (l.yMin = a.readShort(i, o)),
            (o += 2),
            (l.xMax = a.readShort(i, o)),
            (o += 2),
            (l.yMax = a.readShort(i, o)),
            (o += 2),
            (l.macStyle = a.readUshort(i, o)),
            (o += 2),
            (l.lowestRecPPEM = a.readUshort(i, o)),
            (o += 2),
            (l.fontDirectionHint = a.readShort(i, o)),
            (o += 2),
            (l.indexToLocFormat = a.readShort(i, o)),
            (o += 2),
            (l.glyphDataFormat = a.readShort(i, o)),
            (o += 2),
            l
          );
        }),
        (e.hhea = {}),
        (e.hhea.parse = function (i, o, s) {
          var a = e._bin,
            l = {};
          return (
            a.readFixed(i, o),
            (o += 4),
            (l.ascender = a.readShort(i, o)),
            (o += 2),
            (l.descender = a.readShort(i, o)),
            (o += 2),
            (l.lineGap = a.readShort(i, o)),
            (o += 2),
            (l.advanceWidthMax = a.readUshort(i, o)),
            (o += 2),
            (l.minLeftSideBearing = a.readShort(i, o)),
            (o += 2),
            (l.minRightSideBearing = a.readShort(i, o)),
            (o += 2),
            (l.xMaxExtent = a.readShort(i, o)),
            (o += 2),
            (l.caretSlopeRise = a.readShort(i, o)),
            (o += 2),
            (l.caretSlopeRun = a.readShort(i, o)),
            (o += 2),
            (l.caretOffset = a.readShort(i, o)),
            (o += 2),
            (o += 8),
            (l.metricDataFormat = a.readShort(i, o)),
            (o += 2),
            (l.numberOfHMetrics = a.readUshort(i, o)),
            (o += 2),
            l
          );
        }),
        (e.hmtx = {}),
        (e.hmtx.parse = function (i, o, s, a) {
          for (
            var l = e._bin,
              c = { aWidth: [], lsBearing: [] },
              u = 0,
              h = 0,
              p = 0;
            p < a.maxp.numGlyphs;
            p++
          )
            p < a.hhea.numberOfHMetrics &&
              ((u = l.readUshort(i, o)),
              (o += 2),
              (h = l.readShort(i, o)),
              (o += 2)),
              c.aWidth.push(u),
              c.lsBearing.push(h);
          return c;
        }),
        (e.kern = {}),
        (e.kern.parse = function (i, o, s, a) {
          var l = e._bin,
            c = l.readUshort(i, o);
          if (((o += 2), c == 1)) return e.kern.parseV1(i, o - 2, s, a);
          var u = l.readUshort(i, o);
          o += 2;
          for (var h = { glyph1: [], rval: [] }, p = 0; p < u; p++) {
            (o += 2), (s = l.readUshort(i, o)), (o += 2);
            var m = l.readUshort(i, o);
            o += 2;
            var v = m >>> 8;
            if ((v &= 15) != 0) throw "unknown kern table format: " + v;
            o = e.kern.readFormat0(i, o, h);
          }
          return h;
        }),
        (e.kern.parseV1 = function (i, o, s, a) {
          var l = e._bin;
          l.readFixed(i, o), (o += 4);
          var c = l.readUint(i, o);
          o += 4;
          for (var u = { glyph1: [], rval: [] }, h = 0; h < c; h++) {
            l.readUint(i, o), (o += 4);
            var p = l.readUshort(i, o);
            (o += 2), l.readUshort(i, o), (o += 2);
            var m = p >>> 8;
            if ((m &= 15) != 0) throw "unknown kern table format: " + m;
            o = e.kern.readFormat0(i, o, u);
          }
          return u;
        }),
        (e.kern.readFormat0 = function (i, o, s) {
          var a = e._bin,
            l = -1,
            c = a.readUshort(i, o);
          (o += 2),
            a.readUshort(i, o),
            (o += 2),
            a.readUshort(i, o),
            (o += 2),
            a.readUshort(i, o),
            (o += 2);
          for (var u = 0; u < c; u++) {
            var h = a.readUshort(i, o);
            o += 2;
            var p = a.readUshort(i, o);
            o += 2;
            var m = a.readShort(i, o);
            (o += 2),
              h != l &&
                (s.glyph1.push(h), s.rval.push({ glyph2: [], vals: [] }));
            var v = s.rval[s.rval.length - 1];
            v.glyph2.push(p), v.vals.push(m), (l = h);
          }
          return o;
        }),
        (e.loca = {}),
        (e.loca.parse = function (i, o, s, a) {
          var l = e._bin,
            c = [],
            u = a.head.indexToLocFormat,
            h = a.maxp.numGlyphs + 1;
          if (u == 0)
            for (var p = 0; p < h; p++)
              c.push(l.readUshort(i, o + (p << 1)) << 1);
          if (u == 1)
            for (p = 0; p < h; p++) c.push(l.readUint(i, o + (p << 2)));
          return c;
        }),
        (e.maxp = {}),
        (e.maxp.parse = function (i, o, s) {
          var a = e._bin,
            l = {},
            c = a.readUint(i, o);
          return (
            (o += 4),
            (l.numGlyphs = a.readUshort(i, o)),
            (o += 2),
            c == 65536 &&
              ((l.maxPoints = a.readUshort(i, o)),
              (o += 2),
              (l.maxContours = a.readUshort(i, o)),
              (o += 2),
              (l.maxCompositePoints = a.readUshort(i, o)),
              (o += 2),
              (l.maxCompositeContours = a.readUshort(i, o)),
              (o += 2),
              (l.maxZones = a.readUshort(i, o)),
              (o += 2),
              (l.maxTwilightPoints = a.readUshort(i, o)),
              (o += 2),
              (l.maxStorage = a.readUshort(i, o)),
              (o += 2),
              (l.maxFunctionDefs = a.readUshort(i, o)),
              (o += 2),
              (l.maxInstructionDefs = a.readUshort(i, o)),
              (o += 2),
              (l.maxStackElements = a.readUshort(i, o)),
              (o += 2),
              (l.maxSizeOfInstructions = a.readUshort(i, o)),
              (o += 2),
              (l.maxComponentElements = a.readUshort(i, o)),
              (o += 2),
              (l.maxComponentDepth = a.readUshort(i, o)),
              (o += 2)),
            l
          );
        }),
        (e.name = {}),
        (e.name.parse = function (i, o, s) {
          var a = e._bin,
            l = {};
          a.readUshort(i, o), (o += 2);
          var c = a.readUshort(i, o);
          (o += 2), a.readUshort(i, o);
          for (
            var u,
              h = [
                "copyright",
                "fontFamily",
                "fontSubfamily",
                "ID",
                "fullName",
                "version",
                "postScriptName",
                "trademark",
                "manufacturer",
                "designer",
                "description",
                "urlVendor",
                "urlDesigner",
                "licence",
                "licenceURL",
                "---",
                "typoFamilyName",
                "typoSubfamilyName",
                "compatibleFull",
                "sampleText",
                "postScriptCID",
                "wwsFamilyName",
                "wwsSubfamilyName",
                "lightPalette",
                "darkPalette",
              ],
              p = (o += 2),
              m = 0;
            m < c;
            m++
          ) {
            var v = a.readUshort(i, o);
            o += 2;
            var S = a.readUshort(i, o);
            o += 2;
            var x = a.readUshort(i, o);
            o += 2;
            var g = a.readUshort(i, o);
            o += 2;
            var y = a.readUshort(i, o);
            o += 2;
            var _ = a.readUshort(i, o);
            o += 2;
            var b,
              T = h[g],
              M = p + 12 * c + _;
            if (v == 0) b = a.readUnicode(i, M, y / 2);
            else if (v == 3 && S == 0) b = a.readUnicode(i, M, y / 2);
            else if (S == 0) b = a.readASCII(i, M, y);
            else if (S == 1) b = a.readUnicode(i, M, y / 2);
            else if (S == 3) b = a.readUnicode(i, M, y / 2);
            else {
              if (v != 1) throw "unknown encoding " + S + ", platformID: " + v;
              (b = a.readASCII(i, M, y)),
                console.debug(
                  "reading unknown MAC encoding " + S + " as ASCII"
                );
            }
            var C = "p" + v + "," + x.toString(16);
            l[C] == null && (l[C] = {}),
              (l[C][T !== void 0 ? T : g] = b),
              (l[C]._lang = x);
          }
          for (var L in l)
            if (l[L].postScriptName != null && l[L]._lang == 1033) return l[L];
          for (var L in l)
            if (l[L].postScriptName != null && l[L]._lang == 0) return l[L];
          for (var L in l)
            if (l[L].postScriptName != null && l[L]._lang == 3084) return l[L];
          for (var L in l) if (l[L].postScriptName != null) return l[L];
          for (var L in l) {
            u = L;
            break;
          }
          return (
            console.debug("returning name table with languageID " + l[u]._lang),
            l[u]
          );
        }),
        (e["OS/2"] = {}),
        (e["OS/2"].parse = function (i, o, s) {
          var a = e._bin.readUshort(i, o);
          o += 2;
          var l = {};
          if (a == 0) e["OS/2"].version0(i, o, l);
          else if (a == 1) e["OS/2"].version1(i, o, l);
          else if (a == 2 || a == 3 || a == 4) e["OS/2"].version2(i, o, l);
          else {
            if (a != 5) throw "unknown OS/2 table version: " + a;
            e["OS/2"].version5(i, o, l);
          }
          return l;
        }),
        (e["OS/2"].version0 = function (i, o, s) {
          var a = e._bin;
          return (
            (s.xAvgCharWidth = a.readShort(i, o)),
            (o += 2),
            (s.usWeightClass = a.readUshort(i, o)),
            (o += 2),
            (s.usWidthClass = a.readUshort(i, o)),
            (o += 2),
            (s.fsType = a.readUshort(i, o)),
            (o += 2),
            (s.ySubscriptXSize = a.readShort(i, o)),
            (o += 2),
            (s.ySubscriptYSize = a.readShort(i, o)),
            (o += 2),
            (s.ySubscriptXOffset = a.readShort(i, o)),
            (o += 2),
            (s.ySubscriptYOffset = a.readShort(i, o)),
            (o += 2),
            (s.ySuperscriptXSize = a.readShort(i, o)),
            (o += 2),
            (s.ySuperscriptYSize = a.readShort(i, o)),
            (o += 2),
            (s.ySuperscriptXOffset = a.readShort(i, o)),
            (o += 2),
            (s.ySuperscriptYOffset = a.readShort(i, o)),
            (o += 2),
            (s.yStrikeoutSize = a.readShort(i, o)),
            (o += 2),
            (s.yStrikeoutPosition = a.readShort(i, o)),
            (o += 2),
            (s.sFamilyClass = a.readShort(i, o)),
            (o += 2),
            (s.panose = a.readBytes(i, o, 10)),
            (o += 10),
            (s.ulUnicodeRange1 = a.readUint(i, o)),
            (o += 4),
            (s.ulUnicodeRange2 = a.readUint(i, o)),
            (o += 4),
            (s.ulUnicodeRange3 = a.readUint(i, o)),
            (o += 4),
            (s.ulUnicodeRange4 = a.readUint(i, o)),
            (o += 4),
            (s.achVendID = [
              a.readInt8(i, o),
              a.readInt8(i, o + 1),
              a.readInt8(i, o + 2),
              a.readInt8(i, o + 3),
            ]),
            (o += 4),
            (s.fsSelection = a.readUshort(i, o)),
            (o += 2),
            (s.usFirstCharIndex = a.readUshort(i, o)),
            (o += 2),
            (s.usLastCharIndex = a.readUshort(i, o)),
            (o += 2),
            (s.sTypoAscender = a.readShort(i, o)),
            (o += 2),
            (s.sTypoDescender = a.readShort(i, o)),
            (o += 2),
            (s.sTypoLineGap = a.readShort(i, o)),
            (o += 2),
            (s.usWinAscent = a.readUshort(i, o)),
            (o += 2),
            (s.usWinDescent = a.readUshort(i, o)),
            (o += 2)
          );
        }),
        (e["OS/2"].version1 = function (i, o, s) {
          var a = e._bin;
          return (
            (o = e["OS/2"].version0(i, o, s)),
            (s.ulCodePageRange1 = a.readUint(i, o)),
            (o += 4),
            (s.ulCodePageRange2 = a.readUint(i, o)),
            (o += 4)
          );
        }),
        (e["OS/2"].version2 = function (i, o, s) {
          var a = e._bin;
          return (
            (o = e["OS/2"].version1(i, o, s)),
            (s.sxHeight = a.readShort(i, o)),
            (o += 2),
            (s.sCapHeight = a.readShort(i, o)),
            (o += 2),
            (s.usDefault = a.readUshort(i, o)),
            (o += 2),
            (s.usBreak = a.readUshort(i, o)),
            (o += 2),
            (s.usMaxContext = a.readUshort(i, o)),
            (o += 2)
          );
        }),
        (e["OS/2"].version5 = function (i, o, s) {
          var a = e._bin;
          return (
            (o = e["OS/2"].version2(i, o, s)),
            (s.usLowerOpticalPointSize = a.readUshort(i, o)),
            (o += 2),
            (s.usUpperOpticalPointSize = a.readUshort(i, o)),
            (o += 2)
          );
        }),
        (e.post = {}),
        (e.post.parse = function (i, o, s) {
          var a = e._bin,
            l = {};
          return (
            (l.version = a.readFixed(i, o)),
            (o += 4),
            (l.italicAngle = a.readFixed(i, o)),
            (o += 4),
            (l.underlinePosition = a.readShort(i, o)),
            (o += 2),
            (l.underlineThickness = a.readShort(i, o)),
            (o += 2),
            l
          );
        }),
        e == null && (e = {}),
        e.U == null && (e.U = {}),
        (e.U.codeToGlyph = function (i, o) {
          var s = i.cmap,
            a = -1;
          if (
            (s.p0e4 != null
              ? (a = s.p0e4)
              : s.p3e1 != null
              ? (a = s.p3e1)
              : s.p1e0 != null
              ? (a = s.p1e0)
              : s.p0e3 != null && (a = s.p0e3),
            a == -1)
          )
            throw "no familiar platform and encoding!";
          var l = s.tables[a];
          if (l.format == 0) return o >= l.map.length ? 0 : l.map[o];
          if (l.format == 4) {
            for (var c = -1, u = 0; u < l.endCount.length; u++)
              if (o <= l.endCount[u]) {
                c = u;
                break;
              }
            return c == -1 || l.startCount[c] > o
              ? 0
              : 65535 &
                  (l.idRangeOffset[c] != 0
                    ? l.glyphIdArray[
                        o -
                          l.startCount[c] +
                          (l.idRangeOffset[c] >> 1) -
                          (l.idRangeOffset.length - c)
                      ]
                    : o + l.idDelta[c]);
          }
          if (l.format == 12) {
            if (o > l.groups[l.groups.length - 1][1]) return 0;
            for (u = 0; u < l.groups.length; u++) {
              var h = l.groups[u];
              if (h[0] <= o && o <= h[1]) return h[2] + (o - h[0]);
            }
            return 0;
          }
          throw "unknown cmap table format " + l.format;
        }),
        (e.U.glyphToPath = function (i, o) {
          var s = { cmds: [], crds: [] };
          if (i.SVG && i.SVG.entries[o]) {
            var a = i.SVG.entries[o];
            return a == null
              ? s
              : (typeof a == "string" &&
                  ((a = e.SVG.toPath(a)), (i.SVG.entries[o] = a)),
                a);
          }
          if (i.CFF) {
            var l = {
                x: 0,
                y: 0,
                stack: [],
                nStems: 0,
                haveWidth: !1,
                width: i.CFF.Private ? i.CFF.Private.defaultWidthX : 0,
                open: !1,
              },
              c = i.CFF,
              u = i.CFF.Private;
            if (c.ROS) {
              for (var h = 0; c.FDSelect[h + 2] <= o; ) h += 2;
              u = c.FDArray[c.FDSelect[h + 1]].Private;
            }
            e.U._drawCFF(i.CFF.CharStrings[o], l, c, u, s);
          } else i.glyf && e.U._drawGlyf(o, i, s);
          return s;
        }),
        (e.U._drawGlyf = function (i, o, s) {
          var a = o.glyf[i];
          a == null && (a = o.glyf[i] = e.glyf._parseGlyf(o, i)),
            a != null &&
              (a.noc > -1 ? e.U._simpleGlyph(a, s) : e.U._compoGlyph(a, o, s));
        }),
        (e.U._simpleGlyph = function (i, o) {
          for (var s = 0; s < i.noc; s++) {
            for (
              var a = s == 0 ? 0 : i.endPts[s - 1] + 1, l = i.endPts[s], c = a;
              c <= l;
              c++
            ) {
              var u = c == a ? l : c - 1,
                h = c == l ? a : c + 1,
                p = 1 & i.flags[c],
                m = 1 & i.flags[u],
                v = 1 & i.flags[h],
                S = i.xs[c],
                x = i.ys[c];
              if (c == a)
                if (p) {
                  if (!m) {
                    e.U.P.moveTo(o, S, x);
                    continue;
                  }
                  e.U.P.moveTo(o, i.xs[u], i.ys[u]);
                } else
                  m
                    ? e.U.P.moveTo(o, i.xs[u], i.ys[u])
                    : e.U.P.moveTo(o, (i.xs[u] + S) / 2, (i.ys[u] + x) / 2);
              p
                ? m && e.U.P.lineTo(o, S, x)
                : v
                ? e.U.P.qcurveTo(o, S, x, i.xs[h], i.ys[h])
                : e.U.P.qcurveTo(o, S, x, (S + i.xs[h]) / 2, (x + i.ys[h]) / 2);
            }
            e.U.P.closePath(o);
          }
        }),
        (e.U._compoGlyph = function (i, o, s) {
          for (var a = 0; a < i.parts.length; a++) {
            var l = { cmds: [], crds: [] },
              c = i.parts[a];
            e.U._drawGlyf(c.glyphIndex, o, l);
            for (var u = c.m, h = 0; h < l.crds.length; h += 2) {
              var p = l.crds[h],
                m = l.crds[h + 1];
              s.crds.push(p * u.a + m * u.b + u.tx),
                s.crds.push(p * u.c + m * u.d + u.ty);
            }
            for (h = 0; h < l.cmds.length; h++) s.cmds.push(l.cmds[h]);
          }
        }),
        (e.U._getGlyphClass = function (i, o) {
          var s = e._lctf.getInterval(o, i);
          return s == -1 ? 0 : o[s + 2];
        }),
        (e.U.getPairAdjustment = function (i, o, s) {
          var a = !1;
          if (i.GPOS)
            for (
              var l = i.GPOS,
                c = l.lookupList,
                u = l.featureList,
                h = [],
                p = 0;
              p < u.length;
              p++
            ) {
              var m = u[p];
              if (m.tag == "kern") {
                a = !0;
                for (var v = 0; v < m.tab.length; v++)
                  if (!h[m.tab[v]]) {
                    h[m.tab[v]] = !0;
                    for (var S = c[m.tab[v]], x = 0; x < S.tabs.length; x++)
                      if (S.tabs[x] != null) {
                        var g,
                          y = S.tabs[x];
                        if (
                          (!y.coverage ||
                            (g = e._lctf.coverageIndex(y.coverage, o)) != -1) &&
                          S.ltype != 1
                        ) {
                          if (S.ltype == 2) {
                            var _ = null;
                            if (y.fmt == 1) {
                              var b = y.pairsets[g];
                              for (p = 0; p < b.length; p++)
                                b[p].gid2 == s && (_ = b[p]);
                            } else if (y.fmt == 2) {
                              var T = e.U._getGlyphClass(o, y.classDef1),
                                M = e.U._getGlyphClass(s, y.classDef2);
                              _ = y.matrix[T][M];
                            }
                            if (_) {
                              var C = 0;
                              return (
                                _.val1 && _.val1[2] && (C += _.val1[2]),
                                _.val2 && _.val2[0] && (C += _.val2[0]),
                                C
                              );
                            }
                          }
                        }
                      }
                  }
              }
            }
          if (i.kern && !a) {
            var L = i.kern.glyph1.indexOf(o);
            if (L != -1) {
              var A = i.kern.rval[L].glyph2.indexOf(s);
              if (A != -1) return i.kern.rval[L].vals[A];
            }
          }
          return 0;
        }),
        (e.U._applySubs = function (i, o, s, a) {
          for (var l = i.length - o - 1, c = 0; c < s.tabs.length; c++)
            if (s.tabs[c] != null) {
              var u,
                h = s.tabs[c];
              if (
                !h.coverage ||
                (u = e._lctf.coverageIndex(h.coverage, i[o])) != -1
              ) {
                if (s.ltype == 1)
                  i[o],
                    h.fmt == 1 ? (i[o] = i[o] + h.delta) : (i[o] = h.newg[u]);
                else if (s.ltype == 4)
                  for (var p = h.vals[u], m = 0; m < p.length; m++) {
                    var v = p[m],
                      S = v.chain.length;
                    if (!(S > l)) {
                      for (var x = !0, g = 0, y = 0; y < S; y++) {
                        for (; i[o + g + (1 + y)] == -1; ) g++;
                        v.chain[y] != i[o + g + (1 + y)] && (x = !1);
                      }
                      if (x) {
                        for (i[o] = v.nglyph, y = 0; y < S + g; y++)
                          i[o + y + 1] = -1;
                        break;
                      }
                    }
                  }
                else if (s.ltype == 5 && h.fmt == 2)
                  for (
                    var _ = e._lctf.getInterval(h.cDef, i[o]),
                      b = h.cDef[_ + 2],
                      T = h.scset[b],
                      M = 0;
                    M < T.length;
                    M++
                  ) {
                    var C = T[M],
                      L = C.input;
                    if (!(L.length > l)) {
                      for (x = !0, y = 0; y < L.length; y++) {
                        var A = e._lctf.getInterval(h.cDef, i[o + 1 + y]);
                        if (_ == -1 && h.cDef[A + 2] != L[y]) {
                          x = !1;
                          break;
                        }
                      }
                      if (x) {
                        var P = C.substLookupRecords;
                        for (m = 0; m < P.length; m += 2) P[m], P[m + 1];
                      }
                    }
                  }
                else if (s.ltype == 6 && h.fmt == 3) {
                  if (
                    !e.U._glsCovered(i, h.backCvg, o - h.backCvg.length) ||
                    !e.U._glsCovered(i, h.inptCvg, o) ||
                    !e.U._glsCovered(i, h.ahedCvg, o + h.inptCvg.length)
                  )
                    continue;
                  var k = h.lookupRec;
                  for (M = 0; M < k.length; M += 2) {
                    _ = k[M];
                    var B = a[k[M + 1]];
                    e.U._applySubs(i, o + _, B, a);
                  }
                }
              }
            }
        }),
        (e.U._glsCovered = function (i, o, s) {
          for (var a = 0; a < o.length; a++)
            if (e._lctf.coverageIndex(o[a], i[s + a]) == -1) return !1;
          return !0;
        }),
        (e.U.glyphsToPath = function (i, o, s) {
          for (
            var a = { cmds: [], crds: [] }, l = 0, c = 0;
            c < o.length;
            c++
          ) {
            var u = o[c];
            if (u != -1) {
              for (
                var h = c < o.length - 1 && o[c + 1] != -1 ? o[c + 1] : 0,
                  p = e.U.glyphToPath(i, u),
                  m = 0;
                m < p.crds.length;
                m += 2
              )
                a.crds.push(p.crds[m] + l), a.crds.push(p.crds[m + 1]);
              for (s && a.cmds.push(s), m = 0; m < p.cmds.length; m++)
                a.cmds.push(p.cmds[m]);
              s && a.cmds.push("X"),
                (l += i.hmtx.aWidth[u]),
                c < o.length - 1 && (l += e.U.getPairAdjustment(i, u, h));
            }
          }
          return a;
        }),
        (e.U.P = {}),
        (e.U.P.moveTo = function (i, o, s) {
          i.cmds.push("M"), i.crds.push(o, s);
        }),
        (e.U.P.lineTo = function (i, o, s) {
          i.cmds.push("L"), i.crds.push(o, s);
        }),
        (e.U.P.curveTo = function (i, o, s, a, l, c, u) {
          i.cmds.push("C"), i.crds.push(o, s, a, l, c, u);
        }),
        (e.U.P.qcurveTo = function (i, o, s, a, l) {
          i.cmds.push("Q"), i.crds.push(o, s, a, l);
        }),
        (e.U.P.closePath = function (i) {
          i.cmds.push("Z");
        }),
        (e.U._drawCFF = function (i, o, s, a, l) {
          for (
            var c = o.stack,
              u = o.nStems,
              h = o.haveWidth,
              p = o.width,
              m = o.open,
              v = 0,
              S = o.x,
              x = o.y,
              g = 0,
              y = 0,
              _ = 0,
              b = 0,
              T = 0,
              M = 0,
              C = 0,
              L = 0,
              A = 0,
              P = 0,
              k = { val: 0, size: 0 };
            v < i.length;

          ) {
            e.CFF.getCharString(i, v, k);
            var B = k.val;
            if (((v += k.size), B == "o1" || B == "o18"))
              c.length % 2 != 0 && !h && (p = c.shift() + a.nominalWidthX),
                (u += c.length >> 1),
                (c.length = 0),
                (h = !0);
            else if (B == "o3" || B == "o23")
              c.length % 2 != 0 && !h && (p = c.shift() + a.nominalWidthX),
                (u += c.length >> 1),
                (c.length = 0),
                (h = !0);
            else if (B == "o4")
              c.length > 1 &&
                !h &&
                ((p = c.shift() + a.nominalWidthX), (h = !0)),
                m && e.U.P.closePath(l),
                (x += c.pop()),
                e.U.P.moveTo(l, S, x),
                (m = !0);
            else if (B == "o5")
              for (; c.length > 0; )
                (S += c.shift()), (x += c.shift()), e.U.P.lineTo(l, S, x);
            else if (B == "o6" || B == "o7")
              for (var $ = c.length, D = B == "o6", X = 0; X < $; X++) {
                var j = c.shift();
                D ? (S += j) : (x += j), (D = !D), e.U.P.lineTo(l, S, x);
              }
            else if (B == "o8" || B == "o24") {
              $ = c.length;
              for (var Y = 0; Y + 6 <= $; )
                (g = S + c.shift()),
                  (y = x + c.shift()),
                  (_ = g + c.shift()),
                  (b = y + c.shift()),
                  (S = _ + c.shift()),
                  (x = b + c.shift()),
                  e.U.P.curveTo(l, g, y, _, b, S, x),
                  (Y += 6);
              B == "o24" &&
                ((S += c.shift()), (x += c.shift()), e.U.P.lineTo(l, S, x));
            } else {
              if (B == "o11") break;
              if (B == "o1234" || B == "o1235" || B == "o1236" || B == "o1237")
                B == "o1234" &&
                  ((y = x),
                  (_ = (g = S + c.shift()) + c.shift()),
                  (P = b = y + c.shift()),
                  (M = b),
                  (L = x),
                  (S =
                    (C = (T = (A = _ + c.shift()) + c.shift()) + c.shift()) +
                    c.shift()),
                  e.U.P.curveTo(l, g, y, _, b, A, P),
                  e.U.P.curveTo(l, T, M, C, L, S, x)),
                  B == "o1235" &&
                    ((g = S + c.shift()),
                    (y = x + c.shift()),
                    (_ = g + c.shift()),
                    (b = y + c.shift()),
                    (A = _ + c.shift()),
                    (P = b + c.shift()),
                    (T = A + c.shift()),
                    (M = P + c.shift()),
                    (C = T + c.shift()),
                    (L = M + c.shift()),
                    (S = C + c.shift()),
                    (x = L + c.shift()),
                    c.shift(),
                    e.U.P.curveTo(l, g, y, _, b, A, P),
                    e.U.P.curveTo(l, T, M, C, L, S, x)),
                  B == "o1236" &&
                    ((g = S + c.shift()),
                    (y = x + c.shift()),
                    (_ = g + c.shift()),
                    (P = b = y + c.shift()),
                    (M = b),
                    (C = (T = (A = _ + c.shift()) + c.shift()) + c.shift()),
                    (L = M + c.shift()),
                    (S = C + c.shift()),
                    e.U.P.curveTo(l, g, y, _, b, A, P),
                    e.U.P.curveTo(l, T, M, C, L, S, x)),
                  B == "o1237" &&
                    ((g = S + c.shift()),
                    (y = x + c.shift()),
                    (_ = g + c.shift()),
                    (b = y + c.shift()),
                    (A = _ + c.shift()),
                    (P = b + c.shift()),
                    (T = A + c.shift()),
                    (M = P + c.shift()),
                    (C = T + c.shift()),
                    (L = M + c.shift()),
                    Math.abs(C - S) > Math.abs(L - x)
                      ? (S = C + c.shift())
                      : (x = L + c.shift()),
                    e.U.P.curveTo(l, g, y, _, b, A, P),
                    e.U.P.curveTo(l, T, M, C, L, S, x));
              else if (B == "o14") {
                if (
                  (c.length > 0 &&
                    !h &&
                    ((p = c.shift() + s.nominalWidthX), (h = !0)),
                  c.length == 4)
                ) {
                  var N = c.shift(),
                    V = c.shift(),
                    G = c.shift(),
                    U = c.shift(),
                    Z = e.CFF.glyphBySE(s, G),
                    Q = e.CFF.glyphBySE(s, U);
                  e.U._drawCFF(s.CharStrings[Z], o, s, a, l),
                    (o.x = N),
                    (o.y = V),
                    e.U._drawCFF(s.CharStrings[Q], o, s, a, l);
                }
                m && (e.U.P.closePath(l), (m = !1));
              } else if (B == "o19" || B == "o20")
                c.length % 2 != 0 && !h && (p = c.shift() + a.nominalWidthX),
                  (u += c.length >> 1),
                  (c.length = 0),
                  (h = !0),
                  (v += (u + 7) >> 3);
              else if (B == "o21")
                c.length > 2 &&
                  !h &&
                  ((p = c.shift() + a.nominalWidthX), (h = !0)),
                  (x += c.pop()),
                  (S += c.pop()),
                  m && e.U.P.closePath(l),
                  e.U.P.moveTo(l, S, x),
                  (m = !0);
              else if (B == "o22")
                c.length > 1 &&
                  !h &&
                  ((p = c.shift() + a.nominalWidthX), (h = !0)),
                  (S += c.pop()),
                  m && e.U.P.closePath(l),
                  e.U.P.moveTo(l, S, x),
                  (m = !0);
              else if (B == "o25") {
                for (; c.length > 6; )
                  (S += c.shift()), (x += c.shift()), e.U.P.lineTo(l, S, x);
                (g = S + c.shift()),
                  (y = x + c.shift()),
                  (_ = g + c.shift()),
                  (b = y + c.shift()),
                  (S = _ + c.shift()),
                  (x = b + c.shift()),
                  e.U.P.curveTo(l, g, y, _, b, S, x);
              } else if (B == "o26")
                for (c.length % 2 && (S += c.shift()); c.length > 0; )
                  (g = S),
                    (y = x + c.shift()),
                    (S = _ = g + c.shift()),
                    (x = (b = y + c.shift()) + c.shift()),
                    e.U.P.curveTo(l, g, y, _, b, S, x);
              else if (B == "o27")
                for (c.length % 2 && (x += c.shift()); c.length > 0; )
                  (y = x),
                    (_ = (g = S + c.shift()) + c.shift()),
                    (b = y + c.shift()),
                    (S = _ + c.shift()),
                    (x = b),
                    e.U.P.curveTo(l, g, y, _, b, S, x);
              else if (B == "o10" || B == "o29") {
                var te = B == "o10" ? a : s;
                if (c.length == 0) console.debug("error: empty stack");
                else {
                  var re = c.pop(),
                    le = te.Subrs[re + te.Bias];
                  (o.x = S),
                    (o.y = x),
                    (o.nStems = u),
                    (o.haveWidth = h),
                    (o.width = p),
                    (o.open = m),
                    e.U._drawCFF(le, o, s, a, l),
                    (S = o.x),
                    (x = o.y),
                    (u = o.nStems),
                    (h = o.haveWidth),
                    (p = o.width),
                    (m = o.open);
                }
              } else if (B == "o30" || B == "o31") {
                var oe = c.length,
                  ve = ((Y = 0), B == "o31");
                for (Y += oe - ($ = -3 & oe); Y < $; )
                  ve
                    ? ((y = x),
                      (_ = (g = S + c.shift()) + c.shift()),
                      (x = (b = y + c.shift()) + c.shift()),
                      $ - Y == 5 ? ((S = _ + c.shift()), Y++) : (S = _),
                      (ve = !1))
                    : ((g = S),
                      (y = x + c.shift()),
                      (_ = g + c.shift()),
                      (b = y + c.shift()),
                      (S = _ + c.shift()),
                      $ - Y == 5 ? ((x = b + c.shift()), Y++) : (x = b),
                      (ve = !0)),
                    e.U.P.curveTo(l, g, y, _, b, S, x),
                    (Y += 4);
              } else {
                if ((B + "").charAt(0) == "o")
                  throw (console.debug("Unknown operation: " + B, i), B);
                c.push(B);
              }
            }
          }
          (o.x = S),
            (o.y = x),
            (o.nStems = u),
            (o.haveWidth = h),
            (o.width = p),
            (o.open = m);
        });
      var n = e,
        r = { Typr: n };
      return (
        (t.Typr = n),
        (t.default = r),
        Object.defineProperty(t, "__esModule", { value: !0 }),
        t
      );
    })({}).Typr
  );
}
/*!
Custom bundle of woff2otf (https://github.com/arty-name/woff2otf) with fflate
(https://github.com/101arrowz/fflate) for use in Troika text rendering. 
Original licenses apply: 
- fflate: https://github.com/101arrowz/fflate/blob/master/LICENSE (MIT)
- woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)
*/ function E9() {
  return (function (t) {
    var e = Uint8Array,
      n = Uint16Array,
      r = Uint32Array,
      i = new e([
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
        5, 5, 5, 5, 0, 0, 0, 0,
      ]),
      o = new e([
        0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10,
        10, 11, 11, 12, 12, 13, 13, 0, 0,
      ]),
      s = new e([
        16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
      ]),
      a = function (B, $) {
        for (var D = new n(31), X = 0; X < 31; ++X) D[X] = $ += 1 << B[X - 1];
        var j = new r(D[30]);
        for (X = 1; X < 30; ++X)
          for (var Y = D[X]; Y < D[X + 1]; ++Y) j[Y] = ((Y - D[X]) << 5) | X;
        return [D, j];
      },
      l = a(i, 2),
      c = l[0],
      u = l[1];
    (c[28] = 258), (u[258] = 28);
    for (var h = a(o, 0)[0], p = new n(32768), m = 0; m < 32768; ++m) {
      var v = ((43690 & m) >>> 1) | ((21845 & m) << 1);
      (v =
        ((61680 & (v = ((52428 & v) >>> 2) | ((13107 & v) << 2))) >>> 4) |
        ((3855 & v) << 4)),
        (p[m] = (((65280 & v) >>> 8) | ((255 & v) << 8)) >>> 1);
    }
    var S = function (B, $, D) {
        for (var X = B.length, j = 0, Y = new n($); j < X; ++j) ++Y[B[j] - 1];
        var N,
          V = new n($);
        for (j = 0; j < $; ++j) V[j] = (V[j - 1] + Y[j - 1]) << 1;
        if (D) {
          N = new n(1 << $);
          var G = 15 - $;
          for (j = 0; j < X; ++j)
            if (B[j])
              for (
                var U = (j << 4) | B[j],
                  Z = $ - B[j],
                  Q = V[B[j] - 1]++ << Z,
                  te = Q | ((1 << Z) - 1);
                Q <= te;
                ++Q
              )
                N[p[Q] >>> G] = U;
        } else
          for (N = new n(X), j = 0; j < X; ++j)
            B[j] && (N[j] = p[V[B[j] - 1]++] >>> (15 - B[j]));
        return N;
      },
      x = new e(288);
    for (m = 0; m < 144; ++m) x[m] = 8;
    for (m = 144; m < 256; ++m) x[m] = 9;
    for (m = 256; m < 280; ++m) x[m] = 7;
    for (m = 280; m < 288; ++m) x[m] = 8;
    var g = new e(32);
    for (m = 0; m < 32; ++m) g[m] = 5;
    var y = S(x, 9, 1),
      _ = S(g, 5, 1),
      b = function (B) {
        for (var $ = B[0], D = 1; D < B.length; ++D) B[D] > $ && ($ = B[D]);
        return $;
      },
      T = function (B, $, D) {
        var X = ($ / 8) | 0;
        return ((B[X] | (B[X + 1] << 8)) >> (7 & $)) & D;
      },
      M = function (B, $) {
        var D = ($ / 8) | 0;
        return (B[D] | (B[D + 1] << 8) | (B[D + 2] << 16)) >> (7 & $);
      },
      C = [
        "unexpected EOF",
        "invalid block type",
        "invalid length/literal",
        "invalid distance",
        "stream finished",
        "no stream handler",
        ,
        "no callback",
        "invalid UTF-8 data",
        "extra field too long",
        "date not in range 1980-2099",
        "filename too long",
        "stream finishing",
        "invalid zip data",
      ],
      L = function (B, $, D) {
        var X = new Error($ || C[B]);
        if (
          ((X.code = B),
          Error.captureStackTrace && Error.captureStackTrace(X, L),
          !D)
        )
          throw X;
        return X;
      },
      A = function (B, $, D) {
        var X = B.length;
        if (!X || (D && !D.l && X < 5)) return $ || new e(0);
        var j = !$ || D,
          Y = !D || D.i;
        D || (D = {}), $ || ($ = new e(3 * X));
        var N,
          V = function (Oe) {
            var ne = $.length;
            if (Oe > ne) {
              var be = new e(Math.max(2 * ne, Oe));
              be.set($), ($ = be);
            }
          },
          G = D.f || 0,
          U = D.p || 0,
          Z = D.b || 0,
          Q = D.l,
          te = D.d,
          re = D.m,
          le = D.n,
          oe = 8 * X;
        do {
          if (!Q) {
            D.f = G = T(B, U, 1);
            var ve = T(B, U + 1, 3);
            if (((U += 3), !ve)) {
              var Ae =
                  B[(F = (((N = U) / 8) | 0) + (7 & N && 1) + 4) - 4] |
                  (B[F - 3] << 8),
                Re = F + Ae;
              if (Re > X) {
                Y && L(0);
                break;
              }
              j && V(Z + Ae),
                $.set(B.subarray(F, Re), Z),
                (D.b = Z += Ae),
                (D.p = U = 8 * Re);
              continue;
            }
            if (ve == 1) (Q = y), (te = _), (re = 9), (le = 5);
            else if (ve == 2) {
              var ye = T(B, U, 31) + 257,
                q = T(B, U + 10, 15) + 4,
                xe = ye + T(B, U + 5, 31) + 1;
              U += 14;
              for (var he = new e(xe), me = new e(19), fe = 0; fe < q; ++fe)
                me[s[fe]] = T(B, U + 3 * fe, 7);
              U += 3 * q;
              var Ve = b(me),
                ge = (1 << Ve) - 1,
                H = S(me, Ve, 1);
              for (fe = 0; fe < xe; ) {
                var F,
                  K = H[T(B, U, ge)];
                if (((U += 15 & K), (F = K >>> 4) < 16)) he[fe++] = F;
                else {
                  var ae = 0,
                    se = 0;
                  for (
                    F == 16
                      ? ((se = 3 + T(B, U, 3)), (U += 2), (ae = he[fe - 1]))
                      : F == 17
                      ? ((se = 3 + T(B, U, 7)), (U += 3))
                      : F == 18 && ((se = 11 + T(B, U, 127)), (U += 7));
                    se--;

                  )
                    he[fe++] = ae;
                }
              }
              var de = he.subarray(0, ye),
                Pe = he.subarray(ye);
              (re = b(de)),
                (le = b(Pe)),
                (Q = S(de, re, 1)),
                (te = S(Pe, le, 1));
            } else L(1);
            if (U > oe) {
              Y && L(0);
              break;
            }
          }
          j && V(Z + 131072);
          for (var ke = (1 << re) - 1, Be = (1 << le) - 1, Ne = U; ; Ne = U) {
            var ze = (ae = Q[M(B, U) & ke]) >>> 4;
            if ((U += 15 & ae) > oe) {
              Y && L(0);
              break;
            }
            if ((ae || L(2), ze < 256)) $[Z++] = ze;
            else {
              if (ze == 256) {
                (Ne = U), (Q = null);
                break;
              }
              var Ee = ze - 254;
              if (ze > 264) {
                var Je = i[(fe = ze - 257)];
                (Ee = T(B, U, (1 << Je) - 1) + c[fe]), (U += Je);
              }
              var qe = te[M(B, U) & Be],
                Qe = qe >>> 4;
              if (
                (qe || L(3),
                (U += 15 & qe),
                (Pe = h[Qe]),
                Qe > 3 &&
                  ((Je = o[Qe]), (Pe += M(B, U) & ((1 << Je) - 1)), (U += Je)),
                U > oe)
              ) {
                Y && L(0);
                break;
              }
              j && V(Z + 131072);
              for (var Ge = Z + Ee; Z < Ge; Z += 4)
                ($[Z] = $[Z - Pe]),
                  ($[Z + 1] = $[Z + 1 - Pe]),
                  ($[Z + 2] = $[Z + 2 - Pe]),
                  ($[Z + 3] = $[Z + 3 - Pe]);
              Z = Ge;
            }
          }
          (D.l = Q),
            (D.p = Ne),
            (D.b = Z),
            Q && ((G = 1), (D.m = re), (D.d = te), (D.n = le));
        } while (!G);
        return Z == $.length
          ? $
          : (function (Oe, ne, be) {
              (ne == null || ne < 0) && (ne = 0),
                (be == null || be > Oe.length) && (be = Oe.length);
              var je = new (Oe instanceof n ? n : Oe instanceof r ? r : e)(
                be - ne
              );
              return je.set(Oe.subarray(ne, be)), je;
            })($, 0, Z);
      },
      P = new e(0),
      k = typeof TextDecoder < "u" && new TextDecoder();
    try {
      k.decode(P, { stream: !0 });
    } catch {}
    return (
      (t.convert_streams = function (B) {
        var $ = new DataView(B),
          D = 0;
        function X() {
          var ye = $.getUint16(D);
          return (D += 2), ye;
        }
        function j() {
          var ye = $.getUint32(D);
          return (D += 4), ye;
        }
        function Y(ye) {
          Ae.setUint16(Re, ye), (Re += 2);
        }
        function N(ye) {
          Ae.setUint32(Re, ye), (Re += 4);
        }
        for (
          var V = {
              signature: j(),
              flavor: j(),
              length: j(),
              numTables: X(),
              reserved: X(),
              totalSfntSize: j(),
              majorVersion: X(),
              minorVersion: X(),
              metaOffset: j(),
              metaLength: j(),
              metaOrigLength: j(),
              privOffset: j(),
              privLength: j(),
            },
            G = 0;
          Math.pow(2, G) <= V.numTables;

        )
          G++;
        G--;
        for (
          var U = 16 * Math.pow(2, G),
            Z = 16 * V.numTables - U,
            Q = 12,
            te = [],
            re = 0;
          re < V.numTables;
          re++
        )
          te.push({
            tag: j(),
            offset: j(),
            compLength: j(),
            origLength: j(),
            origChecksum: j(),
          }),
            (Q += 16);
        var le,
          oe = new Uint8Array(
            12 +
              16 * te.length +
              te.reduce(function (ye, q) {
                return ye + q.origLength + 4;
              }, 0)
          ),
          ve = oe.buffer,
          Ae = new DataView(ve),
          Re = 0;
        return (
          N(V.flavor),
          Y(V.numTables),
          Y(U),
          Y(G),
          Y(Z),
          te.forEach(function (ye) {
            N(ye.tag),
              N(ye.origChecksum),
              N(Q),
              N(ye.origLength),
              (ye.outOffset = Q),
              (Q += ye.origLength) % 4 != 0 && (Q += 4 - (Q % 4));
          }),
          te.forEach(function (ye) {
            var q,
              xe = B.slice(ye.offset, ye.offset + ye.compLength);
            if (ye.compLength != ye.origLength) {
              var he = new Uint8Array(ye.origLength);
              (q = new Uint8Array(xe, 2)), A(q, he);
            } else he = new Uint8Array(xe);
            oe.set(he, ye.outOffset);
            var me = 0;
            (Q = ye.outOffset + ye.origLength) % 4 != 0 && (me = 4 - (Q % 4)),
              oe.set(new Uint8Array(me).buffer, ye.outOffset + ye.origLength),
              (le = Q + me);
          }),
          ve.slice(0, le)
        );
      }),
      Object.defineProperty(t, "__esModule", { value: !0 }),
      t
    );
  })({}).convert_streams;
}
function M9(t, e) {
  const n = { M: 2, L: 2, Q: 4, C: 6, Z: 0 },
    r = {
      C: "18g,ca,368,1kz",
      D: "17k,6,2,2+4,5+c,2+6,2+1,10+1,9+f,j+11,2+1,a,2,2+1,15+2,3,j+2,6+3,2+8,2,2,2+1,w+a,4+e,3+3,2,3+2,3+5,23+w,2f+4,3,2+9,2,b,2+3,3,1k+9,6+1,3+1,2+2,2+d,30g,p+y,1,1+1g,f+x,2,sd2+1d,jf3+4,f+3,2+4,2+2,b+3,42,2,4+2,2+1,2,3,t+1,9f+w,2,el+2,2+g,d+2,2l,2+1,5,3+1,2+1,2,3,6,16wm+1v",
      R: "17m+3,2,2,6+3,m,15+2,2+2,h+h,13,3+8,2,2,3+1,2,p+1,x,5+4,5,a,2,2,3,u,c+2,g+1,5,2+1,4+1,5j,6+1,2,b,2+2,f,2+1,1s+2,2,3+1,7,1ez0,2,2+1,4+4,b,4,3,b,42,2+2,4,3,2+1,2,o+3,ae,ep,x,2o+2,3+1,3,5+1,6",
      L: "x9u,jff,a,fd,jv",
      T: "4t,gj+33,7o+4,1+1,7c+18,2,2+1,2+1,2,21+a,2,1b+k,h,2u+6,3+5,3+1,2+3,y,2,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,3,7,6+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+d,1,1+1,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,ek,3+1,r+4,1e+4,6+5,2p+c,1+3,1,1+2,1+b,2db+2,3y,2p+v,ff+3,30+1,n9x,1+2,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,5s,6y+2,ea,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+9,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2,2b+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,470+8,at4+4,1o+6,t5,1s+3,2a,f5l+1,2+3,43o+2,a+7,1+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,1,gzau,v+2n,3l+6n",
    },
    i = 1,
    o = 2,
    s = 4,
    a = 8,
    l = 16,
    c = 32;
  let u;
  function h(T) {
    if (!u) {
      const M = { R: o, L: i, D: s, C: l, U: c, T: a };
      u = new Map();
      for (let C in r) {
        let L = 0;
        r[C].split(",").forEach((A) => {
          let [P, k] = A.split("+");
          (P = parseInt(P, 36)),
            (k = k ? parseInt(k, 36) : 0),
            u.set((L += P), M[C]);
          for (let B = k; B--; ) u.set(++L, M[C]);
        });
      }
    }
    return u.get(T) || c;
  }
  const p = 1,
    m = 2,
    v = 3,
    S = 4,
    x = [null, "isol", "init", "fina", "medi"];
  function g(T) {
    const M = new Uint8Array(T.length);
    let C = c,
      L = p,
      A = -1;
    for (let P = 0; P < T.length; P++) {
      const k = T.codePointAt(P);
      let B = h(k) | 0,
        $ = p;
      B & a ||
        (C & (i | s | l)
          ? B & (o | s | l)
            ? (($ = v), (L === p || L === v) && M[A]++)
            : B & (i | c) && (L === m || L === S) && M[A]--
          : C & (o | c) && (L === m || L === S) && M[A]--,
        (L = M[P] = $),
        (C = B),
        (A = P),
        k > 65535 && P++);
    }
    return M;
  }
  function y(T, M) {
    const C = [];
    for (let A = 0; A < M.length; A++) {
      const P = M.codePointAt(A);
      P > 65535 && A++, C.push(t.U.codeToGlyph(T, P));
    }
    const L = T.GSUB;
    if (L) {
      const { lookupList: A, featureList: P } = L;
      let k;
      const B = /^(rlig|liga|mset|isol|init|fina|medi|half|pres|blws)$/,
        $ = [];
      P.forEach((D) => {
        if (B.test(D.tag))
          for (let X = 0; X < D.tab.length; X++) {
            if ($[D.tab[X]]) continue;
            $[D.tab[X]] = !0;
            const j = A[D.tab[X]],
              Y = /^(isol|init|fina|medi)$/.test(D.tag);
            Y && !k && (k = g(M));
            for (let N = 0; N < C.length; N++)
              (!k || !Y || x[k[N]] === D.tag) && t.U._applySubs(C, N, j, A);
          }
      });
    }
    return C;
  }
  function _(...T) {
    for (let M = 0; M < T.length; M++) if (typeof T[M] == "number") return T[M];
  }
  function b(T) {
    const M = Object.create(null),
      C = T["OS/2"],
      L = T.hhea,
      A = T.head.unitsPerEm,
      P = _(C && C.sTypoAscender, L && L.ascender, A),
      k = {
        unitsPerEm: A,
        ascender: P,
        descender: _(C && C.sTypoDescender, L && L.descender, 0),
        capHeight: _(C && C.sCapHeight, P),
        xHeight: _(C && C.sxHeight, P),
        lineGap: _(C && C.sTypoLineGap, L && L.lineGap),
        forEachGlyph(B, $, D, X) {
          let j = 0;
          const Y = (1 / k.unitsPerEm) * $,
            N = y(T, B);
          let V = 0,
            G = -1;
          return (
            N.forEach((U, Z) => {
              if (U !== -1) {
                let Q = M[U];
                if (!Q) {
                  const { cmds: te, crds: re } = t.U.glyphToPath(T, U);
                  let le = "",
                    oe = 0;
                  for (let q = 0, xe = te.length; q < xe; q++) {
                    const he = n[te[q]];
                    le += te[q];
                    for (let me = 1; me <= he; me++)
                      le += (me > 1 ? "," : "") + re[oe++];
                  }
                  let ve, Ae, Re, ye;
                  if (re.length) {
                    (ve = Ae = 1 / 0), (Re = ye = -1 / 0);
                    for (let q = 0, xe = re.length; q < xe; q += 2) {
                      let he = re[q],
                        me = re[q + 1];
                      he < ve && (ve = he),
                        me < Ae && (Ae = me),
                        he > Re && (Re = he),
                        me > ye && (ye = me);
                    }
                  } else ve = Re = Ae = ye = 0;
                  Q = M[U] = {
                    index: U,
                    advanceWidth: T.hmtx.aWidth[U],
                    xMin: ve,
                    yMin: Ae,
                    xMax: Re,
                    yMax: ye,
                    path: le,
                    pathCommandCount: te.length,
                  };
                }
                G !== -1 && (j += t.U.getPairAdjustment(T, G, U) * Y),
                  X.call(null, Q, j, V),
                  Q.advanceWidth && (j += Q.advanceWidth * Y),
                  D && (j += D * $),
                  (G = U);
              }
              V += B.codePointAt(V) > 65535 ? 2 : 1;
            }),
            j
          );
        },
      };
    return k;
  }
  return function (M) {
    const C = new Uint8Array(M, 0, 4),
      L = t._bin.readASCII(C, 0, 4);
    if (L === "wOFF") M = e(M);
    else if (L === "wOF2") throw new Error("woff2 fonts not supported");
    return b(t.parse(M)[0]);
  };
}
const C9 = Ap({
    name: "Typr Font Parser",
    dependencies: [b9, E9, M9],
    init(t, e, n) {
      const r = t(),
        i = e();
      return n(r, i);
    },
  }),
  rf = {
    defaultFontURL:
      "https://fonts.gstatic.com/s/roboto/v18/KFOmCnqEu92Fr1Mu4mxM.woff",
    sdfGlyphSize: 64,
    sdfMargin: 1 / 16,
    sdfExponent: 9,
    textureWidth: 2048,
  },
  T9 = new nt();
function Pu() {
  return (self.performance || Date).now();
}
const WR = Object.create(null);
function vN(t, e) {
  t = P9({}, t);
  const n = Pu();
  if (
    ((t.font = L9(t.font || rf.defaultFontURL)),
    (t.text = "" + t.text),
    (t.sdfGlyphSize = t.sdfGlyphSize || rf.sdfGlyphSize),
    t.colorRanges != null)
  ) {
    let h = {};
    for (let p in t.colorRanges)
      if (t.colorRanges.hasOwnProperty(p)) {
        let m = t.colorRanges[p];
        typeof m != "number" && (m = T9.set(m).getHex()), (h[p] = m);
      }
    t.colorRanges = h;
  }
  Object.freeze(t);
  const { textureWidth: r, sdfExponent: i } = rf,
    { sdfGlyphSize: o } = t,
    s = (r / o) * 4;
  let a = WR[o];
  if (!a) {
    const h = document.createElement("canvas");
    (h.width = r),
      (h.height = (o * 256) / s),
      (a = WR[o] =
        {
          glyphCount: 0,
          sdfGlyphSize: o,
          sdfCanvas: h,
          sdfTexture: new Pn(h, void 0, void 0, void 0, Cn, Cn),
          contextLost: !1,
          glyphsByFont: new Map(),
        }),
      (a.sdfTexture.generateMipmaps = !1),
      A9(a);
  }
  const { sdfTexture: l, sdfCanvas: c } = a;
  let u = a.glyphsByFont.get(t.font);
  u || a.glyphsByFont.set(t.font, (u = new Map())),
    O9(t).then((h) => {
      const {
          glyphIds: p,
          glyphPositions: m,
          fontSize: v,
          unitsPerEm: S,
          timings: x,
        } = h,
        g = [],
        y = new Float32Array(p.length * 4),
        _ = v / S;
      let b = 0,
        T = 0;
      const M = Pu();
      p.forEach((k, B) => {
        let $ = u.get(k);
        if (!$) {
          const { path: Y, pathBounds: N } = h.glyphData[k],
            V =
              (Math.max(N[2] - N[0], N[3] - N[1]) / o) *
              (rf.sdfMargin * o + 0.5),
            G = a.glyphCount++,
            U = [N[0] - V, N[1] - V, N[2] + V, N[3] + V];
          u.set(k, ($ = { path: Y, atlasIndex: G, sdfViewBox: U })), g.push($);
        }
        const { sdfViewBox: D } = $,
          X = m[T++],
          j = m[T++];
        (y[b++] = X + D[0] * _),
          (y[b++] = j + D[1] * _),
          (y[b++] = X + D[2] * _),
          (y[b++] = j + D[3] * _),
          (p[B] = $.atlasIndex);
      }),
        (x.quads = (x.quads || 0) + (Pu() - M));
      const C = Pu();
      x.sdf = {};
      const L = c.height,
        A = Math.ceil(a.glyphCount / s),
        P = Math.pow(2, Math.ceil(Math.log2(A * o)));
      P > L &&
        (console.info(`Increasing SDF texture size ${L}->${P}`),
        w9(c, r, P),
        l.dispose()),
        Promise.all(
          g.map((k) =>
            yN(k, a, t.gpuAccelerateSDF).then(({ timing: B }) => {
              x.sdf[k.atlasIndex] = B;
            })
          )
        ).then(() => {
          g.length && !a.contextLost && (xN(a), (l.needsUpdate = !0)),
            (x.sdfTotal = Pu() - C),
            (x.total = Pu() - n),
            e(
              Object.freeze({
                parameters: t,
                sdfTexture: l,
                sdfGlyphSize: o,
                sdfExponent: i,
                glyphBounds: y,
                glyphAtlasIndices: p,
                glyphColors: h.glyphColors,
                caretPositions: h.caretPositions,
                caretHeight: h.caretHeight,
                chunkedBounds: h.chunkedBounds,
                ascender: h.ascender,
                descender: h.descender,
                lineHeight: h.lineHeight,
                capHeight: h.capHeight,
                xHeight: h.xHeight,
                topBaseline: h.topBaseline,
                blockBounds: h.blockBounds,
                visibleBounds: h.visibleBounds,
                timings: h.timings,
              })
            );
        });
    }),
    Promise.resolve().then(() => {
      a.contextLost || S9(c);
    });
}
function yN(
  { path: t, atlasIndex: e, sdfViewBox: n },
  { sdfGlyphSize: r, sdfCanvas: i, contextLost: o },
  s
) {
  if (o) return Promise.resolve({ timing: -1 });
  const { textureWidth: a, sdfExponent: l } = rf,
    c = Math.max(n[2] - n[0], n[3] - n[1]),
    u = Math.floor(e / 4),
    h = (u % (a / r)) * r,
    p = Math.floor(u / (a / r)) * r,
    m = e % 4;
  return m9(r, r, t, n, c, l, i, h, p, m, s);
}
function A9(t) {
  const e = t.sdfCanvas;
  e.addEventListener("webglcontextlost", (n) => {
    console.log("Context Lost", n), n.preventDefault(), (t.contextLost = !0);
  }),
    e.addEventListener("webglcontextrestored", (n) => {
      console.log("Context Restored", n), (t.contextLost = !1);
      const r = [];
      t.glyphsByFont.forEach((i) => {
        i.forEach((o) => {
          r.push(yN(o, t, !0));
        });
      }),
        Promise.all(r).then(() => {
          xN(t), (t.sdfTexture.needsUpdate = !0);
        });
    });
}
function R9({ font: t, characters: e, sdfGlyphSize: n }, r) {
  let i = Array.isArray(e)
    ? e.join(`
`)
    : "" + e;
  vN({ font: t, sdfGlyphSize: n, text: i }, r);
}
function P9(t, e) {
  for (let n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
  return t;
}
let jg;
function L9(t) {
  return (
    jg || (jg = typeof document > "u" ? {} : document.createElement("a")),
    (jg.href = t),
    jg.href
  );
}
function xN(t) {
  if (typeof createImageBitmap != "function") {
    console.info("Safari<15: applying SDF canvas workaround");
    const { sdfCanvas: e, sdfTexture: n } = t,
      { width: r, height: i } = e,
      o = t.sdfCanvas.getContext("webgl");
    let s = n.image.data;
    (!s || s.length !== r * i * 4) &&
      ((s = new Uint8Array(r * i * 4)),
      (n.image = { width: r, height: i, data: s }),
      (n.flipY = !1),
      (n.isDataTexture = !0)),
      o.readPixels(0, 0, r, i, o.RGBA, o.UNSIGNED_BYTE, s);
  }
}
const I9 = Ap({
    name: "Typesetter",
    dependencies: [rf, C9, p9, s9],
    init(t, e, n, r) {
      const { defaultFontURL: i } = t;
      return n(e, r(), { defaultFontURL: i });
    },
  }),
  O9 = Ap({
    name: "Typesetter",
    dependencies: [I9],
    init(t) {
      return function (e) {
        return new Promise((n) => {
          t.typeset(e, n);
        });
      };
    },
    getTransferables(t) {
      const e = [t.glyphPositions.buffer, t.glyphIds.buffer];
      return (
        t.caretPositions && e.push(t.caretPositions.buffer),
        t.glyphColors && e.push(t.glyphColors.buffer),
        e
      );
    },
  }),
  $R = {};
function F9(t) {
  let e = $R[t];
  if (!e) {
    const n = new ml(1, 1, t, t),
      r = n.clone(),
      i = n.attributes,
      o = r.attributes,
      s = new It(),
      a = i.uv.count;
    for (let l = 0; l < a; l++)
      (o.position.array[l * 3] *= -1), (o.normal.array[l * 3 + 2] *= -1);
    ["position", "normal", "uv"].forEach((l) => {
      s.setAttribute(l, new ut([...i[l].array, ...o[l].array], i[l].itemSize));
    }),
      s.setIndex([...n.index.array, ...r.index.array.map((l) => l + a)]),
      s.translate(0.5, 0.5, 0),
      (e = $R[t] = s);
  }
  return e;
}
const N9 = "aTroikaGlyphBounds",
  XR = "aTroikaGlyphIndex",
  D9 = "aTroikaGlyphColor";
class U9 extends Cy {
  constructor() {
    super(),
      (this.detail = 1),
      (this.curveRadius = 0),
      (this.groups = [
        { start: 0, count: 1 / 0, materialIndex: 0 },
        { start: 0, count: 1 / 0, materialIndex: 1 },
      ]),
      (this.boundingSphere = new sr()),
      (this.boundingBox = new or());
  }
  computeBoundingSphere() {}
  computeBoundingBox() {}
  setSide(e) {
    const n = this.getIndex().count;
    this.setDrawRange(e === Vr ? n / 2 : 0, e === mo ? n : n / 2);
  }
  set detail(e) {
    if (e !== this._detail) {
      (this._detail = e), (typeof e != "number" || e < 1) && (e = 1);
      let n = F9(e);
      ["position", "normal", "uv"].forEach((r) => {
        this.attributes[r] = n.attributes[r].clone();
      }),
        this.setIndex(n.getIndex().clone());
    }
  }
  get detail() {
    return this._detail;
  }
  set curveRadius(e) {
    e !== this._curveRadius && ((this._curveRadius = e), this._updateBounds());
  }
  get curveRadius() {
    return this._curveRadius;
  }
  updateGlyphs(e, n, r, i, o) {
    m_(this, N9, e, 4),
      m_(this, XR, n, 1),
      m_(this, D9, o, 3),
      (this._blockBounds = r),
      (this._chunkedBounds = i),
      (this.instanceCount = n.length),
      this._updateBounds();
  }
  _updateBounds() {
    const e = this._blockBounds;
    if (e) {
      const { curveRadius: n, boundingBox: r } = this;
      if (n) {
        const { PI: i, floor: o, min: s, max: a, sin: l, cos: c } = Math,
          u = i / 2,
          h = i * 2,
          p = Math.abs(n),
          m = e[0] / p,
          v = e[2] / p,
          S = o((m + u) / h) !== o((v + u) / h) ? -p : s(l(m) * p, l(v) * p),
          x = o((m - u) / h) !== o((v - u) / h) ? p : a(l(m) * p, l(v) * p),
          g =
            o((m + i) / h) !== o((v + i) / h)
              ? p * 2
              : a(p - c(m) * p, p - c(v) * p);
        r.min.set(S, e[1], n < 0 ? -g : 0), r.max.set(x, e[3], n < 0 ? 0 : g);
      } else r.min.set(e[0], e[1], 0), r.max.set(e[2], e[3], 0);
      r.getBoundingSphere(this.boundingSphere);
    }
  }
  applyClipRect(e) {
    let n = this.getAttribute(XR).count,
      r = this._chunkedBounds;
    if (r)
      for (let i = r.length; i--; ) {
        n = r[i].end;
        let o = r[i].rect;
        if (o[1] < e.w && o[3] > e.y && o[0] < e.z && o[2] > e.x) break;
      }
    this.instanceCount = n;
  }
}
function m_(t, e, n, r) {
  const i = t.getAttribute(e);
  n
    ? i && i.array.length === n.length
      ? (i.array.set(n), (i.needsUpdate = !0))
      : (t.setAttribute(e, new Ac(n, r)),
        delete t._maxInstanceCount,
        t.dispose())
    : i && t.deleteAttribute(e);
}
const z9 = `
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform vec4 uTroikaTotalBounds;
uniform vec4 uTroikaClipRect;
uniform mat3 uTroikaOrient;
uniform bool uTroikaUseGlyphColors;
uniform float uTroikaDistanceOffset;
uniform float uTroikaBlurRadius;
uniform vec2 uTroikaPositionOffset;
uniform float uTroikaCurveRadius;
attribute vec4 aTroikaGlyphBounds;
attribute float aTroikaGlyphIndex;
attribute vec3 aTroikaGlyphColor;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec3 vTroikaGlyphColor;
varying vec2 vTroikaGlyphDimensions;
`,
  k9 = `
vec4 bounds = aTroikaGlyphBounds;
bounds.xz += uTroikaPositionOffset.x;
bounds.yw -= uTroikaPositionOffset.y;

vec4 outlineBounds = vec4(
  bounds.xy - uTroikaDistanceOffset - uTroikaBlurRadius,
  bounds.zw + uTroikaDistanceOffset + uTroikaBlurRadius
);
vec4 clippedBounds = vec4(
  clamp(outlineBounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),
  clamp(outlineBounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)
);

vec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);

position.xy = mix(bounds.xy, bounds.zw, clippedXY);

uv = (position.xy - uTroikaTotalBounds.xy) / (uTroikaTotalBounds.zw - uTroikaTotalBounds.xy);

float rad = uTroikaCurveRadius;
if (rad != 0.0) {
  float angle = position.x / rad;
  position.xz = vec2(sin(angle) * rad, rad - cos(angle) * rad);
  normal.xz = vec2(sin(angle), cos(angle));
}
  
position = uTroikaOrient * position;
normal = uTroikaOrient * normal;

vTroikaGlyphUV = clippedXY.xy;
vTroikaGlyphDimensions = vec2(bounds[2] - bounds[0], bounds[3] - bounds[1]);


float txCols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;
vec2 txUvPerSquare = uTroikaSDFGlyphSize / uTroikaSDFTextureSize;
vec2 txStartUV = txUvPerSquare * vec2(
  mod(floor(aTroikaGlyphIndex / 4.0), txCols),
  floor(floor(aTroikaGlyphIndex / 4.0) / txCols)
);
vTroikaTextureUVBounds = vec4(txStartUV, vec2(txStartUV) + txUvPerSquare);
vTroikaTextureChannel = mod(aTroikaGlyphIndex, 4.0);
`,
  B9 = `
uniform sampler2D uTroikaSDFTexture;
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform float uTroikaSDFExponent;
uniform float uTroikaDistanceOffset;
uniform float uTroikaFillOpacity;
uniform float uTroikaOutlineOpacity;
uniform float uTroikaBlurRadius;
uniform vec3 uTroikaStrokeColor;
uniform float uTroikaStrokeWidth;
uniform float uTroikaStrokeOpacity;
uniform bool uTroikaSDFDebug;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec2 vTroikaGlyphDimensions;

float troikaSdfValueToSignedDistance(float alpha) {
  // Inverse of exponential encoding in webgl-sdf-generator
  
  float maxDimension = max(vTroikaGlyphDimensions.x, vTroikaGlyphDimensions.y);
  float absDist = (1.0 - pow(2.0 * (alpha > 0.5 ? 1.0 - alpha : alpha), 1.0 / uTroikaSDFExponent)) * maxDimension;
  float signedDist = absDist * (alpha > 0.5 ? -1.0 : 1.0);
  return signedDist;
}

float troikaGlyphUvToSdfValue(vec2 glyphUV) {
  vec2 textureUV = mix(vTroikaTextureUVBounds.xy, vTroikaTextureUVBounds.zw, glyphUV);
  vec4 rgba = texture2D(uTroikaSDFTexture, textureUV);
  float ch = floor(vTroikaTextureChannel + 0.5); //NOTE: can't use round() in WebGL1
  return ch == 0.0 ? rgba.r : ch == 1.0 ? rgba.g : ch == 2.0 ? rgba.b : rgba.a;
}

float troikaGlyphUvToDistance(vec2 uv) {
  return troikaSdfValueToSignedDistance(troikaGlyphUvToSdfValue(uv));
}

float troikaGetAADist() {
  
  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300
  return length(fwidth(vTroikaGlyphUV * vTroikaGlyphDimensions)) * 0.5;
  #else
  return vTroikaGlyphDimensions.x / 64.0;
  #endif
}

float troikaGetFragDistValue() {
  vec2 clampedGlyphUV = clamp(vTroikaGlyphUV, 0.5 / uTroikaSDFGlyphSize, 1.0 - 0.5 / uTroikaSDFGlyphSize);
  float distance = troikaGlyphUvToDistance(clampedGlyphUV);
 
  // Extrapolate distance when outside bounds:
  distance += clampedGlyphUV == vTroikaGlyphUV ? 0.0 : 
    length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);

  

  return distance;
}

float troikaGetEdgeAlpha(float distance, float distanceOffset, float aaDist) {
  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)
  float alpha = step(-distanceOffset, -distance);
  #else

  float alpha = smoothstep(
    distanceOffset + aaDist,
    distanceOffset - aaDist,
    distance
  );
  #endif

  return alpha;
}
`,
  H9 = `
float aaDist = troikaGetAADist();
float fragDistance = troikaGetFragDistValue();
float edgeAlpha = uTroikaSDFDebug ?
  troikaGlyphUvToSdfValue(vTroikaGlyphUV) :
  troikaGetEdgeAlpha(fragDistance, uTroikaDistanceOffset, max(aaDist, uTroikaBlurRadius));

#if !defined(IS_DEPTH_MATERIAL) && !defined(IS_DISTANCE_MATERIAL)
vec4 fillRGBA = gl_FragColor;
fillRGBA.a *= uTroikaFillOpacity;
vec4 strokeRGBA = uTroikaStrokeWidth == 0.0 ? fillRGBA : vec4(uTroikaStrokeColor, uTroikaStrokeOpacity);
if (fillRGBA.a == 0.0) fillRGBA.rgb = strokeRGBA.rgb;
gl_FragColor = mix(fillRGBA, strokeRGBA, smoothstep(
  -uTroikaStrokeWidth - aaDist,
  -uTroikaStrokeWidth + aaDist,
  fragDistance
));
gl_FragColor.a *= edgeAlpha;
#endif

if (edgeAlpha == 0.0) {
  discard;
}
`;
function V9(t) {
  const e = Dw(t, {
    chained: !0,
    extensions: { derivatives: !0 },
    uniforms: {
      uTroikaSDFTexture: { value: null },
      uTroikaSDFTextureSize: { value: new Fe() },
      uTroikaSDFGlyphSize: { value: 0 },
      uTroikaSDFExponent: { value: 0 },
      uTroikaTotalBounds: { value: new Ht(0, 0, 0, 0) },
      uTroikaClipRect: { value: new Ht(0, 0, 0, 0) },
      uTroikaDistanceOffset: { value: 0 },
      uTroikaOutlineOpacity: { value: 0 },
      uTroikaFillOpacity: { value: 1 },
      uTroikaPositionOffset: { value: new Fe() },
      uTroikaCurveRadius: { value: 0 },
      uTroikaBlurRadius: { value: 0 },
      uTroikaStrokeWidth: { value: 0 },
      uTroikaStrokeColor: { value: new nt() },
      uTroikaStrokeOpacity: { value: 1 },
      uTroikaOrient: { value: new Ot() },
      uTroikaUseGlyphColors: { value: !0 },
      uTroikaSDFDebug: { value: !1 },
    },
    vertexDefs: z9,
    vertexTransform: k9,
    fragmentDefs: B9,
    fragmentColorTransform: H9,
    customRewriter({ vertexShader: n, fragmentShader: r }) {
      let i = /\buniform\s+vec3\s+diffuse\b/;
      return (
        i.test(r) &&
          ((r = r
            .replace(i, "varying vec3 vTroikaGlyphColor")
            .replace(/\bdiffuse\b/g, "vTroikaGlyphColor")),
          i.test(n) ||
            (n = n.replace(
              mN,
              `uniform vec3 diffuse;
$&
vTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;
`
            ))),
        { vertexShader: n, fragmentShader: r }
      );
    },
  });
  return (
    (e.transparent = !0),
    Object.defineProperties(e, {
      isTroikaTextMaterial: { value: !0 },
      shadowSide: {
        get() {
          return this.side;
        },
        set() {},
      },
    }),
    e
  );
}
const xM = new pa({ color: 16777215, side: mo, transparent: !0 }),
  qR = 8421504,
  YR = new bt(),
  Wg = new W(),
  g_ = new W(),
  zd = [],
  G9 = new W(),
  v_ = "+x+y";
function KR(t) {
  return Array.isArray(t) ? t[0] : t;
}
let _N = () => {
    const t = new An(new ml(1, 1), xM);
    return (_N = () => t), t;
  },
  SN = () => {
    const t = new An(new ml(1, 1, 32, 1), xM);
    return (SN = () => t), t;
  };
const j9 = { type: "syncstart" },
  W9 = { type: "synccomplete" },
  wN = [
    "font",
    "fontSize",
    "letterSpacing",
    "lineHeight",
    "maxWidth",
    "overflowWrap",
    "text",
    "direction",
    "textAlign",
    "textIndent",
    "whiteSpace",
    "anchorX",
    "anchorY",
    "colorRanges",
    "sdfGlyphSize",
  ],
  $9 = wN.concat(
    "material",
    "color",
    "depthOffset",
    "clipRect",
    "curveRadius",
    "orientation",
    "glyphGeometryDetail"
  );
let bN = class extends An {
  constructor() {
    const e = new U9();
    super(e, null),
      (this.text = ""),
      (this.anchorX = 0),
      (this.anchorY = 0),
      (this.curveRadius = 0),
      (this.direction = "auto"),
      (this.font = null),
      (this.fontSize = 0.1),
      (this.letterSpacing = 0),
      (this.lineHeight = "normal"),
      (this.maxWidth = 1 / 0),
      (this.overflowWrap = "normal"),
      (this.textAlign = "left"),
      (this.textIndent = 0),
      (this.whiteSpace = "normal"),
      (this.material = null),
      (this.color = null),
      (this.colorRanges = null),
      (this.outlineWidth = 0),
      (this.outlineColor = 0),
      (this.outlineOpacity = 1),
      (this.outlineBlur = 0),
      (this.outlineOffsetX = 0),
      (this.outlineOffsetY = 0),
      (this.strokeWidth = 0),
      (this.strokeColor = qR),
      (this.strokeOpacity = 1),
      (this.fillOpacity = 1),
      (this.depthOffset = 0),
      (this.clipRect = null),
      (this.orientation = v_),
      (this.glyphGeometryDetail = 1),
      (this.sdfGlyphSize = null),
      (this.gpuAccelerateSDF = !0),
      (this.debugSDF = !1);
  }
  sync(e) {
    this._needsSync &&
      ((this._needsSync = !1),
      this._isSyncing
        ? (this._queuedSyncs || (this._queuedSyncs = [])).push(e)
        : ((this._isSyncing = !0),
          this.dispatchEvent(j9),
          vN(
            {
              text: this.text,
              font: this.font,
              fontSize: this.fontSize || 0.1,
              letterSpacing: this.letterSpacing || 0,
              lineHeight: this.lineHeight || "normal",
              maxWidth: this.maxWidth,
              direction: this.direction || "auto",
              textAlign: this.textAlign,
              textIndent: this.textIndent,
              whiteSpace: this.whiteSpace,
              overflowWrap: this.overflowWrap,
              anchorX: this.anchorX,
              anchorY: this.anchorY,
              colorRanges: this.colorRanges,
              includeCaretPositions: !0,
              sdfGlyphSize: this.sdfGlyphSize,
              gpuAccelerateSDF: this.gpuAccelerateSDF,
            },
            (n) => {
              (this._isSyncing = !1),
                (this._textRenderInfo = n),
                this.geometry.updateGlyphs(
                  n.glyphBounds,
                  n.glyphAtlasIndices,
                  n.blockBounds,
                  n.chunkedBounds,
                  n.glyphColors
                );
              const r = this._queuedSyncs;
              r &&
                ((this._queuedSyncs = null),
                (this._needsSync = !0),
                this.sync(() => {
                  r.forEach((i) => i && i());
                })),
                this.dispatchEvent(W9),
                e && e();
            }
          )));
  }
  onBeforeRender(e, n, r, i, o, s) {
    this.sync(),
      o.isTroikaTextMaterial && this._prepareForRender(o),
      (o._hadOwnSide = o.hasOwnProperty("side")),
      this.geometry.setSide((o._actualSide = o.side)),
      (o.side = Ss);
  }
  onAfterRender(e, n, r, i, o, s) {
    o._hadOwnSide ? (o.side = o._actualSide) : delete o.side;
  }
  dispose() {
    this.geometry.dispose();
  }
  get textRenderInfo() {
    return this._textRenderInfo || null;
  }
  get material() {
    let e = this._derivedMaterial;
    const n =
      this._baseMaterial ||
      this._defaultMaterial ||
      (this._defaultMaterial = xM.clone());
    if (
      ((!e || e.baseMaterial !== n) &&
        ((e = this._derivedMaterial = V9(n)),
        n.addEventListener("dispose", function r() {
          n.removeEventListener("dispose", r), e.dispose();
        })),
      this.outlineWidth ||
        this.outlineBlur ||
        this.outlineOffsetX ||
        this.outlineOffsetY)
    ) {
      let r = e._outlineMtl;
      return (
        r ||
          ((r = e._outlineMtl =
            Object.create(e, { id: { value: e.id + 0.1 } })),
          (r.isTextOutlineMaterial = !0),
          (r.depthWrite = !1),
          (r.map = null),
          e.addEventListener("dispose", function i() {
            e.removeEventListener("dispose", i), r.dispose();
          })),
        [r, e]
      );
    } else return e;
  }
  set material(e) {
    e && e.isTroikaTextMaterial
      ? ((this._derivedMaterial = e), (this._baseMaterial = e.baseMaterial))
      : (this._baseMaterial = e);
  }
  get glyphGeometryDetail() {
    return this.geometry.detail;
  }
  set glyphGeometryDetail(e) {
    this.geometry.detail = e;
  }
  get curveRadius() {
    return this.geometry.curveRadius;
  }
  set curveRadius(e) {
    this.geometry.curveRadius = e;
  }
  get customDepthMaterial() {
    return KR(this.material).getDepthMaterial();
  }
  get customDistanceMaterial() {
    return KR(this.material).getDistanceMaterial();
  }
  _prepareForRender(e) {
    const n = e.isTextOutlineMaterial,
      r = e.uniforms,
      i = this.textRenderInfo;
    if (i) {
      const { sdfTexture: a, blockBounds: l } = i;
      (r.uTroikaSDFTexture.value = a),
        r.uTroikaSDFTextureSize.value.set(a.image.width, a.image.height),
        (r.uTroikaSDFGlyphSize.value = i.sdfGlyphSize),
        (r.uTroikaSDFExponent.value = i.sdfExponent),
        r.uTroikaTotalBounds.value.fromArray(l),
        (r.uTroikaUseGlyphColors.value = !n && !!i.glyphColors);
      let c = 0,
        u = 0,
        h = 0,
        p,
        m,
        v,
        S = 0,
        x = 0;
      if (n) {
        let {
          outlineWidth: y,
          outlineOffsetX: _,
          outlineOffsetY: b,
          outlineBlur: T,
          outlineOpacity: M,
        } = this;
        (c = this._parsePercent(y) || 0),
          (u = Math.max(0, this._parsePercent(T) || 0)),
          (p = M),
          (S = this._parsePercent(_) || 0),
          (x = this._parsePercent(b) || 0);
      } else
        (h = Math.max(0, this._parsePercent(this.strokeWidth) || 0)),
          h &&
            ((v = this.strokeColor),
            r.uTroikaStrokeColor.value.set(v ?? qR),
            (m = this.strokeOpacity),
            m == null && (m = 1)),
          (p = this.fillOpacity);
      (r.uTroikaDistanceOffset.value = c),
        r.uTroikaPositionOffset.value.set(S, x),
        (r.uTroikaBlurRadius.value = u),
        (r.uTroikaStrokeWidth.value = h),
        (r.uTroikaStrokeOpacity.value = m),
        (r.uTroikaFillOpacity.value = p ?? 1),
        (r.uTroikaCurveRadius.value = this.curveRadius || 0);
      let g = this.clipRect;
      if (g && Array.isArray(g) && g.length === 4)
        r.uTroikaClipRect.value.fromArray(g);
      else {
        const y = (this.fontSize || 0.1) * 100;
        r.uTroikaClipRect.value.set(l[0] - y, l[1] - y, l[2] + y, l[3] + y);
      }
      this.geometry.applyClipRect(r.uTroikaClipRect.value);
    }
    (r.uTroikaSDFDebug.value = !!this.debugSDF),
      (e.polygonOffset = !!this.depthOffset),
      (e.polygonOffsetFactor = e.polygonOffsetUnits = this.depthOffset || 0);
    const o = n ? this.outlineColor || 0 : this.color;
    if (o == null) delete e.color;
    else {
      const a = e.hasOwnProperty("color") ? e.color : (e.color = new nt());
      (o !== a._input || typeof o == "object") && a.set((a._input = o));
    }
    let s = this.orientation || v_;
    if (s !== e._orientation) {
      let a = r.uTroikaOrient.value;
      s = s.replace(/[^-+xyz]/g, "");
      let l = s !== v_ && s.match(/^([-+])([xyz])([-+])([xyz])$/);
      if (l) {
        let [, c, u, h, p] = l;
        (Wg.set(0, 0, 0)[u] = c === "-" ? 1 : -1),
          (g_.set(0, 0, 0)[p] = h === "-" ? -1 : 1),
          YR.lookAt(G9, Wg.cross(g_), g_),
          a.setFromMatrix4(YR);
      } else a.identity();
      e._orientation = s;
    }
  }
  _parsePercent(e) {
    if (typeof e == "string") {
      let n = e.match(/^(-?[\d.]+)%$/),
        r = n ? parseFloat(n[1]) : NaN;
      e = (isNaN(r) ? 0 : r / 100) * this.fontSize;
    }
    return e;
  }
  localPositionToTextCoords(e, n = new Fe()) {
    n.copy(e);
    const r = this.curveRadius;
    return (
      r && (n.x = Math.atan2(e.x, Math.abs(r) - Math.abs(e.z)) * Math.abs(r)), n
    );
  }
  worldPositionToTextCoords(e, n = new Fe()) {
    return Wg.copy(e), this.localPositionToTextCoords(this.worldToLocal(Wg), n);
  }
  raycast(e, n) {
    const { textRenderInfo: r, curveRadius: i } = this;
    if (r) {
      const o = r.blockBounds,
        s = i ? SN() : _N(),
        a = s.geometry,
        { position: l, uv: c } = a.attributes;
      for (let u = 0; u < c.count; u++) {
        let h = o[0] + c.getX(u) * (o[2] - o[0]);
        const p = o[1] + c.getY(u) * (o[3] - o[1]);
        let m = 0;
        i && ((m = i - Math.cos(h / i) * i), (h = Math.sin(h / i) * i)),
          l.setXYZ(u, h, p, m);
      }
      (a.boundingSphere = this.geometry.boundingSphere),
        (a.boundingBox = this.geometry.boundingBox),
        (s.matrixWorld = this.matrixWorld),
        (s.material.side = this.material.side),
        (zd.length = 0),
        s.raycast(e, zd);
      for (let u = 0; u < zd.length; u++) (zd[u].object = this), n.push(zd[u]);
    }
  }
  copy(e) {
    const n = this.geometry;
    return (
      super.copy(e),
      (this.geometry = n),
      $9.forEach((r) => {
        this[r] = e[r];
      }),
      this
    );
  }
  clone() {
    return new this.constructor().copy(this);
  }
};
wN.forEach((t) => {
  const e = "_private_" + t;
  Object.defineProperty(bN.prototype, t, {
    get() {
      return this[e];
    },
    set(n) {
      n !== this[e] && ((this[e] = n), (this._needsSync = !0));
    },
  });
});
const pn = z.forwardRef(
    (
      {
        sdfGlyphSize: t = 64,
        anchorX: e = "center",
        anchorY: n = "middle",
        font: r,
        fontSize: i = 1,
        children: o,
        characters: s,
        onSync: a,
        ...l
      },
      c
    ) => {
      const u = ds(({ invalidate: v }) => v),
        [h] = z.useState(() => new bN()),
        [p, m] = z.useMemo(() => {
          const v = [];
          let S = "";
          return (
            z.Children.forEach(o, (x) => {
              typeof x == "string" || typeof x == "number"
                ? (S += x)
                : v.push(x);
            }),
            [v, S]
          );
        }, [o]);
      return (
        kj(
          () => new Promise((v) => R9({ font: r, characters: s }, v)),
          ["troika-text", r, s]
        ),
        z.useLayoutEffect(
          () =>
            void h.sync(() => {
              u(), a && a(h);
            })
        ),
        z.useEffect(() => () => h.dispose(), [h]),
        z.createElement(
          "primitive",
          mn(
            {
              object: h,
              ref: c,
              font: r,
              text: m,
              anchorX: e,
              anchorY: n,
              fontSize: i,
              sdfGlyphSize: t,
            },
            l
          ),
          p
        )
      );
    }
  ),
  X9 = z.forwardRef(
    (
      {
        makeDefault: t,
        camera: e,
        regress: n,
        domElement: r,
        enableDamping: i = !0,
        keyEvents: o = !1,
        onChange: s,
        onStart: a,
        onEnd: l,
        ...c
      },
      u
    ) => {
      const h = ds((M) => M.invalidate),
        p = ds((M) => M.camera),
        m = ds((M) => M.gl),
        v = ds((M) => M.events),
        S = ds((M) => M.setEvents),
        x = ds((M) => M.set),
        g = ds((M) => M.get),
        y = ds((M) => M.performance),
        _ = e || p,
        b = r || v.connected || m.domElement,
        T = z.useMemo(() => new KW(_), [_]);
      return (
        JF(() => {
          T.enabled && T.update();
        }, -1),
        z.useEffect(
          () => (
            o && T.connect(o === !0 ? b : o),
            T.connect(b),
            () => void T.dispose()
          ),
          [o, b, n, T, h]
        ),
        z.useEffect(() => {
          const M = (A) => {
              h(), n && y.regress(), s && s(A);
            },
            C = (A) => {
              a && a(A);
            },
            L = (A) => {
              l && l(A);
            };
          return (
            T.addEventListener("change", M),
            T.addEventListener("start", C),
            T.addEventListener("end", L),
            () => {
              T.removeEventListener("start", C),
                T.removeEventListener("end", L),
                T.removeEventListener("change", M);
            }
          );
        }, [s, a, l, T, h, S]),
        z.useEffect(() => {
          if (t) {
            const M = g().controls;
            return x({ controls: T }), () => x({ controls: M });
          }
        }, [t, T]),
        z.createElement(
          "primitive",
          mn({ ref: u, object: T, enableDamping: i }, c)
        )
      );
    }
  ),
  us = 1e-5;
function q9(t, e, n) {
  const r = new tl(),
    i = n - us;
  return (
    r.absarc(us, us, us, -Math.PI / 2, -Math.PI, !0),
    r.absarc(us, e - i * 2, us, Math.PI, Math.PI / 2, !0),
    r.absarc(t - i * 2, e - i * 2, us, Math.PI / 2, 0, !0),
    r.absarc(t - i * 2, us, us, 0, -Math.PI / 2, !0),
    r
  );
}
const Y9 = z.forwardRef(function (
    {
      args: [e = 1, n = 1, r = 1] = [],
      radius: i = 0.05,
      steps: o = 1,
      smoothness: s = 4,
      bevelSegments: a = 4,
      creaseAngle: l = 0.4,
      children: c,
      ...u
    },
    h
  ) {
    const p = z.useMemo(() => q9(e, n, i), [e, n, i]),
      m = z.useMemo(
        () => ({
          depth: r - i * 2,
          bevelEnabled: !0,
          bevelSegments: a * 2,
          steps: o,
          bevelSize: i - us,
          bevelThickness: i,
          curveSegments: s,
        }),
        [r, i, s]
      ),
      v = z.useRef(null);
    return (
      z.useLayoutEffect(() => {
        v.current && (v.current.center(), $W(v.current, l));
      }, [p, m]),
      z.createElement(
        "mesh",
        mn({ ref: h }, u),
        z.createElement("extrudeGeometry", { ref: v, args: [p, m] }),
        c
      )
    );
  }),
  Xn = ({ text: t, position: e, scale: n, isEnabel: r = "true" }) => {
    const i = z.useRef();
    return (
      JF(() => {
        i.current.rotation.y += 1;
      }),
      I.jsxs("group", {
        position: e,
        scale: n,
        children: [
          I.jsx(Y9, {
            ref: i,
            args: [1, 1, 1],
            radius: 0.5,
            children: I.jsx("meshLambertMaterial", {
              color: r ? "green" : "grey",
            }),
          }),
          I.jsx(pn, {
            color: r ? "red" : "grey",
            position: [0.1, 0, 0.5],
            scale: 0.6,
            children: t,
          }),
        ],
      })
    );
  };
function Er(t) {
  return `Minified Redux error #${t}; visit https://redux.js.org/Errors?code=${t} for the full message or use the non-minified dev environment for full errors. `;
}
var K9 = (typeof Symbol == "function" && Symbol.observable) || "@@observable",
  ZR = K9,
  y_ = () => Math.random().toString(36).substring(7).split("").join("."),
  Z9 = {
    INIT: `@@redux/INIT${y_()}`,
    REPLACE: `@@redux/REPLACE${y_()}`,
    PROBE_UNKNOWN_ACTION: () => `@@redux/PROBE_UNKNOWN_ACTION${y_()}`,
  },
  x0 = Z9;
function _M(t) {
  if (typeof t != "object" || t === null) return !1;
  let e = t;
  for (; Object.getPrototypeOf(e) !== null; ) e = Object.getPrototypeOf(e);
  return Object.getPrototypeOf(t) === e || Object.getPrototypeOf(t) === null;
}
function EN(t, e, n) {
  if (typeof t != "function") throw new Error(Er(2));
  if (
    (typeof e == "function" && typeof n == "function") ||
    (typeof n == "function" && typeof arguments[3] == "function")
  )
    throw new Error(Er(0));
  if (
    (typeof e == "function" && typeof n > "u" && ((n = e), (e = void 0)),
    typeof n < "u")
  ) {
    if (typeof n != "function") throw new Error(Er(1));
    return n(EN)(t, e);
  }
  let r = t,
    i = e,
    o = new Map(),
    s = o,
    a = 0,
    l = !1;
  function c() {
    s === o &&
      ((s = new Map()),
      o.forEach((x, g) => {
        s.set(g, x);
      }));
  }
  function u() {
    if (l) throw new Error(Er(3));
    return i;
  }
  function h(x) {
    if (typeof x != "function") throw new Error(Er(4));
    if (l) throw new Error(Er(5));
    let g = !0;
    c();
    const y = a++;
    return (
      s.set(y, x),
      function () {
        if (g) {
          if (l) throw new Error(Er(6));
          (g = !1), c(), s.delete(y), (o = null);
        }
      }
    );
  }
  function p(x) {
    if (!_M(x)) throw new Error(Er(7));
    if (typeof x.type > "u") throw new Error(Er(8));
    if (typeof x.type != "string") throw new Error(Er(17));
    if (l) throw new Error(Er(9));
    try {
      (l = !0), (i = r(i, x));
    } finally {
      l = !1;
    }
    return (
      (o = s).forEach((y) => {
        y();
      }),
      x
    );
  }
  function m(x) {
    if (typeof x != "function") throw new Error(Er(10));
    (r = x), p({ type: x0.REPLACE });
  }
  function v() {
    const x = h;
    return {
      subscribe(g) {
        if (typeof g != "object" || g === null) throw new Error(Er(11));
        function y() {
          const b = g;
          b.next && b.next(u());
        }
        return y(), { unsubscribe: x(y) };
      },
      [ZR]() {
        return this;
      },
    };
  }
  return (
    p({ type: x0.INIT }),
    { dispatch: p, subscribe: h, getState: u, replaceReducer: m, [ZR]: v }
  );
}
function Q9(t) {
  Object.keys(t).forEach((e) => {
    const n = t[e];
    if (typeof n(void 0, { type: x0.INIT }) > "u") throw new Error(Er(12));
    if (typeof n(void 0, { type: x0.PROBE_UNKNOWN_ACTION() }) > "u")
      throw new Error(Er(13));
  });
}
function J9(t) {
  const e = Object.keys(t),
    n = {};
  for (let o = 0; o < e.length; o++) {
    const s = e[o];
    typeof t[s] == "function" && (n[s] = t[s]);
  }
  const r = Object.keys(n);
  let i;
  try {
    Q9(n);
  } catch (o) {
    i = o;
  }
  return function (s = {}, a) {
    if (i) throw i;
    let l = !1;
    const c = {};
    for (let u = 0; u < r.length; u++) {
      const h = r[u],
        p = n[h],
        m = s[h],
        v = p(m, a);
      if (typeof v > "u") throw (a && a.type, new Error(Er(14)));
      (c[h] = v), (l = l || v !== m);
    }
    return (l = l || r.length !== Object.keys(s).length), l ? c : s;
  };
}
function _0(...t) {
  return t.length === 0
    ? (e) => e
    : t.length === 1
    ? t[0]
    : t.reduce(
        (e, n) =>
          (...r) =>
            e(n(...r))
      );
}
function e7(...t) {
  return (e) => (n, r) => {
    const i = e(n, r);
    let o = () => {
      throw new Error(Er(15));
    };
    const s = { getState: i.getState, dispatch: (l, ...c) => o(l, ...c) },
      a = t.map((l) => l(s));
    return (o = _0(...a)(i.dispatch)), { ...i, dispatch: o };
  };
}
function t7(t) {
  return _M(t) && "type" in t && typeof t.type == "string";
}
var MN = Symbol.for("immer-nothing"),
  QR = Symbol.for("immer-draftable"),
  Ki = Symbol.for("immer-state");
function Ho(t, ...e) {
  throw new Error(
    `[Immer] minified error nr: ${t}. Full error at: https://bit.ly/3cXEKWf`
  );
}
var Pf = Object.getPrototypeOf;
function ll(t) {
  return !!t && !!t[Ki];
}
function ua(t) {
  var e;
  return t
    ? CN(t) ||
        Array.isArray(t) ||
        !!t[QR] ||
        !!((e = t.constructor) != null && e[QR]) ||
        Ry(t) ||
        Py(t)
    : !1;
}
var n7 = Object.prototype.constructor.toString();
function CN(t) {
  if (!t || typeof t != "object") return !1;
  const e = Pf(t);
  if (e === null) return !0;
  const n = Object.hasOwnProperty.call(e, "constructor") && e.constructor;
  return n === Object
    ? !0
    : typeof n == "function" && Function.toString.call(n) === n7;
}
function ep(t, e) {
  Ay(t) === 0
    ? Object.entries(t).forEach(([n, r]) => {
        e(n, r, t);
      })
    : t.forEach((n, r) => e(r, n, t));
}
function Ay(t) {
  const e = t[Ki];
  return e ? e.type_ : Array.isArray(t) ? 1 : Ry(t) ? 2 : Py(t) ? 3 : 0;
}
function zw(t, e) {
  return Ay(t) === 2 ? t.has(e) : Object.prototype.hasOwnProperty.call(t, e);
}
function TN(t, e, n) {
  const r = Ay(t);
  r === 2 ? t.set(e, n) : r === 3 ? t.add(n) : (t[e] = n);
}
function r7(t, e) {
  return t === e ? t !== 0 || 1 / t === 1 / e : t !== t && e !== e;
}
function Ry(t) {
  return t instanceof Map;
}
function Py(t) {
  return t instanceof Set;
}
function Zl(t) {
  return t.copy_ || t.base_;
}
function kw(t, e) {
  if (Ry(t)) return new Map(t);
  if (Py(t)) return new Set(t);
  if (Array.isArray(t)) return Array.prototype.slice.call(t);
  if (!e && CN(t))
    return Pf(t) ? { ...t } : Object.assign(Object.create(null), t);
  const n = Object.getOwnPropertyDescriptors(t);
  delete n[Ki];
  let r = Reflect.ownKeys(n);
  for (let i = 0; i < r.length; i++) {
    const o = r[i],
      s = n[o];
    s.writable === !1 && ((s.writable = !0), (s.configurable = !0)),
      (s.get || s.set) &&
        (n[o] = {
          configurable: !0,
          writable: !0,
          enumerable: s.enumerable,
          value: t[o],
        });
  }
  return Object.create(Pf(t), n);
}
function SM(t, e = !1) {
  return (
    Ly(t) ||
      ll(t) ||
      !ua(t) ||
      (Ay(t) > 1 && (t.set = t.add = t.clear = t.delete = i7),
      Object.freeze(t),
      e && ep(t, (n, r) => SM(r, !0))),
    t
  );
}
function i7() {
  Ho(2);
}
function Ly(t) {
  return Object.isFrozen(t);
}
var o7 = {};
function Pc(t) {
  const e = o7[t];
  return e || Ho(0, t), e;
}
var tp;
function AN() {
  return tp;
}
function s7(t, e) {
  return {
    drafts_: [],
    parent_: t,
    immer_: e,
    canAutoFreeze_: !0,
    unfinalizedDrafts_: 0,
  };
}
function JR(t, e) {
  e &&
    (Pc("Patches"),
    (t.patches_ = []),
    (t.inversePatches_ = []),
    (t.patchListener_ = e));
}
function Bw(t) {
  Hw(t), t.drafts_.forEach(a7), (t.drafts_ = null);
}
function Hw(t) {
  t === tp && (tp = t.parent_);
}
function eP(t) {
  return (tp = s7(tp, t));
}
function a7(t) {
  const e = t[Ki];
  e.type_ === 0 || e.type_ === 1 ? e.revoke_() : (e.revoked_ = !0);
}
function tP(t, e) {
  e.unfinalizedDrafts_ = e.drafts_.length;
  const n = e.drafts_[0];
  return (
    t !== void 0 && t !== n
      ? (n[Ki].modified_ && (Bw(e), Ho(4)),
        ua(t) && ((t = S0(e, t)), e.parent_ || w0(e, t)),
        e.patches_ &&
          Pc("Patches").generateReplacementPatches_(
            n[Ki].base_,
            t,
            e.patches_,
            e.inversePatches_
          ))
      : (t = S0(e, n, [])),
    Bw(e),
    e.patches_ && e.patchListener_(e.patches_, e.inversePatches_),
    t !== MN ? t : void 0
  );
}
function S0(t, e, n) {
  if (Ly(e)) return e;
  const r = e[Ki];
  if (!r) return ep(e, (i, o) => nP(t, r, e, i, o, n)), e;
  if (r.scope_ !== t) return e;
  if (!r.modified_) return w0(t, r.base_, !0), r.base_;
  if (!r.finalized_) {
    (r.finalized_ = !0), r.scope_.unfinalizedDrafts_--;
    const i = r.copy_;
    let o = i,
      s = !1;
    r.type_ === 3 && ((o = new Set(i)), i.clear(), (s = !0)),
      ep(o, (a, l) => nP(t, r, i, a, l, n, s)),
      w0(t, i, !1),
      n &&
        t.patches_ &&
        Pc("Patches").generatePatches_(r, n, t.patches_, t.inversePatches_);
  }
  return r.copy_;
}
function nP(t, e, n, r, i, o, s) {
  if (ll(i)) {
    const a =
        o && e && e.type_ !== 3 && !zw(e.assigned_, r) ? o.concat(r) : void 0,
      l = S0(t, i, a);
    if ((TN(n, r, l), ll(l))) t.canAutoFreeze_ = !1;
    else return;
  } else s && n.add(i);
  if (ua(i) && !Ly(i)) {
    if (!t.immer_.autoFreeze_ && t.unfinalizedDrafts_ < 1) return;
    S0(t, i), (!e || !e.scope_.parent_) && w0(t, i);
  }
}
function w0(t, e, n = !1) {
  !t.parent_ && t.immer_.autoFreeze_ && t.canAutoFreeze_ && SM(e, n);
}
function l7(t, e) {
  const n = Array.isArray(t),
    r = {
      type_: n ? 1 : 0,
      scope_: e ? e.scope_ : AN(),
      modified_: !1,
      finalized_: !1,
      assigned_: {},
      parent_: e,
      base_: t,
      draft_: null,
      copy_: null,
      revoke_: null,
      isManual_: !1,
    };
  let i = r,
    o = wM;
  n && ((i = [r]), (o = np));
  const { revoke: s, proxy: a } = Proxy.revocable(i, o);
  return (r.draft_ = a), (r.revoke_ = s), a;
}
var wM = {
    get(t, e) {
      if (e === Ki) return t;
      const n = Zl(t);
      if (!zw(n, e)) return c7(t, n, e);
      const r = n[e];
      return t.finalized_ || !ua(r)
        ? r
        : r === x_(t.base_, e)
        ? (__(t), (t.copy_[e] = Gw(r, t)))
        : r;
    },
    has(t, e) {
      return e in Zl(t);
    },
    ownKeys(t) {
      return Reflect.ownKeys(Zl(t));
    },
    set(t, e, n) {
      const r = RN(Zl(t), e);
      if (r != null && r.set) return r.set.call(t.draft_, n), !0;
      if (!t.modified_) {
        const i = x_(Zl(t), e),
          o = i == null ? void 0 : i[Ki];
        if (o && o.base_ === n)
          return (t.copy_[e] = n), (t.assigned_[e] = !1), !0;
        if (r7(n, i) && (n !== void 0 || zw(t.base_, e))) return !0;
        __(t), Vw(t);
      }
      return (
        (t.copy_[e] === n && (n !== void 0 || e in t.copy_)) ||
          (Number.isNaN(n) && Number.isNaN(t.copy_[e])) ||
          ((t.copy_[e] = n), (t.assigned_[e] = !0)),
        !0
      );
    },
    deleteProperty(t, e) {
      return (
        x_(t.base_, e) !== void 0 || e in t.base_
          ? ((t.assigned_[e] = !1), __(t), Vw(t))
          : delete t.assigned_[e],
        t.copy_ && delete t.copy_[e],
        !0
      );
    },
    getOwnPropertyDescriptor(t, e) {
      const n = Zl(t),
        r = Reflect.getOwnPropertyDescriptor(n, e);
      return (
        r && {
          writable: !0,
          configurable: t.type_ !== 1 || e !== "length",
          enumerable: r.enumerable,
          value: n[e],
        }
      );
    },
    defineProperty() {
      Ho(11);
    },
    getPrototypeOf(t) {
      return Pf(t.base_);
    },
    setPrototypeOf() {
      Ho(12);
    },
  },
  np = {};
ep(wM, (t, e) => {
  np[t] = function () {
    return (arguments[0] = arguments[0][0]), e.apply(this, arguments);
  };
});
np.deleteProperty = function (t, e) {
  return np.set.call(this, t, e, void 0);
};
np.set = function (t, e, n) {
  return wM.set.call(this, t[0], e, n, t[0]);
};
function x_(t, e) {
  const n = t[Ki];
  return (n ? Zl(n) : t)[e];
}
function c7(t, e, n) {
  var i;
  const r = RN(e, n);
  return r
    ? "value" in r
      ? r.value
      : (i = r.get) == null
      ? void 0
      : i.call(t.draft_)
    : void 0;
}
function RN(t, e) {
  if (!(e in t)) return;
  let n = Pf(t);
  for (; n; ) {
    const r = Object.getOwnPropertyDescriptor(n, e);
    if (r) return r;
    n = Pf(n);
  }
}
function Vw(t) {
  t.modified_ || ((t.modified_ = !0), t.parent_ && Vw(t.parent_));
}
function __(t) {
  t.copy_ || (t.copy_ = kw(t.base_, t.scope_.immer_.useStrictShallowCopy_));
}
var u7 = class {
  constructor(t) {
    (this.autoFreeze_ = !0),
      (this.useStrictShallowCopy_ = !1),
      (this.produce = (e, n, r) => {
        if (typeof e == "function" && typeof n != "function") {
          const o = n;
          n = e;
          const s = this;
          return function (l = o, ...c) {
            return s.produce(l, (u) => n.call(this, u, ...c));
          };
        }
        typeof n != "function" && Ho(6),
          r !== void 0 && typeof r != "function" && Ho(7);
        let i;
        if (ua(e)) {
          const o = eP(this),
            s = Gw(e, void 0);
          let a = !0;
          try {
            (i = n(s)), (a = !1);
          } finally {
            a ? Bw(o) : Hw(o);
          }
          return JR(o, r), tP(i, o);
        } else if (!e || typeof e != "object") {
          if (
            ((i = n(e)),
            i === void 0 && (i = e),
            i === MN && (i = void 0),
            this.autoFreeze_ && SM(i, !0),
            r)
          ) {
            const o = [],
              s = [];
            Pc("Patches").generateReplacementPatches_(e, i, o, s), r(o, s);
          }
          return i;
        } else Ho(1, e);
      }),
      (this.produceWithPatches = (e, n) => {
        if (typeof e == "function")
          return (s, ...a) => this.produceWithPatches(s, (l) => e(l, ...a));
        let r, i;
        return [
          this.produce(e, n, (s, a) => {
            (r = s), (i = a);
          }),
          r,
          i,
        ];
      }),
      typeof (t == null ? void 0 : t.autoFreeze) == "boolean" &&
        this.setAutoFreeze(t.autoFreeze),
      typeof (t == null ? void 0 : t.useStrictShallowCopy) == "boolean" &&
        this.setUseStrictShallowCopy(t.useStrictShallowCopy);
  }
  createDraft(t) {
    ua(t) || Ho(8), ll(t) && (t = PN(t));
    const e = eP(this),
      n = Gw(t, void 0);
    return (n[Ki].isManual_ = !0), Hw(e), n;
  }
  finishDraft(t, e) {
    const n = t && t[Ki];
    (!n || !n.isManual_) && Ho(9);
    const { scope_: r } = n;
    return JR(r, e), tP(void 0, r);
  }
  setAutoFreeze(t) {
    this.autoFreeze_ = t;
  }
  setUseStrictShallowCopy(t) {
    this.useStrictShallowCopy_ = t;
  }
  applyPatches(t, e) {
    let n;
    for (n = e.length - 1; n >= 0; n--) {
      const i = e[n];
      if (i.path.length === 0 && i.op === "replace") {
        t = i.value;
        break;
      }
    }
    n > -1 && (e = e.slice(n + 1));
    const r = Pc("Patches").applyPatches_;
    return ll(t) ? r(t, e) : this.produce(t, (i) => r(i, e));
  }
};
function Gw(t, e) {
  const n = Ry(t)
    ? Pc("MapSet").proxyMap_(t, e)
    : Py(t)
    ? Pc("MapSet").proxySet_(t, e)
    : l7(t, e);
  return (e ? e.scope_ : AN()).drafts_.push(n), n;
}
function PN(t) {
  return ll(t) || Ho(10, t), LN(t);
}
function LN(t) {
  if (!ua(t) || Ly(t)) return t;
  const e = t[Ki];
  let n;
  if (e) {
    if (!e.modified_) return e.base_;
    (e.finalized_ = !0), (n = kw(t, e.scope_.immer_.useStrictShallowCopy_));
  } else n = kw(t, !0);
  return (
    ep(n, (r, i) => {
      TN(n, r, LN(i));
    }),
    e && (e.finalized_ = !1),
    n
  );
}
var Zi = new u7(),
  IN = Zi.produce;
Zi.produceWithPatches.bind(Zi);
Zi.setAutoFreeze.bind(Zi);
Zi.setUseStrictShallowCopy.bind(Zi);
Zi.applyPatches.bind(Zi);
Zi.createDraft.bind(Zi);
Zi.finishDraft.bind(Zi);
function f7(t, e = `expected a function, instead received ${typeof t}`) {
  if (typeof t != "function") throw new TypeError(e);
}
function d7(t, e = `expected an object, instead received ${typeof t}`) {
  if (typeof t != "object") throw new TypeError(e);
}
function h7(
  t,
  e = "expected all items to be functions, instead received the following types: "
) {
  if (!t.every((n) => typeof n == "function")) {
    const n = t
      .map((r) =>
        typeof r == "function" ? `function ${r.name || "unnamed"}()` : typeof r
      )
      .join(", ");
    throw new TypeError(`${e}[${n}]`);
  }
}
var rP = (t) => (Array.isArray(t) ? t : [t]);
function p7(t) {
  const e = Array.isArray(t[0]) ? t[0] : t;
  return (
    h7(
      e,
      "createSelector expects all input-selectors to be functions, but received the following types: "
    ),
    e
  );
}
function m7(t, e) {
  const n = [],
    { length: r } = t;
  for (let i = 0; i < r; i++) n.push(t[i].apply(null, e));
  return n;
}
var g7 = class {
    constructor(t) {
      this.value = t;
    }
    deref() {
      return this.value;
    }
  },
  v7 = typeof WeakRef < "u" ? WeakRef : g7,
  y7 = 0,
  iP = 1;
function $g() {
  return { s: y7, v: void 0, o: null, p: null };
}
function bM(t, e = {}) {
  let n = $g();
  const { resultEqualityCheck: r } = e;
  let i,
    o = 0;
  function s() {
    var h;
    let a = n;
    const { length: l } = arguments;
    for (let p = 0, m = l; p < m; p++) {
      const v = arguments[p];
      if (typeof v == "function" || (typeof v == "object" && v !== null)) {
        let S = a.o;
        S === null && (a.o = S = new WeakMap());
        const x = S.get(v);
        x === void 0 ? ((a = $g()), S.set(v, a)) : (a = x);
      } else {
        let S = a.p;
        S === null && (a.p = S = new Map());
        const x = S.get(v);
        x === void 0 ? ((a = $g()), S.set(v, a)) : (a = x);
      }
    }
    const c = a;
    let u;
    if (
      (a.s === iP ? (u = a.v) : ((u = t.apply(null, arguments)), o++),
      (c.s = iP),
      r)
    ) {
      const p =
        ((h = i == null ? void 0 : i.deref) == null ? void 0 : h.call(i)) ?? i;
      p != null && r(p, u) && ((u = p), o !== 0 && o--),
        (i =
          (typeof u == "object" && u !== null) || typeof u == "function"
            ? new v7(u)
            : u);
    }
    return (c.v = u), u;
  }
  return (
    (s.clearCache = () => {
      (n = $g()), s.resetResultsCount();
    }),
    (s.resultsCount = () => o),
    (s.resetResultsCount = () => {
      o = 0;
    }),
    s
  );
}
function ON(t, ...e) {
  const n = typeof t == "function" ? { memoize: t, memoizeOptions: e } : t,
    r = (...i) => {
      let o = 0,
        s = 0,
        a,
        l = {},
        c = i.pop();
      typeof c == "object" && ((l = c), (c = i.pop())),
        f7(
          c,
          `createSelector expects an output function after the inputs, but received: [${typeof c}]`
        );
      const u = { ...n, ...l },
        {
          memoize: h,
          memoizeOptions: p = [],
          argsMemoize: m = bM,
          argsMemoizeOptions: v = [],
          devModeChecks: S = {},
        } = u,
        x = rP(p),
        g = rP(v),
        y = p7(i),
        _ = h(function () {
          return o++, c.apply(null, arguments);
        }, ...x),
        b = m(function () {
          s++;
          const M = m7(y, arguments);
          return (a = _.apply(null, M)), a;
        }, ...g);
      return Object.assign(b, {
        resultFunc: c,
        memoizedResultFunc: _,
        dependencies: y,
        dependencyRecomputations: () => s,
        resetDependencyRecomputations: () => {
          s = 0;
        },
        lastResult: () => a,
        recomputations: () => o,
        resetRecomputations: () => {
          o = 0;
        },
        memoize: h,
        argsMemoize: m,
      });
    };
  return Object.assign(r, { withTypes: () => r }), r;
}
var x7 = ON(bM),
  _7 = Object.assign(
    (t, e = x7) => {
      d7(
        t,
        `createStructuredSelector expects first argument to be an object where each property is a selector, instead received a ${typeof t}`
      );
      const n = Object.keys(t),
        r = n.map((o) => t[o]);
      return e(r, (...o) => o.reduce((s, a, l) => ((s[n[l]] = a), s), {}));
    },
    { withTypes: () => _7 }
  );
function FN(t) {
  return ({ dispatch: n, getState: r }) =>
    (i) =>
    (o) =>
      typeof o == "function" ? o(n, r, t) : i(o);
}
var S7 = FN(),
  w7 = FN,
  b7 = (...t) => {
    const e = ON(...t),
      n = Object.assign(
        (...r) => {
          const i = e(...r),
            o = (s, ...a) => i(ll(s) ? PN(s) : s, ...a);
          return Object.assign(o, i), o;
        },
        { withTypes: () => n }
      );
    return n;
  };
b7(bM);
var E7 =
  typeof window < "u" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__
    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__
    : function () {
        if (arguments.length !== 0)
          return typeof arguments[0] == "object"
            ? _0
            : _0.apply(null, arguments);
      };
function Lf(t, e) {
  function n(...r) {
    if (e) {
      let i = e(...r);
      if (!i) throw new Error(wi(0));
      return {
        type: t,
        payload: i.payload,
        ...("meta" in i && { meta: i.meta }),
        ...("error" in i && { error: i.error }),
      };
    }
    return { type: t, payload: r[0] };
  }
  return (
    (n.toString = () => `${t}`),
    (n.type = t),
    (n.match = (r) => t7(r) && r.type === t),
    n
  );
}
var NN = class $d extends Array {
  constructor(...e) {
    super(...e), Object.setPrototypeOf(this, $d.prototype);
  }
  static get [Symbol.species]() {
    return $d;
  }
  concat(...e) {
    return super.concat.apply(this, e);
  }
  prepend(...e) {
    return e.length === 1 && Array.isArray(e[0])
      ? new $d(...e[0].concat(this))
      : new $d(...e.concat(this));
  }
};
function oP(t) {
  return ua(t) ? IN(t, () => {}) : t;
}
function sP(t, e, n) {
  if (t.has(e)) {
    let i = t.get(e);
    return n.update && ((i = n.update(i, e, t)), t.set(e, i)), i;
  }
  if (!n.insert) throw new Error(wi(10));
  const r = n.insert(e, t);
  return t.set(e, r), r;
}
function M7(t) {
  return typeof t == "boolean";
}
var C7 = () =>
    function (e) {
      const {
        thunk: n = !0,
        immutableCheck: r = !0,
        serializableCheck: i = !0,
        actionCreatorCheck: o = !0,
      } = e ?? {};
      let s = new NN();
      return n && (M7(n) ? s.push(S7) : s.push(w7(n.extraArgument))), s;
    },
  T7 = "RTK_autoBatch",
  DN = (t) => (e) => {
    setTimeout(e, t);
  },
  A7 =
    typeof window < "u" && window.requestAnimationFrame
      ? window.requestAnimationFrame
      : DN(10),
  R7 =
    (t = { type: "raf" }) =>
    (e) =>
    (...n) => {
      const r = e(...n);
      let i = !0,
        o = !1,
        s = !1;
      const a = new Set(),
        l =
          t.type === "tick"
            ? queueMicrotask
            : t.type === "raf"
            ? A7
            : t.type === "callback"
            ? t.queueNotification
            : DN(t.timeout),
        c = () => {
          (s = !1), o && ((o = !1), a.forEach((u) => u()));
        };
      return Object.assign({}, r, {
        subscribe(u) {
          const h = () => i && u(),
            p = r.subscribe(h);
          return (
            a.add(u),
            () => {
              p(), a.delete(u);
            }
          );
        },
        dispatch(u) {
          var h;
          try {
            return (
              (i = !((h = u == null ? void 0 : u.meta) != null && h[T7])),
              (o = !i),
              o && (s || ((s = !0), l(c))),
              r.dispatch(u)
            );
          } finally {
            i = !0;
          }
        },
      });
    },
  P7 = (t) =>
    function (n) {
      const { autoBatch: r = !0 } = n ?? {};
      let i = new NN(t);
      return r && i.push(R7(typeof r == "object" ? r : void 0)), i;
    },
  L7 = !0;
function I7(t) {
  const e = C7(),
    {
      reducer: n = void 0,
      middleware: r,
      devTools: i = !0,
      preloadedState: o = void 0,
      enhancers: s = void 0,
    } = t || {};
  let a;
  if (typeof n == "function") a = n;
  else if (_M(n)) a = J9(n);
  else throw new Error(wi(1));
  let l;
  typeof r == "function" ? (l = r(e)) : (l = e());
  let c = _0;
  i && (c = E7({ trace: !L7, ...(typeof i == "object" && i) }));
  const u = e7(...l),
    h = P7(u);
  let p = typeof s == "function" ? s(h) : h();
  const m = c(...p);
  return EN(a, o, m);
}
function UN(t) {
  const e = {},
    n = [];
  let r;
  const i = {
    addCase(o, s) {
      const a = typeof o == "string" ? o : o.type;
      if (!a) throw new Error(wi(28));
      if (a in e) throw new Error(wi(29));
      return (e[a] = s), i;
    },
    addMatcher(o, s) {
      return n.push({ matcher: o, reducer: s }), i;
    },
    addDefaultCase(o) {
      return (r = o), i;
    },
  };
  return t(i), [e, n, r];
}
function O7(t) {
  return typeof t == "function";
}
function F7(t, e) {
  let [n, r, i] = UN(e),
    o;
  if (O7(t)) o = () => oP(t());
  else {
    const a = oP(t);
    o = () => a;
  }
  function s(a = o(), l) {
    let c = [
      n[l.type],
      ...r.filter(({ matcher: u }) => u(l)).map(({ reducer: u }) => u),
    ];
    return (
      c.filter((u) => !!u).length === 0 && (c = [i]),
      c.reduce((u, h) => {
        if (h)
          if (ll(u)) {
            const m = h(u, l);
            return m === void 0 ? u : m;
          } else {
            if (ua(u)) return IN(u, (p) => h(p, l));
            {
              const p = h(u, l);
              if (p === void 0) {
                if (u === null) return u;
                throw new Error(wi(9));
              }
              return p;
            }
          }
        return u;
      }, a)
    );
  }
  return (s.getInitialState = o), s;
}
var N7 = "ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW",
  D7 = (t = 21) => {
    let e = "",
      n = t;
    for (; n--; ) e += N7[(Math.random() * 64) | 0];
    return e;
  },
  U7 = Symbol.for("rtk-slice-createasyncthunk");
function z7(t, e) {
  return `${t}/${e}`;
}
function k7({ creators: t } = {}) {
  var n;
  const e = (n = t == null ? void 0 : t.asyncThunk) == null ? void 0 : n[U7];
  return function (i) {
    const { name: o, reducerPath: s = o } = i;
    if (!o) throw new Error(wi(11));
    typeof process < "u";
    const a =
        (typeof i.reducers == "function" ? i.reducers(V7()) : i.reducers) || {},
      l = Object.keys(a),
      c = {
        sliceCaseReducersByName: {},
        sliceCaseReducersByType: {},
        actionCreators: {},
        sliceMatchers: [],
      },
      u = {
        addCase(_, b) {
          const T = typeof _ == "string" ? _ : _.type;
          if (!T) throw new Error(wi(12));
          if (T in c.sliceCaseReducersByType) throw new Error(wi(13));
          return (c.sliceCaseReducersByType[T] = b), u;
        },
        addMatcher(_, b) {
          return c.sliceMatchers.push({ matcher: _, reducer: b }), u;
        },
        exposeAction(_, b) {
          return (c.actionCreators[_] = b), u;
        },
        exposeCaseReducer(_, b) {
          return (c.sliceCaseReducersByName[_] = b), u;
        },
      };
    l.forEach((_) => {
      const b = a[_],
        T = {
          reducerName: _,
          type: z7(o, _),
          createNotation: typeof i.reducers == "function",
        };
      j7(b) ? $7(T, b, u, e) : G7(T, b, u);
    });
    function h() {
      const [_ = {}, b = [], T = void 0] =
          typeof i.extraReducers == "function"
            ? UN(i.extraReducers)
            : [i.extraReducers],
        M = { ..._, ...c.sliceCaseReducersByType };
      return F7(i.initialState, (C) => {
        for (let L in M) C.addCase(L, M[L]);
        for (let L of c.sliceMatchers) C.addMatcher(L.matcher, L.reducer);
        for (let L of b) C.addMatcher(L.matcher, L.reducer);
        T && C.addDefaultCase(T);
      });
    }
    const p = (_) => _,
      m = new Map();
    let v;
    function S(_, b) {
      return v || (v = h()), v(_, b);
    }
    function x() {
      return v || (v = h()), v.getInitialState();
    }
    function g(_, b = !1) {
      function T(C) {
        let L = C[_];
        return typeof L > "u" && b && (L = x()), L;
      }
      function M(C = p) {
        const L = sP(m, b, { insert: () => new WeakMap() });
        return sP(L, C, {
          insert: () => {
            const A = {};
            for (const [P, k] of Object.entries(i.selectors ?? {}))
              A[P] = B7(k, C, x, b);
            return A;
          },
        });
      }
      return {
        reducerPath: _,
        getSelectors: M,
        get selectors() {
          return M(T);
        },
        selectSlice: T,
      };
    }
    const y = {
      name: o,
      reducer: S,
      actions: c.actionCreators,
      caseReducers: c.sliceCaseReducersByName,
      getInitialState: x,
      ...g(s),
      injectInto(_, { reducerPath: b, ...T } = {}) {
        const M = b ?? s;
        return (
          _.inject({ reducerPath: M, reducer: S }, T), { ...y, ...g(M, !0) }
        );
      },
    };
    return y;
  };
}
function B7(t, e, n, r) {
  function i(o, ...s) {
    let a = e(o);
    return typeof a > "u" && r && (a = n()), t(a, ...s);
  }
  return (i.unwrapped = t), i;
}
var H7 = k7();
function V7() {
  function t(e, n) {
    return { _reducerDefinitionType: "asyncThunk", payloadCreator: e, ...n };
  }
  return (
    (t.withTypes = () => t),
    {
      reducer(e) {
        return Object.assign(
          {
            [e.name](...n) {
              return e(...n);
            },
          }[e.name],
          { _reducerDefinitionType: "reducer" }
        );
      },
      preparedReducer(e, n) {
        return {
          _reducerDefinitionType: "reducerWithPrepare",
          prepare: e,
          reducer: n,
        };
      },
      asyncThunk: t,
    }
  );
}
function G7({ type: t, reducerName: e, createNotation: n }, r, i) {
  let o, s;
  if ("reducer" in r) {
    if (n && !W7(r)) throw new Error(wi(17));
    (o = r.reducer), (s = r.prepare);
  } else o = r;
  i.addCase(t, o)
    .exposeCaseReducer(e, o)
    .exposeAction(e, s ? Lf(t, s) : Lf(t));
}
function j7(t) {
  return t._reducerDefinitionType === "asyncThunk";
}
function W7(t) {
  return t._reducerDefinitionType === "reducerWithPrepare";
}
function $7({ type: t, reducerName: e }, n, r, i) {
  if (!i) throw new Error(wi(18));
  const {
      payloadCreator: o,
      fulfilled: s,
      pending: a,
      rejected: l,
      settled: c,
      options: u,
    } = n,
    h = i(t, o, u);
  r.exposeAction(e, h),
    s && r.addCase(h.fulfilled, s),
    a && r.addCase(h.pending, a),
    l && r.addCase(h.rejected, l),
    c && r.addMatcher(h.settled, c),
    r.exposeCaseReducer(e, {
      fulfilled: s || Xg,
      pending: a || Xg,
      rejected: l || Xg,
      settled: c || Xg,
    });
}
function Xg() {}
var X7 = (t, e) => {
    if (typeof t != "function") throw new Error(wi(32));
  },
  EM = "listenerMiddleware",
  q7 = (t) => {
    let { type: e, actionCreator: n, matcher: r, predicate: i, effect: o } = t;
    if (e) i = Lf(e).match;
    else if (n) (e = n.type), (i = n.match);
    else if (r) i = r;
    else if (!i) throw new Error(wi(21));
    return X7(o), { predicate: i, type: e, effect: o };
  },
  Y7 = Object.assign(
    (t) => {
      const { type: e, predicate: n, effect: r } = q7(t);
      return {
        id: D7(),
        effect: r,
        type: e,
        predicate: n,
        pending: new Set(),
        unsubscribe: () => {
          throw new Error(wi(22));
        },
      };
    },
    { withTypes: () => Y7 }
  ),
  K7 = Object.assign(Lf(`${EM}/add`), { withTypes: () => K7 });
Lf(`${EM}/removeAll`);
var Z7 = Object.assign(Lf(`${EM}/remove`), { withTypes: () => Z7 });
function wi(t) {
  return `Minified Redux Toolkit error #${t}; visit https://redux-toolkit.js.org/Errors?code=${t} for the full message or use the non-minified dev environment for full errors. `;
}
const Q7 = () => ({
    isConverted: !1,
    REvalue: "",
    task: 0,
    progressSteps: [1],
    firstRe: { a: !1, b: !1, union: !1, kleene: !1 },
    secondRe: { a: !1, b: !1, concat: !1, kleene: !1 },
    thirdRe: { a: !0, b: !1, union: !1, kleene: !1 },
    fourthRe: { a: !1, b: !1, b1: !1, concat: !1 },
    clickedStep: {
      character: !0,
      union: !0,
      "Kleene star": !0,
      parentheses: !0,
      concatenation: !0,
    },
    isInfo: !1,
    showConcat: !1,
    infoCom: "",
    currentOperationMessage: "",
  }),
  zN = H7({
    name: "nfa",
    initialState: Q7,
    reducers: {
      updateReValue: (t, e) => {
        (t.REvalue = e.payload.val), (t.task = e.payload.task);
      },
      updateConvertStatus: (t, e) => {
        t.isConverted = e.payload;
      },
      updateSteps: (t, e) => {
        t.progressSteps = e.payload;
      },
      updateFirstRe: (t, e) => {
        t.firstRe = e.payload;
      },
      updateSecondRe: (t, e) => {
        t.secondRe = e.payload;
      },
      updateThirdRe: (t, e) => {
        t.thirdRe = e.payload;
      },
      updateFourthRe: (t, e) => {
        t.fourthRe = e.payload;
      },
      updateClear: (t, e) => {
        (t.REvalue = ""),
          (t.showConcat = !1),
          (t.task = 0),
          (t.isConverted = !1),
          (t.progressSteps = [1]),
          (t.firstRe = { a: !1, b: !1, union: !1, kleene: !1 }),
          (t.secondRe = { a: !1, b: !1, concat: !1, kleene: !1 }),
          (t.thirdRe = { a: !1, b: !1, union: !1, kleene: !1 }),
          (t.fourthRe = { a: !1, b: !1, b1: !1, concat: !1 }),
          (t.isInfo = !1),
          (t.currentOperationMessage = "");
      },
      updateClickedStep: (t, e) => {
        t.clickedStep = e.payload;
      },
      updateInfoComponent: (t, e) => {
        t.isInfo = e.payload;
      },
      updateShowConcat: (t, e) => {
        t.showConcat = e.payload;
      },
      updateInfoContent: (t, e) => {
        t.infoCom = e.payload;
      },
      updateOperationMessage: (t, e) => {
        t.currentOperationMessage = e.payload;
      },
    },
  }),
  {
    updateInfoContent: Gf,
    updateShowConcat: J7,
    updateConvertStatus: e$,
    updateReValue: Lu,
    updateSteps: Oa,
    updateFirstRe: qg,
    updateSecondRe: Yg,
    updateThirdRe: Kg,
    updateFourthRe: Zg,
    updateClear: S_,
    updateClickedStep: t$,
    updateInfoComponent: Gc,
    updateOperationMessage: Iu,
  } = zN.actions,
  n$ = zN.reducer,
  aP = [
    {
      id: 1,
      flow: I.jsxs("h5", {
        children: [
          "create ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15, margin: 0 },
            children: "a",
          }),
          " ",
          "single state NFA.",
        ],
      }),
      name: "a",
      btn: "a",
      info: I.jsxs("div", {
        style: { width: "100%" },
        children: [
          I.jsx("h5", { children: "States:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 1 (Initial State) ",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 2 (Final State)",
          }),
          I.jsx("h5", { children: " Transition:" }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Transitioning from state 1 to state 2, denoted by the input symbol",
              " ",
              I.jsx("q", {
                style: { color: "green", fontSize: 15 },
                children: "a",
              }),
            ],
          }),
        ],
      }),
    },
    {
      id: 2,
      flow: I.jsxs("h5", {
        children: [
          "create ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15, margin: 0 },
            children: "b",
          }),
          " ",
          "single state NFA.",
        ],
      }),
      name: "b",
      btn: "b",
      info: I.jsxs("div", {
        style: { width: "100%" },
        children: [
          I.jsx("h5", { children: "States:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 3 (Initial State) ",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 4 (Final State)",
          }),
          I.jsx("h5", { children: " Transition:" }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "From State 3 to State 4 labeled with input symbol",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b",
              }),
            ],
          }),
        ],
      }),
    },
    {
      id: 3,
      flow: I.jsxs("h5", {
        children: [
          "Click  to perform",
          " ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15, margin: 0 },
            children: "union",
          }),
          " ",
          "operation.",
        ],
      }),
      btn: "Add union",
      name: "union",
      info: I.jsxs("div", {
        style: { width: "100%" },
        children: [
          I.jsx("h5", { children: "States:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 5 (Initial State) ",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 6 (Final State)",
          }),
          I.jsx("h5", { children: " Transition:" }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add ε-transitions from the New Start State",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "5",
              }),
              " ",
              "  ",
              "to the start states",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "1",
              }),
              ",",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "3",
              }),
              " of the existing NFAs.",
            ],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add ε-transitions from the accepting states",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "2",
              }),
              " ,",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "4",
              }),
              "  ",
              "of the existing NFAs to the New Final",
            ],
          }),
          I.jsx("h5", { children: " Notes:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children:
              "When the union operation is performed, 4 ε-transitions are used in total:",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children:
              "2 ε-transitions for connecting the New Start State to the existing NFAs",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children:
              "2 ε-transitions for connecting the accepting states of the existing NFAs to the New Final State",
          }),
        ],
      }),
    },
    {
      id: 4,
      flow: I.jsxs("h5", {
        children: [
          "Click  to perform",
          " ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15, margin: 0 },
            children: "kleene star",
          }),
          " ",
          "operation.",
        ],
      }),
      btn: "Add Kleene star",
      name: "kleene",
      info: I.jsxs("div", {
        style: { width: "100%" },
        children: [
          I.jsx("h5", { children: "States:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 4 (Initial State) ",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 5 (Final State)",
          }),
          I.jsx("h5", { children: " Transition:" }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add ε-transition from New Start State",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "7",
              }),
              " to the original start state ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "5",
              }),
              " of the expression.",
            ],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add ε-transition from the accept state",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "6",
              }),
              " of the expression back to the original start state",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "5",
              }),
              " .",
            ],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add ε-transition from original accept state",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "6",
              }),
              " to New Accept State",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "8",
              }),
              ".",
            ],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add ε-transition from New Start State",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "7",
              }),
              " directly to New Accept State ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "8",
              }),
              " for zero occurrences.",
            ],
          }),
          I.jsx("h5", { children: " Notes:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children:
              "When applying the Kleene closure function, 4 ε-transitions are used in total:",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children:
              "2 ε-transitions for connecting the New Start State to the original start state and back to the original start state.",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children:
              "1 ε-transition for connecting the original accept state to the New Accept State",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children:
              "1 ε-transition from the New Start State directly to the New Accept State for zero occurrences",
          }),
        ],
      }),
    },
  ],
  r$ = [
    {
      id: 1,
      flow: I.jsxs("h5", {
        children: [
          "create ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15 },
            children: "a",
          }),
          " single state NFA.",
        ],
      }),
      btn: "a",
      name: "a",
      info: I.jsxs("div", {
        style: { width: "100%" },
        children: [
          I.jsxs("h4", {
            style: { textAlign: "center", textDecoration: "underline" },
            children: [
              "Create Automaton for ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "a",
              }),
            ],
          }),
          I.jsx("h5", { children: "States:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 1 (Initial State) ",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 2 (Final State)",
          }),
          I.jsx("h5", { children: " Transition:" }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "From State 1 to State 2 labeled with input symbol",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "a",
              }),
            ],
          }),
        ],
      }),
    },
    {
      id: 2,
      flow: I.jsxs("h5", {
        children: [
          "create ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15 },
            children: "b",
          }),
          " single state NFA.",
        ],
      }),
      btn: "b",
      name: "b",
      info: I.jsxs("div", {
        style: { width: "100%" },
        children: [
          I.jsxs("h4", {
            style: { textAlign: "center", textDecoration: "underline" },
            children: [
              "Create Automaton for ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b",
              }),
            ],
          }),
          I.jsx("h5", { children: "States:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 3 (Initial State) ",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 4 (Final State)",
          }),
          I.jsx("h5", { children: " Transition:" }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "From State 3 to State 4 labeled with input symbol",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b",
              }),
            ],
          }),
        ],
      }),
    },
    {
      id: 3,
      flow: I.jsxs("h5", {
        children: [
          "Click  to perform",
          " ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15 },
            children: "Concatenation",
          }),
          " operation.",
        ],
      }),
      name: "concat",
      btn: "Add Concat",
      info: I.jsxs("div", {
        style: { width: "100%" },
        children: [
          I.jsxs("h4", {
            style: { textAlign: "center", textDecoration: "underline" },
            children: [
              "Converting Regular Expression to NFA using",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "Concatenation",
              }),
            ],
          }),
          I.jsxs("h6", {
            children: [
              "Create an NFA for the character",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "a:",
              }),
            ],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [" ", "Create a start state and an accept state.", " "],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add a transition labeled",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "a",
              }),
              " from the start state to the accept state.",
            ],
          }),
          I.jsxs("h6", {
            children: [
              "Create an NFA for the character",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b:",
              }),
            ],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [" ", "Create a start state and an accept state.", " "],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add a transition labeled",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b",
              }),
              " from the start state to the accept state.",
            ],
          }),
          I.jsxs("h5", {
            children: [
              " ",
              "Connect the NFAs for ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "a",
              }),
              " ",
              "and ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b",
              }),
              " and",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b",
              }),
              " to represent the concatenation:",
            ],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Merge the accept state of the NFA for",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "a",
              }),
              " with the start state of the NFA for ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b",
              }),
              ", and remove the accept state of the NFA for",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "a",
              }),
              ".",
            ],
          }),
        ],
      }),
    },
    {
      id: 4,
      flow: I.jsxs("h5", {
        children: [
          "Click to perform",
          " ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15 },
            children: "kleene star",
          }),
          " operation.",
        ],
      }),
      name: "kleene",
      btn: "Add Kleene star",
      info: I.jsxs("div", {
        style: { width: "100%" },
        children: [
          I.jsxs("h4", {
            style: { textAlign: "center", textDecoration: "underline" },
            children: [
              "Converting Regular Expression to NFA using",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "Kleene Closure",
              }),
            ],
          }),
          I.jsx("h5", { children: "States:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 4 (Initial State) ",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 5 (Final State)",
          }),
          I.jsx("h5", { children: " Transition:" }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add ε-transition from New Start State",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "4",
              }),
              " to the original start state ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "1",
              }),
              " of the expression.",
            ],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add ε-transition from the accept state",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "3",
              }),
              " of the expression back to the original start state",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "1",
              }),
              " .",
            ],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add ε-transition from original accept state",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "3",
              }),
              " to New Accept State",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "5",
              }),
              ".",
            ],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add ε-transition from New Start State",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "4",
              }),
              " directly to New Accept State ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "5",
              }),
              " for zero occurrences.",
            ],
          }),
          I.jsx("h5", { children: " Notes:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children:
              "When applying the Kleene closure function, 4 ε-transitions are used in total:",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children:
              "2 ε-transitions for connecting the New Start State to the original start state and back to the original start state",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children:
              "1 ε-transition for connecting the original accept state to the New Accept State",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children:
              "1 ε-transition from the New Start State directly to the New Accept State for zero occurrence",
          }),
        ],
      }),
    },
  ],
  i$ = [
    {
      id: 1,
      flow: I.jsxs("h5", {
        children: [
          "create ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15 },
            children: "a",
          }),
          " single state NFA.",
        ],
      }),
      btn: "a",
      name: "a",
      info: I.jsxs("div", {
        style: { width: "100%" },
        children: [
          I.jsxs("h4", {
            style: { textAlign: "center", textDecoration: "underline" },
            children: [
              "Create Automaton for ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "a",
              }),
            ],
          }),
          I.jsx("h5", { children: "States:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 1 (Initial State) ",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 2 (Final State)",
          }),
          I.jsx("h5", { children: " Transition:" }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "From State 1 to State 2 labeled with input symbol",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "a",
              }),
            ],
          }),
        ],
      }),
    },
    {
      id: 2,
      flow: I.jsxs("h5", {
        children: [
          "create ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15 },
            children: "b",
          }),
          " single state NFA.",
        ],
      }),
      btn: "b",
      name: "b",
      info: I.jsxs("div", {
        style: { width: "100%" },
        children: [
          I.jsxs("h4", {
            style: { textAlign: "center", textDecoration: "underline" },
            children: [
              "Create Automaton for ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b",
              }),
            ],
          }),
          I.jsx("h5", { children: "States:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 3 (Initial State) ",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 4 (Final State)",
          }),
          I.jsx("h5", { children: " Transition:" }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "From State 3 to State 4 labeled with input symbol",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b",
              }),
            ],
          }),
        ],
      }),
    },
    {
      id: 3,
      flow: I.jsxs("h5", {
        children: [
          "create ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15 },
            children: "b",
          }),
          " single state NFA.",
        ],
      }),
      btn: "b",
      name: "b1",
      info: I.jsxs("div", {
        style: { width: "100%" },
        children: [
          I.jsxs("h4", {
            style: { textAlign: "center", textDecoration: "underline" },
            children: [
              "Create Automaton for ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b",
              }),
            ],
          }),
          I.jsx("h5", { children: "States:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 5 (Initial State) ",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 6 (Final State)",
          }),
          I.jsx("h5", { children: " Transition:" }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "From State 3 to State 4 labeled with input symbol",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b",
              }),
            ],
          }),
        ],
      }),
    },
    {
      id: 4,
      flow: I.jsxs("h5", {
        children: [
          "Click  to perform",
          " ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15 },
            children: "Concatenation",
          }),
          " operation.",
        ],
      }),
      name: "concat",
      btn: "Add Concat",
      info: I.jsxs("div", {
        style: { width: "100%" },
        children: [
          I.jsxs("h4", {
            style: { textAlign: "center", textDecoration: "underline" },
            children: [
              "Converting Regular Expression to NFA using",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "Concatenation",
              }),
            ],
          }),
          I.jsxs("h6", {
            children: [
              "Create an NFA for the character",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "a:",
              }),
            ],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [" ", "Create a start state and an accept state.", " "],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add a transition labeled",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "a",
              }),
              " from the start state to the accept state.",
            ],
          }),
          I.jsxs("h6", {
            children: [
              "Create an NFA for the character",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b:",
              }),
            ],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [" ", "Create a start state and an accept state.", " "],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add a transition labeled",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b",
              }),
              " from the start state to the accept state.",
            ],
          }),
          I.jsxs("h6", {
            children: [
              "Create an NFA for the character",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b:",
              }),
            ],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [" ", "Create a start state and an accept state.", " "],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add a transition labeled",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b",
              }),
              " from the start state to the accept state.",
            ],
          }),
          I.jsxs("h5", {
            children: [
              " ",
              "Connect the NFAs for ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "a",
              }),
              " ",
              "and ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b",
              }),
              " and",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b",
              }),
              " to represent the concatenation:",
            ],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add a transition from the accept state of the",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "a",
              }),
              " NFA to the start state of the ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b",
              }),
              " NFA,",
            ],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add a transition from the accept state of the",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b",
              }),
              " NFA to the start state of the ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b",
              }),
              " NFA,",
            ],
          }),
        ],
      }),
    },
  ],
  o$ = [
    {
      id: 1,
      flow: I.jsxs("h5", {
        children: [
          "Create ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15, margin: 0 },
            children: "a",
          }),
          " ",
          "single state NFA.",
        ],
      }),
      name: "a",
      btn: "Add a",
      info: I.jsxs("div", {
        style: { width: "100%" },
        children: [
          I.jsx("h5", { children: "States:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 1 (Initial State)",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 2 (Final State)",
          }),
          I.jsx("h5", { children: "Transition:" }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Transitioning from state 1 to state 2, denoted by the input symbol",
              " ",
              I.jsx("q", {
                style: { color: "green", fontSize: 15 },
                children: "a",
              }),
            ],
          }),
        ],
      }),
    },
    {
      id: 2,
      flow: I.jsxs("h5", {
        children: [
          "Create ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15, margin: 0 },
            children: "b",
          }),
          " ",
          "single state NFA.",
        ],
      }),
      name: "b",
      btn: "Add b",
      info: I.jsxs("div", {
        style: { width: "100%" },
        children: [
          I.jsx("h5", { children: "States:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 3 (Initial State)",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 4 (Final State)",
          }),
          I.jsx("h5", { children: "Transition:" }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "From State 3 to State 4 labeled with input symbol",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b",
              }),
            ],
          }),
        ],
      }),
    },
    {
      id: 3,
      flow: I.jsxs("h5", {
        children: [
          "Click to perform",
          " ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15, margin: 0 },
            children: "union",
          }),
          " ",
          "operation.",
        ],
      }),
      btn: "Add union",
      name: "Add union",
      info: I.jsxs("div", {
        style: { width: "100%" },
        children: [
          I.jsx("h5", { children: "States:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 5 (Initial State)",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 6 (Final State)",
          }),
          I.jsx("h5", { children: "Transition:" }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add ε-transitions from the New Start State",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "5",
              }),
              " to the start states",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "1",
              }),
              ",",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "3",
              }),
              " of the existing NFAs.",
            ],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add ε-transitions from the accepting states",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "2",
              }),
              ",",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "4",
              }),
              " of the existing NFAs to the New Final State",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "6",
              }),
              ".",
            ],
          }),
          I.jsx("h5", { children: "Notes:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children:
              "When the union operation is performed, 4 ε-transitions are used in total:",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children:
              "2 ε-transitions for connecting the New Start State to the existing NFAs.",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children:
              "2 ε-transitions for connecting the accepting states of the existing NFAs to the New Final State.",
          }),
        ],
      }),
    },
  ],
  s$ = [
    {
      id: 1,
      flow: I.jsxs("h5", {
        children: [
          "Create ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15, margin: 0 },
            children: "a",
          }),
          " ",
          "single state NFA.",
        ],
      }),
      name: "a",
      btn: "Add a",
      info: I.jsxs("div", {
        style: { width: "100%" },
        children: [
          I.jsx("h5", { children: "States:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 1 (Initial State)",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 2 (Final State)",
          }),
          I.jsx("h5", { children: "Transition:" }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Transitioning from state 1 to state 2, denoted by the input symbol",
              " ",
              I.jsx("q", {
                style: { color: "green", fontSize: 15 },
                children: "a",
              }),
            ],
          }),
        ],
      }),
    },
    {
      id: 2,
      flow: I.jsxs("h5", {
        children: [
          "Click to perform",
          " ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15, margin: 0 },
            children: "Kleene star",
          }),
          " ",
          "operation on ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15, margin: 0 },
            children: "a",
          }),
          ".",
        ],
      }),
      btn: "Add Kleene star",
      name: "kleene",
      info: I.jsxs("div", {
        style: { width: "100%" },
        children: [
          I.jsx("h5", { children: "States:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 3 (New Initial State)",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 4 (New Final State)",
          }),
          I.jsx("h5", { children: "Transition:" }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add ε-transition from New Start State",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "3",
              }),
              " to the original start state",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "1",
              }),
              ".",
            ],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add ε-transition from the accept state",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "2",
              }),
              " back to the original start state",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "1",
              }),
              ".",
            ],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add ε-transition from original accept state",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "2",
              }),
              " to New Accept State",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "4",
              }),
              ".",
            ],
          }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add ε-transition from New Start State",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "3",
              }),
              " directly to New Accept State",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "4",
              }),
              " for zero occurrences.",
            ],
          }),
          I.jsx("h5", { children: "Notes:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children:
              "4 ε-transitions are used to apply the Kleene star to `a`.",
          }),
        ],
      }),
    },
    {
      id: 3,
      flow: I.jsxs("h5", {
        children: [
          "Create ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15, margin: 0 },
            children: "b",
          }),
          " ",
          "single state NFA.",
        ],
      }),
      name: "b1",
      btn: "Add b",
      info: I.jsxs("div", {
        style: { width: "100%" },
        children: [
          I.jsx("h5", { children: "States:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 5 (Initial State)",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 6 (Final State)",
          }),
          I.jsx("h5", { children: "Transition:" }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "From State 5 to State 6 labeled with input symbol",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b",
              }),
              ".",
            ],
          }),
        ],
      }),
    },
    {
      id: 4,
      flow: I.jsxs("h5", {
        children: [
          "Click to perform",
          " ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15, margin: 0 },
            children: "concatenation",
          }),
          " ",
          "operation between ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15, margin: 0 },
            children: "a*",
          }),
          " and",
          " ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15, margin: 0 },
            children: "b",
          }),
          ".",
        ],
      }),
      btn: "Add Concat",
      name: "concat",
      info: I.jsxs("div", {
        style: { width: "100%" },
        children: [
          I.jsx("h5", { children: "States:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 3 (Initial State from a*)",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 6 (Final State from b)",
          }),
          I.jsx("h5", { children: "Transition:" }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Add ε-transition from the accept state of a*",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "4",
              }),
              " to the start state of b",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "5",
              }),
              ".",
            ],
          }),
        ],
      }),
    },
  ],
  a$ = [
    {
      id: 1,
      flow: I.jsxs("h5", {
        children: [
          "Create ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15, margin: 0 },
            children: "a",
          }),
          " ",
          "single state NFA.",
        ],
      }),
      name: "a",
      btn: "Add a",
      info: I.jsxs("div", {
        style: { width: "100%" },
        children: [
          I.jsx("h5", { children: "States:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 1 (Initial State)",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 2 (Final State)",
          }),
          I.jsx("h5", { children: "Transition:" }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Transitioning from state 1 to state 2, denoted by the input symbol",
              " ",
              I.jsx("q", {
                style: { color: "green", fontSize: 15 },
                children: "a",
              }),
            ],
          }),
        ],
      }),
    },
    {
      id: 2,
      flow: I.jsxs("h5", {
        children: [
          "Create ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15, margin: 0 },
            children: "b",
          }),
          " ",
          "single state NFA.",
        ],
      }),
      name: "b",
      btn: "Add b",
      info: I.jsxs("div", {
        style: { width: "100%" },
        children: [
          I.jsx("h5", { children: "States:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 3 (Initial State)",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 4 (Final State)",
          }),
          I.jsx("h5", { children: "Transition:" }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "From State 3 to State 4 labeled with input symbol",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "b",
              }),
            ],
          }),
        ],
      }),
    },
    {
      id: 3,
      flow: I.jsxs("h5", {
        children: [
          "Click to perform",
          " ",
          I.jsx("q", {
            style: { color: "green", fontSize: 15, margin: 0 },
            children: "concatenation",
          }),
          " ",
          "operation.",
        ],
      }),
      btn: "Add Concat",
      name: "concat",
      info: I.jsxs("div", {
        style: { width: "100%" },
        children: [
          I.jsx("h5", { children: "States:" }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 1 (Initial State)",
          }),
          I.jsx("p", {
            style: { fontSize: 13 },
            children: "State 4 (Final State)",
          }),
          I.jsx("h5", { children: "Transition:" }),
          I.jsxs("p", {
            style: { fontSize: 13 },
            children: [
              "Merge the accept state of `a`",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "2",
              }),
              " with the start state of `b`",
              " ",
              I.jsx("b", {
                style: { color: "green", fontSize: 15 },
                children: "3",
              }),
              ", resulting in a single path from 1 to 4.",
            ],
          }),
        ],
      }),
    },
  ],
  ki = [0, aP, r$, aP, i$, o$, s$, a$],
  Lc = ({
    isEnabel: t,
    position: e = [-2, 1, 0],
    textone: n = "1",
    texttwo: r = "2",
  }) => {
    const i = new W(2, 0, 0),
      o = new W(0, 0, 0),
      s = Vc();
    return I.jsxs("group", {
      onClick: () => {
        s(Gc(!0)), s(Gf(ki[1][0].info));
      },
      position: e,
      children: [
        I.jsx(Xn, { scale: 0.35, text: n, position: [0, 0, 0], isEnabel: t }),
        I.jsx(pn, {
          position: [1, 0.15, 0],
          scale: 0.2,
          color: t ? "white" : "grey",
          children: "a",
        }),
        I.jsx("arrowHelper", {
          args: [i, o, 1.87, t ? "white" : "grey", 0.2, 0.09],
        }),
        I.jsx(Xn, { isEnabel: t, scale: 0.35, text: r, position: [2, 0, 0] }),
      ],
    });
  },
  xc = ({
    isEnabel: t,
    position: e = [-2, -1, 0],
    textone: n = "3",
    texttwo: r = "4",
  }) => {
    const i = new W(2, 0, 0),
      o = new W(0, 0, 0),
      s = Vc();
    return I.jsxs("group", {
      onClick: () => {
        s(Gc(!0)), s(Gf(ki[1][1].info));
      },
      position: e,
      children: [
        I.jsx(Xn, { scale: 0.35, text: n, position: [0, 0, 0], isEnabel: t }),
        I.jsx(pn, {
          position: [1, 0.15, 0],
          scale: 0.2,
          color: t ? "white" : "grey",
          children: "b",
        }),
        I.jsx("arrowHelper", {
          args: [i, o, 1.87, t ? "white" : "grey", 0.2, 0.09],
        }),
        I.jsx(Xn, { scale: 0.35, text: r, position: [2, 0, 0], isEnabel: t }),
      ],
    });
  },
  MM = ({ isEnabel: t }) => {
    const e = new W(-2, -1, 0),
      n = new W(4, 0.45, 0),
      r = new W(2, 0, 0),
      i = new W(4, -0.45, 0),
      o = new W(-2, -1, 0),
      s = new W(4, -0.45, 0),
      a = new W(2, -2, 0),
      l = new W(4, 0.45, 0),
      c = Vc();
    return I.jsxs("group", {
      onClick: () => {
        c(Gc(!0)), c(Gf(ki[1][2].info));
      },
      position: [-2, 1, 0],
      children: [
        I.jsx(Xn, {
          scale: 0.35,
          text: "5",
          position: [-2, -1, 0],
          isEnabel: t,
        }),
        I.jsxs("group", {
          children: [
            I.jsx(pn, {
              position: [-1.2, -0.4, 0],
              scale: 0.2,
              color: t ? "white" : "grey",
              children: "ε",
            }),
            I.jsx("arrowHelper", {
              args: [n, e, 2.1, t ? "#00DFFF" : "grey", 0.2, 0.09],
            }),
          ],
        }),
        I.jsxs("group", {
          children: [
            I.jsx(pn, {
              position: [3, -0.35, 0],
              scale: 0.2,
              color: t ? "white" : "grey",
              children: "ε",
            }),
            I.jsx("arrowHelper", {
              args: [i, r, 2.1, t ? "#00DFFF" : "grey", , 0.2, 0.09],
            }),
          ],
        }),
        I.jsxs("group", {
          children: [
            I.jsx(pn, {
              position: [-1.2, -1.6, 0],
              scale: 0.2,
              color: t ? "white" : "grey",
              children: "ε",
            }),
            I.jsx("arrowHelper", {
              args: [s, o, 2.1, t ? "#00DFFF" : "grey", , 0.2, 0.09],
            }),
          ],
        }),
        I.jsxs("group", {
          children: [
            I.jsx(pn, {
              position: [3, -1.65, 0],
              scale: 0.2,
              color: t ? "white" : "grey",
              children: "ε",
            }),
            I.jsx("arrowHelper", {
              args: [l, a, 2.1, t ? "#00DFFF" : "grey", , 0.2, 0.09],
            }),
          ],
        }),
        I.jsx(Xn, {
          scale: 0.35,
          text: "6",
          position: [4, -1, 0],
          isEnabel: t,
        }),
      ],
    });
  },
  kN = ({ isEnabel: t }) => {
    const e = new W(-3.5, -1, 0),
      n = new W(4, 0, 0),
      r = new W(4, -1, 0),
      i = new W(4, -0, 0),
      o = new W(5.5, 1.3, 0),
      s = new W(3.5, -1, 0),
      a = new W(-2, -3, 0),
      l = new W(-2, 1.5, 0),
      c = Vc();
    return I.jsxs("group", {
      onClick: () => {
        c(Gc(!0)), c(Gf(ki[1][3].info));
      },
      position: [-2, 1, 0],
      children: [
        I.jsx(Xn, {
          scale: 0.35,
          text: "7",
          position: [-3.5, -1, 0],
          isEnabel: t,
        }),
        I.jsxs("group", {
          children: [
            I.jsx(pn, {
              position: [-3, -0.8, 0],
              scale: 0.2,
              color: t ? "white" : "grey",
              children: "ε",
            }),
            I.jsx("arrowHelper", {
              args: [n, e, 1.3, t ? "#FFA305" : "grey", 0.2, 0.09],
            }),
          ],
        }),
        I.jsxs("group", {
          children: [
            I.jsx(pn, {
              position: [4.5, -0.8, 0],
              scale: 0.2,
              color: t ? "white" : "grey",
              children: "ε",
            }),
            I.jsx("arrowHelper", {
              args: [i, r, 1.3, t ? "#FFA305" : "grey", 0.2, 0.09],
            }),
          ],
        }),
        I.jsxs("group", {
          children: [
            I.jsx(vo, {
              points: [
                [-3.5, -1, 0],
                [-3.5, 1.3, 0],
              ],
              linewidth: 1.3,
              color: t ? "#FFA305" : "grey",
            }),
            I.jsx(vo, {
              points: [
                [-3.5, 1.3, 0],
                [5.5, 1.3, 0],
              ],
              linewidth: 1.3,
              color: t ? "#FFA305" : "grey",
            }),
            I.jsx(pn, {
              position: [1, 1.5, 0],
              scale: 0.2,
              color: t ? "white" : "grey",
              children: "ε",
            }),
            I.jsx("arrowHelper", {
              args: [s, o, 2.1, t ? "#FFA305" : "grey", , 0.2, 0.09],
            }),
          ],
        }),
        I.jsxs("group", {
          children: [
            I.jsx(vo, {
              points: [
                [4, -1, 0],
                [4, -3, 0],
              ],
              linewidth: 1.3,
              color: t ? "#FFA305" : "grey",
            }),
            I.jsx(vo, {
              points: [
                [4, -3, 0],
                [-2, -3, 0],
              ],
              linewidth: 1.3,
              color: t ? "#FFA305" : "grey",
            }),
            I.jsx(pn, {
              position: [1, -3.2, 0],
              scale: 0.2,
              color: t ? "white" : "grey",
              children: "ε",
            }),
            I.jsx("arrowHelper", {
              args: [l, a, 1.8, t ? "#FFA305" : "grey", 0.2, 0.09],
            }),
          ],
        }),
        I.jsx(Xn, {
          scale: 0.35,
          text: "8",
          position: [5.5, -1, 0],
          isEnabel: t,
        }),
      ],
    });
  },
  l$ = () => {
    const { firstRe: t, clickedStep: e } = Jo((n) => n.NFA);
    return (
      console.log(e),
      I.jsxs("group", {
        children: [
          t.a && I.jsx(Lc, { isEnabel: e.character }),
          t.b && I.jsx(xc, { isEnabel: e.character }),
          t.union && I.jsx(MM, { isEnabel: e.union }),
          t.kleene && I.jsx(kN, { isEnabel: e["Kleene star"] }),
        ],
      })
    );
  },
  BN = ({ isEnabel: t }) => {
    const e = new W(2, 0, 0),
      n = new W(0, 0, 0),
      r = new W(2, 0, 0),
      i = new W(4, 0, 0);
    return I.jsxs("group", {
      position: [-2, 0, 0],
      children: [
        I.jsx(Xn, { scale: 0.35, text: "1", position: [0, 0, 0], isEnabel: t }),
        I.jsx(pn, { fontSize: 0.18, position: [1, 0.11, 0], children: "a" }),
        I.jsx(pn, { fontSize: 0.18, position: [3, 0.11, 0], children: "b" }),
        I.jsx("arrowHelper", {
          args: [e, n, 1.87, t ? "#FF00D1" : "white", 0.2, 0.09],
        }),
        I.jsx(Xn, { scale: 0.35, text: "2", position: [2, 0, 0], isEnabel: t }),
        I.jsx(Xn, { scale: 0.35, text: "3", position: [4, 0, 0], isEnabel: t }),
        I.jsx("arrowHelper", {
          args: [i, r, 1.87, t ? "#FF00D1" : "white", 0.2, 0.09],
        }),
      ],
    });
  },
  c$ = ({ isEnabel: t }) => {
    const e = new W(-2, -1, 0),
      n = new W(1.5, 0, 0),
      r = new W(6, 1.3, 0),
      i = new W(4, -1.5, 0),
      o = new W(4, -1, 0),
      s = new W(6, 0, 0),
      a = new W(0, -2.5, 0),
      l = new W(-2, 1.5, 0);
    return I.jsxs("group", {
      position: [-2, 1, 0],
      children: [
        I.jsx(Xn, {
          scale: 0.35,
          text: "4",
          position: [-2, -1, 0],
          isEnabel: t,
        }),
        I.jsx(Xn, {
          scale: 0.35,
          text: "5",
          position: [6, -1, 0],
          isEnabel: t,
        }),
        I.jsxs("group", {
          children: [
            I.jsx(pn, {
              position: [-1, -0.85, 0],
              scale: 0.2,
              color: t ? "white" : "grey",
              children: "ε",
            }),
            I.jsx("arrowHelper", {
              args: [n, e, 1.85, t ? "#FFA305" : "grey", 0.2, 0.09],
            }),
          ],
        }),
        I.jsx("arrowHelper", {
          args: [s, o, 1.8, t ? "#FFA305" : "grey", 0.2, 0.09],
        }),
        I.jsxs("group", {
          children: [
            I.jsx(pn, {
              position: [4.8, -0.8, 0],
              scale: 0.2,
              color: t ? "white" : "grey",
              children: "ε",
            }),
            I.jsx("arrowHelper", {
              args: [i, r, 2.1, t ? "#FFA305" : "grey", 0.2, 0.09],
            }),
          ],
        }),
        I.jsxs("group", {
          children: [
            I.jsx(vo, {
              points: [
                [-2, -1, 0],
                [-2, 1.3, 0],
              ],
              linewidth: 1.3,
              color: t ? "#FFA305" : "grey",
            }),
            I.jsx(vo, {
              points: [
                [-2, 1.3, 0],
                [6, 1.3, 0],
              ],
              linewidth: 1.3,
              color: t ? "#FFA305" : "grey",
            }),
            I.jsx(pn, {
              position: [2, 1.46, 0],
              scale: 0.2,
              color: t ? "white" : "grey",
              children: "E",
            }),
          ],
        }),
        I.jsxs("group", {
          children: [
            I.jsx("arrowHelper", {
              args: [l, a, 1.3, t ? "#FFA305" : "grey", 0.2, 0.09],
            }),
            I.jsx(vo, {
              points: [
                [4, -1, 0],
                [4, -2.5, 0],
              ],
              linewidth: 1.3,
              color: t ? "#FFA305" : "grey",
            }),
            I.jsx(vo, {
              points: [
                [4, -2.5, 0],
                [0, -2.5, 0],
              ],
              linewidth: 1.3,
              color: t ? "#FFA305" : "grey",
            }),
            I.jsx(pn, {
              position: [2, -2.3, 0],
              scale: 0.2,
              color: t ? "white" : "grey",
              children: "ε",
            }),
          ],
        }),
      ],
    });
  },
  u$ = () => {
    const { secondRe: t, clickedStep: e, showConcat: n } = Jo((r) => r.NFA);
    return (
      console.log(t),
      I.jsxs("group", {
        children: [
          t.a && !n && I.jsx(Lc, { isEnabel: e.character }),
          t.b && !n && I.jsx(xc, { isEnabel: e.character }),
          t.concat && n && I.jsx(BN, { isEnabel: e.concatenation }),
          t.kleene && I.jsx(c$, { isEnabel: e["Kleene star"] }),
        ],
      })
    );
  },
  f$ = ({ isEnabel: t }) => {
    const e = new W(13, 0, 0),
      n = new W(8.5, 0, 0),
      r = new W(10, 0, 0),
      i = new W(11, 0, 0),
      o = new W(14, 0, 0),
      s = new W(11.5, 0, 0);
    return I.jsxs("group", {
      position: [-5, 0, 0],
      children: [
        I.jsx(pn, {
          position: [9.3, 0.2, 0],
          scale: 0.2,
          color: t ? "white" : "grey",
          children: "a",
        }),
        I.jsx(pn, {
          position: [11, 0.2, 0],
          scale: 0.2,
          color: t ? "white" : "grey",
          children: "b",
        }),
        I.jsx(pn, {
          position: [12.2, 0.2, 0],
          scale: 0.2,
          color: t ? "white" : "grey",
          children: "b",
        }),
        I.jsx(Xn, {
          scale: 0.35,
          text: "9",
          position: [10.1, 0, 0],
          isEnabel: t,
        }),
        I.jsx(Xn, {
          scale: 0.35,
          text: "10",
          position: [11.6, 0, 0],
          isEnabel: t,
        }),
        I.jsx(Xn, {
          scale: 0.35,
          text: "11",
          position: [13.1, 0, 0],
          isEnabel: t,
        }),
        I.jsx("arrowHelper", {
          args: [i, r, 1.46, t ? "#FF00D1" : "white", 0.2, 0.09],
        }),
        I.jsx("arrowHelper", {
          args: [e, n, 1.46, t ? "#FF00D1" : "white", 0.2, 0.09],
        }),
        I.jsx("arrowHelper", {
          args: [o, s, 1.46, t ? "#FF00D1" : "white", 0.2, 0.09],
        }),
      ],
    });
  },
  d$ = () => {
    const {
      thirdRe: t,
      clickedStep: e,
      fourthRe: n,
      showConcat: r,
    } = Jo((i) => i.NFA);
    return (
      console.log(n, "fourthRe"),
      I.jsxs("group", {
        children: [
          t.a && I.jsx(Lc, { isEnabel: e.character }),
          t.b && I.jsx(xc, { isEnabel: e.character }),
          t.union && I.jsx(MM, { isEnabel: e.union }),
          t.kleene && I.jsx(kN, { isEnabel: e["Kleene star"] }),
          n.a &&
            !r &&
            I.jsx(Lc, {
              textone: "9",
              texttwo: "10",
              position: [5, 1, 0],
              isEnabel: e.character,
            }),
          n.b &&
            !r &&
            I.jsx(xc, {
              textone: "11",
              texttwo: "12",
              position: [5, 0, 0],
              isEnabel: e.character,
            }),
          n.b1 &&
            !r &&
            I.jsx(xc, {
              textone: "13",
              texttwo: "14",
              position: [5, -1, 0],
              isEnabel: e.character,
            }),
          n.concat && r && I.jsx(f$, { isEnabel: e.concatenation }),
        ],
      })
    );
  },
  h$ = () => {
    const { firstRe: t, clickedStep: e } = Jo((n) => n.NFA);
    return I.jsxs("group", {
      children: [
        t.a && I.jsx(Lc, { isEnabel: e.character }),
        t.b && I.jsx(xc, { isEnabel: e.character }),
        t.union && I.jsx(MM, { isEnabel: e.union }),
      ],
    });
  },
  p$ = ({
    isEnabel: t,
    position: e = [-6, -1, 0],
    textone: n = "3",
    texttwo: r = "4",
  }) => {
    const i = new W(2, 0, 0),
      o = new W(0, 0, 0),
      s = Vc();
    return I.jsxs("group", {
      onClick: () => {
        s(Gc(!0)), s(Gf(ki[1][1].info));
      },
      position: e,
      children: [
        I.jsx(Xn, { scale: 0.35, text: n, position: [0, 0, 0], isEnabel: t }),
        I.jsx(pn, {
          position: [1, 0.15, 0],
          scale: 0.2,
          color: t ? "white" : "grey",
          children: "b",
        }),
        I.jsx("arrowHelper", {
          args: [i, o, 1.87, t ? "white" : "grey", 0.2, 0.09],
        }),
        I.jsx(Xn, { scale: 0.35, text: r, position: [2, 0, 0], isEnabel: t }),
      ],
    });
  },
  m$ = ({ isEnabel: t }) => {
    new W(2, 0, 0), new W(0, 0, 0);
    const e = new W(2, 0, 0),
      n = new W(4, 0, 0);
    return I.jsxs("group", {
      position: [0, 1, 0],
      children: [
        I.jsx(Xn, { scale: 0.35, text: "3", position: [4, 0, 0], isEnabel: t }),
        I.jsx("arrowHelper", {
          args: [n, e, 1.87, t ? "#FF00D1" : "white", 0.2, 0.09],
        }),
      ],
    });
  },
  g$ = ({ isEnabel: t }) => {
    const e = new W(-2, -1, 0),
      n = new W(1.5, 0, 0),
      r = new W(4, 1.3, 0),
      i = new W(4, -1.5, 0),
      o = new W(2, -1, 0),
      s = new W(4, 0, 0),
      a = new W(0, -2.5, 0),
      l = new W(-2, 1.5, 0);
    return I.jsxs("group", {
      position: [-2, 2, 0],
      children: [
        I.jsx(Xn, {
          scale: 0.35,
          text: "4",
          position: [-2, -1, 0],
          isEnabel: t,
        }),
        I.jsx(Xn, {
          scale: 0.35,
          text: "5",
          position: [4, -1, 0],
          isEnabel: t,
        }),
        I.jsxs("group", {
          children: [
            I.jsx(pn, {
              position: [-1, -0.85, 0],
              scale: 0.2,
              color: t ? "white" : "grey",
              children: "ε",
            }),
            I.jsx("arrowHelper", {
              args: [n, e, 1.85, t ? "#FFA305" : "grey", 0.2, 0.09],
            }),
          ],
        }),
        I.jsx("arrowHelper", {
          args: [s, o, 1.8, t ? "#FFA305" : "grey", 0.2, 0.09],
        }),
        I.jsxs("group", {
          children: [
            I.jsx(pn, {
              position: [2.8, -0.8, 0],
              scale: 0.2,
              color: t ? "white" : "grey",
              children: "ε",
            }),
            I.jsx("arrowHelper", {
              args: [i, r, 2.1, t ? "#FFA305" : "grey", 0.2, 0.09],
            }),
          ],
        }),
        I.jsxs("group", {
          children: [
            I.jsx(vo, {
              points: [
                [-2, -1, 0],
                [-2, 1.3, 0],
              ],
              linewidth: 1.3,
              color: t ? "#FFA305" : "grey",
            }),
            I.jsx(vo, {
              points: [
                [-2, 1.3, 0],
                [4, 1.3, 0],
              ],
              linewidth: 1.3,
              color: t ? "#FFA305" : "grey",
            }),
            I.jsx(pn, {
              position: [2, 1.46, 0],
              scale: 0.2,
              color: t ? "white" : "grey",
              children: "ε",
            }),
          ],
        }),
        I.jsxs("group", {
          children: [
            I.jsx("arrowHelper", {
              args: [l, a, 1.3, t ? "#FFA305" : "grey", 0.2, 0.09],
            }),
            I.jsx(vo, {
              points: [
                [2, -1, 0],
                [2, -2.5, 0],
              ],
              linewidth: 1.3,
              color: t ? "#FFA305" : "grey",
            }),
            I.jsx(vo, {
              points: [
                [2, -2.5, 0],
                [0, -2.5, 0],
              ],
              linewidth: 1.3,
              color: t ? "#FFA305" : "grey",
            }),
            I.jsx(pn, {
              position: [1, -2.8, 0],
              scale: 0.2,
              color: t ? "white" : "grey",
              children: "ε",
            }),
          ],
        }),
      ],
    });
  },
  v$ = () => {
    const { secondRe: t, clickedStep: e } = Jo((n) => n.NFA);
    return I.jsxs("group", {
      children: [
        t.a &&
          I.jsx(Lc, {
            isEnable: e.character,
            position: [-2, 1, 0],
            textone: "1",
            texttwo: "2",
          }),
        t.kleene && I.jsx(g$, { isEnable: e["Kleene star"] }),
        t.b &&
          !t.concat &&
          I.jsx(p$, {
            isEnable: e.character,
            position: [-2, -2, 0],
            textone: "5",
            texttwo: "6",
          }),
        t.concat && I.jsx(m$, { isEnable: e.concatenation }),
      ],
    });
  },
  y$ = () => {
    const { secondRe: t, clickedStep: e, showConcat: n } = Jo((r) => r.NFA);
    return (
      console.log(t),
      I.jsxs("group", {
        children: [
          t.a && !n && I.jsx(Lc, { isEnabel: e.character }),
          t.b && !n && I.jsx(xc, { isEnabel: e.character }),
          t.concat && n && I.jsx(BN, { isEnabel: e.concatenation }),
        ],
      })
    );
  },
  x$ = () => {
    const { REvalue: t } = Jo((e) => e.NFA);
    return I.jsxs("group", {
      scale: 0.5,
      children: [
        t === "(a|b)*" && I.jsx(l$, {}),
        t === "(ab)*" && I.jsx(u$, {}),
        t === "(a|b)*abb" && I.jsx(d$, {}),
        t === "a|b" && I.jsx(h$, {}),
        t === "a*b" && I.jsx(v$, {}),
        t === "ab" && I.jsx(y$, {}),
      ],
    });
  },
  _$ = () => {
    const { isInfo: t, currentOperationMessage: e } = Jo((n) => n.NFA);
    return I.jsxs("div", {
      style: {
        height: "100%",
        display: "flex",
        flexDirection: "column",
        position: "relative",
      },
      children: [
        I.jsxs(bW, {
          camera: { position: [-0.5, 2, 40], fov: 10 },
          style: { height: "100%", width: "100%", background: "#0c0f21" },
          children: [
            I.jsx("pointLight", { position: [1, 1, 5], intensity: 260 }),
            I.jsx(x$, {}),
            I.jsx(X9, {}),
            e &&
              I.jsx(pn, {
                position: [-0.3, -2, 0],
                fontSize: 0.15,
                color: "white",
                anchorX: "center",
                anchorY: "middle",
                textAlign: "center",
                animation: "fadeIn 0.5s ease-in",
                children: e,
              }),
          ],
        }),
        I.jsx("style", {
          children: `
          @keyframes fadeIn {
            from {
              opacity: 0;
            }
            to {
              opacity: 1;
            }
          }
        `,
        }),
      ],
    });
  };
var HN = { exports: {} };
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/ (function (t) {
  (function () {
    var e = {}.hasOwnProperty;
    function n() {
      for (var o = "", s = 0; s < arguments.length; s++) {
        var a = arguments[s];
        a && (o = i(o, r(a)));
      }
      return o;
    }
    function r(o) {
      if (typeof o == "string" || typeof o == "number") return o;
      if (typeof o != "object") return "";
      if (Array.isArray(o)) return n.apply(null, o);
      if (
        o.toString !== Object.prototype.toString &&
        !o.toString.toString().includes("[native code]")
      )
        return o.toString();
      var s = "";
      for (var a in o) e.call(o, a) && o[a] && (s = i(s, a));
      return s;
    }
    function i(o, s) {
      return s ? (o ? o + " " + s : o + s) : o;
    }
    t.exports ? ((n.default = n), (t.exports = n)) : (window.classNames = n);
  })();
})(HN);
var S$ = HN.exports;
const Ct = cp(S$);
var VN = { exports: {} },
  on = {};
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var CM = Symbol.for("react.element"),
  TM = Symbol.for("react.portal"),
  Iy = Symbol.for("react.fragment"),
  Oy = Symbol.for("react.strict_mode"),
  Fy = Symbol.for("react.profiler"),
  Ny = Symbol.for("react.provider"),
  Dy = Symbol.for("react.context"),
  w$ = Symbol.for("react.server_context"),
  Uy = Symbol.for("react.forward_ref"),
  zy = Symbol.for("react.suspense"),
  ky = Symbol.for("react.suspense_list"),
  By = Symbol.for("react.memo"),
  Hy = Symbol.for("react.lazy"),
  b$ = Symbol.for("react.offscreen"),
  GN;
GN = Symbol.for("react.module.reference");
function wo(t) {
  if (typeof t == "object" && t !== null) {
    var e = t.$$typeof;
    switch (e) {
      case CM:
        switch (((t = t.type), t)) {
          case Iy:
          case Fy:
          case Oy:
          case zy:
          case ky:
            return t;
          default:
            switch (((t = t && t.$$typeof), t)) {
              case w$:
              case Dy:
              case Uy:
              case Hy:
              case By:
              case Ny:
                return t;
              default:
                return e;
            }
        }
      case TM:
        return e;
    }
  }
}
on.ContextConsumer = Dy;
on.ContextProvider = Ny;
on.Element = CM;
on.ForwardRef = Uy;
on.Fragment = Iy;
on.Lazy = Hy;
on.Memo = By;
on.Portal = TM;
on.Profiler = Fy;
on.StrictMode = Oy;
on.Suspense = zy;
on.SuspenseList = ky;
on.isAsyncMode = function () {
  return !1;
};
on.isConcurrentMode = function () {
  return !1;
};
on.isContextConsumer = function (t) {
  return wo(t) === Dy;
};
on.isContextProvider = function (t) {
  return wo(t) === Ny;
};
on.isElement = function (t) {
  return typeof t == "object" && t !== null && t.$$typeof === CM;
};
on.isForwardRef = function (t) {
  return wo(t) === Uy;
};
on.isFragment = function (t) {
  return wo(t) === Iy;
};
on.isLazy = function (t) {
  return wo(t) === Hy;
};
on.isMemo = function (t) {
  return wo(t) === By;
};
on.isPortal = function (t) {
  return wo(t) === TM;
};
on.isProfiler = function (t) {
  return wo(t) === Fy;
};
on.isStrictMode = function (t) {
  return wo(t) === Oy;
};
on.isSuspense = function (t) {
  return wo(t) === zy;
};
on.isSuspenseList = function (t) {
  return wo(t) === ky;
};
on.isValidElementType = function (t) {
  return (
    typeof t == "string" ||
    typeof t == "function" ||
    t === Iy ||
    t === Fy ||
    t === Oy ||
    t === zy ||
    t === ky ||
    t === b$ ||
    (typeof t == "object" &&
      t !== null &&
      (t.$$typeof === Hy ||
        t.$$typeof === By ||
        t.$$typeof === Ny ||
        t.$$typeof === Dy ||
        t.$$typeof === Uy ||
        t.$$typeof === GN ||
        t.getModuleId !== void 0))
  );
};
on.typeOf = wo;
VN.exports = on;
var jN = VN.exports;
function b0(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
    n = [];
  return (
    at.Children.forEach(t, function (r) {
      (r == null && !e.keepEmpty) ||
        (Array.isArray(r)
          ? (n = n.concat(b0(r)))
          : jN.isFragment(r) && r.props
          ? (n = n.concat(b0(r.props.children, e)))
          : n.push(r));
    }),
    n
  );
}
var jw = {},
  E$ = function (e) {};
function M$(t, e) {}
function C$(t, e) {}
function T$() {
  jw = {};
}
function WN(t, e, n) {
  !e && !jw[n] && (t(!1, n), (jw[n] = !0));
}
function qi(t, e) {
  WN(M$, t, e);
}
function A$(t, e) {
  WN(C$, t, e);
}
qi.preMessage = E$;
qi.resetWarned = T$;
qi.noteOnce = A$;
function Qt(t) {
  "@babel/helpers - typeof";
  return (
    (Qt =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    Qt(t)
  );
}
function R$(t, e) {
  if (Qt(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e || "default");
    if (Qt(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
function $N(t) {
  var e = R$(t, "string");
  return Qt(e) == "symbol" ? e : String(e);
}
function Me(t, e, n) {
  return (
    (e = $N(e)),
    e in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function lP(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r);
  }
  return n;
}
function We(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? lP(Object(n), !0).forEach(function (r) {
          Me(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
      : lP(Object(n)).forEach(function (r) {
          Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
        });
  }
  return t;
}
function P$(t) {
  return t instanceof HTMLElement || t instanceof SVGElement;
}
function Iv(t) {
  return P$(t) ? t : t instanceof at.Component ? TI.findDOMNode(t) : null;
}
function AM(t, e, n) {
  var r = z.useRef({});
  return (
    (!("value" in r.current) || n(r.current.condition, e)) &&
      ((r.current.value = t()), (r.current.condition = e)),
    r.current.value
  );
}
function XN(t, e) {
  typeof t == "function"
    ? t(e)
    : Qt(t) === "object" && t && "current" in t && (t.current = e);
}
function jc() {
  for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
    e[n] = arguments[n];
  var r = e.filter(function (i) {
    return i;
  });
  return r.length <= 1
    ? r[0]
    : function (i) {
        e.forEach(function (o) {
          XN(o, i);
        });
      };
}
function L$() {
  for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
    e[n] = arguments[n];
  return AM(
    function () {
      return jc.apply(void 0, e);
    },
    e,
    function (r, i) {
      return (
        r.length !== i.length ||
        r.every(function (o, s) {
          return o !== i[s];
        })
      );
    }
  );
}
function RM(t) {
  var e,
    n,
    r = jN.isMemo(t) ? t.type.type : t.type;
  return !(
    (typeof r == "function" &&
      !((e = r.prototype) !== null && e !== void 0 && e.render)) ||
    (typeof t == "function" &&
      !((n = t.prototype) !== null && n !== void 0 && n.render))
  );
}
var Ww = z.createContext(null);
function I$(t) {
  var e = t.children,
    n = t.onBatchResize,
    r = z.useRef(0),
    i = z.useRef([]),
    o = z.useContext(Ww),
    s = z.useCallback(
      function (a, l, c) {
        r.current += 1;
        var u = r.current;
        i.current.push({ size: a, element: l, data: c }),
          Promise.resolve().then(function () {
            u === r.current && (n == null || n(i.current), (i.current = []));
          }),
          o == null || o(a, l, c);
      },
      [n, o]
    );
  return z.createElement(Ww.Provider, { value: s }, e);
}
var qN = (function () {
    if (typeof Map < "u") return Map;
    function t(e, n) {
      var r = -1;
      return (
        e.some(function (i, o) {
          return i[0] === n ? ((r = o), !0) : !1;
        }),
        r
      );
    }
    return (function () {
      function e() {
        this.__entries__ = [];
      }
      return (
        Object.defineProperty(e.prototype, "size", {
          get: function () {
            return this.__entries__.length;
          },
          enumerable: !0,
          configurable: !0,
        }),
        (e.prototype.get = function (n) {
          var r = t(this.__entries__, n),
            i = this.__entries__[r];
          return i && i[1];
        }),
        (e.prototype.set = function (n, r) {
          var i = t(this.__entries__, n);
          ~i ? (this.__entries__[i][1] = r) : this.__entries__.push([n, r]);
        }),
        (e.prototype.delete = function (n) {
          var r = this.__entries__,
            i = t(r, n);
          ~i && r.splice(i, 1);
        }),
        (e.prototype.has = function (n) {
          return !!~t(this.__entries__, n);
        }),
        (e.prototype.clear = function () {
          this.__entries__.splice(0);
        }),
        (e.prototype.forEach = function (n, r) {
          r === void 0 && (r = null);
          for (var i = 0, o = this.__entries__; i < o.length; i++) {
            var s = o[i];
            n.call(r, s[1], s[0]);
          }
        }),
        e
      );
    })();
  })(),
  $w =
    typeof window < "u" &&
    typeof document < "u" &&
    window.document === document,
  E0 = (function () {
    return typeof global < "u" && global.Math === Math
      ? global
      : typeof self < "u" && self.Math === Math
      ? self
      : typeof window < "u" && window.Math === Math
      ? window
      : Function("return this")();
  })(),
  O$ = (function () {
    return typeof requestAnimationFrame == "function"
      ? requestAnimationFrame.bind(E0)
      : function (t) {
          return setTimeout(function () {
            return t(Date.now());
          }, 1e3 / 60);
        };
  })(),
  F$ = 2;
function N$(t, e) {
  var n = !1,
    r = !1,
    i = 0;
  function o() {
    n && ((n = !1), t()), r && a();
  }
  function s() {
    O$(o);
  }
  function a() {
    var l = Date.now();
    if (n) {
      if (l - i < F$) return;
      r = !0;
    } else (n = !0), (r = !1), setTimeout(s, e);
    i = l;
  }
  return a;
}
var D$ = 20,
  U$ = ["top", "right", "bottom", "left", "width", "height", "size", "weight"],
  z$ = typeof MutationObserver < "u",
  k$ = (function () {
    function t() {
      (this.connected_ = !1),
        (this.mutationEventsAdded_ = !1),
        (this.mutationsObserver_ = null),
        (this.observers_ = []),
        (this.onTransitionEnd_ = this.onTransitionEnd_.bind(this)),
        (this.refresh = N$(this.refresh.bind(this), D$));
    }
    return (
      (t.prototype.addObserver = function (e) {
        ~this.observers_.indexOf(e) || this.observers_.push(e),
          this.connected_ || this.connect_();
      }),
      (t.prototype.removeObserver = function (e) {
        var n = this.observers_,
          r = n.indexOf(e);
        ~r && n.splice(r, 1),
          !n.length && this.connected_ && this.disconnect_();
      }),
      (t.prototype.refresh = function () {
        var e = this.updateObservers_();
        e && this.refresh();
      }),
      (t.prototype.updateObservers_ = function () {
        var e = this.observers_.filter(function (n) {
          return n.gatherActive(), n.hasActive();
        });
        return (
          e.forEach(function (n) {
            return n.broadcastActive();
          }),
          e.length > 0
        );
      }),
      (t.prototype.connect_ = function () {
        !$w ||
          this.connected_ ||
          (document.addEventListener("transitionend", this.onTransitionEnd_),
          window.addEventListener("resize", this.refresh),
          z$
            ? ((this.mutationsObserver_ = new MutationObserver(this.refresh)),
              this.mutationsObserver_.observe(document, {
                attributes: !0,
                childList: !0,
                characterData: !0,
                subtree: !0,
              }))
            : (document.addEventListener("DOMSubtreeModified", this.refresh),
              (this.mutationEventsAdded_ = !0)),
          (this.connected_ = !0));
      }),
      (t.prototype.disconnect_ = function () {
        !$w ||
          !this.connected_ ||
          (document.removeEventListener("transitionend", this.onTransitionEnd_),
          window.removeEventListener("resize", this.refresh),
          this.mutationsObserver_ && this.mutationsObserver_.disconnect(),
          this.mutationEventsAdded_ &&
            document.removeEventListener("DOMSubtreeModified", this.refresh),
          (this.mutationsObserver_ = null),
          (this.mutationEventsAdded_ = !1),
          (this.connected_ = !1));
      }),
      (t.prototype.onTransitionEnd_ = function (e) {
        var n = e.propertyName,
          r = n === void 0 ? "" : n,
          i = U$.some(function (o) {
            return !!~r.indexOf(o);
          });
        i && this.refresh();
      }),
      (t.getInstance = function () {
        return this.instance_ || (this.instance_ = new t()), this.instance_;
      }),
      (t.instance_ = null),
      t
    );
  })(),
  YN = function (t, e) {
    for (var n = 0, r = Object.keys(e); n < r.length; n++) {
      var i = r[n];
      Object.defineProperty(t, i, {
        value: e[i],
        enumerable: !1,
        writable: !1,
        configurable: !0,
      });
    }
    return t;
  },
  If = function (t) {
    var e = t && t.ownerDocument && t.ownerDocument.defaultView;
    return e || E0;
  },
  KN = Vy(0, 0, 0, 0);
function M0(t) {
  return parseFloat(t) || 0;
}
function cP(t) {
  for (var e = [], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
  return e.reduce(function (r, i) {
    var o = t["border-" + i + "-width"];
    return r + M0(o);
  }, 0);
}
function B$(t) {
  for (
    var e = ["top", "right", "bottom", "left"], n = {}, r = 0, i = e;
    r < i.length;
    r++
  ) {
    var o = i[r],
      s = t["padding-" + o];
    n[o] = M0(s);
  }
  return n;
}
function H$(t) {
  var e = t.getBBox();
  return Vy(0, 0, e.width, e.height);
}
function V$(t) {
  var e = t.clientWidth,
    n = t.clientHeight;
  if (!e && !n) return KN;
  var r = If(t).getComputedStyle(t),
    i = B$(r),
    o = i.left + i.right,
    s = i.top + i.bottom,
    a = M0(r.width),
    l = M0(r.height);
  if (
    (r.boxSizing === "border-box" &&
      (Math.round(a + o) !== e && (a -= cP(r, "left", "right") + o),
      Math.round(l + s) !== n && (l -= cP(r, "top", "bottom") + s)),
    !j$(t))
  ) {
    var c = Math.round(a + o) - e,
      u = Math.round(l + s) - n;
    Math.abs(c) !== 1 && (a -= c), Math.abs(u) !== 1 && (l -= u);
  }
  return Vy(i.left, i.top, a, l);
}
var G$ = (function () {
  return typeof SVGGraphicsElement < "u"
    ? function (t) {
        return t instanceof If(t).SVGGraphicsElement;
      }
    : function (t) {
        return t instanceof If(t).SVGElement && typeof t.getBBox == "function";
      };
})();
function j$(t) {
  return t === If(t).document.documentElement;
}
function W$(t) {
  return $w ? (G$(t) ? H$(t) : V$(t)) : KN;
}
function $$(t) {
  var e = t.x,
    n = t.y,
    r = t.width,
    i = t.height,
    o = typeof DOMRectReadOnly < "u" ? DOMRectReadOnly : Object,
    s = Object.create(o.prototype);
  return (
    YN(s, {
      x: e,
      y: n,
      width: r,
      height: i,
      top: n,
      right: e + r,
      bottom: i + n,
      left: e,
    }),
    s
  );
}
function Vy(t, e, n, r) {
  return { x: t, y: e, width: n, height: r };
}
var X$ = (function () {
    function t(e) {
      (this.broadcastWidth = 0),
        (this.broadcastHeight = 0),
        (this.contentRect_ = Vy(0, 0, 0, 0)),
        (this.target = e);
    }
    return (
      (t.prototype.isActive = function () {
        var e = W$(this.target);
        return (
          (this.contentRect_ = e),
          e.width !== this.broadcastWidth || e.height !== this.broadcastHeight
        );
      }),
      (t.prototype.broadcastRect = function () {
        var e = this.contentRect_;
        return (
          (this.broadcastWidth = e.width), (this.broadcastHeight = e.height), e
        );
      }),
      t
    );
  })(),
  q$ = (function () {
    function t(e, n) {
      var r = $$(n);
      YN(this, { target: e, contentRect: r });
    }
    return t;
  })(),
  Y$ = (function () {
    function t(e, n, r) {
      if (
        ((this.activeObservations_ = []),
        (this.observations_ = new qN()),
        typeof e != "function")
      )
        throw new TypeError(
          "The callback provided as parameter 1 is not a function."
        );
      (this.callback_ = e), (this.controller_ = n), (this.callbackCtx_ = r);
    }
    return (
      (t.prototype.observe = function (e) {
        if (!arguments.length)
          throw new TypeError("1 argument required, but only 0 present.");
        if (!(typeof Element > "u" || !(Element instanceof Object))) {
          if (!(e instanceof If(e).Element))
            throw new TypeError('parameter 1 is not of type "Element".');
          var n = this.observations_;
          n.has(e) ||
            (n.set(e, new X$(e)),
            this.controller_.addObserver(this),
            this.controller_.refresh());
        }
      }),
      (t.prototype.unobserve = function (e) {
        if (!arguments.length)
          throw new TypeError("1 argument required, but only 0 present.");
        if (!(typeof Element > "u" || !(Element instanceof Object))) {
          if (!(e instanceof If(e).Element))
            throw new TypeError('parameter 1 is not of type "Element".');
          var n = this.observations_;
          n.has(e) &&
            (n.delete(e), n.size || this.controller_.removeObserver(this));
        }
      }),
      (t.prototype.disconnect = function () {
        this.clearActive(),
          this.observations_.clear(),
          this.controller_.removeObserver(this);
      }),
      (t.prototype.gatherActive = function () {
        var e = this;
        this.clearActive(),
          this.observations_.forEach(function (n) {
            n.isActive() && e.activeObservations_.push(n);
          });
      }),
      (t.prototype.broadcastActive = function () {
        if (this.hasActive()) {
          var e = this.callbackCtx_,
            n = this.activeObservations_.map(function (r) {
              return new q$(r.target, r.broadcastRect());
            });
          this.callback_.call(e, n, e), this.clearActive();
        }
      }),
      (t.prototype.clearActive = function () {
        this.activeObservations_.splice(0);
      }),
      (t.prototype.hasActive = function () {
        return this.activeObservations_.length > 0;
      }),
      t
    );
  })(),
  ZN = typeof WeakMap < "u" ? new WeakMap() : new qN(),
  QN = (function () {
    function t(e) {
      if (!(this instanceof t))
        throw new TypeError("Cannot call a class as a function.");
      if (!arguments.length)
        throw new TypeError("1 argument required, but only 0 present.");
      var n = k$.getInstance(),
        r = new Y$(e, n, this);
      ZN.set(this, r);
    }
    return t;
  })();
["observe", "unobserve", "disconnect"].forEach(function (t) {
  QN.prototype[t] = function () {
    var e;
    return (e = ZN.get(this))[t].apply(e, arguments);
  };
});
var K$ = (function () {
    return typeof E0.ResizeObserver < "u" ? E0.ResizeObserver : QN;
  })(),
  Ha = new Map();
function Z$(t) {
  t.forEach(function (e) {
    var n,
      r = e.target;
    (n = Ha.get(r)) === null ||
      n === void 0 ||
      n.forEach(function (i) {
        return i(r);
      });
  });
}
var JN = new K$(Z$);
function Q$(t, e) {
  Ha.has(t) || (Ha.set(t, new Set()), JN.observe(t)), Ha.get(t).add(e);
}
function J$(t, e) {
  Ha.has(t) &&
    (Ha.get(t).delete(e), Ha.get(t).size || (JN.unobserve(t), Ha.delete(t)));
}
function bo(t, e) {
  if (!(t instanceof e))
    throw new TypeError("Cannot call a class as a function");
}
function uP(t, e) {
  for (var n = 0; n < e.length; n++) {
    var r = e[n];
    (r.enumerable = r.enumerable || !1),
      (r.configurable = !0),
      "value" in r && (r.writable = !0),
      Object.defineProperty(t, $N(r.key), r);
  }
}
function Eo(t, e, n) {
  return (
    e && uP(t.prototype, e),
    n && uP(t, n),
    Object.defineProperty(t, "prototype", { writable: !1 }),
    t
  );
}
function Xw(t, e) {
  return (
    (Xw = Object.setPrototypeOf
      ? Object.setPrototypeOf.bind()
      : function (r, i) {
          return (r.__proto__ = i), r;
        }),
    Xw(t, e)
  );
}
function jf(t, e) {
  if (typeof e != "function" && e !== null)
    throw new TypeError("Super expression must either be null or a function");
  (t.prototype = Object.create(e && e.prototype, {
    constructor: { value: t, writable: !0, configurable: !0 },
  })),
    Object.defineProperty(t, "prototype", { writable: !1 }),
    e && Xw(t, e);
}
function cl(t) {
  return (
    (cl = Object.setPrototypeOf
      ? Object.getPrototypeOf.bind()
      : function (n) {
          return n.__proto__ || Object.getPrototypeOf(n);
        }),
    cl(t)
  );
}
function Gy() {
  try {
    var t = !Boolean.prototype.valueOf.call(
      Reflect.construct(Boolean, [], function () {})
    );
  } catch {}
  return (Gy = function () {
    return !!t;
  })();
}
function Wt(t) {
  if (t === void 0)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    );
  return t;
}
function PM(t, e) {
  if (e && (Qt(e) === "object" || typeof e == "function")) return e;
  if (e !== void 0)
    throw new TypeError(
      "Derived constructors may only return object or undefined"
    );
  return Wt(t);
}
function jy(t) {
  var e = Gy();
  return function () {
    var r = cl(t),
      i;
    if (e) {
      var o = cl(this).constructor;
      i = Reflect.construct(r, arguments, o);
    } else i = r.apply(this, arguments);
    return PM(this, i);
  };
}
var eX = (function (t) {
  jf(n, t);
  var e = jy(n);
  function n() {
    return bo(this, n), e.apply(this, arguments);
  }
  return (
    Eo(n, [
      {
        key: "render",
        value: function () {
          return this.props.children;
        },
      },
    ]),
    n
  );
})(z.Component);
function tX(t, e) {
  var n = t.children,
    r = t.disabled,
    i = z.useRef(null),
    o = z.useRef(null),
    s = z.useContext(Ww),
    a = typeof n == "function",
    l = a ? n(i) : n,
    c = z.useRef({ width: -1, height: -1, offsetWidth: -1, offsetHeight: -1 }),
    u = !a && z.isValidElement(l) && RM(l),
    h = u ? l.ref : null,
    p = L$(h, i),
    m = function () {
      var g;
      return (
        Iv(i.current) ||
        (i.current && Qt(i.current) === "object"
          ? Iv(
              (g = i.current) === null || g === void 0
                ? void 0
                : g.nativeElement
            )
          : null) ||
        Iv(o.current)
      );
    };
  z.useImperativeHandle(e, function () {
    return m();
  });
  var v = z.useRef(t);
  v.current = t;
  var S = z.useCallback(function (x) {
    var g = v.current,
      y = g.onResize,
      _ = g.data,
      b = x.getBoundingClientRect(),
      T = b.width,
      M = b.height,
      C = x.offsetWidth,
      L = x.offsetHeight,
      A = Math.floor(T),
      P = Math.floor(M);
    if (
      c.current.width !== A ||
      c.current.height !== P ||
      c.current.offsetWidth !== C ||
      c.current.offsetHeight !== L
    ) {
      var k = { width: A, height: P, offsetWidth: C, offsetHeight: L };
      c.current = k;
      var B = C === Math.round(T) ? T : C,
        $ = L === Math.round(M) ? M : L,
        D = We(We({}, k), {}, { offsetWidth: B, offsetHeight: $ });
      s == null || s(D, x, _),
        y &&
          Promise.resolve().then(function () {
            y(D, x);
          });
    }
  }, []);
  return (
    z.useEffect(
      function () {
        var x = m();
        return (
          x && !r && Q$(x, S),
          function () {
            return J$(x, S);
          }
        );
      },
      [i.current, r]
    ),
    z.createElement(eX, { ref: o }, u ? z.cloneElement(l, { ref: p }) : l)
  );
}
var nX = z.forwardRef(tX),
  rX = "rc-observer-key";
function iX(t, e) {
  var n = t.children,
    r = typeof n == "function" ? [n] : b0(n);
  return r.map(function (i, o) {
    var s = (i == null ? void 0 : i.key) || "".concat(rX, "-").concat(o);
    return z.createElement(
      nX,
      mn({}, t, { key: s, ref: o === 0 ? e : void 0 }),
      i
    );
  });
}
var eD = z.forwardRef(iX);
eD.Collection = I$;
function LM(t, e) {
  var n = We({}, t);
  return (
    Array.isArray(e) &&
      e.forEach(function (r) {
        delete n[r];
      }),
    n
  );
}
function qw(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
  return r;
}
function oX(t) {
  if (Array.isArray(t)) return qw(t);
}
function tD(t) {
  if (
    (typeof Symbol < "u" && t[Symbol.iterator] != null) ||
    t["@@iterator"] != null
  )
    return Array.from(t);
}
function IM(t, e) {
  if (t) {
    if (typeof t == "string") return qw(t, e);
    var n = Object.prototype.toString.call(t).slice(8, -1);
    if (
      (n === "Object" && t.constructor && (n = t.constructor.name),
      n === "Map" || n === "Set")
    )
      return Array.from(t);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return qw(t, e);
  }
}
function sX() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Nt(t) {
  return oX(t) || tD(t) || IM(t) || sX();
}
var nD = function (e) {
    return +setTimeout(e, 16);
  },
  rD = function (e) {
    return clearTimeout(e);
  };
typeof window < "u" &&
  "requestAnimationFrame" in window &&
  ((nD = function (e) {
    return window.requestAnimationFrame(e);
  }),
  (rD = function (e) {
    return window.cancelAnimationFrame(e);
  }));
var fP = 0,
  OM = new Map();
function iD(t) {
  OM.delete(t);
}
var fa = function (e) {
  var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  fP += 1;
  var r = fP;
  function i(o) {
    if (o === 0) iD(r), e();
    else {
      var s = nD(function () {
        i(o - 1);
      });
      OM.set(r, s);
    }
  }
  return i(n), r;
};
fa.cancel = function (t) {
  var e = OM.get(t);
  return iD(t), rD(e);
};
function oD(t) {
  if (Array.isArray(t)) return t;
}
function aX(t, e) {
  var n =
    t == null
      ? null
      : (typeof Symbol < "u" && t[Symbol.iterator]) || t["@@iterator"];
  if (n != null) {
    var r,
      i,
      o,
      s,
      a = [],
      l = !0,
      c = !1;
    try {
      if (((o = (n = n.call(t)).next), e === 0)) {
        if (Object(n) !== n) return;
        l = !1;
      } else
        for (
          ;
          !(l = (r = o.call(n)).done) && (a.push(r.value), a.length !== e);
          l = !0
        );
    } catch (u) {
      (c = !0), (i = u);
    } finally {
      try {
        if (!l && n.return != null && ((s = n.return()), Object(s) !== s))
          return;
      } finally {
        if (c) throw i;
      }
    }
    return a;
  }
}
function sD() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function yt(t, e) {
  return oD(t) || aX(t, e) || IM(t, e) || sD();
}
function C0(t) {
  for (var e = 0, n, r = 0, i = t.length; i >= 4; ++r, i -= 4)
    (n =
      (t.charCodeAt(r) & 255) |
      ((t.charCodeAt(++r) & 255) << 8) |
      ((t.charCodeAt(++r) & 255) << 16) |
      ((t.charCodeAt(++r) & 255) << 24)),
      (n = (n & 65535) * 1540483477 + (((n >>> 16) * 59797) << 16)),
      (n ^= n >>> 24),
      (e =
        ((n & 65535) * 1540483477 + (((n >>> 16) * 59797) << 16)) ^
        ((e & 65535) * 1540483477 + (((e >>> 16) * 59797) << 16)));
  switch (i) {
    case 3:
      e ^= (t.charCodeAt(r + 2) & 255) << 16;
    case 2:
      e ^= (t.charCodeAt(r + 1) & 255) << 8;
    case 1:
      (e ^= t.charCodeAt(r) & 255),
        (e = (e & 65535) * 1540483477 + (((e >>> 16) * 59797) << 16));
  }
  return (
    (e ^= e >>> 13),
    (e = (e & 65535) * 1540483477 + (((e >>> 16) * 59797) << 16)),
    ((e ^ (e >>> 15)) >>> 0).toString(36)
  );
}
function Ms() {
  return !!(
    typeof window < "u" &&
    window.document &&
    window.document.createElement
  );
}
function lX(t, e) {
  if (!t) return !1;
  if (t.contains) return t.contains(e);
  for (var n = e; n; ) {
    if (n === t) return !0;
    n = n.parentNode;
  }
  return !1;
}
var dP = "data-rc-order",
  hP = "data-rc-priority",
  cX = "rc-util-key",
  Yw = new Map();
function aD() {
  var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
    e = t.mark;
  return e ? (e.startsWith("data-") ? e : "data-".concat(e)) : cX;
}
function Wy(t) {
  if (t.attachTo) return t.attachTo;
  var e = document.querySelector("head");
  return e || document.body;
}
function uX(t) {
  return t === "queue" ? "prependQueue" : t ? "prepend" : "append";
}
function lD(t) {
  return Array.from((Yw.get(t) || t).children).filter(function (e) {
    return e.tagName === "STYLE";
  });
}
function cD(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  if (!Ms()) return null;
  var n = e.csp,
    r = e.prepend,
    i = e.priority,
    o = i === void 0 ? 0 : i,
    s = uX(r),
    a = s === "prependQueue",
    l = document.createElement("style");
  l.setAttribute(dP, s),
    a && o && l.setAttribute(hP, "".concat(o)),
    n != null && n.nonce && (l.nonce = n == null ? void 0 : n.nonce),
    (l.innerHTML = t);
  var c = Wy(e),
    u = c.firstChild;
  if (r) {
    if (a) {
      var h = lD(c).filter(function (p) {
        if (!["prepend", "prependQueue"].includes(p.getAttribute(dP)))
          return !1;
        var m = Number(p.getAttribute(hP) || 0);
        return o >= m;
      });
      if (h.length) return c.insertBefore(l, h[h.length - 1].nextSibling), l;
    }
    c.insertBefore(l, u);
  } else c.appendChild(l);
  return l;
}
function uD(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
    n = Wy(e);
  return lD(n).find(function (r) {
    return r.getAttribute(aD(e)) === t;
  });
}
function FM(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
    n = uD(t, e);
  if (n) {
    var r = Wy(e);
    r.removeChild(n);
  }
}
function fX(t, e) {
  var n = Yw.get(t);
  if (!n || !lX(document, n)) {
    var r = cD("", e),
      i = r.parentNode;
    Yw.set(t, i), t.removeChild(r);
  }
}
function Ic(t, e) {
  var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
    r = Wy(n);
  fX(r, n);
  var i = uD(e, n);
  if (i) {
    var o, s;
    if (
      (o = n.csp) !== null &&
      o !== void 0 &&
      o.nonce &&
      i.nonce !== ((s = n.csp) === null || s === void 0 ? void 0 : s.nonce)
    ) {
      var a;
      i.nonce = (a = n.csp) === null || a === void 0 ? void 0 : a.nonce;
    }
    return i.innerHTML !== t && (i.innerHTML = t), i;
  }
  var l = cD(t, n);
  return l.setAttribute(aD(n), e), l;
}
function dX(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
function Qi(t, e) {
  if (t == null) return {};
  var n = dX(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function fD(t, e) {
  var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1,
    r = new Set();
  function i(o, s) {
    var a = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1,
      l = r.has(o);
    if ((qi(!l, "Warning: There may be circular references"), l)) return !1;
    if (o === s) return !0;
    if (n && a > 1) return !1;
    r.add(o);
    var c = a + 1;
    if (Array.isArray(o)) {
      if (!Array.isArray(s) || o.length !== s.length) return !1;
      for (var u = 0; u < o.length; u++) if (!i(o[u], s[u], c)) return !1;
      return !0;
    }
    if (o && s && Qt(o) === "object" && Qt(s) === "object") {
      var h = Object.keys(o);
      return h.length !== Object.keys(s).length
        ? !1
        : h.every(function (p) {
            return i(o[p], s[p], c);
          });
    }
    return !1;
  }
  return i(t, e);
}
var hX = "%";
function Kw(t) {
  return t.join(hX);
}
var pX = (function () {
    function t(e) {
      bo(this, t),
        Me(this, "instanceId", void 0),
        Me(this, "cache", new Map()),
        (this.instanceId = e);
    }
    return (
      Eo(t, [
        {
          key: "get",
          value: function (n) {
            return this.opGet(Kw(n));
          },
        },
        {
          key: "opGet",
          value: function (n) {
            return this.cache.get(n) || null;
          },
        },
        {
          key: "update",
          value: function (n, r) {
            return this.opUpdate(Kw(n), r);
          },
        },
        {
          key: "opUpdate",
          value: function (n, r) {
            var i = this.cache.get(n),
              o = r(i);
            o === null ? this.cache.delete(n) : this.cache.set(n, o);
          },
        },
      ]),
      t
    );
  })(),
  Of = "data-token-hash",
  $o = "data-css-hash",
  Va = "__cssinjs_instance__";
function mX() {
  var t = Math.random().toString(12).slice(2);
  if (typeof document < "u" && document.head && document.body) {
    var e = document.body.querySelectorAll("style[".concat($o, "]")) || [],
      n = document.head.firstChild;
    Array.from(e).forEach(function (i) {
      (i[Va] = i[Va] || t), i[Va] === t && document.head.insertBefore(i, n);
    });
    var r = {};
    Array.from(document.querySelectorAll("style[".concat($o, "]"))).forEach(
      function (i) {
        var o = i.getAttribute($o);
        if (r[o]) {
          if (i[Va] === t) {
            var s;
            (s = i.parentNode) === null || s === void 0 || s.removeChild(i);
          }
        } else r[o] = !0;
      }
    );
  }
  return new pX(t);
}
var gX = z.createContext({
  hashPriority: "low",
  cache: mX(),
  defaultCache: !0,
});
const $y = gX;
function vX(t, e) {
  if (t.length !== e.length) return !1;
  for (var n = 0; n < t.length; n++) if (t[n] !== e[n]) return !1;
  return !0;
}
var NM = (function () {
  function t() {
    bo(this, t),
      Me(this, "cache", void 0),
      Me(this, "keys", void 0),
      Me(this, "cacheCallTimes", void 0),
      (this.cache = new Map()),
      (this.keys = []),
      (this.cacheCallTimes = 0);
  }
  return (
    Eo(t, [
      {
        key: "size",
        value: function () {
          return this.keys.length;
        },
      },
      {
        key: "internalGet",
        value: function (n) {
          var r,
            i,
            o =
              arguments.length > 1 && arguments[1] !== void 0
                ? arguments[1]
                : !1,
            s = { map: this.cache };
          return (
            n.forEach(function (a) {
              if (!s) s = void 0;
              else {
                var l;
                s =
                  (l = s) === null ||
                  l === void 0 ||
                  (l = l.map) === null ||
                  l === void 0
                    ? void 0
                    : l.get(a);
              }
            }),
            (r = s) !== null &&
              r !== void 0 &&
              r.value &&
              o &&
              (s.value[1] = this.cacheCallTimes++),
            (i = s) === null || i === void 0 ? void 0 : i.value
          );
        },
      },
      {
        key: "get",
        value: function (n) {
          var r;
          return (r = this.internalGet(n, !0)) === null || r === void 0
            ? void 0
            : r[0];
        },
      },
      {
        key: "has",
        value: function (n) {
          return !!this.internalGet(n);
        },
      },
      {
        key: "set",
        value: function (n, r) {
          var i = this;
          if (!this.has(n)) {
            if (this.size() + 1 > t.MAX_CACHE_SIZE + t.MAX_CACHE_OFFSET) {
              var o = this.keys.reduce(
                  function (c, u) {
                    var h = yt(c, 2),
                      p = h[1];
                    return i.internalGet(u)[1] < p
                      ? [u, i.internalGet(u)[1]]
                      : c;
                  },
                  [this.keys[0], this.cacheCallTimes]
                ),
                s = yt(o, 1),
                a = s[0];
              this.delete(a);
            }
            this.keys.push(n);
          }
          var l = this.cache;
          n.forEach(function (c, u) {
            if (u === n.length - 1)
              l.set(c, { value: [r, i.cacheCallTimes++] });
            else {
              var h = l.get(c);
              h ? h.map || (h.map = new Map()) : l.set(c, { map: new Map() }),
                (l = l.get(c).map);
            }
          });
        },
      },
      {
        key: "deleteByPath",
        value: function (n, r) {
          var i = n.get(r[0]);
          if (r.length === 1) {
            var o;
            return (
              i.map ? n.set(r[0], { map: i.map }) : n.delete(r[0]),
              (o = i.value) === null || o === void 0 ? void 0 : o[0]
            );
          }
          var s = this.deleteByPath(i.map, r.slice(1));
          return (!i.map || i.map.size === 0) && !i.value && n.delete(r[0]), s;
        },
      },
      {
        key: "delete",
        value: function (n) {
          if (this.has(n))
            return (
              (this.keys = this.keys.filter(function (r) {
                return !vX(r, n);
              })),
              this.deleteByPath(this.cache, n)
            );
        },
      },
    ]),
    t
  );
})();
Me(NM, "MAX_CACHE_SIZE", 20);
Me(NM, "MAX_CACHE_OFFSET", 5);
var pP = 0,
  dD = (function () {
    function t(e) {
      bo(this, t),
        Me(this, "derivatives", void 0),
        Me(this, "id", void 0),
        (this.derivatives = Array.isArray(e) ? e : [e]),
        (this.id = pP),
        e.length === 0 && (e.length > 0, void 0),
        (pP += 1);
    }
    return (
      Eo(t, [
        {
          key: "getDerivativeToken",
          value: function (n) {
            return this.derivatives.reduce(function (r, i) {
              return i(n, r);
            }, void 0);
          },
        },
      ]),
      t
    );
  })(),
  w_ = new NM();
function Zw(t) {
  var e = Array.isArray(t) ? t : [t];
  return w_.has(e) || w_.set(e, new dD(e)), w_.get(e);
}
var yX = new WeakMap(),
  b_ = {};
function xX(t, e) {
  for (var n = yX, r = 0; r < e.length; r += 1) {
    var i = e[r];
    n.has(i) || n.set(i, new WeakMap()), (n = n.get(i));
  }
  return n.has(b_) || n.set(b_, t()), n.get(b_);
}
var mP = new WeakMap();
function fh(t) {
  var e = mP.get(t) || "";
  return (
    e ||
      (Object.keys(t).forEach(function (n) {
        var r = t[n];
        (e += n),
          r instanceof dD
            ? (e += r.id)
            : r && Qt(r) === "object"
            ? (e += fh(r))
            : (e += r);
      }),
      mP.set(t, e)),
    e
  );
}
function gP(t, e) {
  return C0("".concat(e, "_").concat(fh(t)));
}
var dh = "random-"
    .concat(Date.now(), "-")
    .concat(Math.random())
    .replace(/\./g, ""),
  hD = "_bAmBoO_";
function _X(t, e, n) {
  if (Ms()) {
    var r, i;
    Ic(t, dh);
    var o = document.createElement("div");
    (o.style.position = "fixed"),
      (o.style.left = "0"),
      (o.style.top = "0"),
      e == null || e(o),
      document.body.appendChild(o);
    var s = n
      ? n(o)
      : (r = getComputedStyle(o).content) === null || r === void 0
      ? void 0
      : r.includes(hD);
    return (
      (i = o.parentNode) === null || i === void 0 || i.removeChild(o), FM(dh), s
    );
  }
  return !1;
}
var E_ = void 0;
function SX() {
  return (
    E_ === void 0 &&
      (E_ = _X(
        "@layer "
          .concat(dh, " { .")
          .concat(dh, ' { content: "')
          .concat(hD, '"!important; } }'),
        function (t) {
          t.className = dh;
        }
      )),
    E_
  );
}
var Qw = Ms();
function Bt(t) {
  return typeof t == "number" ? "".concat(t, "px") : t;
}
function T0(t, e, n) {
  var r,
    i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {},
    o = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : !1;
  if (o) return t;
  var s = We(We({}, i), {}, ((r = {}), Me(r, Of, e), Me(r, $o, n), r)),
    a = Object.keys(s)
      .map(function (l) {
        var c = s[l];
        return c ? "".concat(l, '="').concat(c, '"') : null;
      })
      .filter(function (l) {
        return l;
      })
      .join(" ");
  return "<style ".concat(a, ">").concat(t, "</style>");
}
var pD = function (e) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
    return "--"
      .concat(n ? "".concat(n, "-") : "")
      .concat(e)
      .replace(/([a-z0-9])([A-Z])/g, "$1-$2")
      .replace(/([A-Z]+)([A-Z][a-z0-9]+)/g, "$1-$2")
      .replace(/([a-z])([A-Z0-9])/g, "$1-$2")
      .toLowerCase();
  },
  wX = function (e, n, r) {
    return Object.keys(e).length
      ? "."
          .concat(n)
          .concat(r != null && r.scope ? ".".concat(r.scope) : "", "{")
          .concat(
            Object.entries(e)
              .map(function (i) {
                var o = yt(i, 2),
                  s = o[0],
                  a = o[1];
                return "".concat(s, ":").concat(a, ";");
              })
              .join(""),
            "}"
          )
      : "";
  },
  mD = function (e, n, r) {
    var i = {},
      o = {};
    return (
      Object.entries(e).forEach(function (s) {
        var a,
          l,
          c = yt(s, 2),
          u = c[0],
          h = c[1];
        if (r != null && (a = r.preserve) !== null && a !== void 0 && a[u])
          o[u] = h;
        else if (
          (typeof h == "string" || typeof h == "number") &&
          !(r != null && (l = r.ignore) !== null && l !== void 0 && l[u])
        ) {
          var p,
            m = pD(u, r == null ? void 0 : r.prefix);
          (i[m] =
            typeof h == "number" &&
            !(r != null && (p = r.unitless) !== null && p !== void 0 && p[u])
              ? "".concat(h, "px")
              : String(h)),
            (o[u] = "var(".concat(m, ")"));
        }
      }),
      [o, wX(i, n, { scope: r == null ? void 0 : r.scope })]
    );
  },
  vP = Ms() ? z.useLayoutEffect : z.useEffect,
  A0 = function (e, n) {
    var r = z.useRef(!0);
    vP(function () {
      return e(r.current);
    }, n),
      vP(function () {
        return (
          (r.current = !1),
          function () {
            r.current = !0;
          }
        );
      }, []);
  },
  yP = function (e, n) {
    A0(function (r) {
      if (!r) return e();
    }, n);
  },
  bX = We({}, vf),
  xP = bX.useInsertionEffect,
  EX = function (e, n, r) {
    z.useMemo(e, r),
      A0(function () {
        return n(!0);
      }, r);
  },
  MX = xP
    ? function (t, e, n) {
        return xP(function () {
          return t(), e();
        }, n);
      }
    : EX;
const CX = MX;
var TX = We({}, vf),
  AX = TX.useInsertionEffect,
  RX = function (e) {
    var n = [],
      r = !1;
    function i(o) {
      r || n.push(o);
    }
    return (
      z.useEffect(function () {
        return (
          (r = !1),
          function () {
            (r = !0),
              n.length &&
                n.forEach(function (o) {
                  return o();
                });
          }
        );
      }, e),
      i
    );
  },
  PX = function () {
    return function (e) {
      e();
    };
  },
  LX = typeof AX < "u" ? RX : PX;
const IX = LX;
function DM(t, e, n, r, i) {
  var o = z.useContext($y),
    s = o.cache,
    a = [t].concat(Nt(e)),
    l = Kw(a),
    c = IX([l]),
    u = function (v) {
      s.opUpdate(l, function (S) {
        var x = S || [void 0, void 0],
          g = yt(x, 2),
          y = g[0],
          _ = y === void 0 ? 0 : y,
          b = g[1],
          T = b,
          M = T || n(),
          C = [_, M];
        return v ? v(C) : C;
      });
    };
  z.useMemo(
    function () {
      u();
    },
    [l]
  );
  var h = s.opGet(l),
    p = h[1];
  return (
    CX(
      function () {
        i == null || i(p);
      },
      function (m) {
        return (
          u(function (v) {
            var S = yt(v, 2),
              x = S[0],
              g = S[1];
            return m && x === 0 && (i == null || i(p)), [x + 1, g];
          }),
          function () {
            s.opUpdate(l, function (v) {
              var S = v || [],
                x = yt(S, 2),
                g = x[0],
                y = g === void 0 ? 0 : g,
                _ = x[1],
                b = y - 1;
              return b === 0
                ? (c(function () {
                    (m || !s.opGet(l)) && (r == null || r(_, !1));
                  }),
                  null)
                : [y - 1, _];
            });
          }
        );
      },
      [l]
    ),
    p
  );
}
var OX = {},
  FX = "css",
  ec = new Map();
function NX(t) {
  ec.set(t, (ec.get(t) || 0) + 1);
}
function DX(t, e) {
  if (typeof document < "u") {
    var n = document.querySelectorAll(
      "style[".concat(Of, '="').concat(t, '"]')
    );
    n.forEach(function (r) {
      if (r[Va] === e) {
        var i;
        (i = r.parentNode) === null || i === void 0 || i.removeChild(r);
      }
    });
  }
}
var UX = 0;
function zX(t, e) {
  ec.set(t, (ec.get(t) || 0) - 1);
  var n = Array.from(ec.keys()),
    r = n.filter(function (i) {
      var o = ec.get(i) || 0;
      return o <= 0;
    });
  n.length - r.length > UX &&
    r.forEach(function (i) {
      DX(i, e), ec.delete(i);
    });
}
var kX = function (e, n, r, i) {
    var o = r.getDerivativeToken(e),
      s = We(We({}, o), n);
    return i && (s = i(s)), s;
  },
  gD = "token";
function BX(t, e) {
  var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
    r = z.useContext($y),
    i = r.cache.instanceId,
    o = r.container,
    s = n.salt,
    a = s === void 0 ? "" : s,
    l = n.override,
    c = l === void 0 ? OX : l,
    u = n.formatToken,
    h = n.getComputedToken,
    p = n.cssVar,
    m = xX(function () {
      return Object.assign.apply(Object, [{}].concat(Nt(e)));
    }, e),
    v = fh(m),
    S = fh(c),
    x = p ? fh(p) : "",
    g = DM(
      gD,
      [a, t.id, v, S, x],
      function () {
        var y,
          _ = h ? h(m, c, t) : kX(m, c, t, u),
          b = We({}, _),
          T = "";
        if (p) {
          var M = mD(_, p.key, {
              prefix: p.prefix,
              ignore: p.ignore,
              unitless: p.unitless,
              preserve: p.preserve,
            }),
            C = yt(M, 2);
          (_ = C[0]), (T = C[1]);
        }
        var L = gP(_, a);
        (_._tokenKey = L), (b._tokenKey = gP(b, a));
        var A =
          (y = p == null ? void 0 : p.key) !== null && y !== void 0 ? y : L;
        (_._themeKey = A), NX(A);
        var P = "".concat(FX, "-").concat(C0(L));
        return (
          (_._hashId = P), [_, P, b, T, (p == null ? void 0 : p.key) || ""]
        );
      },
      function (y) {
        zX(y[0]._themeKey, i);
      },
      function (y) {
        var _ = yt(y, 4),
          b = _[0],
          T = _[3];
        if (p && T) {
          var M = Ic(T, C0("css-variables-".concat(b._themeKey)), {
            mark: $o,
            prepend: "queue",
            attachTo: o,
            priority: -999,
          });
          (M[Va] = i), M.setAttribute(Of, b._themeKey);
        }
      }
    );
  return g;
}
var HX = function (e, n, r) {
    var i = yt(e, 5),
      o = i[2],
      s = i[3],
      a = i[4],
      l = r || {},
      c = l.plain;
    if (!s) return null;
    var u = o._tokenKey,
      h = -999,
      p = { "data-rc-order": "prependQueue", "data-rc-priority": "".concat(h) },
      m = T0(s, a, u, p, c);
    return [h, u, m];
  },
  VX = {
    animationIterationCount: 1,
    borderImageOutset: 1,
    borderImageSlice: 1,
    borderImageWidth: 1,
    boxFlex: 1,
    boxFlexGroup: 1,
    boxOrdinalGroup: 1,
    columnCount: 1,
    columns: 1,
    flex: 1,
    flexGrow: 1,
    flexPositive: 1,
    flexShrink: 1,
    flexNegative: 1,
    flexOrder: 1,
    gridRow: 1,
    gridRowEnd: 1,
    gridRowSpan: 1,
    gridRowStart: 1,
    gridColumn: 1,
    gridColumnEnd: 1,
    gridColumnSpan: 1,
    gridColumnStart: 1,
    msGridRow: 1,
    msGridRowSpan: 1,
    msGridColumn: 1,
    msGridColumnSpan: 1,
    fontWeight: 1,
    lineHeight: 1,
    opacity: 1,
    order: 1,
    orphans: 1,
    tabSize: 1,
    widows: 1,
    zIndex: 1,
    zoom: 1,
    WebkitLineClamp: 1,
    fillOpacity: 1,
    floodOpacity: 1,
    stopOpacity: 1,
    strokeDasharray: 1,
    strokeDashoffset: 1,
    strokeMiterlimit: 1,
    strokeOpacity: 1,
    strokeWidth: 1,
  },
  vD = "comm",
  yD = "rule",
  xD = "decl",
  GX = "@import",
  jX = "@keyframes",
  WX = "@layer",
  _D = Math.abs,
  UM = String.fromCharCode;
function SD(t) {
  return t.trim();
}
function Ov(t, e, n) {
  return t.replace(e, n);
}
function $X(t, e, n) {
  return t.indexOf(e, n);
}
function rp(t, e) {
  return t.charCodeAt(e) | 0;
}
function ip(t, e, n) {
  return t.slice(e, n);
}
function Ys(t) {
  return t.length;
}
function XX(t) {
  return t.length;
}
function Qg(t, e) {
  return e.push(t), t;
}
var Xy = 1,
  Ff = 1,
  wD = 0,
  So = 0,
  Jn = 0,
  Wf = "";
function zM(t, e, n, r, i, o, s, a) {
  return {
    value: t,
    root: e,
    parent: n,
    type: r,
    props: i,
    children: o,
    line: Xy,
    column: Ff,
    length: s,
    return: "",
    siblings: a,
  };
}
function qX() {
  return Jn;
}
function YX() {
  return (
    (Jn = So > 0 ? rp(Wf, --So) : 0), Ff--, Jn === 10 && ((Ff = 1), Xy--), Jn
  );
}
function Xo() {
  return (
    (Jn = So < wD ? rp(Wf, So++) : 0), Ff++, Jn === 10 && ((Ff = 1), Xy++), Jn
  );
}
function _c() {
  return rp(Wf, So);
}
function Fv() {
  return So;
}
function qy(t, e) {
  return ip(Wf, t, e);
}
function Jw(t) {
  switch (t) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function KX(t) {
  return (Xy = Ff = 1), (wD = Ys((Wf = t))), (So = 0), [];
}
function ZX(t) {
  return (Wf = ""), t;
}
function M_(t) {
  return SD(qy(So - 1, eb(t === 91 ? t + 2 : t === 40 ? t + 1 : t)));
}
function QX(t) {
  for (; (Jn = _c()) && Jn < 33; ) Xo();
  return Jw(t) > 2 || Jw(Jn) > 3 ? "" : " ";
}
function JX(t, e) {
  for (
    ;
    --e &&
    Xo() &&
    !(Jn < 48 || Jn > 102 || (Jn > 57 && Jn < 65) || (Jn > 70 && Jn < 97));

  );
  return qy(t, Fv() + (e < 6 && _c() == 32 && Xo() == 32));
}
function eb(t) {
  for (; Xo(); )
    switch (Jn) {
      case t:
        return So;
      case 34:
      case 39:
        t !== 34 && t !== 39 && eb(Jn);
        break;
      case 40:
        t === 41 && eb(t);
        break;
      case 92:
        Xo();
        break;
    }
  return So;
}
function eq(t, e) {
  for (; Xo() && t + Jn !== 57; ) if (t + Jn === 84 && _c() === 47) break;
  return "/*" + qy(e, So - 1) + "*" + UM(t === 47 ? t : Xo());
}
function tq(t) {
  for (; !Jw(_c()); ) Xo();
  return qy(t, So);
}
function nq(t) {
  return ZX(Nv("", null, null, null, [""], (t = KX(t)), 0, [0], t));
}
function Nv(t, e, n, r, i, o, s, a, l) {
  for (
    var c = 0,
      u = 0,
      h = s,
      p = 0,
      m = 0,
      v = 0,
      S = 1,
      x = 1,
      g = 1,
      y = 0,
      _ = "",
      b = i,
      T = o,
      M = r,
      C = _;
    x;

  )
    switch (((v = y), (y = Xo()))) {
      case 40:
        if (v != 108 && rp(C, h - 1) == 58) {
          $X((C += Ov(M_(y), "&", "&\f")), "&\f", _D(c ? a[c - 1] : 0)) != -1 &&
            (g = -1);
          break;
        }
      case 34:
      case 39:
      case 91:
        C += M_(y);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        C += QX(v);
        break;
      case 92:
        C += JX(Fv() - 1, 7);
        continue;
      case 47:
        switch (_c()) {
          case 42:
          case 47:
            Qg(rq(eq(Xo(), Fv()), e, n, l), l);
            break;
          default:
            C += "/";
        }
        break;
      case 123 * S:
        a[c++] = Ys(C) * g;
      case 125 * S:
      case 59:
      case 0:
        switch (y) {
          case 0:
          case 125:
            x = 0;
          case 59 + u:
            g == -1 && (C = Ov(C, /\f/g, "")),
              m > 0 &&
                Ys(C) - h &&
                Qg(
                  m > 32
                    ? SP(C + ";", r, n, h - 1, l)
                    : SP(Ov(C, " ", "") + ";", r, n, h - 2, l),
                  l
                );
            break;
          case 59:
            C += ";";
          default:
            if (
              (Qg(
                (M = _P(C, e, n, c, u, i, a, _, (b = []), (T = []), h, o)),
                o
              ),
              y === 123)
            )
              if (u === 0) Nv(C, e, M, M, b, o, h, a, T);
              else
                switch (p === 99 && rp(C, 3) === 110 ? 100 : p) {
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    Nv(
                      t,
                      M,
                      M,
                      r && Qg(_P(t, M, M, 0, 0, i, a, _, i, (b = []), h, T), T),
                      i,
                      T,
                      h,
                      a,
                      r ? b : T
                    );
                    break;
                  default:
                    Nv(C, M, M, M, [""], T, 0, a, T);
                }
        }
        (c = u = m = 0), (S = g = 1), (_ = C = ""), (h = s);
        break;
      case 58:
        (h = 1 + Ys(C)), (m = v);
      default:
        if (S < 1) {
          if (y == 123) --S;
          else if (y == 125 && S++ == 0 && YX() == 125) continue;
        }
        switch (((C += UM(y)), y * S)) {
          case 38:
            g = u > 0 ? 1 : ((C += "\f"), -1);
            break;
          case 44:
            (a[c++] = (Ys(C) - 1) * g), (g = 1);
            break;
          case 64:
            _c() === 45 && (C += M_(Xo())),
              (p = _c()),
              (u = h = Ys((_ = C += tq(Fv())))),
              y++;
            break;
          case 45:
            v === 45 && Ys(C) == 2 && (S = 0);
        }
    }
  return o;
}
function _P(t, e, n, r, i, o, s, a, l, c, u, h) {
  for (
    var p = i - 1, m = i === 0 ? o : [""], v = XX(m), S = 0, x = 0, g = 0;
    S < r;
    ++S
  )
    for (var y = 0, _ = ip(t, p + 1, (p = _D((x = s[S])))), b = t; y < v; ++y)
      (b = SD(x > 0 ? m[y] + " " + _ : Ov(_, /&\f/g, m[y]))) && (l[g++] = b);
  return zM(t, e, n, i === 0 ? yD : a, l, c, u, h);
}
function rq(t, e, n, r) {
  return zM(t, e, n, vD, UM(qX()), ip(t, 2, -2), 0, r);
}
function SP(t, e, n, r, i) {
  return zM(t, e, n, xD, ip(t, 0, r), ip(t, r + 1, -1), r, i);
}
function tb(t, e) {
  for (var n = "", r = 0; r < t.length; r++) n += e(t[r], r, t, e) || "";
  return n;
}
function iq(t, e, n, r) {
  switch (t.type) {
    case WX:
      if (t.children.length) break;
    case GX:
    case xD:
      return (t.return = t.return || t.value);
    case vD:
      return "";
    case jX:
      return (t.return = t.value + "{" + tb(t.children, r) + "}");
    case yD:
      if (!Ys((t.value = t.props.join(",")))) return "";
  }
  return Ys((n = tb(t.children, r)))
    ? (t.return = t.value + "{" + n + "}")
    : "";
}
var wP = "data-ant-cssinjs-cache-path",
  bD = "_FILE_STYLE__",
  Sc,
  ED = !0;
function oq() {
  if (!Sc && ((Sc = {}), Ms())) {
    var t = document.createElement("div");
    (t.className = wP),
      (t.style.position = "fixed"),
      (t.style.visibility = "hidden"),
      (t.style.top = "-9999px"),
      document.body.appendChild(t);
    var e = getComputedStyle(t).content || "";
    (e = e.replace(/^"/, "").replace(/"$/, "")),
      e.split(";").forEach(function (i) {
        var o = i.split(":"),
          s = yt(o, 2),
          a = s[0],
          l = s[1];
        Sc[a] = l;
      });
    var n = document.querySelector("style[".concat(wP, "]"));
    if (n) {
      var r;
      (ED = !1),
        (r = n.parentNode) === null || r === void 0 || r.removeChild(n);
    }
    document.body.removeChild(t);
  }
}
function sq(t) {
  return oq(), !!Sc[t];
}
function aq(t) {
  var e = Sc[t],
    n = null;
  if (e && Ms())
    if (ED) n = bD;
    else {
      var r = document.querySelector(
        "style[".concat($o, '="').concat(Sc[t], '"]')
      );
      r ? (n = r.innerHTML) : delete Sc[t];
    }
  return [n, e];
}
var lq = "_skip_check_",
  MD = "_multi_value_";
function nb(t) {
  var e = tb(nq(t), iq);
  return e.replace(/\{%%%\:[^;];}/g, ";");
}
function cq(t) {
  return Qt(t) === "object" && t && (lq in t || MD in t);
}
function uq(t, e, n) {
  if (!e) return t;
  var r = ".".concat(e),
    i = n === "low" ? ":where(".concat(r, ")") : r,
    o = t.split(",").map(function (s) {
      var a,
        l = s.trim().split(/\s+/),
        c = l[0] || "",
        u =
          ((a = c.match(/^\w+/)) === null || a === void 0 ? void 0 : a[0]) ||
          "";
      return (
        (c = "".concat(u).concat(i).concat(c.slice(u.length))),
        [c].concat(Nt(l.slice(1))).join(" ")
      );
    });
  return o.join(",");
}
var fq = function t(e) {
  var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
    r =
      arguments.length > 2 && arguments[2] !== void 0
        ? arguments[2]
        : { root: !0, parentSelectors: [] },
    i = r.root,
    o = r.injectHash,
    s = r.parentSelectors,
    a = n.hashId,
    l = n.layer;
  n.path;
  var c = n.hashPriority,
    u = n.transformers,
    h = u === void 0 ? [] : u;
  n.linters;
  var p = "",
    m = {};
  function v(_) {
    var b = _.getName(a);
    if (!m[b]) {
      var T = t(_.style, n, { root: !1, parentSelectors: s }),
        M = yt(T, 1),
        C = M[0];
      m[b] = "@keyframes ".concat(_.getName(a)).concat(C);
    }
  }
  function S(_) {
    var b = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    return (
      _.forEach(function (T) {
        Array.isArray(T) ? S(T, b) : T && b.push(T);
      }),
      b
    );
  }
  var x = S(Array.isArray(e) ? e : [e]);
  if (
    (x.forEach(function (_) {
      var b = typeof _ == "string" && !i ? {} : _;
      if (typeof b == "string")
        p += "".concat(
          b,
          `
`
        );
      else if (b._keyframe) v(b);
      else {
        var T = h.reduce(function (M, C) {
          var L;
          return (
            (C == null || (L = C.visit) === null || L === void 0
              ? void 0
              : L.call(C, M)) || M
          );
        }, b);
        Object.keys(T).forEach(function (M) {
          var C = T[M];
          if (
            Qt(C) === "object" &&
            C &&
            (M !== "animationName" || !C._keyframe) &&
            !cq(C)
          ) {
            var L = !1,
              A = M.trim(),
              P = !1;
            (i || o) && a
              ? A.startsWith("@")
                ? (L = !0)
                : (A = uq(M, a, c))
              : i && !a && (A === "&" || A === "") && ((A = ""), (P = !0));
            var k = t(C, n, {
                root: P,
                injectHash: L,
                parentSelectors: [].concat(Nt(s), [A]),
              }),
              B = yt(k, 2),
              $ = B[0],
              D = B[1];
            (m = We(We({}, m), D)), (p += "".concat(A).concat($));
          } else {
            let Y = function (N, V) {
              var G = N.replace(/[A-Z]/g, function (Z) {
                  return "-".concat(Z.toLowerCase());
                }),
                U = V;
              !VX[N] &&
                typeof U == "number" &&
                U !== 0 &&
                (U = "".concat(U, "px")),
                N === "animationName" &&
                  V !== null &&
                  V !== void 0 &&
                  V._keyframe &&
                  (v(V), (U = V.getName(a))),
                (p += "".concat(G, ":").concat(U, ";"));
            };
            var X,
              j =
                (X = C == null ? void 0 : C.value) !== null && X !== void 0
                  ? X
                  : C;
            Qt(C) === "object" &&
            C !== null &&
            C !== void 0 &&
            C[MD] &&
            Array.isArray(j)
              ? j.forEach(function (N) {
                  Y(M, N);
                })
              : Y(M, j);
          }
        });
      }
    }),
    !i)
  )
    p = "{".concat(p, "}");
  else if (l && SX()) {
    var g = l.split(","),
      y = g[g.length - 1].trim();
    (p = "@layer ".concat(y, " {").concat(p, "}")),
      g.length > 1 && (p = "@layer ".concat(l, "{%%%:%}").concat(p));
  }
  return [p, m];
};
function CD(t, e) {
  return C0("".concat(t.join("%")).concat(e));
}
function dq() {
  return null;
}
var TD = "style";
function rb(t, e) {
  var n = t.token,
    r = t.path,
    i = t.hashId,
    o = t.layer,
    s = t.nonce,
    a = t.clientOnly,
    l = t.order,
    c = l === void 0 ? 0 : l,
    u = z.useContext($y),
    h = u.autoClear;
  u.mock;
  var p = u.defaultCache,
    m = u.hashPriority,
    v = u.container,
    S = u.ssrInline,
    x = u.transformers,
    g = u.linters,
    y = u.cache,
    _ = n._tokenKey,
    b = [_].concat(Nt(r)),
    T = Qw,
    M = DM(
      TD,
      b,
      function () {
        var k = b.join("|");
        if (sq(k)) {
          var B = aq(k),
            $ = yt(B, 2),
            D = $[0],
            X = $[1];
          if (D) return [D, _, X, {}, a, c];
        }
        var j = e(),
          Y = fq(j, {
            hashId: i,
            hashPriority: m,
            layer: o,
            path: r.join("-"),
            transformers: x,
            linters: g,
          }),
          N = yt(Y, 2),
          V = N[0],
          G = N[1],
          U = nb(V),
          Z = CD(b, U);
        return [U, _, Z, G, a, c];
      },
      function (k, B) {
        var $ = yt(k, 3),
          D = $[2];
        (B || h) && Qw && FM(D, { mark: $o });
      },
      function (k) {
        var B = yt(k, 4),
          $ = B[0];
        B[1];
        var D = B[2],
          X = B[3];
        if (T && $ !== bD) {
          var j = { mark: $o, prepend: "queue", attachTo: v, priority: c },
            Y = typeof s == "function" ? s() : s;
          Y && (j.csp = { nonce: Y });
          var N = Ic($, D, j);
          (N[Va] = y.instanceId),
            N.setAttribute(Of, _),
            Object.keys(X).forEach(function (V) {
              Ic(nb(X[V]), "_effect-".concat(V), j);
            });
        }
      }
    ),
    C = yt(M, 3),
    L = C[0],
    A = C[1],
    P = C[2];
  return function (k) {
    var B;
    if (!S || T || !p) B = z.createElement(dq, null);
    else {
      var $;
      B = z.createElement(
        "style",
        mn({}, (($ = {}), Me($, Of, A), Me($, $o, P), $), {
          dangerouslySetInnerHTML: { __html: L },
        })
      );
    }
    return z.createElement(z.Fragment, null, B, k);
  };
}
var hq = function (e, n, r) {
    var i = yt(e, 6),
      o = i[0],
      s = i[1],
      a = i[2],
      l = i[3],
      c = i[4],
      u = i[5],
      h = r || {},
      p = h.plain;
    if (c) return null;
    var m = o,
      v = { "data-rc-order": "prependQueue", "data-rc-priority": "".concat(u) };
    return (
      (m = T0(o, s, a, v, p)),
      l &&
        Object.keys(l).forEach(function (S) {
          if (!n[S]) {
            n[S] = !0;
            var x = nb(l[S]);
            m += T0(x, s, "_effect-".concat(S), v, p);
          }
        }),
      [u, a, m]
    );
  },
  AD = "cssVar",
  pq = function (e, n) {
    var r = e.key,
      i = e.prefix,
      o = e.unitless,
      s = e.ignore,
      a = e.token,
      l = e.scope,
      c = l === void 0 ? "" : l,
      u = z.useContext($y),
      h = u.cache.instanceId,
      p = u.container,
      m = a._tokenKey,
      v = [].concat(Nt(e.path), [r, c, m]),
      S = DM(
        AD,
        v,
        function () {
          var x = n(),
            g = mD(x, r, { prefix: i, unitless: o, ignore: s, scope: c }),
            y = yt(g, 2),
            _ = y[0],
            b = y[1],
            T = CD(v, b);
          return [_, b, T, r];
        },
        function (x) {
          var g = yt(x, 3),
            y = g[2];
          Qw && FM(y, { mark: $o });
        },
        function (x) {
          var g = yt(x, 3),
            y = g[1],
            _ = g[2];
          if (y) {
            var b = Ic(y, _, {
              mark: $o,
              prepend: "queue",
              attachTo: p,
              priority: -999,
            });
            (b[Va] = h), b.setAttribute(Of, r);
          }
        }
      );
    return S;
  },
  mq = function (e, n, r) {
    var i = yt(e, 4),
      o = i[1],
      s = i[2],
      a = i[3],
      l = r || {},
      c = l.plain;
    if (!o) return null;
    var u = -999,
      h = { "data-rc-order": "prependQueue", "data-rc-priority": "".concat(u) },
      p = T0(o, a, s, h, c);
    return [u, s, p];
  },
  kd;
(kd = {}), Me(kd, TD, hq), Me(kd, gD, HX), Me(kd, AD, mq);
function Ou(t) {
  return (t.notSplit = !0), t;
}
Ou(["borderTop", "borderBottom"]),
  Ou(["borderTop"]),
  Ou(["borderBottom"]),
  Ou(["borderLeft", "borderRight"]),
  Ou(["borderLeft"]),
  Ou(["borderRight"]);
var gq = z.createContext({});
const kM = gq;
function vq(t) {
  return oD(t) || tD(t) || IM(t) || sD();
}
function ms(t, e) {
  for (var n = t, r = 0; r < e.length; r += 1) {
    if (n == null) return;
    n = n[e[r]];
  }
  return n;
}
function RD(t, e, n, r) {
  if (!e.length) return n;
  var i = vq(e),
    o = i[0],
    s = i.slice(1),
    a;
  return (
    !t && typeof o == "number"
      ? (a = [])
      : Array.isArray(t)
      ? (a = Nt(t))
      : (a = We({}, t)),
    r && n === void 0 && s.length === 1
      ? delete a[o][s[0]]
      : (a[o] = RD(a[o], s, n, r)),
    a
  );
}
function Uo(t, e, n) {
  var r = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1;
  return e.length && r && n === void 0 && !ms(t, e.slice(0, -1))
    ? t
    : RD(t, e, n, r);
}
function yq(t) {
  return (
    Qt(t) === "object" &&
    t !== null &&
    Object.getPrototypeOf(t) === Object.prototype
  );
}
function bP(t) {
  return Array.isArray(t) ? [] : {};
}
var xq = typeof Reflect > "u" ? Object.keys : Reflect.ownKeys;
function of() {
  for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
    e[n] = arguments[n];
  var r = bP(e[0]);
  return (
    e.forEach(function (i) {
      function o(s, a) {
        var l = new Set(a),
          c = ms(i, s),
          u = Array.isArray(c);
        if (u || yq(c)) {
          if (!l.has(c)) {
            l.add(c);
            var h = ms(r, s);
            u
              ? (r = Uo(r, s, []))
              : (!h || Qt(h) !== "object") && (r = Uo(r, s, bP(c))),
              xq(c).forEach(function (p) {
                o([].concat(Nt(s), [p]), l);
              });
          }
        } else r = Uo(r, s, c);
      }
      o([]);
    }),
    r
  );
}
const _q = z.createContext({}),
  Sq = z.createContext(void 0);
var wq = {
    items_per_page: "/ page",
    jump_to: "Go to",
    jump_to_confirm: "confirm",
    page: "Page",
    prev_page: "Previous Page",
    next_page: "Next Page",
    prev_5: "Previous 5 Pages",
    next_5: "Next 5 Pages",
    prev_3: "Previous 3 Pages",
    next_3: "Next 3 Pages",
    page_size: "Page Size",
  },
  bq = {
    locale: "en_US",
    today: "Today",
    now: "Now",
    backToToday: "Back to today",
    ok: "OK",
    clear: "Clear",
    month: "Month",
    year: "Year",
    timeSelect: "select time",
    dateSelect: "select date",
    weekSelect: "Choose a week",
    monthSelect: "Choose a month",
    yearSelect: "Choose a year",
    decadeSelect: "Choose a decade",
    yearFormat: "YYYY",
    dateFormat: "M/D/YYYY",
    dayFormat: "D",
    dateTimeFormat: "M/D/YYYY HH:mm:ss",
    monthBeforeYear: !0,
    previousMonth: "Previous month (PageUp)",
    nextMonth: "Next month (PageDown)",
    previousYear: "Last year (Control + left)",
    nextYear: "Next year (Control + right)",
    previousDecade: "Last decade",
    nextDecade: "Next decade",
    previousCentury: "Last century",
    nextCentury: "Next century",
  };
const Eq = {
    placeholder: "Select time",
    rangePlaceholder: ["Start time", "End time"],
  },
  PD = Eq,
  Mq = {
    lang: Object.assign(
      {
        placeholder: "Select date",
        yearPlaceholder: "Select year",
        quarterPlaceholder: "Select quarter",
        monthPlaceholder: "Select month",
        weekPlaceholder: "Select week",
        rangePlaceholder: ["Start date", "End date"],
        rangeYearPlaceholder: ["Start year", "End year"],
        rangeQuarterPlaceholder: ["Start quarter", "End quarter"],
        rangeMonthPlaceholder: ["Start month", "End month"],
        rangeWeekPlaceholder: ["Start week", "End week"],
      },
      bq
    ),
    timePickerLocale: Object.assign({}, PD),
  },
  EP = Mq,
  Ni = "${label} is not a valid ${type}",
  Yy = {
    locale: "en",
    Pagination: wq,
    DatePicker: EP,
    TimePicker: PD,
    Calendar: EP,
    global: { placeholder: "Please select" },
    Table: {
      filterTitle: "Filter menu",
      filterConfirm: "OK",
      filterReset: "Reset",
      filterEmptyText: "No filters",
      filterCheckall: "Select all items",
      filterSearchPlaceholder: "Search in filters",
      emptyText: "No data",
      selectAll: "Select current page",
      selectInvert: "Invert current page",
      selectNone: "Clear all data",
      selectionAll: "Select all data",
      sortTitle: "Sort",
      expand: "Expand row",
      collapse: "Collapse row",
      triggerDesc: "Click to sort descending",
      triggerAsc: "Click to sort ascending",
      cancelSort: "Click to cancel sorting",
    },
    Tour: { Next: "Next", Previous: "Previous", Finish: "Finish" },
    Modal: { okText: "OK", cancelText: "Cancel", justOkText: "OK" },
    Popconfirm: { okText: "OK", cancelText: "Cancel" },
    Transfer: {
      titles: ["", ""],
      searchPlaceholder: "Search here",
      itemUnit: "item",
      itemsUnit: "items",
      remove: "Remove",
      selectCurrent: "Select current page",
      removeCurrent: "Remove current page",
      selectAll: "Select all data",
      removeAll: "Remove all data",
      selectInvert: "Invert current page",
    },
    Upload: {
      uploading: "Uploading...",
      removeFile: "Remove file",
      uploadError: "Upload error",
      previewFile: "Preview file",
      downloadFile: "Download file",
    },
    Empty: { description: "No data" },
    Icon: { icon: "icon" },
    Text: { edit: "Edit", copy: "Copy", copied: "Copied", expand: "Expand" },
    Form: {
      optional: "(optional)",
      defaultValidateMessages: {
        default: "Field validation error for ${label}",
        required: "Please enter ${label}",
        enum: "${label} must be one of [${enum}]",
        whitespace: "${label} cannot be a blank character",
        date: {
          format: "${label} date format is invalid",
          parse: "${label} cannot be converted to a date",
          invalid: "${label} is an invalid date",
        },
        types: {
          string: Ni,
          method: Ni,
          array: Ni,
          object: Ni,
          number: Ni,
          date: Ni,
          boolean: Ni,
          integer: Ni,
          float: Ni,
          regexp: Ni,
          email: Ni,
          url: Ni,
          hex: Ni,
        },
        string: {
          len: "${label} must be ${len} characters",
          min: "${label} must be at least ${min} characters",
          max: "${label} must be up to ${max} characters",
          range: "${label} must be between ${min}-${max} characters",
        },
        number: {
          len: "${label} must be equal to ${len}",
          min: "${label} must be minimum ${min}",
          max: "${label} must be maximum ${max}",
          range: "${label} must be between ${min}-${max}",
        },
        array: {
          len: "Must be ${len} ${label}",
          min: "At least ${min} ${label}",
          max: "At most ${max} ${label}",
          range: "The amount of ${label} must be between ${min}-${max}",
        },
        pattern: { mismatch: "${label} does not match the pattern ${pattern}" },
      },
    },
    Image: { preview: "Preview" },
    QRCode: {
      expired: "QR code expired",
      refresh: "Refresh",
      scanned: "Scanned",
    },
    ColorPicker: { presetEmpty: "Empty" },
  };
Object.assign({}, Yy.Modal);
let Dv = [];
const MP = () =>
  Dv.reduce((t, e) => Object.assign(Object.assign({}, t), e), Yy.Modal);
function Cq(t) {
  if (t) {
    const e = Object.assign({}, t);
    return (
      Dv.push(e),
      MP(),
      () => {
        (Dv = Dv.filter((n) => n !== e)), MP();
      }
    );
  }
  Object.assign({}, Yy.Modal);
}
const Tq = z.createContext(void 0),
  LD = Tq,
  Aq = "internalMark",
  Rq = (t) => {
    const { locale: e = {}, children: n, _ANT_MARK__: r } = t;
    z.useEffect(() => Cq(e && e.Modal), [e]);
    const i = z.useMemo(
      () => Object.assign(Object.assign({}, e), { exist: !0 }),
      [e]
    );
    return z.createElement(LD.Provider, { value: i }, n);
  },
  Pq = Rq;
function Tr(t, e) {
  Lq(t) && (t = "100%");
  var n = Iq(t);
  return (
    (t = e === 360 ? t : Math.min(e, Math.max(0, parseFloat(t)))),
    n && (t = parseInt(String(t * e), 10) / 100),
    Math.abs(t - e) < 1e-6
      ? 1
      : (e === 360
          ? (t = (t < 0 ? (t % e) + e : t % e) / parseFloat(String(e)))
          : (t = (t % e) / parseFloat(String(e))),
        t)
  );
}
function Jg(t) {
  return Math.min(1, Math.max(0, t));
}
function Lq(t) {
  return typeof t == "string" && t.indexOf(".") !== -1 && parseFloat(t) === 1;
}
function Iq(t) {
  return typeof t == "string" && t.indexOf("%") !== -1;
}
function ID(t) {
  return (t = parseFloat(t)), (isNaN(t) || t < 0 || t > 1) && (t = 1), t;
}
function ev(t) {
  return t <= 1 ? "".concat(Number(t) * 100, "%") : t;
}
function lc(t) {
  return t.length === 1 ? "0" + t : String(t);
}
function Oq(t, e, n) {
  return { r: Tr(t, 255) * 255, g: Tr(e, 255) * 255, b: Tr(n, 255) * 255 };
}
function CP(t, e, n) {
  (t = Tr(t, 255)), (e = Tr(e, 255)), (n = Tr(n, 255));
  var r = Math.max(t, e, n),
    i = Math.min(t, e, n),
    o = 0,
    s = 0,
    a = (r + i) / 2;
  if (r === i) (s = 0), (o = 0);
  else {
    var l = r - i;
    switch (((s = a > 0.5 ? l / (2 - r - i) : l / (r + i)), r)) {
      case t:
        o = (e - n) / l + (e < n ? 6 : 0);
        break;
      case e:
        o = (n - t) / l + 2;
        break;
      case n:
        o = (t - e) / l + 4;
        break;
    }
    o /= 6;
  }
  return { h: o, s, l: a };
}
function C_(t, e, n) {
  return (
    n < 0 && (n += 1),
    n > 1 && (n -= 1),
    n < 1 / 6
      ? t + (e - t) * (6 * n)
      : n < 1 / 2
      ? e
      : n < 2 / 3
      ? t + (e - t) * (2 / 3 - n) * 6
      : t
  );
}
function Fq(t, e, n) {
  var r, i, o;
  if (((t = Tr(t, 360)), (e = Tr(e, 100)), (n = Tr(n, 100)), e === 0))
    (i = n), (o = n), (r = n);
  else {
    var s = n < 0.5 ? n * (1 + e) : n + e - n * e,
      a = 2 * n - s;
    (r = C_(a, s, t + 1 / 3)), (i = C_(a, s, t)), (o = C_(a, s, t - 1 / 3));
  }
  return { r: r * 255, g: i * 255, b: o * 255 };
}
function ib(t, e, n) {
  (t = Tr(t, 255)), (e = Tr(e, 255)), (n = Tr(n, 255));
  var r = Math.max(t, e, n),
    i = Math.min(t, e, n),
    o = 0,
    s = r,
    a = r - i,
    l = r === 0 ? 0 : a / r;
  if (r === i) o = 0;
  else {
    switch (r) {
      case t:
        o = (e - n) / a + (e < n ? 6 : 0);
        break;
      case e:
        o = (n - t) / a + 2;
        break;
      case n:
        o = (t - e) / a + 4;
        break;
    }
    o /= 6;
  }
  return { h: o, s: l, v: s };
}
function Nq(t, e, n) {
  (t = Tr(t, 360) * 6), (e = Tr(e, 100)), (n = Tr(n, 100));
  var r = Math.floor(t),
    i = t - r,
    o = n * (1 - e),
    s = n * (1 - i * e),
    a = n * (1 - (1 - i) * e),
    l = r % 6,
    c = [n, s, o, o, a, n][l],
    u = [a, n, n, s, o, o][l],
    h = [o, o, a, n, n, s][l];
  return { r: c * 255, g: u * 255, b: h * 255 };
}
function ob(t, e, n, r) {
  var i = [
    lc(Math.round(t).toString(16)),
    lc(Math.round(e).toString(16)),
    lc(Math.round(n).toString(16)),
  ];
  return r &&
    i[0].startsWith(i[0].charAt(1)) &&
    i[1].startsWith(i[1].charAt(1)) &&
    i[2].startsWith(i[2].charAt(1))
    ? i[0].charAt(0) + i[1].charAt(0) + i[2].charAt(0)
    : i.join("");
}
function Dq(t, e, n, r, i) {
  var o = [
    lc(Math.round(t).toString(16)),
    lc(Math.round(e).toString(16)),
    lc(Math.round(n).toString(16)),
    lc(Uq(r)),
  ];
  return i &&
    o[0].startsWith(o[0].charAt(1)) &&
    o[1].startsWith(o[1].charAt(1)) &&
    o[2].startsWith(o[2].charAt(1)) &&
    o[3].startsWith(o[3].charAt(1))
    ? o[0].charAt(0) + o[1].charAt(0) + o[2].charAt(0) + o[3].charAt(0)
    : o.join("");
}
function Uq(t) {
  return Math.round(parseFloat(t) * 255).toString(16);
}
function TP(t) {
  return Ui(t) / 255;
}
function Ui(t) {
  return parseInt(t, 16);
}
function zq(t) {
  return { r: t >> 16, g: (t & 65280) >> 8, b: t & 255 };
}
var sb = {
  aliceblue: "#f0f8ff",
  antiquewhite: "#faebd7",
  aqua: "#00ffff",
  aquamarine: "#7fffd4",
  azure: "#f0ffff",
  beige: "#f5f5dc",
  bisque: "#ffe4c4",
  black: "#000000",
  blanchedalmond: "#ffebcd",
  blue: "#0000ff",
  blueviolet: "#8a2be2",
  brown: "#a52a2a",
  burlywood: "#deb887",
  cadetblue: "#5f9ea0",
  chartreuse: "#7fff00",
  chocolate: "#d2691e",
  coral: "#ff7f50",
  cornflowerblue: "#6495ed",
  cornsilk: "#fff8dc",
  crimson: "#dc143c",
  cyan: "#00ffff",
  darkblue: "#00008b",
  darkcyan: "#008b8b",
  darkgoldenrod: "#b8860b",
  darkgray: "#a9a9a9",
  darkgreen: "#006400",
  darkgrey: "#a9a9a9",
  darkkhaki: "#bdb76b",
  darkmagenta: "#8b008b",
  darkolivegreen: "#556b2f",
  darkorange: "#ff8c00",
  darkorchid: "#9932cc",
  darkred: "#8b0000",
  darksalmon: "#e9967a",
  darkseagreen: "#8fbc8f",
  darkslateblue: "#483d8b",
  darkslategray: "#2f4f4f",
  darkslategrey: "#2f4f4f",
  darkturquoise: "#00ced1",
  darkviolet: "#9400d3",
  deeppink: "#ff1493",
  deepskyblue: "#00bfff",
  dimgray: "#696969",
  dimgrey: "#696969",
  dodgerblue: "#1e90ff",
  firebrick: "#b22222",
  floralwhite: "#fffaf0",
  forestgreen: "#228b22",
  fuchsia: "#ff00ff",
  gainsboro: "#dcdcdc",
  ghostwhite: "#f8f8ff",
  goldenrod: "#daa520",
  gold: "#ffd700",
  gray: "#808080",
  green: "#008000",
  greenyellow: "#adff2f",
  grey: "#808080",
  honeydew: "#f0fff0",
  hotpink: "#ff69b4",
  indianred: "#cd5c5c",
  indigo: "#4b0082",
  ivory: "#fffff0",
  khaki: "#f0e68c",
  lavenderblush: "#fff0f5",
  lavender: "#e6e6fa",
  lawngreen: "#7cfc00",
  lemonchiffon: "#fffacd",
  lightblue: "#add8e6",
  lightcoral: "#f08080",
  lightcyan: "#e0ffff",
  lightgoldenrodyellow: "#fafad2",
  lightgray: "#d3d3d3",
  lightgreen: "#90ee90",
  lightgrey: "#d3d3d3",
  lightpink: "#ffb6c1",
  lightsalmon: "#ffa07a",
  lightseagreen: "#20b2aa",
  lightskyblue: "#87cefa",
  lightslategray: "#778899",
  lightslategrey: "#778899",
  lightsteelblue: "#b0c4de",
  lightyellow: "#ffffe0",
  lime: "#00ff00",
  limegreen: "#32cd32",
  linen: "#faf0e6",
  magenta: "#ff00ff",
  maroon: "#800000",
  mediumaquamarine: "#66cdaa",
  mediumblue: "#0000cd",
  mediumorchid: "#ba55d3",
  mediumpurple: "#9370db",
  mediumseagreen: "#3cb371",
  mediumslateblue: "#7b68ee",
  mediumspringgreen: "#00fa9a",
  mediumturquoise: "#48d1cc",
  mediumvioletred: "#c71585",
  midnightblue: "#191970",
  mintcream: "#f5fffa",
  mistyrose: "#ffe4e1",
  moccasin: "#ffe4b5",
  navajowhite: "#ffdead",
  navy: "#000080",
  oldlace: "#fdf5e6",
  olive: "#808000",
  olivedrab: "#6b8e23",
  orange: "#ffa500",
  orangered: "#ff4500",
  orchid: "#da70d6",
  palegoldenrod: "#eee8aa",
  palegreen: "#98fb98",
  paleturquoise: "#afeeee",
  palevioletred: "#db7093",
  papayawhip: "#ffefd5",
  peachpuff: "#ffdab9",
  peru: "#cd853f",
  pink: "#ffc0cb",
  plum: "#dda0dd",
  powderblue: "#b0e0e6",
  purple: "#800080",
  rebeccapurple: "#663399",
  red: "#ff0000",
  rosybrown: "#bc8f8f",
  royalblue: "#4169e1",
  saddlebrown: "#8b4513",
  salmon: "#fa8072",
  sandybrown: "#f4a460",
  seagreen: "#2e8b57",
  seashell: "#fff5ee",
  sienna: "#a0522d",
  silver: "#c0c0c0",
  skyblue: "#87ceeb",
  slateblue: "#6a5acd",
  slategray: "#708090",
  slategrey: "#708090",
  snow: "#fffafa",
  springgreen: "#00ff7f",
  steelblue: "#4682b4",
  tan: "#d2b48c",
  teal: "#008080",
  thistle: "#d8bfd8",
  tomato: "#ff6347",
  turquoise: "#40e0d0",
  violet: "#ee82ee",
  wheat: "#f5deb3",
  white: "#ffffff",
  whitesmoke: "#f5f5f5",
  yellow: "#ffff00",
  yellowgreen: "#9acd32",
};
function zu(t) {
  var e = { r: 0, g: 0, b: 0 },
    n = 1,
    r = null,
    i = null,
    o = null,
    s = !1,
    a = !1;
  return (
    typeof t == "string" && (t = Hq(t)),
    typeof t == "object" &&
      (js(t.r) && js(t.g) && js(t.b)
        ? ((e = Oq(t.r, t.g, t.b)),
          (s = !0),
          (a = String(t.r).substr(-1) === "%" ? "prgb" : "rgb"))
        : js(t.h) && js(t.s) && js(t.v)
        ? ((r = ev(t.s)),
          (i = ev(t.v)),
          (e = Nq(t.h, r, i)),
          (s = !0),
          (a = "hsv"))
        : js(t.h) &&
          js(t.s) &&
          js(t.l) &&
          ((r = ev(t.s)),
          (o = ev(t.l)),
          (e = Fq(t.h, r, o)),
          (s = !0),
          (a = "hsl")),
      Object.prototype.hasOwnProperty.call(t, "a") && (n = t.a)),
    (n = ID(n)),
    {
      ok: s,
      format: t.format || a,
      r: Math.min(255, Math.max(e.r, 0)),
      g: Math.min(255, Math.max(e.g, 0)),
      b: Math.min(255, Math.max(e.b, 0)),
      a: n,
    }
  );
}
var kq = "[-\\+]?\\d+%?",
  Bq = "[-\\+]?\\d*\\.\\d+%?",
  Ga = "(?:".concat(Bq, ")|(?:").concat(kq, ")"),
  T_ = "[\\s|\\(]+("
    .concat(Ga, ")[,|\\s]+(")
    .concat(Ga, ")[,|\\s]+(")
    .concat(Ga, ")\\s*\\)?"),
  A_ = "[\\s|\\(]+("
    .concat(Ga, ")[,|\\s]+(")
    .concat(Ga, ")[,|\\s]+(")
    .concat(Ga, ")[,|\\s]+(")
    .concat(Ga, ")\\s*\\)?"),
  Io = {
    CSS_UNIT: new RegExp(Ga),
    rgb: new RegExp("rgb" + T_),
    rgba: new RegExp("rgba" + A_),
    hsl: new RegExp("hsl" + T_),
    hsla: new RegExp("hsla" + A_),
    hsv: new RegExp("hsv" + T_),
    hsva: new RegExp("hsva" + A_),
    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
  };
function Hq(t) {
  if (((t = t.trim().toLowerCase()), t.length === 0)) return !1;
  var e = !1;
  if (sb[t]) (t = sb[t]), (e = !0);
  else if (t === "transparent")
    return { r: 0, g: 0, b: 0, a: 0, format: "name" };
  var n = Io.rgb.exec(t);
  return n
    ? { r: n[1], g: n[2], b: n[3] }
    : ((n = Io.rgba.exec(t)),
      n
        ? { r: n[1], g: n[2], b: n[3], a: n[4] }
        : ((n = Io.hsl.exec(t)),
          n
            ? { h: n[1], s: n[2], l: n[3] }
            : ((n = Io.hsla.exec(t)),
              n
                ? { h: n[1], s: n[2], l: n[3], a: n[4] }
                : ((n = Io.hsv.exec(t)),
                  n
                    ? { h: n[1], s: n[2], v: n[3] }
                    : ((n = Io.hsva.exec(t)),
                      n
                        ? { h: n[1], s: n[2], v: n[3], a: n[4] }
                        : ((n = Io.hex8.exec(t)),
                          n
                            ? {
                                r: Ui(n[1]),
                                g: Ui(n[2]),
                                b: Ui(n[3]),
                                a: TP(n[4]),
                                format: e ? "name" : "hex8",
                              }
                            : ((n = Io.hex6.exec(t)),
                              n
                                ? {
                                    r: Ui(n[1]),
                                    g: Ui(n[2]),
                                    b: Ui(n[3]),
                                    format: e ? "name" : "hex",
                                  }
                                : ((n = Io.hex4.exec(t)),
                                  n
                                    ? {
                                        r: Ui(n[1] + n[1]),
                                        g: Ui(n[2] + n[2]),
                                        b: Ui(n[3] + n[3]),
                                        a: TP(n[4] + n[4]),
                                        format: e ? "name" : "hex8",
                                      }
                                    : ((n = Io.hex3.exec(t)),
                                      n
                                        ? {
                                            r: Ui(n[1] + n[1]),
                                            g: Ui(n[2] + n[2]),
                                            b: Ui(n[3] + n[3]),
                                            format: e ? "name" : "hex",
                                          }
                                        : !1)))))))));
}
function js(t) {
  return !!Io.CSS_UNIT.exec(String(t));
}
var ji = (function () {
    function t(e, n) {
      e === void 0 && (e = ""), n === void 0 && (n = {});
      var r;
      if (e instanceof t) return e;
      typeof e == "number" && (e = zq(e)), (this.originalInput = e);
      var i = zu(e);
      (this.originalInput = e),
        (this.r = i.r),
        (this.g = i.g),
        (this.b = i.b),
        (this.a = i.a),
        (this.roundA = Math.round(100 * this.a) / 100),
        (this.format = (r = n.format) !== null && r !== void 0 ? r : i.format),
        (this.gradientType = n.gradientType),
        this.r < 1 && (this.r = Math.round(this.r)),
        this.g < 1 && (this.g = Math.round(this.g)),
        this.b < 1 && (this.b = Math.round(this.b)),
        (this.isValid = i.ok);
    }
    return (
      (t.prototype.isDark = function () {
        return this.getBrightness() < 128;
      }),
      (t.prototype.isLight = function () {
        return !this.isDark();
      }),
      (t.prototype.getBrightness = function () {
        var e = this.toRgb();
        return (e.r * 299 + e.g * 587 + e.b * 114) / 1e3;
      }),
      (t.prototype.getLuminance = function () {
        var e = this.toRgb(),
          n,
          r,
          i,
          o = e.r / 255,
          s = e.g / 255,
          a = e.b / 255;
        return (
          o <= 0.03928
            ? (n = o / 12.92)
            : (n = Math.pow((o + 0.055) / 1.055, 2.4)),
          s <= 0.03928
            ? (r = s / 12.92)
            : (r = Math.pow((s + 0.055) / 1.055, 2.4)),
          a <= 0.03928
            ? (i = a / 12.92)
            : (i = Math.pow((a + 0.055) / 1.055, 2.4)),
          0.2126 * n + 0.7152 * r + 0.0722 * i
        );
      }),
      (t.prototype.getAlpha = function () {
        return this.a;
      }),
      (t.prototype.setAlpha = function (e) {
        return (
          (this.a = ID(e)), (this.roundA = Math.round(100 * this.a) / 100), this
        );
      }),
      (t.prototype.isMonochrome = function () {
        var e = this.toHsl().s;
        return e === 0;
      }),
      (t.prototype.toHsv = function () {
        var e = ib(this.r, this.g, this.b);
        return { h: e.h * 360, s: e.s, v: e.v, a: this.a };
      }),
      (t.prototype.toHsvString = function () {
        var e = ib(this.r, this.g, this.b),
          n = Math.round(e.h * 360),
          r = Math.round(e.s * 100),
          i = Math.round(e.v * 100);
        return this.a === 1
          ? "hsv(".concat(n, ", ").concat(r, "%, ").concat(i, "%)")
          : "hsva("
              .concat(n, ", ")
              .concat(r, "%, ")
              .concat(i, "%, ")
              .concat(this.roundA, ")");
      }),
      (t.prototype.toHsl = function () {
        var e = CP(this.r, this.g, this.b);
        return { h: e.h * 360, s: e.s, l: e.l, a: this.a };
      }),
      (t.prototype.toHslString = function () {
        var e = CP(this.r, this.g, this.b),
          n = Math.round(e.h * 360),
          r = Math.round(e.s * 100),
          i = Math.round(e.l * 100);
        return this.a === 1
          ? "hsl(".concat(n, ", ").concat(r, "%, ").concat(i, "%)")
          : "hsla("
              .concat(n, ", ")
              .concat(r, "%, ")
              .concat(i, "%, ")
              .concat(this.roundA, ")");
      }),
      (t.prototype.toHex = function (e) {
        return e === void 0 && (e = !1), ob(this.r, this.g, this.b, e);
      }),
      (t.prototype.toHexString = function (e) {
        return e === void 0 && (e = !1), "#" + this.toHex(e);
      }),
      (t.prototype.toHex8 = function (e) {
        return e === void 0 && (e = !1), Dq(this.r, this.g, this.b, this.a, e);
      }),
      (t.prototype.toHex8String = function (e) {
        return e === void 0 && (e = !1), "#" + this.toHex8(e);
      }),
      (t.prototype.toHexShortString = function (e) {
        return (
          e === void 0 && (e = !1),
          this.a === 1 ? this.toHexString(e) : this.toHex8String(e)
        );
      }),
      (t.prototype.toRgb = function () {
        return {
          r: Math.round(this.r),
          g: Math.round(this.g),
          b: Math.round(this.b),
          a: this.a,
        };
      }),
      (t.prototype.toRgbString = function () {
        var e = Math.round(this.r),
          n = Math.round(this.g),
          r = Math.round(this.b);
        return this.a === 1
          ? "rgb(".concat(e, ", ").concat(n, ", ").concat(r, ")")
          : "rgba("
              .concat(e, ", ")
              .concat(n, ", ")
              .concat(r, ", ")
              .concat(this.roundA, ")");
      }),
      (t.prototype.toPercentageRgb = function () {
        var e = function (n) {
          return "".concat(Math.round(Tr(n, 255) * 100), "%");
        };
        return { r: e(this.r), g: e(this.g), b: e(this.b), a: this.a };
      }),
      (t.prototype.toPercentageRgbString = function () {
        var e = function (n) {
          return Math.round(Tr(n, 255) * 100);
        };
        return this.a === 1
          ? "rgb("
              .concat(e(this.r), "%, ")
              .concat(e(this.g), "%, ")
              .concat(e(this.b), "%)")
          : "rgba("
              .concat(e(this.r), "%, ")
              .concat(e(this.g), "%, ")
              .concat(e(this.b), "%, ")
              .concat(this.roundA, ")");
      }),
      (t.prototype.toName = function () {
        if (this.a === 0) return "transparent";
        if (this.a < 1) return !1;
        for (
          var e = "#" + ob(this.r, this.g, this.b, !1),
            n = 0,
            r = Object.entries(sb);
          n < r.length;
          n++
        ) {
          var i = r[n],
            o = i[0],
            s = i[1];
          if (e === s) return o;
        }
        return !1;
      }),
      (t.prototype.toString = function (e) {
        var n = !!e;
        e = e ?? this.format;
        var r = !1,
          i = this.a < 1 && this.a >= 0,
          o = !n && i && (e.startsWith("hex") || e === "name");
        return o
          ? e === "name" && this.a === 0
            ? this.toName()
            : this.toRgbString()
          : (e === "rgb" && (r = this.toRgbString()),
            e === "prgb" && (r = this.toPercentageRgbString()),
            (e === "hex" || e === "hex6") && (r = this.toHexString()),
            e === "hex3" && (r = this.toHexString(!0)),
            e === "hex4" && (r = this.toHex8String(!0)),
            e === "hex8" && (r = this.toHex8String()),
            e === "name" && (r = this.toName()),
            e === "hsl" && (r = this.toHslString()),
            e === "hsv" && (r = this.toHsvString()),
            r || this.toHexString());
      }),
      (t.prototype.toNumber = function () {
        return (
          (Math.round(this.r) << 16) +
          (Math.round(this.g) << 8) +
          Math.round(this.b)
        );
      }),
      (t.prototype.clone = function () {
        return new t(this.toString());
      }),
      (t.prototype.lighten = function (e) {
        e === void 0 && (e = 10);
        var n = this.toHsl();
        return (n.l += e / 100), (n.l = Jg(n.l)), new t(n);
      }),
      (t.prototype.brighten = function (e) {
        e === void 0 && (e = 10);
        var n = this.toRgb();
        return (
          (n.r = Math.max(
            0,
            Math.min(255, n.r - Math.round(255 * -(e / 100)))
          )),
          (n.g = Math.max(
            0,
            Math.min(255, n.g - Math.round(255 * -(e / 100)))
          )),
          (n.b = Math.max(
            0,
            Math.min(255, n.b - Math.round(255 * -(e / 100)))
          )),
          new t(n)
        );
      }),
      (t.prototype.darken = function (e) {
        e === void 0 && (e = 10);
        var n = this.toHsl();
        return (n.l -= e / 100), (n.l = Jg(n.l)), new t(n);
      }),
      (t.prototype.tint = function (e) {
        return e === void 0 && (e = 10), this.mix("white", e);
      }),
      (t.prototype.shade = function (e) {
        return e === void 0 && (e = 10), this.mix("black", e);
      }),
      (t.prototype.desaturate = function (e) {
        e === void 0 && (e = 10);
        var n = this.toHsl();
        return (n.s -= e / 100), (n.s = Jg(n.s)), new t(n);
      }),
      (t.prototype.saturate = function (e) {
        e === void 0 && (e = 10);
        var n = this.toHsl();
        return (n.s += e / 100), (n.s = Jg(n.s)), new t(n);
      }),
      (t.prototype.greyscale = function () {
        return this.desaturate(100);
      }),
      (t.prototype.spin = function (e) {
        var n = this.toHsl(),
          r = (n.h + e) % 360;
        return (n.h = r < 0 ? 360 + r : r), new t(n);
      }),
      (t.prototype.mix = function (e, n) {
        n === void 0 && (n = 50);
        var r = this.toRgb(),
          i = new t(e).toRgb(),
          o = n / 100,
          s = {
            r: (i.r - r.r) * o + r.r,
            g: (i.g - r.g) * o + r.g,
            b: (i.b - r.b) * o + r.b,
            a: (i.a - r.a) * o + r.a,
          };
        return new t(s);
      }),
      (t.prototype.analogous = function (e, n) {
        e === void 0 && (e = 6), n === void 0 && (n = 30);
        var r = this.toHsl(),
          i = 360 / n,
          o = [this];
        for (r.h = (r.h - ((i * e) >> 1) + 720) % 360; --e; )
          (r.h = (r.h + i) % 360), o.push(new t(r));
        return o;
      }),
      (t.prototype.complement = function () {
        var e = this.toHsl();
        return (e.h = (e.h + 180) % 360), new t(e);
      }),
      (t.prototype.monochromatic = function (e) {
        e === void 0 && (e = 6);
        for (
          var n = this.toHsv(), r = n.h, i = n.s, o = n.v, s = [], a = 1 / e;
          e--;

        )
          s.push(new t({ h: r, s: i, v: o })), (o = (o + a) % 1);
        return s;
      }),
      (t.prototype.splitcomplement = function () {
        var e = this.toHsl(),
          n = e.h;
        return [
          this,
          new t({ h: (n + 72) % 360, s: e.s, l: e.l }),
          new t({ h: (n + 216) % 360, s: e.s, l: e.l }),
        ];
      }),
      (t.prototype.onBackground = function (e) {
        var n = this.toRgb(),
          r = new t(e).toRgb(),
          i = n.a + r.a * (1 - n.a);
        return new t({
          r: (n.r * n.a + r.r * r.a * (1 - n.a)) / i,
          g: (n.g * n.a + r.g * r.a * (1 - n.a)) / i,
          b: (n.b * n.a + r.b * r.a * (1 - n.a)) / i,
          a: i,
        });
      }),
      (t.prototype.triad = function () {
        return this.polyad(3);
      }),
      (t.prototype.tetrad = function () {
        return this.polyad(4);
      }),
      (t.prototype.polyad = function (e) {
        for (
          var n = this.toHsl(), r = n.h, i = [this], o = 360 / e, s = 1;
          s < e;
          s++
        )
          i.push(new t({ h: (r + s * o) % 360, s: n.s, l: n.l }));
        return i;
      }),
      (t.prototype.equals = function (e) {
        return this.toRgbString() === new t(e).toRgbString();
      }),
      t
    );
  })(),
  tv = 2,
  AP = 0.16,
  Vq = 0.05,
  Gq = 0.05,
  jq = 0.15,
  OD = 5,
  FD = 4,
  Wq = [
    { index: 7, opacity: 0.15 },
    { index: 6, opacity: 0.25 },
    { index: 5, opacity: 0.3 },
    { index: 5, opacity: 0.45 },
    { index: 5, opacity: 0.65 },
    { index: 5, opacity: 0.85 },
    { index: 4, opacity: 0.9 },
    { index: 3, opacity: 0.95 },
    { index: 2, opacity: 0.97 },
    { index: 1, opacity: 0.98 },
  ];
function RP(t) {
  var e = t.r,
    n = t.g,
    r = t.b,
    i = ib(e, n, r);
  return { h: i.h * 360, s: i.s, v: i.v };
}
function nv(t) {
  var e = t.r,
    n = t.g,
    r = t.b;
  return "#".concat(ob(e, n, r, !1));
}
function $q(t, e, n) {
  var r = n / 100,
    i = {
      r: (e.r - t.r) * r + t.r,
      g: (e.g - t.g) * r + t.g,
      b: (e.b - t.b) * r + t.b,
    };
  return i;
}
function PP(t, e, n) {
  var r;
  return (
    Math.round(t.h) >= 60 && Math.round(t.h) <= 240
      ? (r = n ? Math.round(t.h) - tv * e : Math.round(t.h) + tv * e)
      : (r = n ? Math.round(t.h) + tv * e : Math.round(t.h) - tv * e),
    r < 0 ? (r += 360) : r >= 360 && (r -= 360),
    r
  );
}
function LP(t, e, n) {
  if (t.h === 0 && t.s === 0) return t.s;
  var r;
  return (
    n ? (r = t.s - AP * e) : e === FD ? (r = t.s + AP) : (r = t.s + Vq * e),
    r > 1 && (r = 1),
    n && e === OD && r > 0.1 && (r = 0.1),
    r < 0.06 && (r = 0.06),
    Number(r.toFixed(2))
  );
}
function IP(t, e, n) {
  var r;
  return (
    n ? (r = t.v + Gq * e) : (r = t.v - jq * e),
    r > 1 && (r = 1),
    Number(r.toFixed(2))
  );
}
function Oc(t) {
  for (
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
      n = [],
      r = zu(t),
      i = OD;
    i > 0;
    i -= 1
  ) {
    var o = RP(r),
      s = nv(zu({ h: PP(o, i, !0), s: LP(o, i, !0), v: IP(o, i, !0) }));
    n.push(s);
  }
  n.push(nv(r));
  for (var a = 1; a <= FD; a += 1) {
    var l = RP(r),
      c = nv(zu({ h: PP(l, a), s: LP(l, a), v: IP(l, a) }));
    n.push(c);
  }
  return e.theme === "dark"
    ? Wq.map(function (u) {
        var h = u.index,
          p = u.opacity,
          m = nv($q(zu(e.backgroundColor || "#141414"), zu(n[h]), p * 100));
        return m;
      })
    : n;
}
var R_ = {
    red: "#F5222D",
    volcano: "#FA541C",
    orange: "#FA8C16",
    gold: "#FAAD14",
    yellow: "#FADB14",
    lime: "#A0D911",
    green: "#52C41A",
    cyan: "#13C2C2",
    blue: "#1677FF",
    geekblue: "#2F54EB",
    purple: "#722ED1",
    magenta: "#EB2F96",
    grey: "#666666",
  },
  Uv = {},
  P_ = {};
Object.keys(R_).forEach(function (t) {
  (Uv[t] = Oc(R_[t])),
    (Uv[t].primary = Uv[t][5]),
    (P_[t] = Oc(R_[t], { theme: "dark", backgroundColor: "#141414" })),
    (P_[t].primary = P_[t][5]);
});
var Xq = Uv.blue;
const qq = (t) => {
  const { controlHeight: e } = t;
  return {
    controlHeightSM: e * 0.75,
    controlHeightXS: e * 0.5,
    controlHeightLG: e * 1.25,
  };
};
function Yq(t) {
  const { sizeUnit: e, sizeStep: n } = t;
  return {
    sizeXXL: e * (n + 8),
    sizeXL: e * (n + 4),
    sizeLG: e * (n + 2),
    sizeMD: e * (n + 1),
    sizeMS: e * n,
    size: e * n,
    sizeSM: e * (n - 1),
    sizeXS: e * (n - 2),
    sizeXXS: e * (n - 3),
  };
}
const ND = {
    blue: "#1677ff",
    purple: "#722ED1",
    cyan: "#13C2C2",
    green: "#52C41A",
    magenta: "#EB2F96",
    pink: "#eb2f96",
    red: "#F5222D",
    orange: "#FA8C16",
    yellow: "#FADB14",
    volcano: "#FA541C",
    geekblue: "#2F54EB",
    gold: "#FAAD14",
    lime: "#A0D911",
  },
  Kq = Object.assign(Object.assign({}, ND), {
    colorPrimary: "#1677ff",
    colorSuccess: "#52c41a",
    colorWarning: "#faad14",
    colorError: "#ff4d4f",
    colorInfo: "#1677ff",
    colorLink: "",
    colorTextBase: "",
    colorBgBase: "",
    fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial,
'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
'Noto Color Emoji'`,
    fontFamilyCode:
      "'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace",
    fontSize: 14,
    lineWidth: 1,
    lineType: "solid",
    motionUnit: 0.1,
    motionBase: 0,
    motionEaseOutCirc: "cubic-bezier(0.08, 0.82, 0.17, 1)",
    motionEaseInOutCirc: "cubic-bezier(0.78, 0.14, 0.15, 0.86)",
    motionEaseOut: "cubic-bezier(0.215, 0.61, 0.355, 1)",
    motionEaseInOut: "cubic-bezier(0.645, 0.045, 0.355, 1)",
    motionEaseOutBack: "cubic-bezier(0.12, 0.4, 0.29, 1.46)",
    motionEaseInBack: "cubic-bezier(0.71, -0.46, 0.88, 0.6)",
    motionEaseInQuint: "cubic-bezier(0.755, 0.05, 0.855, 0.06)",
    motionEaseOutQuint: "cubic-bezier(0.23, 1, 0.32, 1)",
    borderRadius: 6,
    sizeUnit: 4,
    sizeStep: 4,
    sizePopupArrow: 16,
    controlHeight: 32,
    zIndexBase: 0,
    zIndexPopupBase: 1e3,
    opacityImage: 1,
    wireframe: !1,
    motion: !0,
  }),
  op = Kq;
function Zq(t, e) {
  let { generateColorPalettes: n, generateNeutralColorPalettes: r } = e;
  const {
      colorSuccess: i,
      colorWarning: o,
      colorError: s,
      colorInfo: a,
      colorPrimary: l,
      colorBgBase: c,
      colorTextBase: u,
    } = t,
    h = n(l),
    p = n(i),
    m = n(o),
    v = n(s),
    S = n(a),
    x = r(c, u),
    g = t.colorLink || t.colorInfo,
    y = n(g);
  return Object.assign(Object.assign({}, x), {
    colorPrimaryBg: h[1],
    colorPrimaryBgHover: h[2],
    colorPrimaryBorder: h[3],
    colorPrimaryBorderHover: h[4],
    colorPrimaryHover: h[5],
    colorPrimary: h[6],
    colorPrimaryActive: h[7],
    colorPrimaryTextHover: h[8],
    colorPrimaryText: h[9],
    colorPrimaryTextActive: h[10],
    colorSuccessBg: p[1],
    colorSuccessBgHover: p[2],
    colorSuccessBorder: p[3],
    colorSuccessBorderHover: p[4],
    colorSuccessHover: p[4],
    colorSuccess: p[6],
    colorSuccessActive: p[7],
    colorSuccessTextHover: p[8],
    colorSuccessText: p[9],
    colorSuccessTextActive: p[10],
    colorErrorBg: v[1],
    colorErrorBgHover: v[2],
    colorErrorBorder: v[3],
    colorErrorBorderHover: v[4],
    colorErrorHover: v[5],
    colorError: v[6],
    colorErrorActive: v[7],
    colorErrorTextHover: v[8],
    colorErrorText: v[9],
    colorErrorTextActive: v[10],
    colorWarningBg: m[1],
    colorWarningBgHover: m[2],
    colorWarningBorder: m[3],
    colorWarningBorderHover: m[4],
    colorWarningHover: m[4],
    colorWarning: m[6],
    colorWarningActive: m[7],
    colorWarningTextHover: m[8],
    colorWarningText: m[9],
    colorWarningTextActive: m[10],
    colorInfoBg: S[1],
    colorInfoBgHover: S[2],
    colorInfoBorder: S[3],
    colorInfoBorderHover: S[4],
    colorInfoHover: S[4],
    colorInfo: S[6],
    colorInfoActive: S[7],
    colorInfoTextHover: S[8],
    colorInfoText: S[9],
    colorInfoTextActive: S[10],
    colorLinkHover: y[4],
    colorLink: y[6],
    colorLinkActive: y[7],
    colorBgMask: new ji("#000").setAlpha(0.45).toRgbString(),
    colorWhite: "#fff",
  });
}
const Qq = (t) => {
  let e = t,
    n = t,
    r = t,
    i = t;
  return (
    t < 6 && t >= 5
      ? (e = t + 1)
      : t < 16 && t >= 6
      ? (e = t + 2)
      : t >= 16 && (e = 16),
    t < 7 && t >= 5
      ? (n = 4)
      : t < 8 && t >= 7
      ? (n = 5)
      : t < 14 && t >= 8
      ? (n = 6)
      : t < 16 && t >= 14
      ? (n = 7)
      : t >= 16 && (n = 8),
    t < 6 && t >= 2 ? (r = 1) : t >= 6 && (r = 2),
    t > 4 && t < 8 ? (i = 4) : t >= 8 && (i = 6),
    {
      borderRadius: t,
      borderRadiusXS: r,
      borderRadiusSM: n,
      borderRadiusLG: e,
      borderRadiusOuter: i,
    }
  );
};
function Jq(t) {
  const { motionUnit: e, motionBase: n, borderRadius: r, lineWidth: i } = t;
  return Object.assign(
    {
      motionDurationFast: `${(n + e).toFixed(1)}s`,
      motionDurationMid: `${(n + e * 2).toFixed(1)}s`,
      motionDurationSlow: `${(n + e * 3).toFixed(1)}s`,
      lineWidthBold: i + 1,
    },
    Qq(r)
  );
}
const Ws = (t, e) => new ji(t).setAlpha(e).toRgbString(),
  Bd = (t, e) => new ji(t).darken(e).toHexString(),
  eY = (t) => {
    const e = Oc(t);
    return {
      1: e[0],
      2: e[1],
      3: e[2],
      4: e[3],
      5: e[4],
      6: e[5],
      7: e[6],
      8: e[4],
      9: e[5],
      10: e[6],
    };
  },
  tY = (t, e) => {
    const n = t || "#fff",
      r = e || "#000";
    return {
      colorBgBase: n,
      colorTextBase: r,
      colorText: Ws(r, 0.88),
      colorTextSecondary: Ws(r, 0.65),
      colorTextTertiary: Ws(r, 0.45),
      colorTextQuaternary: Ws(r, 0.25),
      colorFill: Ws(r, 0.15),
      colorFillSecondary: Ws(r, 0.06),
      colorFillTertiary: Ws(r, 0.04),
      colorFillQuaternary: Ws(r, 0.02),
      colorBgLayout: Bd(n, 4),
      colorBgContainer: Bd(n, 0),
      colorBgElevated: Bd(n, 0),
      colorBgSpotlight: Ws(r, 0.85),
      colorBgBlur: "transparent",
      colorBorder: Bd(n, 15),
      colorBorderSecondary: Bd(n, 6),
    };
  };
function zv(t) {
  return (t + 8) / t;
}
function nY(t) {
  const e = new Array(10).fill(null).map((n, r) => {
    const i = r - 1,
      o = t * Math.pow(2.71828, i / 5),
      s = r > 1 ? Math.floor(o) : Math.ceil(o);
    return Math.floor(s / 2) * 2;
  });
  return (e[1] = t), e.map((n) => ({ size: n, lineHeight: zv(n) }));
}
const rY = (t) => {
  const e = nY(t),
    n = e.map((u) => u.size),
    r = e.map((u) => u.lineHeight),
    i = n[1],
    o = n[0],
    s = n[2],
    a = r[1],
    l = r[0],
    c = r[2];
  return {
    fontSizeSM: o,
    fontSize: i,
    fontSizeLG: s,
    fontSizeXL: n[3],
    fontSizeHeading1: n[6],
    fontSizeHeading2: n[5],
    fontSizeHeading3: n[4],
    fontSizeHeading4: n[3],
    fontSizeHeading5: n[2],
    lineHeight: a,
    lineHeightLG: c,
    lineHeightSM: l,
    fontHeight: Math.round(a * i),
    fontHeightLG: Math.round(c * s),
    fontHeightSM: Math.round(l * o),
    lineHeightHeading1: r[6],
    lineHeightHeading2: r[5],
    lineHeightHeading3: r[4],
    lineHeightHeading4: r[3],
    lineHeightHeading5: r[2],
  };
};
function iY(t) {
  const e = Object.keys(ND)
    .map((n) => {
      const r = Oc(t[n]);
      return new Array(10)
        .fill(1)
        .reduce(
          (i, o, s) => (
            (i[`${n}-${s + 1}`] = r[s]), (i[`${n}${s + 1}`] = r[s]), i
          ),
          {}
        );
    })
    .reduce((n, r) => ((n = Object.assign(Object.assign({}, n), r)), n), {});
  return Object.assign(
    Object.assign(
      Object.assign(
        Object.assign(
          Object.assign(
            Object.assign(Object.assign({}, t), e),
            Zq(t, {
              generateColorPalettes: eY,
              generateNeutralColorPalettes: tY,
            })
          ),
          rY(t.fontSize)
        ),
        Yq(t)
      ),
      qq(t)
    ),
    Jq(t)
  );
}
const DD = Zw(iY),
  UD = { token: op, override: { override: op }, hashed: !0 },
  zD = at.createContext(UD),
  kD = "anticon",
  oY = (t, e) => e || (t ? `ant-${t}` : "ant"),
  Wr = z.createContext({ getPrefixCls: oY, iconPrefixCls: kD }),
  sY = `-ant-${Date.now()}-${Math.random()}`;
function aY(t, e) {
  const n = {},
    r = (s, a) => {
      let l = s.clone();
      return (l = (a == null ? void 0 : a(l)) || l), l.toRgbString();
    },
    i = (s, a) => {
      const l = new ji(s),
        c = Oc(l.toRgbString());
      (n[`${a}-color`] = r(l)),
        (n[`${a}-color-disabled`] = c[1]),
        (n[`${a}-color-hover`] = c[4]),
        (n[`${a}-color-active`] = c[6]),
        (n[`${a}-color-outline`] = l.clone().setAlpha(0.2).toRgbString()),
        (n[`${a}-color-deprecated-bg`] = c[0]),
        (n[`${a}-color-deprecated-border`] = c[2]);
    };
  if (e.primaryColor) {
    i(e.primaryColor, "primary");
    const s = new ji(e.primaryColor),
      a = Oc(s.toRgbString());
    a.forEach((c, u) => {
      n[`primary-${u + 1}`] = c;
    }),
      (n["primary-color-deprecated-l-35"] = r(s, (c) => c.lighten(35))),
      (n["primary-color-deprecated-l-20"] = r(s, (c) => c.lighten(20))),
      (n["primary-color-deprecated-t-20"] = r(s, (c) => c.tint(20))),
      (n["primary-color-deprecated-t-50"] = r(s, (c) => c.tint(50))),
      (n["primary-color-deprecated-f-12"] = r(s, (c) =>
        c.setAlpha(c.getAlpha() * 0.12)
      ));
    const l = new ji(a[0]);
    (n["primary-color-active-deprecated-f-30"] = r(l, (c) =>
      c.setAlpha(c.getAlpha() * 0.3)
    )),
      (n["primary-color-active-deprecated-d-02"] = r(l, (c) => c.darken(2)));
  }
  return (
    e.successColor && i(e.successColor, "success"),
    e.warningColor && i(e.warningColor, "warning"),
    e.errorColor && i(e.errorColor, "error"),
    e.infoColor && i(e.infoColor, "info"),
    `
  :root {
    ${Object.keys(n).map((s) => `--${t}-${s}: ${n[s]};`).join(`
`)}
  }
  `.trim()
  );
}
function lY(t, e) {
  const n = aY(t, e);
  Ms() && Ic(n, `${sY}-dynamic-theme`);
}
const ab = z.createContext(!1),
  cY = (t) => {
    let { children: e, disabled: n } = t;
    const r = z.useContext(ab);
    return z.createElement(ab.Provider, { value: n ?? r }, e);
  },
  Rp = ab,
  lb = z.createContext(void 0),
  uY = (t) => {
    let { children: e, size: n } = t;
    const r = z.useContext(lb);
    return z.createElement(lb.Provider, { value: n || r }, e);
  },
  Ky = lb;
function fY() {
  const t = z.useContext(Rp),
    e = z.useContext(Ky);
  return { componentDisabled: t, componentSize: e };
}
const dY = "5.13.3";
function L_(t) {
  return t >= 0 && t <= 255;
}
function rv(t, e) {
  const { r: n, g: r, b: i, a: o } = new ji(t).toRgb();
  if (o < 1) return t;
  const { r: s, g: a, b: l } = new ji(e).toRgb();
  for (let c = 0.01; c <= 1; c += 0.01) {
    const u = Math.round((n - s * (1 - c)) / c),
      h = Math.round((r - a * (1 - c)) / c),
      p = Math.round((i - l * (1 - c)) / c);
    if (L_(u) && L_(h) && L_(p))
      return new ji({
        r: u,
        g: h,
        b: p,
        a: Math.round(c * 100) / 100,
      }).toRgbString();
  }
  return new ji({ r: n, g: r, b: i, a: 1 }).toRgbString();
}
var hY = function (t, e) {
  var n = {};
  for (var r in t)
    Object.prototype.hasOwnProperty.call(t, r) &&
      e.indexOf(r) < 0 &&
      (n[r] = t[r]);
  if (t != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(t); i < r.length; i++)
      e.indexOf(r[i]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(t, r[i]) &&
        (n[r[i]] = t[r[i]]);
  return n;
};
function BD(t) {
  const { override: e } = t,
    n = hY(t, ["override"]),
    r = Object.assign({}, e);
  Object.keys(op).forEach((p) => {
    delete r[p];
  });
  const i = Object.assign(Object.assign({}, n), r),
    o = 480,
    s = 576,
    a = 768,
    l = 992,
    c = 1200,
    u = 1600;
  if (i.motion === !1) {
    const p = "0s";
    (i.motionDurationFast = p),
      (i.motionDurationMid = p),
      (i.motionDurationSlow = p);
  }
  return Object.assign(
    Object.assign(Object.assign({}, i), {
      colorFillContent: i.colorFillSecondary,
      colorFillContentHover: i.colorFill,
      colorFillAlter: i.colorFillQuaternary,
      colorBgContainerDisabled: i.colorFillTertiary,
      colorBorderBg: i.colorBgContainer,
      colorSplit: rv(i.colorBorderSecondary, i.colorBgContainer),
      colorTextPlaceholder: i.colorTextQuaternary,
      colorTextDisabled: i.colorTextQuaternary,
      colorTextHeading: i.colorText,
      colorTextLabel: i.colorTextSecondary,
      colorTextDescription: i.colorTextTertiary,
      colorTextLightSolid: i.colorWhite,
      colorHighlight: i.colorError,
      colorBgTextHover: i.colorFillSecondary,
      colorBgTextActive: i.colorFill,
      colorIcon: i.colorTextTertiary,
      colorIconHover: i.colorText,
      colorErrorOutline: rv(i.colorErrorBg, i.colorBgContainer),
      colorWarningOutline: rv(i.colorWarningBg, i.colorBgContainer),
      fontSizeIcon: i.fontSizeSM,
      lineWidthFocus: i.lineWidth * 4,
      lineWidth: i.lineWidth,
      controlOutlineWidth: i.lineWidth * 2,
      controlInteractiveSize: i.controlHeight / 2,
      controlItemBgHover: i.colorFillTertiary,
      controlItemBgActive: i.colorPrimaryBg,
      controlItemBgActiveHover: i.colorPrimaryBgHover,
      controlItemBgActiveDisabled: i.colorFill,
      controlTmpOutline: i.colorFillQuaternary,
      controlOutline: rv(i.colorPrimaryBg, i.colorBgContainer),
      lineType: i.lineType,
      borderRadius: i.borderRadius,
      borderRadiusXS: i.borderRadiusXS,
      borderRadiusSM: i.borderRadiusSM,
      borderRadiusLG: i.borderRadiusLG,
      fontWeightStrong: 600,
      opacityLoading: 0.65,
      linkDecoration: "none",
      linkHoverDecoration: "none",
      linkFocusDecoration: "none",
      controlPaddingHorizontal: 12,
      controlPaddingHorizontalSM: 8,
      paddingXXS: i.sizeXXS,
      paddingXS: i.sizeXS,
      paddingSM: i.sizeSM,
      padding: i.size,
      paddingMD: i.sizeMD,
      paddingLG: i.sizeLG,
      paddingXL: i.sizeXL,
      paddingContentHorizontalLG: i.sizeLG,
      paddingContentVerticalLG: i.sizeMS,
      paddingContentHorizontal: i.sizeMS,
      paddingContentVertical: i.sizeSM,
      paddingContentHorizontalSM: i.size,
      paddingContentVerticalSM: i.sizeXS,
      marginXXS: i.sizeXXS,
      marginXS: i.sizeXS,
      marginSM: i.sizeSM,
      margin: i.size,
      marginMD: i.sizeMD,
      marginLG: i.sizeLG,
      marginXL: i.sizeXL,
      marginXXL: i.sizeXXL,
      boxShadow: `
      0 6px 16px 0 rgba(0, 0, 0, 0.08),
      0 3px 6px -4px rgba(0, 0, 0, 0.12),
      0 9px 28px 8px rgba(0, 0, 0, 0.05)
    `,
      boxShadowSecondary: `
      0 6px 16px 0 rgba(0, 0, 0, 0.08),
      0 3px 6px -4px rgba(0, 0, 0, 0.12),
      0 9px 28px 8px rgba(0, 0, 0, 0.05)
    `,
      boxShadowTertiary: `
      0 1px 2px 0 rgba(0, 0, 0, 0.03),
      0 1px 6px -1px rgba(0, 0, 0, 0.02),
      0 2px 4px 0 rgba(0, 0, 0, 0.02)
    `,
      screenXS: o,
      screenXSMin: o,
      screenXSMax: s - 1,
      screenSM: s,
      screenSMMin: s,
      screenSMMax: a - 1,
      screenMD: a,
      screenMDMin: a,
      screenMDMax: l - 1,
      screenLG: l,
      screenLGMin: l,
      screenLGMax: c - 1,
      screenXL: c,
      screenXLMin: c,
      screenXLMax: u - 1,
      screenXXL: u,
      screenXXLMin: u,
      boxShadowPopoverArrow: "2px 2px 5px rgba(0, 0, 0, 0.05)",
      boxShadowCard: `
      0 1px 2px -2px ${new ji("rgba(0, 0, 0, 0.16)").toRgbString()},
      0 3px 6px 0 ${new ji("rgba(0, 0, 0, 0.12)").toRgbString()},
      0 5px 12px 4px ${new ji("rgba(0, 0, 0, 0.09)").toRgbString()}
    `,
      boxShadowDrawerRight: `
      -6px 0 16px 0 rgba(0, 0, 0, 0.08),
      -3px 0 6px -4px rgba(0, 0, 0, 0.12),
      -9px 0 28px 8px rgba(0, 0, 0, 0.05)
    `,
      boxShadowDrawerLeft: `
      6px 0 16px 0 rgba(0, 0, 0, 0.08),
      3px 0 6px -4px rgba(0, 0, 0, 0.12),
      9px 0 28px 8px rgba(0, 0, 0, 0.05)
    `,
      boxShadowDrawerUp: `
      0 6px 16px 0 rgba(0, 0, 0, 0.08),
      0 3px 6px -4px rgba(0, 0, 0, 0.12),
      0 9px 28px 8px rgba(0, 0, 0, 0.05)
    `,
      boxShadowDrawerDown: `
      0 -6px 16px 0 rgba(0, 0, 0, 0.08),
      0 -3px 6px -4px rgba(0, 0, 0, 0.12),
      0 -9px 28px 8px rgba(0, 0, 0, 0.05)
    `,
      boxShadowTabsOverflowLeft: "inset 10px 0 8px -8px rgba(0, 0, 0, 0.08)",
      boxShadowTabsOverflowRight: "inset -10px 0 8px -8px rgba(0, 0, 0, 0.08)",
      boxShadowTabsOverflowTop: "inset 0 10px 8px -8px rgba(0, 0, 0, 0.08)",
      boxShadowTabsOverflowBottom: "inset 0 -10px 8px -8px rgba(0, 0, 0, 0.08)",
    }),
    r
  );
}
var OP = function (t, e) {
  var n = {};
  for (var r in t)
    Object.prototype.hasOwnProperty.call(t, r) &&
      e.indexOf(r) < 0 &&
      (n[r] = t[r]);
  if (t != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(t); i < r.length; i++)
      e.indexOf(r[i]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(t, r[i]) &&
        (n[r[i]] = t[r[i]]);
  return n;
};
const HD = {
    lineHeight: !0,
    lineHeightSM: !0,
    lineHeightLG: !0,
    lineHeightHeading1: !0,
    lineHeightHeading2: !0,
    lineHeightHeading3: !0,
    lineHeightHeading4: !0,
    lineHeightHeading5: !0,
    opacityLoading: !0,
    fontWeightStrong: !0,
    zIndexPopupBase: !0,
    zIndexBase: !0,
  },
  VD = {
    size: !0,
    sizeSM: !0,
    sizeLG: !0,
    sizeMD: !0,
    sizeXS: !0,
    sizeXXS: !0,
    sizeMS: !0,
    sizeXL: !0,
    sizeXXL: !0,
    sizeUnit: !0,
    sizeStep: !0,
    motionBase: !0,
    motionUnit: !0,
  },
  pY = {
    screenXS: !0,
    screenXSMin: !0,
    screenXSMax: !0,
    screenSM: !0,
    screenSMMin: !0,
    screenSMMax: !0,
    screenMD: !0,
    screenMDMin: !0,
    screenMDMax: !0,
    screenLG: !0,
    screenLGMin: !0,
    screenLGMax: !0,
    screenXL: !0,
    screenXLMin: !0,
    screenXLMax: !0,
    screenXXL: !0,
    screenXXLMin: !0,
  },
  GD = (t, e, n) => {
    const r = n.getDerivativeToken(t),
      { override: i } = e,
      o = OP(e, ["override"]);
    let s = Object.assign(Object.assign({}, r), { override: i });
    return (
      (s = BD(s)),
      o &&
        Object.entries(o).forEach((a) => {
          let [l, c] = a;
          const { theme: u } = c,
            h = OP(c, ["theme"]);
          let p = h;
          u &&
            (p = GD(
              Object.assign(Object.assign({}, s), h),
              { override: h },
              u
            )),
            (s[l] = p);
        }),
      s
    );
  };
function ul() {
  const {
      token: t,
      hashed: e,
      theme: n,
      override: r,
      cssVar: i,
    } = at.useContext(zD),
    o = `${dY}-${e || ""}`,
    s = n || DD,
    [a, l, c] = BX(s, [op, t], {
      salt: o,
      override: r,
      getComputedToken: GD,
      formatToken: BD,
      cssVar: i && {
        prefix: i.prefix,
        key: i.key,
        unitless: HD,
        ignore: VD,
        preserve: pY,
      },
    });
  return [s, c, e ? l : "", a, i];
}
function cb(t) {
  var e = z.useRef();
  e.current = t;
  var n = z.useCallback(function () {
    for (var r, i = arguments.length, o = new Array(i), s = 0; s < i; s++)
      o[s] = arguments[s];
    return (r = e.current) === null || r === void 0
      ? void 0
      : r.call.apply(r, [e].concat(o));
  }, []);
  return n;
}
function mf(t) {
  var e = z.useRef(!1),
    n = z.useState(t),
    r = yt(n, 2),
    i = r[0],
    o = r[1];
  z.useEffect(function () {
    return (
      (e.current = !1),
      function () {
        e.current = !0;
      }
    );
  }, []);
  function s(a, l) {
    (l && e.current) || o(a);
  }
  return [i, s];
}
function I_(t) {
  return t !== void 0;
}
function Pp(t, e) {
  var n = e || {},
    r = n.defaultValue,
    i = n.value,
    o = n.onChange,
    s = n.postState,
    a = mf(function () {
      return I_(i)
        ? i
        : I_(r)
        ? typeof r == "function"
          ? r()
          : r
        : typeof t == "function"
        ? t()
        : t;
    }),
    l = yt(a, 2),
    c = l[0],
    u = l[1],
    h = i !== void 0 ? i : c,
    p = s ? s(h) : h,
    m = cb(o),
    v = mf([h]),
    S = yt(v, 2),
    x = S[0],
    g = S[1];
  yP(
    function () {
      var _ = x[0];
      c !== _ && m(c, _);
    },
    [x]
  ),
    yP(
      function () {
        I_(i) || u(i);
      },
      [i]
    );
  var y = cb(function (_, b) {
    u(_, b), g([h], b);
  });
  return [p, y];
}
const sp = function (t) {
    let e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    return {
      boxSizing: "border-box",
      margin: 0,
      padding: 0,
      color: t.colorText,
      fontSize: t.fontSize,
      lineHeight: t.lineHeight,
      listStyle: "none",
      fontFamily: e ? "inherit" : t.fontFamily,
    };
  },
  mY = () => ({
    display: "inline-flex",
    alignItems: "center",
    color: "inherit",
    fontStyle: "normal",
    lineHeight: 0,
    textAlign: "center",
    textTransform: "none",
    verticalAlign: "-0.125em",
    textRendering: "optimizeLegibility",
    "-webkit-font-smoothing": "antialiased",
    "-moz-osx-font-smoothing": "grayscale",
    "> *": { lineHeight: 1 },
    svg: { display: "inline-block" },
  }),
  gY = () => ({
    "&::before": { display: "table", content: '""' },
    "&::after": { display: "table", clear: "both", content: '""' },
  }),
  vY = (t) => ({
    a: {
      color: t.colorLink,
      textDecoration: t.linkDecoration,
      backgroundColor: "transparent",
      outline: "none",
      cursor: "pointer",
      transition: `color ${t.motionDurationSlow}`,
      "-webkit-text-decoration-skip": "objects",
      "&:hover": { color: t.colorLinkHover },
      "&:active": { color: t.colorLinkActive },
      "&:active,\n  &:hover": {
        textDecoration: t.linkHoverDecoration,
        outline: 0,
      },
      "&:focus": { textDecoration: t.linkFocusDecoration, outline: 0 },
      "&[disabled]": { color: t.colorTextDisabled, cursor: "not-allowed" },
    },
  }),
  yY = (t, e) => {
    const { fontFamily: n, fontSize: r } = t,
      i = `[class^="${e}"], [class*=" ${e}"]`;
    return {
      [i]: {
        fontFamily: n,
        fontSize: r,
        boxSizing: "border-box",
        "&::before, &::after": { boxSizing: "border-box" },
        [i]: {
          boxSizing: "border-box",
          "&::before, &::after": { boxSizing: "border-box" },
        },
      },
    };
  },
  BM = (t) => ({
    outline: `${Bt(t.lineWidthFocus)} solid ${t.colorPrimaryBorder}`,
    outlineOffset: 1,
    transition: "outline-offset 0s, outline 0s",
  }),
  xY = (t) => ({ "&:focus-visible": Object.assign({}, BM(t)) });
let _Y = Eo(function t() {
  bo(this, t);
});
const jD = _Y;
function SY(t, e, n) {
  return (
    (e = cl(e)),
    PM(
      t,
      Gy() ? Reflect.construct(e, n || [], cl(t).constructor) : e.apply(t, n)
    )
  );
}
let wY = (function (t) {
  jf(e, t);
  function e(n) {
    var r;
    return (
      bo(this, e),
      (r = SY(this, e)),
      (r.result = 0),
      n instanceof e
        ? (r.result = n.result)
        : typeof n == "number" && (r.result = n),
      r
    );
  }
  return (
    Eo(e, [
      {
        key: "add",
        value: function (r) {
          return (
            r instanceof e
              ? (this.result += r.result)
              : typeof r == "number" && (this.result += r),
            this
          );
        },
      },
      {
        key: "sub",
        value: function (r) {
          return (
            r instanceof e
              ? (this.result -= r.result)
              : typeof r == "number" && (this.result -= r),
            this
          );
        },
      },
      {
        key: "mul",
        value: function (r) {
          return (
            r instanceof e
              ? (this.result *= r.result)
              : typeof r == "number" && (this.result *= r),
            this
          );
        },
      },
      {
        key: "div",
        value: function (r) {
          return (
            r instanceof e
              ? (this.result /= r.result)
              : typeof r == "number" && (this.result /= r),
            this
          );
        },
      },
      {
        key: "equal",
        value: function () {
          return this.result;
        },
      },
    ]),
    e
  );
})(jD);
function bY(t, e, n) {
  return (
    (e = cl(e)),
    PM(
      t,
      Gy() ? Reflect.construct(e, n || [], cl(t).constructor) : e.apply(t, n)
    )
  );
}
const WD = "CALC_UNIT";
function O_(t) {
  return typeof t == "number" ? `${t}${WD}` : t;
}
let EY = (function (t) {
  jf(e, t);
  function e(n) {
    var r;
    return (
      bo(this, e),
      (r = bY(this, e)),
      (r.result = ""),
      n instanceof e
        ? (r.result = `(${n.result})`)
        : typeof n == "number"
        ? (r.result = O_(n))
        : typeof n == "string" && (r.result = n),
      r
    );
  }
  return (
    Eo(e, [
      {
        key: "add",
        value: function (r) {
          return (
            r instanceof e
              ? (this.result = `${this.result} + ${r.getResult()}`)
              : (typeof r == "number" || typeof r == "string") &&
                (this.result = `${this.result} + ${O_(r)}`),
            (this.lowPriority = !0),
            this
          );
        },
      },
      {
        key: "sub",
        value: function (r) {
          return (
            r instanceof e
              ? (this.result = `${this.result} - ${r.getResult()}`)
              : (typeof r == "number" || typeof r == "string") &&
                (this.result = `${this.result} - ${O_(r)}`),
            (this.lowPriority = !0),
            this
          );
        },
      },
      {
        key: "mul",
        value: function (r) {
          return (
            this.lowPriority && (this.result = `(${this.result})`),
            r instanceof e
              ? (this.result = `${this.result} * ${r.getResult(!0)}`)
              : (typeof r == "number" || typeof r == "string") &&
                (this.result = `${this.result} * ${r}`),
            (this.lowPriority = !1),
            this
          );
        },
      },
      {
        key: "div",
        value: function (r) {
          return (
            this.lowPriority && (this.result = `(${this.result})`),
            r instanceof e
              ? (this.result = `${this.result} / ${r.getResult(!0)}`)
              : (typeof r == "number" || typeof r == "string") &&
                (this.result = `${this.result} / ${r}`),
            (this.lowPriority = !1),
            this
          );
        },
      },
      {
        key: "getResult",
        value: function (r) {
          return this.lowPriority || r ? `(${this.result})` : this.result;
        },
      },
      {
        key: "equal",
        value: function (r) {
          const { unit: i = !0 } = r || {},
            o = new RegExp(`${WD}`, "g");
          return (
            (this.result = this.result.replace(o, i ? "px" : "")),
            typeof this.lowPriority < "u" ? `calc(${this.result})` : this.result
          );
        },
      },
    ]),
    e
  );
})(jD);
const MY = (t) => {
  const e = t === "css" ? EY : wY;
  return (n) => new e(n);
};
function CY(t) {
  return t === "js"
    ? { max: Math.max, min: Math.min }
    : {
        max: function () {
          for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++)
            n[r] = arguments[r];
          return `max(${n.map((i) => Bt(i)).join(",")})`;
        },
        min: function () {
          for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++)
            n[r] = arguments[r];
          return `min(${n.map((i) => Bt(i)).join(",")})`;
        },
      };
}
const $D = typeof CSSINJS_STATISTIC < "u";
let ub = !0;
function Cs() {
  for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
    e[n] = arguments[n];
  if (!$D) return Object.assign.apply(Object, [{}].concat(e));
  ub = !1;
  const r = {};
  return (
    e.forEach((i) => {
      Object.keys(i).forEach((s) => {
        Object.defineProperty(r, s, {
          configurable: !0,
          enumerable: !0,
          get: () => i[s],
        });
      });
    }),
    (ub = !0),
    r
  );
}
const FP = {};
function TY() {}
const AY = (t) => {
    let e,
      n = t,
      r = TY;
    return (
      $D &&
        typeof Proxy < "u" &&
        ((e = new Set()),
        (n = new Proxy(t, {
          get(i, o) {
            return ub && e.add(o), i[o];
          },
        })),
        (r = (i, o) => {
          var s;
          FP[i] = {
            global: Array.from(e),
            component: Object.assign(
              Object.assign(
                {},
                (s = FP[i]) === null || s === void 0 ? void 0 : s.component
              ),
              o
            ),
          };
        })),
      { token: n, keys: e, flush: r }
    );
  },
  XD = (t, e) => {
    const [n, r] = ul();
    return rb(
      {
        theme: n,
        token: r,
        hashId: "",
        path: ["ant-design-icons", t],
        nonce: () => (e == null ? void 0 : e.nonce),
      },
      () => [
        {
          [`.${t}`]: Object.assign(Object.assign({}, mY()), {
            [`.${t} .${t}-icon`]: { display: "block" },
          }),
        },
      ]
    );
  },
  qD = (t, e, n) => {
    var r;
    return typeof n == "function"
      ? n(Cs(e, (r = e[t]) !== null && r !== void 0 ? r : {}))
      : n ?? {};
  },
  YD = (t, e, n, r) => {
    const i = Object.assign({}, e[t]);
    if (r != null && r.deprecatedTokens) {
      const { deprecatedTokens: s } = r;
      s.forEach((a) => {
        let [l, c] = a;
        var u;
        ((i != null && i[l]) || (i != null && i[c])) &&
          (((u = i[c]) !== null && u !== void 0) ||
            (i[c] = i == null ? void 0 : i[l]));
      });
    }
    const o = Object.assign(Object.assign({}, n), i);
    return (
      Object.keys(o).forEach((s) => {
        o[s] === e[s] && delete o[s];
      }),
      o
    );
  },
  RY = (t, e) =>
    `${[
      e,
      t
        .replace(/([A-Z]+)([A-Z][a-z]+)/g, "$1-$2")
        .replace(/([a-z])([A-Z])/g, "$1-$2"),
    ]
      .filter(Boolean)
      .join("-")}`;
function HM(t, e, n) {
  let r = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
  const i = Array.isArray(t) ? t : [t, t],
    [o] = i,
    s = i.join("-");
  return (a) => {
    const [l, c, u, h, p] = ul(),
      { getPrefixCls: m, iconPrefixCls: v, csp: S } = z.useContext(Wr),
      x = m(),
      g = p ? "css" : "js",
      y = MY(g),
      { max: _, min: b } = CY(g),
      T = {
        theme: l,
        token: h,
        hashId: u,
        nonce: () => (S == null ? void 0 : S.nonce),
        clientOnly: r.clientOnly,
        order: r.order || -999,
      };
    return (
      rb(
        Object.assign(Object.assign({}, T), {
          clientOnly: !1,
          path: ["Shared", x],
        }),
        () => [{ "&": vY(h) }]
      ),
      XD(v, S),
      [
        rb(Object.assign(Object.assign({}, T), { path: [s, a, v] }), () => {
          if (r.injectStyle === !1) return [];
          const { token: C, flush: L } = AY(h),
            A = qD(o, c, n),
            P = `.${a}`,
            k = YD(o, c, A, { deprecatedTokens: r.deprecatedTokens });
          p &&
            Object.keys(A).forEach((D) => {
              A[D] = `var(${pD(D, RY(o, p.prefix))})`;
            });
          const B = Cs(
              C,
              {
                componentCls: P,
                prefixCls: a,
                iconCls: `.${v}`,
                antCls: `.${x}`,
                calc: y,
                max: _,
                min: b,
              },
              p ? A : k
            ),
            $ = e(B, {
              hashId: u,
              prefixCls: a,
              rootPrefixCls: x,
              iconPrefixCls: v,
            });
          return L(o, k), [r.resetStyle === !1 ? null : yY(B, a), $];
        }),
        u,
      ]
    );
  };
}
const PY = (t, e, n, r) => {
    const i = HM(t, e, n, Object.assign({ resetStyle: !1, order: -998 }, r));
    return (s) => {
      let { prefixCls: a } = s;
      return i(a), null;
    };
  },
  LY = (t, e, n) => {
    function r(c) {
      return `${t}${c.slice(0, 1).toUpperCase()}${c.slice(1)}`;
    }
    const { unitless: i = {}, injectStyle: o = !0 } = n ?? {},
      s = { [r("zIndexPopup")]: !0 };
    Object.keys(i).forEach((c) => {
      s[r(c)] = i[c];
    });
    const a = (c) => {
      let { rootCls: u, cssVar: h } = c;
      const [, p] = ul();
      return (
        pq(
          {
            path: [t],
            prefix: h.prefix,
            key: h == null ? void 0 : h.key,
            unitless: Object.assign(Object.assign({}, HD), s),
            ignore: VD,
            token: p,
            scope: u,
          },
          () => {
            const m = qD(t, p, e),
              v = YD(t, p, m, {
                deprecatedTokens: n == null ? void 0 : n.deprecatedTokens,
              });
            return (
              Object.keys(m).forEach((S) => {
                (v[r(S)] = v[S]), delete v[S];
              }),
              v
            );
          }
        ),
        null
      );
    };
    return (c) => {
      const [, , , , u] = ul();
      return [
        (h) =>
          o && u
            ? at.createElement(
                at.Fragment,
                null,
                at.createElement(a, { rootCls: c, cssVar: u, component: t }),
                h
              )
            : h,
        u == null ? void 0 : u.key,
      ];
    };
  },
  VM = (t, e, n, r) => {
    const i = HM(t, e, n, r),
      o = LY(Array.isArray(t) ? t[0] : t, n, r);
    return function (s) {
      let a =
        arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : s;
      const [, l] = i(s),
        [c, u] = o(a);
      return [c, l, u];
    };
  },
  IY = Object.assign({}, vf),
  { useId: NP } = IY,
  OY = () => "",
  FY = typeof NP > "u" ? OY : NP;
function NY(t, e) {
  const n = t || {},
    r = n.inherit === !1 || !e ? UD : e,
    i = FY();
  return AM(
    () => {
      var o, s;
      if (!t) return e;
      const a = Object.assign({}, r.components);
      Object.keys(t.components || {}).forEach((u) => {
        a[u] = Object.assign(Object.assign({}, a[u]), t.components[u]);
      });
      const l = `css-var-${i.replace(/:/g, "")}`,
        c =
          ((o = n.cssVar) !== null && o !== void 0 ? o : r.cssVar) &&
          Object.assign(
            Object.assign(
              Object.assign(
                { prefix: "ant" },
                typeof r.cssVar == "object" ? r.cssVar : {}
              ),
              typeof n.cssVar == "object" ? n.cssVar : {}
            ),
            {
              key:
                (typeof n.cssVar == "object" &&
                  ((s = n.cssVar) === null || s === void 0 ? void 0 : s.key)) ||
                l,
            }
          );
      return Object.assign(Object.assign(Object.assign({}, r), n), {
        token: Object.assign(Object.assign({}, r.token), n.token),
        components: a,
        cssVar: c,
      });
    },
    [n, r],
    (o, s) =>
      o.some((a, l) => {
        const c = s[l];
        return !fD(a, c, !0);
      })
  );
}
var DY = ["children"],
  KD = z.createContext({});
function UY(t) {
  var e = t.children,
    n = Qi(t, DY);
  return z.createElement(KD.Provider, { value: n }, e);
}
var zY = (function (t) {
    jf(n, t);
    var e = jy(n);
    function n() {
      return bo(this, n), e.apply(this, arguments);
    }
    return (
      Eo(n, [
        {
          key: "render",
          value: function () {
            return this.props.children;
          },
        },
      ]),
      n
    );
  })(z.Component),
  Ql = "none",
  iv = "appear",
  ov = "enter",
  sv = "leave",
  DP = "none",
  zo = "prepare",
  sf = "start",
  af = "active",
  GM = "end",
  ZD = "prepared";
function UP(t, e) {
  var n = {};
  return (
    (n[t.toLowerCase()] = e.toLowerCase()),
    (n["Webkit".concat(t)] = "webkit".concat(e)),
    (n["Moz".concat(t)] = "moz".concat(e)),
    (n["ms".concat(t)] = "MS".concat(e)),
    (n["O".concat(t)] = "o".concat(e.toLowerCase())),
    n
  );
}
function kY(t, e) {
  var n = {
    animationend: UP("Animation", "AnimationEnd"),
    transitionend: UP("Transition", "TransitionEnd"),
  };
  return (
    t &&
      ("AnimationEvent" in e || delete n.animationend.animation,
      "TransitionEvent" in e || delete n.transitionend.transition),
    n
  );
}
var BY = kY(Ms(), typeof window < "u" ? window : {}),
  QD = {};
if (Ms()) {
  var HY = document.createElement("div");
  QD = HY.style;
}
var av = {};
function JD(t) {
  if (av[t]) return av[t];
  var e = BY[t];
  if (e)
    for (var n = Object.keys(e), r = n.length, i = 0; i < r; i += 1) {
      var o = n[i];
      if (Object.prototype.hasOwnProperty.call(e, o) && o in QD)
        return (av[t] = e[o]), av[t];
    }
  return "";
}
var eU = JD("animationend"),
  tU = JD("transitionend"),
  nU = !!(eU && tU),
  zP = eU || "animationend",
  kP = tU || "transitionend";
function BP(t, e) {
  if (!t) return null;
  if (Qt(t) === "object") {
    var n = e.replace(/-\w/g, function (r) {
      return r[1].toUpperCase();
    });
    return t[n];
  }
  return "".concat(t, "-").concat(e);
}
const VY = function (t) {
  var e = z.useRef(),
    n = z.useRef(t);
  n.current = t;
  var r = z.useCallback(function (s) {
    n.current(s);
  }, []);
  function i(s) {
    s && (s.removeEventListener(kP, r), s.removeEventListener(zP, r));
  }
  function o(s) {
    e.current && e.current !== s && i(e.current),
      s &&
        s !== e.current &&
        (s.addEventListener(kP, r), s.addEventListener(zP, r), (e.current = s));
  }
  return (
    z.useEffect(function () {
      return function () {
        i(e.current);
      };
    }, []),
    [o, i]
  );
};
var rU = Ms() ? z.useLayoutEffect : z.useEffect;
const GY = function () {
  var t = z.useRef(null);
  function e() {
    fa.cancel(t.current);
  }
  function n(r) {
    var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2;
    e();
    var o = fa(function () {
      i <= 1
        ? r({
            isCanceled: function () {
              return o !== t.current;
            },
          })
        : n(r, i - 1);
    });
    t.current = o;
  }
  return (
    z.useEffect(function () {
      return function () {
        e();
      };
    }, []),
    [n, e]
  );
};
var jY = [zo, sf, af, GM],
  WY = [zo, ZD],
  iU = !1,
  $Y = !0;
function oU(t) {
  return t === af || t === GM;
}
const XY = function (t, e, n) {
  var r = mf(DP),
    i = yt(r, 2),
    o = i[0],
    s = i[1],
    a = GY(),
    l = yt(a, 2),
    c = l[0],
    u = l[1];
  function h() {
    s(zo, !0);
  }
  var p = e ? WY : jY;
  return (
    rU(
      function () {
        if (o !== DP && o !== GM) {
          var m = p.indexOf(o),
            v = p[m + 1],
            S = n(o);
          S === iU
            ? s(v, !0)
            : v &&
              c(function (x) {
                function g() {
                  x.isCanceled() || s(v, !0);
                }
                S === !0 ? g() : Promise.resolve(S).then(g);
              });
        }
      },
      [t, o]
    ),
    z.useEffect(function () {
      return function () {
        u();
      };
    }, []),
    [h, o]
  );
};
function qY(t, e, n, r) {
  var i = r.motionEnter,
    o = i === void 0 ? !0 : i,
    s = r.motionAppear,
    a = s === void 0 ? !0 : s,
    l = r.motionLeave,
    c = l === void 0 ? !0 : l,
    u = r.motionDeadline,
    h = r.motionLeaveImmediately,
    p = r.onAppearPrepare,
    m = r.onEnterPrepare,
    v = r.onLeavePrepare,
    S = r.onAppearStart,
    x = r.onEnterStart,
    g = r.onLeaveStart,
    y = r.onAppearActive,
    _ = r.onEnterActive,
    b = r.onLeaveActive,
    T = r.onAppearEnd,
    M = r.onEnterEnd,
    C = r.onLeaveEnd,
    L = r.onVisibleChanged,
    A = mf(),
    P = yt(A, 2),
    k = P[0],
    B = P[1],
    $ = mf(Ql),
    D = yt($, 2),
    X = D[0],
    j = D[1],
    Y = mf(null),
    N = yt(Y, 2),
    V = N[0],
    G = N[1],
    U = z.useRef(!1),
    Z = z.useRef(null);
  function Q() {
    return n();
  }
  var te = z.useRef(!1);
  function re() {
    j(Ql, !0), G(null, !0);
  }
  function le(H) {
    var F = Q();
    if (!(H && !H.deadline && H.target !== F)) {
      var K = te.current,
        ae;
      X === iv && K
        ? (ae = T == null ? void 0 : T(F, H))
        : X === ov && K
        ? (ae = M == null ? void 0 : M(F, H))
        : X === sv && K && (ae = C == null ? void 0 : C(F, H)),
        X !== Ql && K && ae !== !1 && re();
    }
  }
  var oe = VY(le),
    ve = yt(oe, 1),
    Ae = ve[0],
    Re = function (F) {
      var K, ae, se;
      switch (F) {
        case iv:
          return (K = {}), Me(K, zo, p), Me(K, sf, S), Me(K, af, y), K;
        case ov:
          return (ae = {}), Me(ae, zo, m), Me(ae, sf, x), Me(ae, af, _), ae;
        case sv:
          return (se = {}), Me(se, zo, v), Me(se, sf, g), Me(se, af, b), se;
        default:
          return {};
      }
    },
    ye = z.useMemo(
      function () {
        return Re(X);
      },
      [X]
    ),
    q = XY(X, !t, function (H) {
      if (H === zo) {
        var F = ye[zo];
        return F ? F(Q()) : iU;
      }
      if (me in ye) {
        var K;
        G(
          ((K = ye[me]) === null || K === void 0
            ? void 0
            : K.call(ye, Q(), null)) || null
        );
      }
      return (
        me === af &&
          (Ae(Q()),
          u > 0 &&
            (clearTimeout(Z.current),
            (Z.current = setTimeout(function () {
              le({ deadline: !0 });
            }, u)))),
        me === ZD && re(),
        $Y
      );
    }),
    xe = yt(q, 2),
    he = xe[0],
    me = xe[1],
    fe = oU(me);
  (te.current = fe),
    rU(
      function () {
        B(e);
        var H = U.current;
        U.current = !0;
        var F;
        !H && e && a && (F = iv),
          H && e && o && (F = ov),
          ((H && !e && c) || (!H && h && !e && c)) && (F = sv);
        var K = Re(F);
        F && (t || K[zo]) ? (j(F), he()) : j(Ql);
      },
      [e]
    ),
    z.useEffect(
      function () {
        ((X === iv && !a) || (X === ov && !o) || (X === sv && !c)) && j(Ql);
      },
      [a, o, c]
    ),
    z.useEffect(function () {
      return function () {
        (U.current = !1), clearTimeout(Z.current);
      };
    }, []);
  var Ve = z.useRef(!1);
  z.useEffect(
    function () {
      k && (Ve.current = !0),
        k !== void 0 &&
          X === Ql &&
          ((Ve.current || k) && (L == null || L(k)), (Ve.current = !0));
    },
    [k, X]
  );
  var ge = V;
  return (
    ye[zo] && me === sf && (ge = We({ transition: "none" }, ge)),
    [X, me, ge, k ?? e]
  );
}
function YY(t) {
  var e = t;
  Qt(t) === "object" && (e = t.transitionSupport);
  function n(i, o) {
    return !!(i.motionName && e && o !== !1);
  }
  var r = z.forwardRef(function (i, o) {
    var s = i.visible,
      a = s === void 0 ? !0 : s,
      l = i.removeOnLeave,
      c = l === void 0 ? !0 : l,
      u = i.forceRender,
      h = i.children,
      p = i.motionName,
      m = i.leavedClassName,
      v = i.eventProps,
      S = z.useContext(KD),
      x = S.motion,
      g = n(i, x),
      y = z.useRef(),
      _ = z.useRef();
    function b() {
      try {
        return y.current instanceof HTMLElement ? y.current : Iv(_.current);
      } catch {
        return null;
      }
    }
    var T = qY(g, a, b, i),
      M = yt(T, 4),
      C = M[0],
      L = M[1],
      A = M[2],
      P = M[3],
      k = z.useRef(P);
    P && (k.current = !0);
    var B = z.useCallback(
        function (G) {
          (y.current = G), XN(o, G);
        },
        [o]
      ),
      $,
      D = We(We({}, v), {}, { visible: a });
    if (!h) $ = null;
    else if (C === Ql)
      P
        ? ($ = h(We({}, D), B))
        : !c && k.current && m
        ? ($ = h(We(We({}, D), {}, { className: m }), B))
        : u || (!c && !m)
        ? ($ = h(We(We({}, D), {}, { style: { display: "none" } }), B))
        : ($ = null);
    else {
      var X, j;
      L === zo
        ? (j = "prepare")
        : oU(L)
        ? (j = "active")
        : L === sf && (j = "start");
      var Y = BP(p, "".concat(C, "-").concat(j));
      $ = h(
        We(
          We({}, D),
          {},
          {
            className: Ct(
              BP(p, C),
              ((X = {}), Me(X, Y, Y && j), Me(X, p, typeof p == "string"), X)
            ),
            style: A,
          }
        ),
        B
      );
    }
    if (z.isValidElement($) && RM($)) {
      var N = $,
        V = N.ref;
      V || ($ = z.cloneElement($, { ref: B }));
    }
    return z.createElement(zY, { ref: _ }, $);
  });
  return (r.displayName = "CSSMotion"), r;
}
const jM = YY(nU);
var fb = "add",
  db = "keep",
  hb = "remove",
  F_ = "removed";
function KY(t) {
  var e;
  return (
    t && Qt(t) === "object" && "key" in t ? (e = t) : (e = { key: t }),
    We(We({}, e), {}, { key: String(e.key) })
  );
}
function pb() {
  var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  return t.map(KY);
}
function ZY() {
  var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [],
    e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [],
    n = [],
    r = 0,
    i = e.length,
    o = pb(t),
    s = pb(e);
  o.forEach(function (c) {
    for (var u = !1, h = r; h < i; h += 1) {
      var p = s[h];
      if (p.key === c.key) {
        r < h &&
          ((n = n.concat(
            s.slice(r, h).map(function (m) {
              return We(We({}, m), {}, { status: fb });
            })
          )),
          (r = h)),
          n.push(We(We({}, p), {}, { status: db })),
          (r += 1),
          (u = !0);
        break;
      }
    }
    u || n.push(We(We({}, c), {}, { status: hb }));
  }),
    r < i &&
      (n = n.concat(
        s.slice(r).map(function (c) {
          return We(We({}, c), {}, { status: fb });
        })
      ));
  var a = {};
  n.forEach(function (c) {
    var u = c.key;
    a[u] = (a[u] || 0) + 1;
  });
  var l = Object.keys(a).filter(function (c) {
    return a[c] > 1;
  });
  return (
    l.forEach(function (c) {
      (n = n.filter(function (u) {
        var h = u.key,
          p = u.status;
        return h !== c || p !== hb;
      })),
        n.forEach(function (u) {
          u.key === c && (u.status = db);
        });
    }),
    n
  );
}
var QY = ["component", "children", "onVisibleChanged", "onAllRemoved"],
  JY = ["status"],
  eK = [
    "eventProps",
    "visible",
    "children",
    "motionName",
    "motionAppear",
    "motionEnter",
    "motionLeave",
    "motionLeaveImmediately",
    "motionDeadline",
    "removeOnLeave",
    "leavedClassName",
    "onAppearPrepare",
    "onAppearStart",
    "onAppearActive",
    "onAppearEnd",
    "onEnterStart",
    "onEnterActive",
    "onEnterEnd",
    "onLeaveStart",
    "onLeaveActive",
    "onLeaveEnd",
  ];
function tK(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : jM,
    n = (function (r) {
      jf(o, r);
      var i = jy(o);
      function o() {
        var s;
        bo(this, o);
        for (var a = arguments.length, l = new Array(a), c = 0; c < a; c++)
          l[c] = arguments[c];
        return (
          (s = i.call.apply(i, [this].concat(l))),
          Me(Wt(s), "state", { keyEntities: [] }),
          Me(Wt(s), "removeKey", function (u) {
            var h = s.state.keyEntities,
              p = h.map(function (m) {
                return m.key !== u ? m : We(We({}, m), {}, { status: F_ });
              });
            return (
              s.setState({ keyEntities: p }),
              p.filter(function (m) {
                var v = m.status;
                return v !== F_;
              }).length
            );
          }),
          s
        );
      }
      return (
        Eo(
          o,
          [
            {
              key: "render",
              value: function () {
                var a = this,
                  l = this.state.keyEntities,
                  c = this.props,
                  u = c.component,
                  h = c.children,
                  p = c.onVisibleChanged,
                  m = c.onAllRemoved,
                  v = Qi(c, QY),
                  S = u || z.Fragment,
                  x = {};
                return (
                  eK.forEach(function (g) {
                    (x[g] = v[g]), delete v[g];
                  }),
                  delete v.keys,
                  z.createElement(
                    S,
                    v,
                    l.map(function (g, y) {
                      var _ = g.status,
                        b = Qi(g, JY),
                        T = _ === fb || _ === db;
                      return z.createElement(
                        e,
                        mn({}, x, {
                          key: b.key,
                          visible: T,
                          eventProps: b,
                          onVisibleChanged: function (C) {
                            if ((p == null || p(C, { key: b.key }), !C)) {
                              var L = a.removeKey(b.key);
                              L === 0 && m && m();
                            }
                          },
                        }),
                        function (M, C) {
                          return h(We(We({}, M), {}, { index: y }), C);
                        }
                      );
                    })
                  )
                );
              },
            },
          ],
          [
            {
              key: "getDerivedStateFromProps",
              value: function (a, l) {
                var c = a.keys,
                  u = l.keyEntities,
                  h = pb(c),
                  p = ZY(u, h);
                return {
                  keyEntities: p.filter(function (m) {
                    var v = u.find(function (S) {
                      var x = S.key;
                      return m.key === x;
                    });
                    return !(v && v.status === F_ && m.status === hb);
                  }),
                };
              },
            },
          ]
        ),
        o
      );
    })(z.Component);
  return Me(n, "defaultProps", { component: "div" }), n;
}
tK(nU);
function nK(t) {
  const { children: e } = t,
    [, n] = ul(),
    { motion: r } = n,
    i = z.useRef(!1);
  return (
    (i.current = i.current || r === !1),
    i.current ? z.createElement(UY, { motion: r }, e) : e
  );
}
const rK = () => null;
var iK = function (t, e) {
  var n = {};
  for (var r in t)
    Object.prototype.hasOwnProperty.call(t, r) &&
      e.indexOf(r) < 0 &&
      (n[r] = t[r]);
  if (t != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(t); i < r.length; i++)
      e.indexOf(r[i]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(t, r[i]) &&
        (n[r[i]] = t[r[i]]);
  return n;
};
const oK = [
    "getTargetContainer",
    "getPopupContainer",
    "renderEmpty",
    "input",
    "pagination",
    "form",
    "select",
    "button",
  ],
  sK = "ant";
let sU;
function aK() {
  return sU || sK;
}
function lK(t) {
  return Object.keys(t).some((e) => e.endsWith("Color"));
}
const cK = (t) => {
    const { prefixCls: e, iconPrefixCls: n, theme: r, holderRender: i } = t;
    e !== void 0 && (sU = e), r && lK(r) && lY(aK(), r);
  },
  uK = (t) => {
    const {
        children: e,
        csp: n,
        autoInsertSpaceInButton: r,
        alert: i,
        anchor: o,
        form: s,
        locale: a,
        componentSize: l,
        direction: c,
        space: u,
        virtual: h,
        dropdownMatchSelectWidth: p,
        popupMatchSelectWidth: m,
        popupOverflow: v,
        legacyLocale: S,
        parentContext: x,
        iconPrefixCls: g,
        theme: y,
        componentDisabled: _,
        segmented: b,
        statistic: T,
        spin: M,
        calendar: C,
        carousel: L,
        cascader: A,
        collapse: P,
        typography: k,
        checkbox: B,
        descriptions: $,
        divider: D,
        drawer: X,
        skeleton: j,
        steps: Y,
        image: N,
        layout: V,
        list: G,
        mentions: U,
        modal: Z,
        progress: Q,
        result: te,
        slider: re,
        breadcrumb: le,
        menu: oe,
        pagination: ve,
        input: Ae,
        empty: Re,
        badge: ye,
        radio: q,
        rate: xe,
        switch: he,
        transfer: me,
        avatar: fe,
        message: Ve,
        tag: ge,
        table: H,
        card: F,
        tabs: K,
        timeline: ae,
        timePicker: se,
        upload: de,
        notification: Pe,
        tree: ke,
        colorPicker: Be,
        datePicker: Ne,
        rangePicker: ze,
        flex: Ee,
        wave: Je,
        dropdown: qe,
        warning: Qe,
      } = t,
      Ge = z.useCallback(
        ($e, it) => {
          const { prefixCls: ot } = t;
          if (it) return it;
          const Tt = ot || x.getPrefixCls("");
          return $e ? `${Tt}-${$e}` : Tt;
        },
        [x.getPrefixCls, t.prefixCls]
      ),
      Oe = g || x.iconPrefixCls || kD,
      ne = n || x.csp;
    XD(Oe, ne);
    const be = NY(y, x.theme),
      je = {
        csp: ne,
        autoInsertSpaceInButton: r,
        alert: i,
        anchor: o,
        locale: a || S,
        direction: c,
        space: u,
        virtual: h,
        popupMatchSelectWidth: m ?? p,
        popupOverflow: v,
        getPrefixCls: Ge,
        iconPrefixCls: Oe,
        theme: be,
        segmented: b,
        statistic: T,
        spin: M,
        calendar: C,
        carousel: L,
        cascader: A,
        collapse: P,
        typography: k,
        checkbox: B,
        descriptions: $,
        divider: D,
        drawer: X,
        skeleton: j,
        steps: Y,
        image: N,
        input: Ae,
        layout: V,
        list: G,
        mentions: U,
        modal: Z,
        progress: Q,
        result: te,
        slider: re,
        breadcrumb: le,
        menu: oe,
        pagination: ve,
        empty: Re,
        badge: ye,
        radio: q,
        rate: xe,
        switch: he,
        transfer: me,
        avatar: fe,
        message: Ve,
        tag: ge,
        table: H,
        card: F,
        tabs: K,
        timeline: ae,
        timePicker: se,
        upload: de,
        notification: Pe,
        tree: ke,
        colorPicker: Be,
        datePicker: Ne,
        rangePicker: ze,
        flex: Ee,
        wave: Je,
        dropdown: qe,
        warning: Qe,
      },
      De = Object.assign({}, x);
    Object.keys(je).forEach(($e) => {
      je[$e] !== void 0 && (De[$e] = je[$e]);
    }),
      oK.forEach(($e) => {
        const it = t[$e];
        it && (De[$e] = it);
      });
    const Le = AM(
        () => De,
        De,
        ($e, it) => {
          const ot = Object.keys($e),
            Tt = Object.keys(it);
          return ot.length !== Tt.length || ot.some((St) => $e[St] !== it[St]);
        }
      ),
      ie = z.useMemo(() => ({ prefixCls: Oe, csp: ne }), [Oe, ne]);
    let Ue = z.createElement(
      z.Fragment,
      null,
      z.createElement(rK, { dropdownMatchSelectWidth: p }),
      e
    );
    const Ke = z.useMemo(() => {
      var $e, it, ot, Tt;
      return of(
        (($e = Yy.Form) === null || $e === void 0
          ? void 0
          : $e.defaultValidateMessages) || {},
        ((ot =
          (it = Le.locale) === null || it === void 0 ? void 0 : it.Form) ===
          null || ot === void 0
          ? void 0
          : ot.defaultValidateMessages) || {},
        ((Tt = Le.form) === null || Tt === void 0
          ? void 0
          : Tt.validateMessages) || {},
        (s == null ? void 0 : s.validateMessages) || {}
      );
    }, [Le, s == null ? void 0 : s.validateMessages]);
    Object.keys(Ke).length > 0 &&
      (Ue = z.createElement(Sq.Provider, { value: Ke }, Ue)),
      a && (Ue = z.createElement(Pq, { locale: a, _ANT_MARK__: Aq }, Ue)),
      (Oe || ne) && (Ue = z.createElement(kM.Provider, { value: ie }, Ue)),
      l && (Ue = z.createElement(uY, { size: l }, Ue)),
      (Ue = z.createElement(nK, null, Ue));
    const ft = z.useMemo(() => {
      const $e = be || {},
        { algorithm: it, token: ot, components: Tt, cssVar: St } = $e,
        ht = iK($e, ["algorithm", "token", "components", "cssVar"]),
        qt = it && (!Array.isArray(it) || it.length > 0) ? Zw(it) : DD,
        Jt = {};
      Object.entries(Tt || {}).forEach((gn) => {
        let [zn, cn] = gn;
        const jt = Object.assign({}, cn);
        "algorithm" in jt &&
          (jt.algorithm === !0
            ? (jt.theme = qt)
            : (Array.isArray(jt.algorithm) ||
                typeof jt.algorithm == "function") &&
              (jt.theme = Zw(jt.algorithm)),
          delete jt.algorithm),
          (Jt[zn] = jt);
      });
      const kt = Object.assign(Object.assign({}, op), ot);
      return Object.assign(Object.assign({}, ht), {
        theme: qt,
        token: kt,
        components: Jt,
        override: Object.assign({ override: kt }, Jt),
        cssVar: St,
      });
    }, [be]);
    return (
      y && (Ue = z.createElement(zD.Provider, { value: ft }, Ue)),
      Le.warning &&
        (Ue = z.createElement(_q.Provider, { value: Le.warning }, Ue)),
      _ !== void 0 && (Ue = z.createElement(cY, { disabled: _ }, Ue)),
      z.createElement(Wr.Provider, { value: Le }, Ue)
    );
  },
  Lp = (t) => {
    const e = z.useContext(Wr),
      n = z.useContext(LD);
    return z.createElement(
      uK,
      Object.assign({ parentContext: e, legacyLocale: n }, t)
    );
  };
Lp.ConfigContext = Wr;
Lp.SizeContext = Ky;
Lp.config = cK;
Lp.useConfig = fY;
Object.defineProperty(Lp, "SizeContext", { get: () => Ky });
function aU(t) {
  var e;
  return t == null || (e = t.getRootNode) === null || e === void 0
    ? void 0
    : e.call(t);
}
function fK(t) {
  return aU(t) instanceof ShadowRoot;
}
function dK(t) {
  return fK(t) ? aU(t) : null;
}
function hK(t) {
  return t.replace(/-(.)/g, function (e, n) {
    return n.toUpperCase();
  });
}
function pK(t, e) {
  qi(t, "[@ant-design/icons] ".concat(e));
}
function HP(t) {
  return (
    Qt(t) === "object" &&
    typeof t.name == "string" &&
    typeof t.theme == "string" &&
    (Qt(t.icon) === "object" || typeof t.icon == "function")
  );
}
function VP() {
  var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  return Object.keys(t).reduce(function (e, n) {
    var r = t[n];
    switch (n) {
      case "class":
        (e.className = r), delete e.class;
        break;
      default:
        delete e[n], (e[hK(n)] = r);
    }
    return e;
  }, {});
}
function mb(t, e, n) {
  return n
    ? at.createElement(
        t.tag,
        We(We({ key: e }, VP(t.attrs)), n),
        (t.children || []).map(function (r, i) {
          return mb(r, "".concat(e, "-").concat(t.tag, "-").concat(i));
        })
      )
    : at.createElement(
        t.tag,
        We({ key: e }, VP(t.attrs)),
        (t.children || []).map(function (r, i) {
          return mb(r, "".concat(e, "-").concat(t.tag, "-").concat(i));
        })
      );
}
function lU(t) {
  return Oc(t)[0];
}
function cU(t) {
  return t ? (Array.isArray(t) ? t : [t]) : [];
}
var mK = `
.anticon {
  display: inline-block;
  color: inherit;
  font-style: normal;
  line-height: 0;
  text-align: center;
  text-transform: none;
  vertical-align: -0.125em;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.anticon > * {
  line-height: 1;
}

.anticon svg {
  display: inline-block;
}

.anticon::before {
  display: none;
}

.anticon .anticon-icon {
  display: block;
}

.anticon[tabindex] {
  cursor: pointer;
}

.anticon-spin::before,
.anticon-spin {
  display: inline-block;
  -webkit-animation: loadingCircle 1s infinite linear;
  animation: loadingCircle 1s infinite linear;
}

@-webkit-keyframes loadingCircle {
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

@keyframes loadingCircle {
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
`,
  gK = function (e) {
    var n = z.useContext(kM),
      r = n.csp,
      i = n.prefixCls,
      o = mK;
    i && (o = o.replace(/anticon/g, i)),
      z.useEffect(function () {
        var s = e.current,
          a = dK(s);
        Ic(o, "@ant-design-icons", { prepend: !0, csp: r, attachTo: a });
      }, []);
  },
  vK = [
    "icon",
    "className",
    "onClick",
    "style",
    "primaryColor",
    "secondaryColor",
  ],
  hh = { primaryColor: "#333", secondaryColor: "#E6E6E6", calculated: !1 };
function yK(t) {
  var e = t.primaryColor,
    n = t.secondaryColor;
  (hh.primaryColor = e),
    (hh.secondaryColor = n || lU(e)),
    (hh.calculated = !!n);
}
function xK() {
  return We({}, hh);
}
var Zy = function (e) {
  var n = e.icon,
    r = e.className,
    i = e.onClick,
    o = e.style,
    s = e.primaryColor,
    a = e.secondaryColor,
    l = Qi(e, vK),
    c = z.useRef(),
    u = hh;
  if (
    (s && (u = { primaryColor: s, secondaryColor: a || lU(s) }),
    gK(c),
    pK(HP(n), "icon should be icon definiton, but got ".concat(n)),
    !HP(n))
  )
    return null;
  var h = n;
  return (
    h &&
      typeof h.icon == "function" &&
      (h = We(
        We({}, h),
        {},
        { icon: h.icon(u.primaryColor, u.secondaryColor) }
      )),
    mb(
      h.icon,
      "svg-".concat(h.name),
      We(
        We(
          {
            className: r,
            onClick: i,
            style: o,
            "data-icon": h.name,
            width: "1em",
            height: "1em",
            fill: "currentColor",
            "aria-hidden": "true",
          },
          l
        ),
        {},
        { ref: c }
      )
    )
  );
};
Zy.displayName = "IconReact";
Zy.getTwoToneColors = xK;
Zy.setTwoToneColors = yK;
const WM = Zy;
function uU(t) {
  var e = cU(t),
    n = yt(e, 2),
    r = n[0],
    i = n[1];
  return WM.setTwoToneColors({ primaryColor: r, secondaryColor: i });
}
function _K() {
  var t = WM.getTwoToneColors();
  return t.calculated ? [t.primaryColor, t.secondaryColor] : t.primaryColor;
}
var SK = [
  "className",
  "icon",
  "spin",
  "rotate",
  "tabIndex",
  "onClick",
  "twoToneColor",
];
uU(Xq.primary);
var Qy = z.forwardRef(function (t, e) {
  var n,
    r = t.className,
    i = t.icon,
    o = t.spin,
    s = t.rotate,
    a = t.tabIndex,
    l = t.onClick,
    c = t.twoToneColor,
    u = Qi(t, SK),
    h = z.useContext(kM),
    p = h.prefixCls,
    m = p === void 0 ? "anticon" : p,
    v = h.rootClassName,
    S = Ct(
      v,
      m,
      ((n = {}),
      Me(n, "".concat(m, "-").concat(i.name), !!i.name),
      Me(n, "".concat(m, "-spin"), !!o || i.name === "loading"),
      n),
      r
    ),
    x = a;
  x === void 0 && l && (x = -1);
  var g = s
      ? {
          msTransform: "rotate(".concat(s, "deg)"),
          transform: "rotate(".concat(s, "deg)"),
        }
      : void 0,
    y = cU(c),
    _ = yt(y, 2),
    b = _[0],
    T = _[1];
  return z.createElement(
    "span",
    mn({ role: "img", "aria-label": i.name }, u, {
      ref: e,
      tabIndex: x,
      onClick: l,
      className: S,
    }),
    z.createElement(WM, {
      icon: i,
      primaryColor: b,
      secondaryColor: T,
      style: g,
    })
  );
});
Qy.displayName = "AntdIcon";
Qy.getTwoToneColor = _K;
Qy.setTwoToneColor = uU;
const Ip = Qy;
var wK = {
  icon: {
    tag: "svg",
    attrs: {
      "fill-rule": "evenodd",
      viewBox: "64 64 896 896",
      focusable: "false",
    },
    children: [
      {
        tag: "path",
        attrs: {
          d: "M512 64c247.4 0 448 200.6 448 448S759.4 960 512 960 64 759.4 64 512 264.6 64 512 64zm127.98 274.82h-.04l-.08.06L512 466.75 384.14 338.88c-.04-.05-.06-.06-.08-.06a.12.12 0 00-.07 0c-.03 0-.05.01-.09.05l-45.02 45.02a.2.2 0 00-.05.09.12.12 0 000 .07v.02a.27.27 0 00.06.06L466.75 512 338.88 639.86c-.05.04-.06.06-.06.08a.12.12 0 000 .07c0 .03.01.05.05.09l45.02 45.02a.2.2 0 00.09.05.12.12 0 00.07 0c.02 0 .04-.01.08-.05L512 557.25l127.86 127.87c.04.04.06.05.08.05a.12.12 0 00.07 0c.03 0 .05-.01.09-.05l45.02-45.02a.2.2 0 00.05-.09.12.12 0 000-.07v-.02a.27.27 0 00-.05-.06L557.25 512l127.87-127.86c.04-.04.05-.06.05-.08a.12.12 0 000-.07c0-.03-.01-.05-.05-.09l-45.02-45.02a.2.2 0 00-.09-.05.12.12 0 00-.07 0z",
        },
      },
    ],
  },
  name: "close-circle",
  theme: "filled",
};
const bK = wK;
var EK = function (e, n) {
  return z.createElement(Ip, mn({}, e, { ref: n, icon: bK }));
};
const $M = z.forwardRef(EK);
var MK = `accept acceptCharset accessKey action allowFullScreen allowTransparency
    alt async autoComplete autoFocus autoPlay capture cellPadding cellSpacing challenge
    charSet checked classID className colSpan cols content contentEditable contextMenu
    controls coords crossOrigin data dateTime default defer dir disabled download draggable
    encType form formAction formEncType formMethod formNoValidate formTarget frameBorder
    headers height hidden high href hrefLang htmlFor httpEquiv icon id inputMode integrity
    is keyParams keyType kind label lang list loop low manifest marginHeight marginWidth max maxLength media
    mediaGroup method min minLength multiple muted name noValidate nonce open
    optimum pattern placeholder poster preload radioGroup readOnly rel required
    reversed role rowSpan rows sandbox scope scoped scrolling seamless selected
    shape size sizes span spellCheck src srcDoc srcLang srcSet start step style
    summary tabIndex target title type useMap value width wmode wrap`,
  CK = `onCopy onCut onPaste onCompositionEnd onCompositionStart onCompositionUpdate onKeyDown
    onKeyPress onKeyUp onFocus onBlur onChange onInput onSubmit onClick onContextMenu onDoubleClick
    onDrag onDragEnd onDragEnter onDragExit onDragLeave onDragOver onDragStart onDrop onMouseDown
    onMouseEnter onMouseLeave onMouseMove onMouseOut onMouseOver onMouseUp onSelect onTouchCancel
    onTouchEnd onTouchMove onTouchStart onScroll onWheel onAbort onCanPlay onCanPlayThrough
    onDurationChange onEmptied onEncrypted onEnded onError onLoadedData onLoadedMetadata
    onLoadStart onPause onPlay onPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend onTimeUpdate onVolumeChange onWaiting onLoad onError`,
  TK = ""
    .concat(MK, " ")
    .concat(CK)
    .split(/[\s\n]+/),
  AK = "aria-",
  RK = "data-";
function GP(t, e) {
  return t.indexOf(e) === 0;
}
function PK(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1,
    n;
  e === !1
    ? (n = { aria: !0, data: !0, attr: !0 })
    : e === !0
    ? (n = { aria: !0 })
    : (n = We({}, e));
  var r = {};
  return (
    Object.keys(t).forEach(function (i) {
      ((n.aria && (i === "role" || GP(i, AK))) ||
        (n.data && GP(i, RK)) ||
        (n.attr && TK.includes(i))) &&
        (r[i] = t[i]);
    }),
    r
  );
}
const { isValidElement: fU } = vf;
function LK(t) {
  return t && fU(t) && t.type === z.Fragment;
}
function IK(t, e, n) {
  return fU(t)
    ? z.cloneElement(t, typeof n == "function" ? n(t.props || {}) : n)
    : e;
}
function R0(t, e) {
  return IK(t, t, e);
}
const Jy = (t) => {
  const [, , , , e] = ul();
  return e ? `${t}-css-var` : "";
};
var OK = {
  icon: {
    tag: "svg",
    attrs: { viewBox: "0 0 1024 1024", focusable: "false" },
    children: [
      {
        tag: "path",
        attrs: {
          d: "M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z",
        },
      },
    ],
  },
  name: "loading",
  theme: "outlined",
};
const FK = OK;
var NK = function (e, n) {
  return z.createElement(Ip, mn({}, e, { ref: n, icon: FK }));
};
const DK = z.forwardRef(NK);
function oi() {
  oi = function () {
    return e;
  };
  var t,
    e = {},
    n = Object.prototype,
    r = n.hasOwnProperty,
    i =
      Object.defineProperty ||
      function (j, Y, N) {
        j[Y] = N.value;
      },
    o = typeof Symbol == "function" ? Symbol : {},
    s = o.iterator || "@@iterator",
    a = o.asyncIterator || "@@asyncIterator",
    l = o.toStringTag || "@@toStringTag";
  function c(j, Y, N) {
    return (
      Object.defineProperty(j, Y, {
        value: N,
        enumerable: !0,
        configurable: !0,
        writable: !0,
      }),
      j[Y]
    );
  }
  try {
    c({}, "");
  } catch {
    c = function (N, V, G) {
      return (N[V] = G);
    };
  }
  function u(j, Y, N, V) {
    var G = Y && Y.prototype instanceof g ? Y : g,
      U = Object.create(G.prototype),
      Z = new D(V || []);
    return i(U, "_invoke", { value: P(j, N, Z) }), U;
  }
  function h(j, Y, N) {
    try {
      return { type: "normal", arg: j.call(Y, N) };
    } catch (V) {
      return { type: "throw", arg: V };
    }
  }
  e.wrap = u;
  var p = "suspendedStart",
    m = "suspendedYield",
    v = "executing",
    S = "completed",
    x = {};
  function g() {}
  function y() {}
  function _() {}
  var b = {};
  c(b, s, function () {
    return this;
  });
  var T = Object.getPrototypeOf,
    M = T && T(T(X([])));
  M && M !== n && r.call(M, s) && (b = M);
  var C = (_.prototype = g.prototype = Object.create(b));
  function L(j) {
    ["next", "throw", "return"].forEach(function (Y) {
      c(j, Y, function (N) {
        return this._invoke(Y, N);
      });
    });
  }
  function A(j, Y) {
    function N(G, U, Z, Q) {
      var te = h(j[G], j, U);
      if (te.type !== "throw") {
        var re = te.arg,
          le = re.value;
        return le && Qt(le) == "object" && r.call(le, "__await")
          ? Y.resolve(le.__await).then(
              function (oe) {
                N("next", oe, Z, Q);
              },
              function (oe) {
                N("throw", oe, Z, Q);
              }
            )
          : Y.resolve(le).then(
              function (oe) {
                (re.value = oe), Z(re);
              },
              function (oe) {
                return N("throw", oe, Z, Q);
              }
            );
      }
      Q(te.arg);
    }
    var V;
    i(this, "_invoke", {
      value: function (U, Z) {
        function Q() {
          return new Y(function (te, re) {
            N(U, Z, te, re);
          });
        }
        return (V = V ? V.then(Q, Q) : Q());
      },
    });
  }
  function P(j, Y, N) {
    var V = p;
    return function (G, U) {
      if (V === v) throw new Error("Generator is already running");
      if (V === S) {
        if (G === "throw") throw U;
        return { value: t, done: !0 };
      }
      for (N.method = G, N.arg = U; ; ) {
        var Z = N.delegate;
        if (Z) {
          var Q = k(Z, N);
          if (Q) {
            if (Q === x) continue;
            return Q;
          }
        }
        if (N.method === "next") N.sent = N._sent = N.arg;
        else if (N.method === "throw") {
          if (V === p) throw ((V = S), N.arg);
          N.dispatchException(N.arg);
        } else N.method === "return" && N.abrupt("return", N.arg);
        V = v;
        var te = h(j, Y, N);
        if (te.type === "normal") {
          if (((V = N.done ? S : m), te.arg === x)) continue;
          return { value: te.arg, done: N.done };
        }
        te.type === "throw" &&
          ((V = S), (N.method = "throw"), (N.arg = te.arg));
      }
    };
  }
  function k(j, Y) {
    var N = Y.method,
      V = j.iterator[N];
    if (V === t)
      return (
        (Y.delegate = null),
        (N === "throw" &&
          j.iterator.return &&
          ((Y.method = "return"),
          (Y.arg = t),
          k(j, Y),
          Y.method === "throw")) ||
          (N !== "return" &&
            ((Y.method = "throw"),
            (Y.arg = new TypeError(
              "The iterator does not provide a '" + N + "' method"
            )))),
        x
      );
    var G = h(V, j.iterator, Y.arg);
    if (G.type === "throw")
      return (Y.method = "throw"), (Y.arg = G.arg), (Y.delegate = null), x;
    var U = G.arg;
    return U
      ? U.done
        ? ((Y[j.resultName] = U.value),
          (Y.next = j.nextLoc),
          Y.method !== "return" && ((Y.method = "next"), (Y.arg = t)),
          (Y.delegate = null),
          x)
        : U
      : ((Y.method = "throw"),
        (Y.arg = new TypeError("iterator result is not an object")),
        (Y.delegate = null),
        x);
  }
  function B(j) {
    var Y = { tryLoc: j[0] };
    1 in j && (Y.catchLoc = j[1]),
      2 in j && ((Y.finallyLoc = j[2]), (Y.afterLoc = j[3])),
      this.tryEntries.push(Y);
  }
  function $(j) {
    var Y = j.completion || {};
    (Y.type = "normal"), delete Y.arg, (j.completion = Y);
  }
  function D(j) {
    (this.tryEntries = [{ tryLoc: "root" }]),
      j.forEach(B, this),
      this.reset(!0);
  }
  function X(j) {
    if (j || j === "") {
      var Y = j[s];
      if (Y) return Y.call(j);
      if (typeof j.next == "function") return j;
      if (!isNaN(j.length)) {
        var N = -1,
          V = function G() {
            for (; ++N < j.length; )
              if (r.call(j, N)) return (G.value = j[N]), (G.done = !1), G;
            return (G.value = t), (G.done = !0), G;
          };
        return (V.next = V);
      }
    }
    throw new TypeError(Qt(j) + " is not iterable");
  }
  return (
    (y.prototype = _),
    i(C, "constructor", { value: _, configurable: !0 }),
    i(_, "constructor", { value: y, configurable: !0 }),
    (y.displayName = c(_, l, "GeneratorFunction")),
    (e.isGeneratorFunction = function (j) {
      var Y = typeof j == "function" && j.constructor;
      return (
        !!Y && (Y === y || (Y.displayName || Y.name) === "GeneratorFunction")
      );
    }),
    (e.mark = function (j) {
      return (
        Object.setPrototypeOf
          ? Object.setPrototypeOf(j, _)
          : ((j.__proto__ = _), c(j, l, "GeneratorFunction")),
        (j.prototype = Object.create(C)),
        j
      );
    }),
    (e.awrap = function (j) {
      return { __await: j };
    }),
    L(A.prototype),
    c(A.prototype, a, function () {
      return this;
    }),
    (e.AsyncIterator = A),
    (e.async = function (j, Y, N, V, G) {
      G === void 0 && (G = Promise);
      var U = new A(u(j, Y, N, V), G);
      return e.isGeneratorFunction(Y)
        ? U
        : U.next().then(function (Z) {
            return Z.done ? Z.value : U.next();
          });
    }),
    L(C),
    c(C, l, "Generator"),
    c(C, s, function () {
      return this;
    }),
    c(C, "toString", function () {
      return "[object Generator]";
    }),
    (e.keys = function (j) {
      var Y = Object(j),
        N = [];
      for (var V in Y) N.push(V);
      return (
        N.reverse(),
        function G() {
          for (; N.length; ) {
            var U = N.pop();
            if (U in Y) return (G.value = U), (G.done = !1), G;
          }
          return (G.done = !0), G;
        }
      );
    }),
    (e.values = X),
    (D.prototype = {
      constructor: D,
      reset: function (Y) {
        if (
          ((this.prev = 0),
          (this.next = 0),
          (this.sent = this._sent = t),
          (this.done = !1),
          (this.delegate = null),
          (this.method = "next"),
          (this.arg = t),
          this.tryEntries.forEach($),
          !Y)
        )
          for (var N in this)
            N.charAt(0) === "t" &&
              r.call(this, N) &&
              !isNaN(+N.slice(1)) &&
              (this[N] = t);
      },
      stop: function () {
        this.done = !0;
        var Y = this.tryEntries[0].completion;
        if (Y.type === "throw") throw Y.arg;
        return this.rval;
      },
      dispatchException: function (Y) {
        if (this.done) throw Y;
        var N = this;
        function V(re, le) {
          return (
            (Z.type = "throw"),
            (Z.arg = Y),
            (N.next = re),
            le && ((N.method = "next"), (N.arg = t)),
            !!le
          );
        }
        for (var G = this.tryEntries.length - 1; G >= 0; --G) {
          var U = this.tryEntries[G],
            Z = U.completion;
          if (U.tryLoc === "root") return V("end");
          if (U.tryLoc <= this.prev) {
            var Q = r.call(U, "catchLoc"),
              te = r.call(U, "finallyLoc");
            if (Q && te) {
              if (this.prev < U.catchLoc) return V(U.catchLoc, !0);
              if (this.prev < U.finallyLoc) return V(U.finallyLoc);
            } else if (Q) {
              if (this.prev < U.catchLoc) return V(U.catchLoc, !0);
            } else {
              if (!te)
                throw new Error("try statement without catch or finally");
              if (this.prev < U.finallyLoc) return V(U.finallyLoc);
            }
          }
        }
      },
      abrupt: function (Y, N) {
        for (var V = this.tryEntries.length - 1; V >= 0; --V) {
          var G = this.tryEntries[V];
          if (
            G.tryLoc <= this.prev &&
            r.call(G, "finallyLoc") &&
            this.prev < G.finallyLoc
          ) {
            var U = G;
            break;
          }
        }
        U &&
          (Y === "break" || Y === "continue") &&
          U.tryLoc <= N &&
          N <= U.finallyLoc &&
          (U = null);
        var Z = U ? U.completion : {};
        return (
          (Z.type = Y),
          (Z.arg = N),
          U
            ? ((this.method = "next"), (this.next = U.finallyLoc), x)
            : this.complete(Z)
        );
      },
      complete: function (Y, N) {
        if (Y.type === "throw") throw Y.arg;
        return (
          Y.type === "break" || Y.type === "continue"
            ? (this.next = Y.arg)
            : Y.type === "return"
            ? ((this.rval = this.arg = Y.arg),
              (this.method = "return"),
              (this.next = "end"))
            : Y.type === "normal" && N && (this.next = N),
          x
        );
      },
      finish: function (Y) {
        for (var N = this.tryEntries.length - 1; N >= 0; --N) {
          var V = this.tryEntries[N];
          if (V.finallyLoc === Y)
            return this.complete(V.completion, V.afterLoc), $(V), x;
        }
      },
      catch: function (Y) {
        for (var N = this.tryEntries.length - 1; N >= 0; --N) {
          var V = this.tryEntries[N];
          if (V.tryLoc === Y) {
            var G = V.completion;
            if (G.type === "throw") {
              var U = G.arg;
              $(V);
            }
            return U;
          }
        }
        throw new Error("illegal catch attempt");
      },
      delegateYield: function (Y, N, V) {
        return (
          (this.delegate = { iterator: X(Y), resultName: N, nextLoc: V }),
          this.method === "next" && (this.arg = t),
          x
        );
      },
    }),
    e
  );
}
function jP(t, e, n, r, i, o, s) {
  try {
    var a = t[o](s),
      l = a.value;
  } catch (c) {
    n(c);
    return;
  }
  a.done ? e(l) : Promise.resolve(l).then(r, i);
}
function Wc(t) {
  return function () {
    var e = this,
      n = arguments;
    return new Promise(function (r, i) {
      var o = t.apply(e, n);
      function s(l) {
        jP(o, r, i, s, a, "next", l);
      }
      function a(l) {
        jP(o, r, i, s, a, "throw", l);
      }
      s(void 0);
    });
  };
}
var Op = We({}, B4),
  UK = Op.version,
  zK = Op.render,
  kK = Op.unmountComponentAtNode,
  ex;
try {
  var BK = Number((UK || "").split(".")[0]);
  BK >= 18 && (ex = Op.createRoot);
} catch {}
function WP(t) {
  var e = Op.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  e && Qt(e) === "object" && (e.usingClientEntryPoint = t);
}
var P0 = "__rc_react_root__";
function HK(t, e) {
  WP(!0);
  var n = e[P0] || ex(e);
  WP(!1), n.render(t), (e[P0] = n);
}
function VK(t, e) {
  zK(t, e);
}
function GK(t, e) {
  if (ex) {
    HK(t, e);
    return;
  }
  VK(t, e);
}
function jK(t) {
  return gb.apply(this, arguments);
}
function gb() {
  return (
    (gb = Wc(
      oi().mark(function t(e) {
        return oi().wrap(function (r) {
          for (;;)
            switch ((r.prev = r.next)) {
              case 0:
                return r.abrupt(
                  "return",
                  Promise.resolve().then(function () {
                    var i;
                    (i = e[P0]) === null || i === void 0 || i.unmount(),
                      delete e[P0];
                  })
                );
              case 1:
              case "end":
                return r.stop();
            }
        }, t);
      })
    )),
    gb.apply(this, arguments)
  );
}
function WK(t) {
  kK(t);
}
function $K(t) {
  return vb.apply(this, arguments);
}
function vb() {
  return (
    (vb = Wc(
      oi().mark(function t(e) {
        return oi().wrap(function (r) {
          for (;;)
            switch ((r.prev = r.next)) {
              case 0:
                if (ex === void 0) {
                  r.next = 2;
                  break;
                }
                return r.abrupt("return", jK(e));
              case 2:
                WK(e);
              case 3:
              case "end":
                return r.stop();
            }
        }, t);
      })
    )),
    vb.apply(this, arguments)
  );
}
const XK = function (t) {
    if (!t) return !1;
    if (t instanceof Element) {
      if (t.offsetParent) return !0;
      if (t.getBBox) {
        var e = t.getBBox(),
          n = e.width,
          r = e.height;
        if (n || r) return !0;
      }
      if (t.getBoundingClientRect) {
        var i = t.getBoundingClientRect(),
          o = i.width,
          s = i.height;
        if (o || s) return !0;
      }
    }
    return !1;
  },
  qK = (t) => {
    const { componentCls: e, colorPrimary: n } = t;
    return {
      [e]: {
        position: "absolute",
        background: "transparent",
        pointerEvents: "none",
        boxSizing: "border-box",
        color: `var(--wave-color, ${n})`,
        boxShadow: "0 0 0 0 currentcolor",
        opacity: 0.2,
        "&.wave-motion-appear": {
          transition: [
            `box-shadow 0.4s ${t.motionEaseOutCirc}`,
            `opacity 2s ${t.motionEaseOutCirc}`,
          ].join(","),
          "&-active": { boxShadow: "0 0 0 6px currentcolor", opacity: 0 },
          "&.wave-quick": {
            transition: [
              `box-shadow 0.3s ${t.motionEaseInOut}`,
              `opacity 0.35s ${t.motionEaseInOut}`,
            ].join(","),
          },
        },
      },
    };
  },
  YK = HM("Wave", (t) => [qK(t)]);
function KK(t) {
  const e = (t || "").match(/rgba?\((\d*), (\d*), (\d*)(, [\d.]*)?\)/);
  return e && e[1] && e[2] && e[3] ? !(e[1] === e[2] && e[2] === e[3]) : !0;
}
function N_(t) {
  return (
    t &&
    t !== "#fff" &&
    t !== "#ffffff" &&
    t !== "rgb(255, 255, 255)" &&
    t !== "rgba(255, 255, 255, 1)" &&
    KK(t) &&
    !/rgba\((?:\d*, ){3}0\)/.test(t) &&
    t !== "transparent"
  );
}
function ZK(t) {
  const {
    borderTopColor: e,
    borderColor: n,
    backgroundColor: r,
  } = getComputedStyle(t);
  return N_(e) ? e : N_(n) ? n : N_(r) ? r : null;
}
const XM = "ant-wave-target";
function D_(t) {
  return Number.isNaN(t) ? 0 : t;
}
const QK = (t) => {
    const { className: e, target: n, component: r } = t,
      i = z.useRef(null),
      [o, s] = z.useState(null),
      [a, l] = z.useState([]),
      [c, u] = z.useState(0),
      [h, p] = z.useState(0),
      [m, v] = z.useState(0),
      [S, x] = z.useState(0),
      [g, y] = z.useState(!1),
      _ = {
        left: c,
        top: h,
        width: m,
        height: S,
        borderRadius: a.map((M) => `${M}px`).join(" "),
      };
    o && (_["--wave-color"] = o);
    function b() {
      const M = getComputedStyle(n);
      s(ZK(n));
      const C = M.position === "static",
        { borderLeftWidth: L, borderTopWidth: A } = M;
      u(C ? n.offsetLeft : D_(-parseFloat(L))),
        p(C ? n.offsetTop : D_(-parseFloat(A))),
        v(n.offsetWidth),
        x(n.offsetHeight);
      const {
        borderTopLeftRadius: P,
        borderTopRightRadius: k,
        borderBottomLeftRadius: B,
        borderBottomRightRadius: $,
      } = M;
      l([P, k, $, B].map((D) => D_(parseFloat(D))));
    }
    if (
      (z.useEffect(() => {
        if (n) {
          const M = fa(() => {
            b(), y(!0);
          });
          let C;
          return (
            typeof ResizeObserver < "u" &&
              ((C = new ResizeObserver(b)), C.observe(n)),
            () => {
              fa.cancel(M), C == null || C.disconnect();
            }
          );
        }
      }, []),
      !g)
    )
      return null;
    const T =
      (r === "Checkbox" || r === "Radio") &&
      (n == null ? void 0 : n.classList.contains(XM));
    return z.createElement(
      jM,
      {
        visible: !0,
        motionAppear: !0,
        motionName: "wave-motion",
        motionDeadline: 5e3,
        onAppearEnd: (M, C) => {
          var L;
          if (C.deadline || C.propertyName === "opacity") {
            const A =
              (L = i.current) === null || L === void 0
                ? void 0
                : L.parentElement;
            $K(A).then(() => {
              A == null || A.remove();
            });
          }
          return !1;
        },
      },
      (M) => {
        let { className: C } = M;
        return z.createElement("div", {
          ref: i,
          className: Ct(e, { "wave-quick": T }, C),
          style: _,
        });
      }
    );
  },
  JK = (t, e) => {
    var n;
    const { component: r } = e;
    if (
      r === "Checkbox" &&
      !(!((n = t.querySelector("input")) === null || n === void 0) && n.checked)
    )
      return;
    const i = document.createElement("div");
    (i.style.position = "absolute"),
      (i.style.left = "0px"),
      (i.style.top = "0px"),
      t == null || t.insertBefore(i, t == null ? void 0 : t.firstChild),
      GK(z.createElement(QK, Object.assign({}, e, { target: t })), i);
  },
  eZ = JK;
function tZ(t, e, n) {
  const { wave: r } = z.useContext(Wr),
    [, i, o] = ul(),
    s = cb((c) => {
      const u = t.current;
      if ((r != null && r.disabled) || !u) return;
      const h = u.querySelector(`.${XM}`) || u,
        { showEffect: p } = r || {};
      (p || eZ)(h, {
        className: e,
        token: i,
        component: n,
        event: c,
        hashId: o,
      });
    }),
    a = z.useRef();
  return (c) => {
    fa.cancel(a.current),
      (a.current = fa(() => {
        s(c);
      }));
  };
}
const nZ = (t) => {
    const { children: e, disabled: n, component: r } = t,
      { getPrefixCls: i } = z.useContext(Wr),
      o = z.useRef(null),
      s = i("wave"),
      [, a] = YK(s),
      l = tZ(o, Ct(s, a), r);
    if (
      (at.useEffect(() => {
        const u = o.current;
        if (!u || u.nodeType !== 1 || n) return;
        const h = (p) => {
          !XK(p.target) ||
            !u.getAttribute ||
            u.getAttribute("disabled") ||
            u.disabled ||
            u.className.includes("disabled") ||
            u.className.includes("-leave") ||
            l(p);
        };
        return (
          u.addEventListener("click", h, !0),
          () => {
            u.removeEventListener("click", h, !0);
          }
        );
      }, [n]),
      !at.isValidElement(e))
    )
      return e ?? null;
    const c = RM(e) ? jc(e.ref, o) : o;
    return R0(e, { ref: c });
  },
  dU = nZ,
  Fp = (t) => {
    const e = at.useContext(Ky);
    return at.useMemo(
      () =>
        t
          ? typeof t == "string"
            ? t ?? e
            : t instanceof Function
            ? t(e)
            : e
          : e,
      [t, e]
    );
  },
  hU = z.createContext(null),
  qM = (t, e) => {
    const n = z.useContext(hU),
      r = z.useMemo(() => {
        if (!n) return "";
        const { compactDirection: i, isFirstItem: o, isLastItem: s } = n,
          a = i === "vertical" ? "-vertical-" : "-";
        return Ct(`${t}-compact${a}item`, {
          [`${t}-compact${a}first-item`]: o,
          [`${t}-compact${a}last-item`]: s,
          [`${t}-compact${a}item-rtl`]: e === "rtl",
        });
      }, [t, e, n]);
    return {
      compactSize: n == null ? void 0 : n.compactSize,
      compactDirection: n == null ? void 0 : n.compactDirection,
      compactItemClassnames: r,
    };
  },
  $P = (t) => {
    let { children: e } = t;
    return z.createElement(hU.Provider, { value: null }, e);
  };
var rZ = function (t, e) {
  var n = {};
  for (var r in t)
    Object.prototype.hasOwnProperty.call(t, r) &&
      e.indexOf(r) < 0 &&
      (n[r] = t[r]);
  if (t != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(t); i < r.length; i++)
      e.indexOf(r[i]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(t, r[i]) &&
        (n[r[i]] = t[r[i]]);
  return n;
};
const pU = z.createContext(void 0),
  iZ = (t) => {
    const { getPrefixCls: e, direction: n } = z.useContext(Wr),
      { prefixCls: r, size: i, className: o } = t,
      s = rZ(t, ["prefixCls", "size", "className"]),
      a = e("btn-group", r),
      [, , l] = ul();
    let c = "";
    switch (i) {
      case "large":
        c = "lg";
        break;
      case "small":
        c = "sm";
        break;
    }
    const u = Ct(a, { [`${a}-${c}`]: c, [`${a}-rtl`]: n === "rtl" }, o, l);
    return z.createElement(
      pU.Provider,
      { value: i },
      z.createElement("div", Object.assign({}, s, { className: u }))
    );
  },
  oZ = iZ,
  XP = /^[\u4e00-\u9fa5]{2}$/,
  yb = XP.test.bind(XP);
function qP(t) {
  return typeof t == "string";
}
function U_(t) {
  return t === "text" || t === "link";
}
function sZ(t, e) {
  if (t == null) return;
  const n = e ? " " : "";
  return typeof t != "string" &&
    typeof t != "number" &&
    qP(t.type) &&
    yb(t.props.children)
    ? R0(t, { children: t.props.children.split("").join(n) })
    : qP(t)
    ? yb(t)
      ? at.createElement("span", null, t.split("").join(n))
      : at.createElement("span", null, t)
    : LK(t)
    ? at.createElement("span", null, t)
    : t;
}
function aZ(t, e) {
  let n = !1;
  const r = [];
  return (
    at.Children.forEach(t, (i) => {
      const o = typeof i,
        s = o === "string" || o === "number";
      if (n && s) {
        const a = r.length - 1,
          l = r[a];
        r[a] = `${l}${i}`;
      } else r.push(i);
      n = s;
    }),
    at.Children.map(r, (i) => sZ(i, e))
  );
}
const lZ = z.forwardRef((t, e) => {
    const { className: n, style: r, children: i, prefixCls: o } = t,
      s = Ct(`${o}-icon`, n);
    return at.createElement("span", { ref: e, className: s, style: r }, i);
  }),
  mU = lZ,
  YP = z.forwardRef((t, e) => {
    let { prefixCls: n, className: r, style: i, iconClassName: o } = t;
    const s = Ct(`${n}-loading-icon`, r);
    return at.createElement(
      mU,
      { prefixCls: n, className: s, style: i, ref: e },
      at.createElement(DK, { className: o })
    );
  }),
  z_ = () => ({ width: 0, opacity: 0, transform: "scale(0)" }),
  k_ = (t) => ({ width: t.scrollWidth, opacity: 1, transform: "scale(1)" }),
  cZ = (t) => {
    const {
        prefixCls: e,
        loading: n,
        existIcon: r,
        className: i,
        style: o,
      } = t,
      s = !!n;
    return r
      ? at.createElement(YP, { prefixCls: e, className: i, style: o })
      : at.createElement(
          jM,
          {
            visible: s,
            motionName: `${e}-loading-icon-motion`,
            motionLeave: s,
            removeOnLeave: !0,
            onAppearStart: z_,
            onAppearActive: k_,
            onEnterStart: z_,
            onEnterActive: k_,
            onLeaveStart: k_,
            onLeaveActive: z_,
          },
          (a, l) => {
            let { className: c, style: u } = a;
            return at.createElement(YP, {
              prefixCls: e,
              className: i,
              style: Object.assign(Object.assign({}, o), u),
              ref: l,
              iconClassName: c,
            });
          }
        );
  },
  uZ = cZ,
  KP = (t, e) => ({
    [`> span, > ${t}`]: {
      "&:not(:last-child)": {
        [`&, & > ${t}`]: { "&:not(:disabled)": { borderInlineEndColor: e } },
      },
      "&:not(:first-child)": {
        [`&, & > ${t}`]: { "&:not(:disabled)": { borderInlineStartColor: e } },
      },
    },
  }),
  fZ = (t) => {
    const {
      componentCls: e,
      fontSize: n,
      lineWidth: r,
      groupBorderColor: i,
      colorErrorHover: o,
    } = t;
    return {
      [`${e}-group`]: [
        {
          position: "relative",
          display: "inline-flex",
          [`> span, > ${e}`]: {
            "&:not(:last-child)": {
              [`&, & > ${e}`]: {
                borderStartEndRadius: 0,
                borderEndEndRadius: 0,
              },
            },
            "&:not(:first-child)": {
              marginInlineStart: t.calc(r).mul(-1).equal(),
              [`&, & > ${e}`]: {
                borderStartStartRadius: 0,
                borderEndStartRadius: 0,
              },
            },
          },
          [e]: {
            position: "relative",
            zIndex: 1,
            "&:hover,\n          &:focus,\n          &:active": { zIndex: 2 },
            "&[disabled]": { zIndex: 0 },
          },
          [`${e}-icon-only`]: { fontSize: n },
        },
        KP(`${e}-primary`, i),
        KP(`${e}-danger`, o),
      ],
    };
  },
  dZ = fZ,
  gU = (t) => {
    const { paddingInline: e, onlyIconSize: n, paddingBlock: r } = t;
    return Cs(t, {
      buttonPaddingHorizontal: e,
      buttonPaddingVertical: r,
      buttonIconOnlyFontSize: n,
    });
  },
  vU = (t) => {
    var e, n, r, i, o, s;
    const a = (e = t.contentFontSize) !== null && e !== void 0 ? e : t.fontSize,
      l = (n = t.contentFontSizeSM) !== null && n !== void 0 ? n : t.fontSize,
      c = (r = t.contentFontSizeLG) !== null && r !== void 0 ? r : t.fontSizeLG,
      u = (i = t.contentLineHeight) !== null && i !== void 0 ? i : zv(a),
      h = (o = t.contentLineHeightSM) !== null && o !== void 0 ? o : zv(l),
      p = (s = t.contentLineHeightLG) !== null && s !== void 0 ? s : zv(c);
    return {
      fontWeight: 400,
      defaultShadow: `0 ${t.controlOutlineWidth}px 0 ${t.controlTmpOutline}`,
      primaryShadow: `0 ${t.controlOutlineWidth}px 0 ${t.controlOutline}`,
      dangerShadow: `0 ${t.controlOutlineWidth}px 0 ${t.colorErrorOutline}`,
      primaryColor: t.colorTextLightSolid,
      dangerColor: t.colorTextLightSolid,
      borderColorDisabled: t.colorBorder,
      defaultGhostColor: t.colorBgContainer,
      ghostBg: "transparent",
      defaultGhostBorderColor: t.colorBgContainer,
      paddingInline: t.paddingContentHorizontal - t.lineWidth,
      paddingInlineLG: t.paddingContentHorizontal - t.lineWidth,
      paddingInlineSM: 8 - t.lineWidth,
      onlyIconSize: t.fontSizeLG,
      onlyIconSizeSM: t.fontSizeLG - 2,
      onlyIconSizeLG: t.fontSizeLG + 2,
      groupBorderColor: t.colorPrimaryHover,
      linkHoverBg: "transparent",
      textHoverBg: t.colorBgTextHover,
      defaultColor: t.colorText,
      defaultBg: t.colorBgContainer,
      defaultBorderColor: t.colorBorder,
      defaultBorderColorDisabled: t.colorBorder,
      contentFontSize: a,
      contentFontSizeSM: l,
      contentFontSizeLG: c,
      contentLineHeight: u,
      contentLineHeightSM: h,
      contentLineHeightLG: p,
      paddingBlock: Math.max((t.controlHeight - a * u) / 2 - t.lineWidth, 0),
      paddingBlockSM: Math.max(
        (t.controlHeightSM - l * h) / 2 - t.lineWidth,
        0
      ),
      paddingBlockLG: Math.max(
        (t.controlHeightLG - c * p) / 2 - t.lineWidth,
        0
      ),
    };
  },
  hZ = (t) => {
    const { componentCls: e, iconCls: n, fontWeight: r } = t;
    return {
      [e]: {
        outline: "none",
        position: "relative",
        display: "inline-block",
        fontWeight: r,
        whiteSpace: "nowrap",
        textAlign: "center",
        backgroundImage: "none",
        background: "transparent",
        border: `${Bt(t.lineWidth)} ${t.lineType} transparent`,
        cursor: "pointer",
        transition: `all ${t.motionDurationMid} ${t.motionEaseInOut}`,
        userSelect: "none",
        touchAction: "manipulation",
        color: t.colorText,
        "&:disabled > *": { pointerEvents: "none" },
        "> span": { display: "inline-block" },
        [`${e}-icon`]: { lineHeight: 0 },
        [`> ${n} + span, > span + ${n}`]: { marginInlineStart: t.marginXS },
        [`&:not(${e}-icon-only) > ${e}-icon`]: {
          [`&${e}-loading-icon, &:not(:last-child)`]: {
            marginInlineEnd: t.marginXS,
          },
        },
        "> a": { color: "currentColor" },
        "&:not(:disabled)": Object.assign({}, xY(t)),
        [`&${e}-two-chinese-chars::first-letter`]: { letterSpacing: "0.34em" },
        [`&${e}-two-chinese-chars > *:not(${n})`]: {
          marginInlineEnd: "-0.34em",
          letterSpacing: "0.34em",
        },
        [`&-icon-only${e}-compact-item`]: { flex: "none" },
      },
    };
  },
  da = (t, e, n) => ({
    [`&:not(:disabled):not(${t}-disabled)`]: { "&:hover": e, "&:active": n },
  }),
  pZ = (t) => ({
    minWidth: t.controlHeight,
    paddingInlineStart: 0,
    paddingInlineEnd: 0,
    borderRadius: "50%",
  }),
  mZ = (t) => ({
    borderRadius: t.controlHeight,
    paddingInlineStart: t.calc(t.controlHeight).div(2).equal(),
    paddingInlineEnd: t.calc(t.controlHeight).div(2).equal(),
  }),
  gZ = (t) => ({
    cursor: "not-allowed",
    borderColor: t.borderColorDisabled,
    color: t.colorTextDisabled,
    background: t.colorBgContainerDisabled,
    boxShadow: "none",
  }),
  ap = (t, e, n, r, i, o, s, a) => ({
    [`&${t}-background-ghost`]: Object.assign(
      Object.assign(
        {
          color: n || void 0,
          background: e,
          borderColor: r || void 0,
          boxShadow: "none",
        },
        da(
          t,
          Object.assign({ background: e }, s),
          Object.assign({ background: e }, a)
        )
      ),
      {
        "&:disabled": {
          cursor: "not-allowed",
          color: i || void 0,
          borderColor: o || void 0,
        },
      }
    ),
  }),
  YM = (t) => ({
    [`&:disabled, &${t.componentCls}-disabled`]: Object.assign({}, gZ(t)),
  }),
  yU = (t) => Object.assign({}, YM(t)),
  L0 = (t) => ({
    [`&:disabled, &${t.componentCls}-disabled`]: {
      cursor: "not-allowed",
      color: t.colorTextDisabled,
    },
  }),
  xU = (t) =>
    Object.assign(
      Object.assign(
        Object.assign(
          Object.assign(Object.assign({}, yU(t)), {
            background: t.defaultBg,
            borderColor: t.defaultBorderColor,
            color: t.defaultColor,
            boxShadow: t.defaultShadow,
          }),
          da(
            t.componentCls,
            { color: t.colorPrimaryHover, borderColor: t.colorPrimaryHover },
            { color: t.colorPrimaryActive, borderColor: t.colorPrimaryActive }
          )
        ),
        ap(
          t.componentCls,
          t.ghostBg,
          t.defaultGhostColor,
          t.defaultGhostBorderColor,
          t.colorTextDisabled,
          t.colorBorder
        )
      ),
      {
        [`&${t.componentCls}-dangerous`]: Object.assign(
          Object.assign(
            Object.assign(
              { color: t.colorError, borderColor: t.colorError },
              da(
                t.componentCls,
                {
                  color: t.colorErrorHover,
                  borderColor: t.colorErrorBorderHover,
                },
                { color: t.colorErrorActive, borderColor: t.colorErrorActive }
              )
            ),
            ap(
              t.componentCls,
              t.ghostBg,
              t.colorError,
              t.colorError,
              t.colorTextDisabled,
              t.colorBorder
            )
          ),
          YM(t)
        ),
      }
    ),
  vZ = (t) =>
    Object.assign(
      Object.assign(
        Object.assign(
          Object.assign(Object.assign({}, yU(t)), {
            color: t.primaryColor,
            background: t.colorPrimary,
            boxShadow: t.primaryShadow,
          }),
          da(
            t.componentCls,
            { color: t.colorTextLightSolid, background: t.colorPrimaryHover },
            { color: t.colorTextLightSolid, background: t.colorPrimaryActive }
          )
        ),
        ap(
          t.componentCls,
          t.ghostBg,
          t.colorPrimary,
          t.colorPrimary,
          t.colorTextDisabled,
          t.colorBorder,
          { color: t.colorPrimaryHover, borderColor: t.colorPrimaryHover },
          { color: t.colorPrimaryActive, borderColor: t.colorPrimaryActive }
        )
      ),
      {
        [`&${t.componentCls}-dangerous`]: Object.assign(
          Object.assign(
            Object.assign(
              {
                background: t.colorError,
                boxShadow: t.dangerShadow,
                color: t.dangerColor,
              },
              da(
                t.componentCls,
                { background: t.colorErrorHover },
                { background: t.colorErrorActive }
              )
            ),
            ap(
              t.componentCls,
              t.ghostBg,
              t.colorError,
              t.colorError,
              t.colorTextDisabled,
              t.colorBorder,
              { color: t.colorErrorHover, borderColor: t.colorErrorHover },
              { color: t.colorErrorActive, borderColor: t.colorErrorActive }
            )
          ),
          YM(t)
        ),
      }
    ),
  yZ = (t) =>
    Object.assign(Object.assign({}, xU(t)), { borderStyle: "dashed" }),
  xZ = (t) =>
    Object.assign(
      Object.assign(
        Object.assign(
          { color: t.colorLink },
          da(
            t.componentCls,
            { color: t.colorLinkHover, background: t.linkHoverBg },
            { color: t.colorLinkActive }
          )
        ),
        L0(t)
      ),
      {
        [`&${t.componentCls}-dangerous`]: Object.assign(
          Object.assign(
            { color: t.colorError },
            da(
              t.componentCls,
              { color: t.colorErrorHover },
              { color: t.colorErrorActive }
            )
          ),
          L0(t)
        ),
      }
    ),
  _Z = (t) =>
    Object.assign(
      Object.assign(
        Object.assign(
          {},
          da(
            t.componentCls,
            { color: t.colorText, background: t.textHoverBg },
            { color: t.colorText, background: t.colorBgTextActive }
          )
        ),
        L0(t)
      ),
      {
        [`&${t.componentCls}-dangerous`]: Object.assign(
          Object.assign({ color: t.colorError }, L0(t)),
          da(
            t.componentCls,
            { color: t.colorErrorHover, background: t.colorErrorBg },
            { color: t.colorErrorHover, background: t.colorErrorBg }
          )
        ),
      }
    ),
  SZ = (t) => {
    const { componentCls: e } = t;
    return {
      [`${e}-default`]: xU(t),
      [`${e}-primary`]: vZ(t),
      [`${e}-dashed`]: yZ(t),
      [`${e}-link`]: xZ(t),
      [`${e}-text`]: _Z(t),
      [`${e}-ghost`]: ap(
        t.componentCls,
        t.ghostBg,
        t.colorBgContainer,
        t.colorBgContainer,
        t.colorTextDisabled,
        t.colorBorder
      ),
    };
  },
  KM = function (t) {
    let e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
    const {
        componentCls: n,
        controlHeight: r,
        fontSize: i,
        lineHeight: o,
        borderRadius: s,
        buttonPaddingHorizontal: a,
        iconCls: l,
        buttonPaddingVertical: c,
      } = t,
      u = `${n}-icon-only`;
    return [
      {
        [`${e}`]: {
          fontSize: i,
          lineHeight: o,
          height: r,
          padding: `${Bt(c)} ${Bt(a)}`,
          borderRadius: s,
          [`&${u}`]: {
            width: r,
            paddingInlineStart: 0,
            paddingInlineEnd: 0,
            [`&${n}-round`]: { width: "auto" },
            [l]: { fontSize: t.buttonIconOnlyFontSize },
          },
          [`&${n}-loading`]: { opacity: t.opacityLoading, cursor: "default" },
          [`${n}-loading-icon`]: {
            transition: `width ${t.motionDurationSlow} ${t.motionEaseInOut}, opacity ${t.motionDurationSlow} ${t.motionEaseInOut}`,
          },
        },
      },
      { [`${n}${n}-circle${e}`]: pZ(t) },
      { [`${n}${n}-round${e}`]: mZ(t) },
    ];
  },
  wZ = (t) => {
    const e = Cs(t, {
      fontSize: t.contentFontSize,
      lineHeight: t.contentLineHeight,
    });
    return KM(e, t.componentCls);
  },
  bZ = (t) => {
    const e = Cs(t, {
      controlHeight: t.controlHeightSM,
      fontSize: t.contentFontSizeSM,
      lineHeight: t.contentLineHeightSM,
      padding: t.paddingXS,
      buttonPaddingHorizontal: t.paddingInlineSM,
      buttonPaddingVertical: t.paddingBlockSM,
      borderRadius: t.borderRadiusSM,
      buttonIconOnlyFontSize: t.onlyIconSizeSM,
    });
    return KM(e, `${t.componentCls}-sm`);
  },
  EZ = (t) => {
    const e = Cs(t, {
      controlHeight: t.controlHeightLG,
      fontSize: t.contentFontSizeLG,
      lineHeight: t.contentLineHeightLG,
      buttonPaddingHorizontal: t.paddingInlineLG,
      buttonPaddingVertical: t.paddingBlockLG,
      borderRadius: t.borderRadiusLG,
      buttonIconOnlyFontSize: t.onlyIconSizeLG,
    });
    return KM(e, `${t.componentCls}-lg`);
  },
  MZ = (t) => {
    const { componentCls: e } = t;
    return { [e]: { [`&${e}-block`]: { width: "100%" } } };
  },
  CZ = VM(
    "Button",
    (t) => {
      const e = gU(t);
      return [hZ(e), wZ(e), bZ(e), EZ(e), MZ(e), SZ(e), dZ(e)];
    },
    vU,
    {
      unitless: {
        fontWeight: !0,
        contentLineHeight: !0,
        contentLineHeightSM: !0,
        contentLineHeightLG: !0,
      },
    }
  );
function TZ(t, e, n) {
  const { focusElCls: r, focus: i, borderElCls: o } = n,
    s = o ? "> *" : "",
    a = ["hover", i ? "focus" : null, "active"]
      .filter(Boolean)
      .map((l) => `&:${l} ${s}`)
      .join(",");
  return {
    [`&-item:not(${e}-last-item)`]: {
      marginInlineEnd: t.calc(t.lineWidth).mul(-1).equal(),
    },
    "&-item": Object.assign(
      Object.assign(
        { [a]: { zIndex: 2 } },
        r ? { [`&${r}`]: { zIndex: 2 } } : {}
      ),
      { [`&[disabled] ${s}`]: { zIndex: 0 } }
    ),
  };
}
function AZ(t, e, n) {
  const { borderElCls: r } = n,
    i = r ? `> ${r}` : "";
  return {
    [`&-item:not(${e}-first-item):not(${e}-last-item) ${i}`]: {
      borderRadius: 0,
    },
    [`&-item:not(${e}-last-item)${e}-first-item`]: {
      [`& ${i}, &${t}-sm ${i}, &${t}-lg ${i}`]: {
        borderStartEndRadius: 0,
        borderEndEndRadius: 0,
      },
    },
    [`&-item:not(${e}-first-item)${e}-last-item`]: {
      [`& ${i}, &${t}-sm ${i}, &${t}-lg ${i}`]: {
        borderStartStartRadius: 0,
        borderEndStartRadius: 0,
      },
    },
  };
}
function _U(t) {
  let e =
    arguments.length > 1 && arguments[1] !== void 0
      ? arguments[1]
      : { focus: !0 };
  const { componentCls: n } = t,
    r = `${n}-compact`;
  return { [r]: Object.assign(Object.assign({}, TZ(t, r, e)), AZ(n, r, e)) };
}
function RZ(t, e) {
  return {
    [`&-item:not(${e}-last-item)`]: {
      marginBottom: t.calc(t.lineWidth).mul(-1).equal(),
    },
    "&-item": {
      "&:hover,&:focus,&:active": { zIndex: 2 },
      "&[disabled]": { zIndex: 0 },
    },
  };
}
function PZ(t, e) {
  return {
    [`&-item:not(${e}-first-item):not(${e}-last-item)`]: { borderRadius: 0 },
    [`&-item${e}-first-item:not(${e}-last-item)`]: {
      [`&, &${t}-sm, &${t}-lg`]: {
        borderEndEndRadius: 0,
        borderEndStartRadius: 0,
      },
    },
    [`&-item${e}-last-item:not(${e}-first-item)`]: {
      [`&, &${t}-sm, &${t}-lg`]: {
        borderStartStartRadius: 0,
        borderStartEndRadius: 0,
      },
    },
  };
}
function LZ(t) {
  const e = `${t.componentCls}-compact-vertical`;
  return {
    [e]: Object.assign(Object.assign({}, RZ(t, e)), PZ(t.componentCls, e)),
  };
}
const IZ = (t) => {
    const { componentCls: e, calc: n } = t;
    return {
      [e]: {
        [`&-compact-item${e}-primary`]: {
          [`&:not([disabled]) + ${e}-compact-item${e}-primary:not([disabled])`]:
            {
              position: "relative",
              "&:before": {
                position: "absolute",
                top: n(t.lineWidth).mul(-1).equal(),
                insetInlineStart: n(t.lineWidth).mul(-1).equal(),
                display: "inline-block",
                width: t.lineWidth,
                height: `calc(100% + ${Bt(t.lineWidth)} * 2)`,
                backgroundColor: t.colorPrimaryHover,
                content: '""',
              },
            },
        },
        "&-compact-vertical-item": {
          [`&${e}-primary`]: {
            [`&:not([disabled]) + ${e}-compact-vertical-item${e}-primary:not([disabled])`]:
              {
                position: "relative",
                "&:before": {
                  position: "absolute",
                  top: n(t.lineWidth).mul(-1).equal(),
                  insetInlineStart: n(t.lineWidth).mul(-1).equal(),
                  display: "inline-block",
                  width: `calc(100% + ${Bt(t.lineWidth)} * 2)`,
                  height: t.lineWidth,
                  backgroundColor: t.colorPrimaryHover,
                  content: '""',
                },
              },
          },
        },
      },
    };
  },
  OZ = PY(
    ["Button", "compact"],
    (t) => {
      const e = gU(t);
      return [_U(e), LZ(e), IZ(e)];
    },
    vU
  );
var FZ = function (t, e) {
  var n = {};
  for (var r in t)
    Object.prototype.hasOwnProperty.call(t, r) &&
      e.indexOf(r) < 0 &&
      (n[r] = t[r]);
  if (t != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(t); i < r.length; i++)
      e.indexOf(r[i]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(t, r[i]) &&
        (n[r[i]] = t[r[i]]);
  return n;
};
function NZ(t) {
  if (typeof t == "object" && t) {
    let e = t == null ? void 0 : t.delay;
    return (
      (e = !Number.isNaN(e) && typeof e == "number" ? e : 0),
      { loading: e <= 0, delay: e }
    );
  }
  return { loading: !!t, delay: 0 };
}
const DZ = (t, e) => {
    var n, r;
    const {
        loading: i = !1,
        prefixCls: o,
        type: s = "default",
        danger: a,
        shape: l = "default",
        size: c,
        styles: u,
        disabled: h,
        className: p,
        rootClassName: m,
        children: v,
        icon: S,
        ghost: x = !1,
        block: g = !1,
        htmlType: y = "button",
        classNames: _,
        style: b = {},
      } = t,
      T = FZ(t, [
        "loading",
        "prefixCls",
        "type",
        "danger",
        "shape",
        "size",
        "styles",
        "disabled",
        "className",
        "rootClassName",
        "children",
        "icon",
        "ghost",
        "block",
        "htmlType",
        "classNames",
        "style",
      ]),
      {
        getPrefixCls: M,
        autoInsertSpaceInButton: C,
        direction: L,
        button: A,
      } = z.useContext(Wr),
      P = M("btn", o),
      [k, B, $] = CZ(P),
      D = z.useContext(Rp),
      X = h ?? D,
      j = z.useContext(pU),
      Y = z.useMemo(() => NZ(i), [i]),
      [N, V] = z.useState(Y.loading),
      [G, U] = z.useState(!1),
      Q = jc(e, z.createRef()),
      te = z.Children.count(v) === 1 && !S && !U_(s);
    z.useEffect(() => {
      let K = null;
      Y.delay > 0
        ? (K = setTimeout(() => {
            (K = null), V(!0);
          }, Y.delay))
        : V(Y.loading);
      function ae() {
        K && (clearTimeout(K), (K = null));
      }
      return ae;
    }, [Y]),
      z.useEffect(() => {
        if (!Q || !Q.current || C === !1) return;
        const K = Q.current.textContent;
        te && yb(K) ? G || U(!0) : G && U(!1);
      }, [Q]);
    const re = (K) => {
        const { onClick: ae } = t;
        if (N || X) {
          K.preventDefault();
          return;
        }
        ae == null || ae(K);
      },
      le = C !== !1,
      { compactSize: oe, compactItemClassnames: ve } = qM(P, L),
      Ae = { large: "lg", small: "sm", middle: void 0 },
      Re = Fp((K) => {
        var ae, se;
        return (se = (ae = c ?? oe) !== null && ae !== void 0 ? ae : j) !==
          null && se !== void 0
          ? se
          : K;
      }),
      ye = (Re && Ae[Re]) || "",
      q = N ? "loading" : S,
      xe = LM(T, ["navigate"]),
      he = Ct(
        P,
        B,
        $,
        {
          [`${P}-${l}`]: l !== "default" && l,
          [`${P}-${s}`]: s,
          [`${P}-${ye}`]: ye,
          [`${P}-icon-only`]: !v && v !== 0 && !!q,
          [`${P}-background-ghost`]: x && !U_(s),
          [`${P}-loading`]: N,
          [`${P}-two-chinese-chars`]: G && le && !N,
          [`${P}-block`]: g,
          [`${P}-dangerous`]: !!a,
          [`${P}-rtl`]: L === "rtl",
        },
        ve,
        p,
        m,
        A == null ? void 0 : A.className
      ),
      me = Object.assign(Object.assign({}, A == null ? void 0 : A.style), b),
      fe = Ct(
        _ == null ? void 0 : _.icon,
        (n = A == null ? void 0 : A.classNames) === null || n === void 0
          ? void 0
          : n.icon
      ),
      Ve = Object.assign(
        Object.assign({}, (u == null ? void 0 : u.icon) || {}),
        ((r = A == null ? void 0 : A.styles) === null || r === void 0
          ? void 0
          : r.icon) || {}
      ),
      ge =
        S && !N
          ? at.createElement(mU, { prefixCls: P, className: fe, style: Ve }, S)
          : at.createElement(uZ, {
              existIcon: !!S,
              prefixCls: P,
              loading: !!N,
            }),
      H = v || v === 0 ? aZ(v, te && le) : null;
    if (xe.href !== void 0)
      return k(
        at.createElement(
          "a",
          Object.assign({}, xe, {
            className: Ct(he, { [`${P}-disabled`]: X }),
            href: X ? void 0 : xe.href,
            style: me,
            onClick: re,
            ref: Q,
            tabIndex: X ? -1 : 0,
          }),
          ge,
          H
        )
      );
    let F = at.createElement(
      "button",
      Object.assign({}, T, {
        type: y,
        className: he,
        style: me,
        onClick: re,
        disabled: X,
        ref: Q,
      }),
      ge,
      H,
      !!ve && at.createElement(OZ, { key: "compact", prefixCls: P })
    );
    return (
      U_(s) ||
        (F = at.createElement(dU, { component: "Button", disabled: !!N }, F)),
      k(F)
    );
  },
  ZM = z.forwardRef(DZ);
ZM.Group = oZ;
ZM.__ANT_BUTTON = !0;
const Oo = ZM;
var cc = "RC_FORM_INTERNAL_HOOKS",
  ln = function () {
    qi(
      !1,
      "Can not find FormContext. Please make sure you wrap Field under Form."
    );
  },
  Nf = z.createContext({
    getFieldValue: ln,
    getFieldsValue: ln,
    getFieldError: ln,
    getFieldWarning: ln,
    getFieldsError: ln,
    isFieldsTouched: ln,
    isFieldTouched: ln,
    isFieldValidating: ln,
    isFieldsValidating: ln,
    resetFields: ln,
    setFields: ln,
    setFieldValue: ln,
    setFieldsValue: ln,
    validateFields: ln,
    submit: ln,
    getInternalHooks: function () {
      return (
        ln(),
        {
          dispatch: ln,
          initEntityValue: ln,
          registerField: ln,
          useSubscribe: ln,
          setInitialValues: ln,
          destroyForm: ln,
          setCallbacks: ln,
          registerWatch: ln,
          getFields: ln,
          setValidateMessages: ln,
          setPreserve: ln,
          getInitialValue: ln,
        }
      );
    },
  }),
  I0 = z.createContext(null);
function xb(t) {
  return t == null ? [] : Array.isArray(t) ? t : [t];
}
function UZ(t) {
  return t && !!t._init;
}
function uc() {
  return (
    (uc = Object.assign
      ? Object.assign.bind()
      : function (t) {
          for (var e = 1; e < arguments.length; e++) {
            var n = arguments[e];
            for (var r in n)
              Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
          }
          return t;
        }),
    uc.apply(this, arguments)
  );
}
function zZ(t, e) {
  (t.prototype = Object.create(e.prototype)),
    (t.prototype.constructor = t),
    lp(t, e);
}
function _b(t) {
  return (
    (_b = Object.setPrototypeOf
      ? Object.getPrototypeOf.bind()
      : function (n) {
          return n.__proto__ || Object.getPrototypeOf(n);
        }),
    _b(t)
  );
}
function lp(t, e) {
  return (
    (lp = Object.setPrototypeOf
      ? Object.setPrototypeOf.bind()
      : function (r, i) {
          return (r.__proto__ = i), r;
        }),
    lp(t, e)
  );
}
function kZ() {
  if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function") return !0;
  try {
    return (
      Boolean.prototype.valueOf.call(
        Reflect.construct(Boolean, [], function () {})
      ),
      !0
    );
  } catch {
    return !1;
  }
}
function kv(t, e, n) {
  return (
    kZ()
      ? (kv = Reflect.construct.bind())
      : (kv = function (i, o, s) {
          var a = [null];
          a.push.apply(a, o);
          var l = Function.bind.apply(i, a),
            c = new l();
          return s && lp(c, s.prototype), c;
        }),
    kv.apply(null, arguments)
  );
}
function BZ(t) {
  return Function.toString.call(t).indexOf("[native code]") !== -1;
}
function Sb(t) {
  var e = typeof Map == "function" ? new Map() : void 0;
  return (
    (Sb = function (r) {
      if (r === null || !BZ(r)) return r;
      if (typeof r != "function")
        throw new TypeError(
          "Super expression must either be null or a function"
        );
      if (typeof e < "u") {
        if (e.has(r)) return e.get(r);
        e.set(r, i);
      }
      function i() {
        return kv(r, arguments, _b(this).constructor);
      }
      return (
        (i.prototype = Object.create(r.prototype, {
          constructor: {
            value: i,
            enumerable: !1,
            writable: !0,
            configurable: !0,
          },
        })),
        lp(i, r)
      );
    }),
    Sb(t)
  );
}
var HZ = /%[sdj%]/g,
  VZ = function () {};
function wb(t) {
  if (!t || !t.length) return null;
  var e = {};
  return (
    t.forEach(function (n) {
      var r = n.field;
      (e[r] = e[r] || []), e[r].push(n);
    }),
    e
  );
}
function Wi(t) {
  for (
    var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1;
    r < e;
    r++
  )
    n[r - 1] = arguments[r];
  var i = 0,
    o = n.length;
  if (typeof t == "function") return t.apply(null, n);
  if (typeof t == "string") {
    var s = t.replace(HZ, function (a) {
      if (a === "%%") return "%";
      if (i >= o) return a;
      switch (a) {
        case "%s":
          return String(n[i++]);
        case "%d":
          return Number(n[i++]);
        case "%j":
          try {
            return JSON.stringify(n[i++]);
          } catch {
            return "[Circular]";
          }
          break;
        default:
          return a;
      }
    });
    return s;
  }
  return t;
}
function GZ(t) {
  return (
    t === "string" ||
    t === "url" ||
    t === "hex" ||
    t === "email" ||
    t === "date" ||
    t === "pattern"
  );
}
function cr(t, e) {
  return !!(
    t == null ||
    (e === "array" && Array.isArray(t) && !t.length) ||
    (GZ(e) && typeof t == "string" && !t)
  );
}
function jZ(t, e, n) {
  var r = [],
    i = 0,
    o = t.length;
  function s(a) {
    r.push.apply(r, a || []), i++, i === o && n(r);
  }
  t.forEach(function (a) {
    e(a, s);
  });
}
function ZP(t, e, n) {
  var r = 0,
    i = t.length;
  function o(s) {
    if (s && s.length) {
      n(s);
      return;
    }
    var a = r;
    (r = r + 1), a < i ? e(t[a], o) : n([]);
  }
  o([]);
}
function WZ(t) {
  var e = [];
  return (
    Object.keys(t).forEach(function (n) {
      e.push.apply(e, t[n] || []);
    }),
    e
  );
}
var QP = (function (t) {
  zZ(e, t);
  function e(n, r) {
    var i;
    return (
      (i = t.call(this, "Async Validation Error") || this),
      (i.errors = n),
      (i.fields = r),
      i
    );
  }
  return e;
})(Sb(Error));
function $Z(t, e, n, r, i) {
  if (e.first) {
    var o = new Promise(function (p, m) {
      var v = function (g) {
          return r(g), g.length ? m(new QP(g, wb(g))) : p(i);
        },
        S = WZ(t);
      ZP(S, n, v);
    });
    return (
      o.catch(function (p) {
        return p;
      }),
      o
    );
  }
  var s = e.firstFields === !0 ? Object.keys(t) : e.firstFields || [],
    a = Object.keys(t),
    l = a.length,
    c = 0,
    u = [],
    h = new Promise(function (p, m) {
      var v = function (x) {
        if ((u.push.apply(u, x), c++, c === l))
          return r(u), u.length ? m(new QP(u, wb(u))) : p(i);
      };
      a.length || (r(u), p(i)),
        a.forEach(function (S) {
          var x = t[S];
          s.indexOf(S) !== -1 ? ZP(x, n, v) : jZ(x, n, v);
        });
    });
  return (
    h.catch(function (p) {
      return p;
    }),
    h
  );
}
function XZ(t) {
  return !!(t && t.message !== void 0);
}
function qZ(t, e) {
  for (var n = t, r = 0; r < e.length; r++) {
    if (n == null) return n;
    n = n[e[r]];
  }
  return n;
}
function JP(t, e) {
  return function (n) {
    var r;
    return (
      t.fullFields
        ? (r = qZ(e, t.fullFields))
        : (r = e[n.field || t.fullField]),
      XZ(n)
        ? ((n.field = n.field || t.fullField), (n.fieldValue = r), n)
        : {
            message: typeof n == "function" ? n() : n,
            fieldValue: r,
            field: n.field || t.fullField,
          }
    );
  };
}
function e3(t, e) {
  if (e) {
    for (var n in e)
      if (e.hasOwnProperty(n)) {
        var r = e[n];
        typeof r == "object" && typeof t[n] == "object"
          ? (t[n] = uc({}, t[n], r))
          : (t[n] = r);
      }
  }
  return t;
}
var SU = function (e, n, r, i, o, s) {
    e.required &&
      (!r.hasOwnProperty(e.field) || cr(n, s || e.type)) &&
      i.push(Wi(o.messages.required, e.fullField));
  },
  YZ = function (e, n, r, i, o) {
    (/^\s+$/.test(n) || n === "") &&
      i.push(Wi(o.messages.whitespace, e.fullField));
  },
  lv,
  KZ = function () {
    if (lv) return lv;
    var t = "[a-fA-F\\d:]",
      e = function (b) {
        return b && b.includeBoundaries
          ? "(?:(?<=\\s|^)(?=" + t + ")|(?<=" + t + ")(?=\\s|$))"
          : "";
      },
      n =
        "(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}",
      r = "[a-fA-F\\d]{1,4}",
      i = (
        `
(?:
(?:` +
        r +
        ":){7}(?:" +
        r +
        `|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8
(?:` +
        r +
        ":){6}(?:" +
        n +
        "|:" +
        r +
        `|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4
(?:` +
        r +
        ":){5}(?::" +
        n +
        "|(?::" +
        r +
        `){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4
(?:` +
        r +
        ":){4}(?:(?::" +
        r +
        "){0,1}:" +
        n +
        "|(?::" +
        r +
        `){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4
(?:` +
        r +
        ":){3}(?:(?::" +
        r +
        "){0,2}:" +
        n +
        "|(?::" +
        r +
        `){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4
(?:` +
        r +
        ":){2}(?:(?::" +
        r +
        "){0,3}:" +
        n +
        "|(?::" +
        r +
        `){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4
(?:` +
        r +
        ":){1}(?:(?::" +
        r +
        "){0,4}:" +
        n +
        "|(?::" +
        r +
        `){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4
(?::(?:(?::` +
        r +
        "){0,5}:" +
        n +
        "|(?::" +
        r +
        `){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4
)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1
`
      )
        .replace(/\s*\/\/.*$/gm, "")
        .replace(/\n/g, "")
        .trim(),
      o = new RegExp("(?:^" + n + "$)|(?:^" + i + "$)"),
      s = new RegExp("^" + n + "$"),
      a = new RegExp("^" + i + "$"),
      l = function (b) {
        return b && b.exact
          ? o
          : new RegExp(
              "(?:" + e(b) + n + e(b) + ")|(?:" + e(b) + i + e(b) + ")",
              "g"
            );
      };
    (l.v4 = function (_) {
      return _ && _.exact ? s : new RegExp("" + e(_) + n + e(_), "g");
    }),
      (l.v6 = function (_) {
        return _ && _.exact ? a : new RegExp("" + e(_) + i + e(_), "g");
      });
    var c = "(?:(?:[a-z]+:)?//)",
      u = "(?:\\S+(?::\\S*)?@)?",
      h = l.v4().source,
      p = l.v6().source,
      m = "(?:(?:[a-z\\u00a1-\\uffff0-9][-_]*)*[a-z\\u00a1-\\uffff0-9]+)",
      v = "(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*",
      S = "(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))",
      x = "(?::\\d{2,5})?",
      g = '(?:[/?#][^\\s"]*)?',
      y =
        "(?:" +
        c +
        "|www\\.)" +
        u +
        "(?:localhost|" +
        h +
        "|" +
        p +
        "|" +
        m +
        v +
        S +
        ")" +
        x +
        g;
    return (lv = new RegExp("(?:^" + y + "$)", "i")), lv;
  },
  t3 = {
    email:
      /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+\.)+[a-zA-Z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]{2,}))$/,
    hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i,
  },
  Xd = {
    integer: function (e) {
      return Xd.number(e) && parseInt(e, 10) === e;
    },
    float: function (e) {
      return Xd.number(e) && !Xd.integer(e);
    },
    array: function (e) {
      return Array.isArray(e);
    },
    regexp: function (e) {
      if (e instanceof RegExp) return !0;
      try {
        return !!new RegExp(e);
      } catch {
        return !1;
      }
    },
    date: function (e) {
      return (
        typeof e.getTime == "function" &&
        typeof e.getMonth == "function" &&
        typeof e.getYear == "function" &&
        !isNaN(e.getTime())
      );
    },
    number: function (e) {
      return isNaN(e) ? !1 : typeof e == "number";
    },
    object: function (e) {
      return typeof e == "object" && !Xd.array(e);
    },
    method: function (e) {
      return typeof e == "function";
    },
    email: function (e) {
      return typeof e == "string" && e.length <= 320 && !!e.match(t3.email);
    },
    url: function (e) {
      return typeof e == "string" && e.length <= 2048 && !!e.match(KZ());
    },
    hex: function (e) {
      return typeof e == "string" && !!e.match(t3.hex);
    },
  },
  ZZ = function (e, n, r, i, o) {
    if (e.required && n === void 0) {
      SU(e, n, r, i, o);
      return;
    }
    var s = [
        "integer",
        "float",
        "array",
        "regexp",
        "object",
        "method",
        "email",
        "number",
        "date",
        "url",
        "hex",
      ],
      a = e.type;
    s.indexOf(a) > -1
      ? Xd[a](n) || i.push(Wi(o.messages.types[a], e.fullField, e.type))
      : a &&
        typeof n !== e.type &&
        i.push(Wi(o.messages.types[a], e.fullField, e.type));
  },
  QZ = function (e, n, r, i, o) {
    var s = typeof e.len == "number",
      a = typeof e.min == "number",
      l = typeof e.max == "number",
      c = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
      u = n,
      h = null,
      p = typeof n == "number",
      m = typeof n == "string",
      v = Array.isArray(n);
    if ((p ? (h = "number") : m ? (h = "string") : v && (h = "array"), !h))
      return !1;
    v && (u = n.length),
      m && (u = n.replace(c, "_").length),
      s
        ? u !== e.len && i.push(Wi(o.messages[h].len, e.fullField, e.len))
        : a && !l && u < e.min
        ? i.push(Wi(o.messages[h].min, e.fullField, e.min))
        : l && !a && u > e.max
        ? i.push(Wi(o.messages[h].max, e.fullField, e.max))
        : a &&
          l &&
          (u < e.min || u > e.max) &&
          i.push(Wi(o.messages[h].range, e.fullField, e.min, e.max));
  },
  Fu = "enum",
  JZ = function (e, n, r, i, o) {
    (e[Fu] = Array.isArray(e[Fu]) ? e[Fu] : []),
      e[Fu].indexOf(n) === -1 &&
        i.push(Wi(o.messages[Fu], e.fullField, e[Fu].join(", ")));
  },
  eQ = function (e, n, r, i, o) {
    if (e.pattern) {
      if (e.pattern instanceof RegExp)
        (e.pattern.lastIndex = 0),
          e.pattern.test(n) ||
            i.push(Wi(o.messages.pattern.mismatch, e.fullField, n, e.pattern));
      else if (typeof e.pattern == "string") {
        var s = new RegExp(e.pattern);
        s.test(n) ||
          i.push(Wi(o.messages.pattern.mismatch, e.fullField, n, e.pattern));
      }
    }
  },
  Vt = {
    required: SU,
    whitespace: YZ,
    type: ZZ,
    range: QZ,
    enum: JZ,
    pattern: eQ,
  },
  tQ = function (e, n, r, i, o) {
    var s = [],
      a = e.required || (!e.required && i.hasOwnProperty(e.field));
    if (a) {
      if (cr(n, "string") && !e.required) return r();
      Vt.required(e, n, i, s, o, "string"),
        cr(n, "string") ||
          (Vt.type(e, n, i, s, o),
          Vt.range(e, n, i, s, o),
          Vt.pattern(e, n, i, s, o),
          e.whitespace === !0 && Vt.whitespace(e, n, i, s, o));
    }
    r(s);
  },
  nQ = function (e, n, r, i, o) {
    var s = [],
      a = e.required || (!e.required && i.hasOwnProperty(e.field));
    if (a) {
      if (cr(n) && !e.required) return r();
      Vt.required(e, n, i, s, o), n !== void 0 && Vt.type(e, n, i, s, o);
    }
    r(s);
  },
  rQ = function (e, n, r, i, o) {
    var s = [],
      a = e.required || (!e.required && i.hasOwnProperty(e.field));
    if (a) {
      if ((n === "" && (n = void 0), cr(n) && !e.required)) return r();
      Vt.required(e, n, i, s, o),
        n !== void 0 && (Vt.type(e, n, i, s, o), Vt.range(e, n, i, s, o));
    }
    r(s);
  },
  iQ = function (e, n, r, i, o) {
    var s = [],
      a = e.required || (!e.required && i.hasOwnProperty(e.field));
    if (a) {
      if (cr(n) && !e.required) return r();
      Vt.required(e, n, i, s, o), n !== void 0 && Vt.type(e, n, i, s, o);
    }
    r(s);
  },
  oQ = function (e, n, r, i, o) {
    var s = [],
      a = e.required || (!e.required && i.hasOwnProperty(e.field));
    if (a) {
      if (cr(n) && !e.required) return r();
      Vt.required(e, n, i, s, o), cr(n) || Vt.type(e, n, i, s, o);
    }
    r(s);
  },
  sQ = function (e, n, r, i, o) {
    var s = [],
      a = e.required || (!e.required && i.hasOwnProperty(e.field));
    if (a) {
      if (cr(n) && !e.required) return r();
      Vt.required(e, n, i, s, o),
        n !== void 0 && (Vt.type(e, n, i, s, o), Vt.range(e, n, i, s, o));
    }
    r(s);
  },
  aQ = function (e, n, r, i, o) {
    var s = [],
      a = e.required || (!e.required && i.hasOwnProperty(e.field));
    if (a) {
      if (cr(n) && !e.required) return r();
      Vt.required(e, n, i, s, o),
        n !== void 0 && (Vt.type(e, n, i, s, o), Vt.range(e, n, i, s, o));
    }
    r(s);
  },
  lQ = function (e, n, r, i, o) {
    var s = [],
      a = e.required || (!e.required && i.hasOwnProperty(e.field));
    if (a) {
      if (n == null && !e.required) return r();
      Vt.required(e, n, i, s, o, "array"),
        n != null && (Vt.type(e, n, i, s, o), Vt.range(e, n, i, s, o));
    }
    r(s);
  },
  cQ = function (e, n, r, i, o) {
    var s = [],
      a = e.required || (!e.required && i.hasOwnProperty(e.field));
    if (a) {
      if (cr(n) && !e.required) return r();
      Vt.required(e, n, i, s, o), n !== void 0 && Vt.type(e, n, i, s, o);
    }
    r(s);
  },
  uQ = "enum",
  fQ = function (e, n, r, i, o) {
    var s = [],
      a = e.required || (!e.required && i.hasOwnProperty(e.field));
    if (a) {
      if (cr(n) && !e.required) return r();
      Vt.required(e, n, i, s, o), n !== void 0 && Vt[uQ](e, n, i, s, o);
    }
    r(s);
  },
  dQ = function (e, n, r, i, o) {
    var s = [],
      a = e.required || (!e.required && i.hasOwnProperty(e.field));
    if (a) {
      if (cr(n, "string") && !e.required) return r();
      Vt.required(e, n, i, s, o), cr(n, "string") || Vt.pattern(e, n, i, s, o);
    }
    r(s);
  },
  hQ = function (e, n, r, i, o) {
    var s = [],
      a = e.required || (!e.required && i.hasOwnProperty(e.field));
    if (a) {
      if (cr(n, "date") && !e.required) return r();
      if ((Vt.required(e, n, i, s, o), !cr(n, "date"))) {
        var l;
        n instanceof Date ? (l = n) : (l = new Date(n)),
          Vt.type(e, l, i, s, o),
          l && Vt.range(e, l.getTime(), i, s, o);
      }
    }
    r(s);
  },
  pQ = function (e, n, r, i, o) {
    var s = [],
      a = Array.isArray(n) ? "array" : typeof n;
    Vt.required(e, n, i, s, o, a), r(s);
  },
  B_ = function (e, n, r, i, o) {
    var s = e.type,
      a = [],
      l = e.required || (!e.required && i.hasOwnProperty(e.field));
    if (l) {
      if (cr(n, s) && !e.required) return r();
      Vt.required(e, n, i, a, o, s), cr(n, s) || Vt.type(e, n, i, a, o);
    }
    r(a);
  },
  mQ = function (e, n, r, i, o) {
    var s = [],
      a = e.required || (!e.required && i.hasOwnProperty(e.field));
    if (a) {
      if (cr(n) && !e.required) return r();
      Vt.required(e, n, i, s, o);
    }
    r(s);
  },
  ph = {
    string: tQ,
    method: nQ,
    number: rQ,
    boolean: iQ,
    regexp: oQ,
    integer: sQ,
    float: aQ,
    array: lQ,
    object: cQ,
    enum: fQ,
    pattern: dQ,
    date: hQ,
    url: B_,
    hex: B_,
    email: B_,
    required: pQ,
    any: mQ,
  };
function bb() {
  return {
    default: "Validation error on field %s",
    required: "%s is required",
    enum: "%s must be one of %s",
    whitespace: "%s cannot be empty",
    date: {
      format: "%s date %s is invalid for format %s",
      parse: "%s date could not be parsed, %s is invalid ",
      invalid: "%s date %s is invalid",
    },
    types: {
      string: "%s is not a %s",
      method: "%s is not a %s (function)",
      array: "%s is not an %s",
      object: "%s is not an %s",
      number: "%s is not a %s",
      date: "%s is not a %s",
      boolean: "%s is not a %s",
      integer: "%s is not an %s",
      float: "%s is not a %s",
      regexp: "%s is not a valid %s",
      email: "%s is not a valid %s",
      url: "%s is not a valid %s",
      hex: "%s is not a valid %s",
    },
    string: {
      len: "%s must be exactly %s characters",
      min: "%s must be at least %s characters",
      max: "%s cannot be longer than %s characters",
      range: "%s must be between %s and %s characters",
    },
    number: {
      len: "%s must equal %s",
      min: "%s cannot be less than %s",
      max: "%s cannot be greater than %s",
      range: "%s must be between %s and %s",
    },
    array: {
      len: "%s must be exactly %s in length",
      min: "%s cannot be less than %s in length",
      max: "%s cannot be greater than %s in length",
      range: "%s must be between %s and %s in length",
    },
    pattern: { mismatch: "%s value %s does not match pattern %s" },
    clone: function () {
      var e = JSON.parse(JSON.stringify(this));
      return (e.clone = this.clone), e;
    },
  };
}
var Eb = bb(),
  Np = (function () {
    function t(n) {
      (this.rules = null), (this._messages = Eb), this.define(n);
    }
    var e = t.prototype;
    return (
      (e.define = function (r) {
        var i = this;
        if (!r) throw new Error("Cannot configure a schema with no rules");
        if (typeof r != "object" || Array.isArray(r))
          throw new Error("Rules must be an object");
        (this.rules = {}),
          Object.keys(r).forEach(function (o) {
            var s = r[o];
            i.rules[o] = Array.isArray(s) ? s : [s];
          });
      }),
      (e.messages = function (r) {
        return r && (this._messages = e3(bb(), r)), this._messages;
      }),
      (e.validate = function (r, i, o) {
        var s = this;
        i === void 0 && (i = {}), o === void 0 && (o = function () {});
        var a = r,
          l = i,
          c = o;
        if (
          (typeof l == "function" && ((c = l), (l = {})),
          !this.rules || Object.keys(this.rules).length === 0)
        )
          return c && c(null, a), Promise.resolve(a);
        function u(S) {
          var x = [],
            g = {};
          function y(b) {
            if (Array.isArray(b)) {
              var T;
              x = (T = x).concat.apply(T, b);
            } else x.push(b);
          }
          for (var _ = 0; _ < S.length; _++) y(S[_]);
          x.length ? ((g = wb(x)), c(x, g)) : c(null, a);
        }
        if (l.messages) {
          var h = this.messages();
          h === Eb && (h = bb()), e3(h, l.messages), (l.messages = h);
        } else l.messages = this.messages();
        var p = {},
          m = l.keys || Object.keys(this.rules);
        m.forEach(function (S) {
          var x = s.rules[S],
            g = a[S];
          x.forEach(function (y) {
            var _ = y;
            typeof _.transform == "function" &&
              (a === r && (a = uc({}, a)), (g = a[S] = _.transform(g))),
              typeof _ == "function" ? (_ = { validator: _ }) : (_ = uc({}, _)),
              (_.validator = s.getValidationMethod(_)),
              _.validator &&
                ((_.field = S),
                (_.fullField = _.fullField || S),
                (_.type = s.getType(_)),
                (p[S] = p[S] || []),
                p[S].push({ rule: _, value: g, source: a, field: S }));
          });
        });
        var v = {};
        return $Z(
          p,
          l,
          function (S, x) {
            var g = S.rule,
              y =
                (g.type === "object" || g.type === "array") &&
                (typeof g.fields == "object" ||
                  typeof g.defaultField == "object");
            (y = y && (g.required || (!g.required && S.value))),
              (g.field = S.field);
            function _(M, C) {
              return uc({}, C, {
                fullField: g.fullField + "." + M,
                fullFields: g.fullFields ? [].concat(g.fullFields, [M]) : [M],
              });
            }
            function b(M) {
              M === void 0 && (M = []);
              var C = Array.isArray(M) ? M : [M];
              !l.suppressWarning &&
                C.length &&
                t.warning("async-validator:", C),
                C.length && g.message !== void 0 && (C = [].concat(g.message));
              var L = C.map(JP(g, a));
              if (l.first && L.length) return (v[g.field] = 1), x(L);
              if (!y) x(L);
              else {
                if (g.required && !S.value)
                  return (
                    g.message !== void 0
                      ? (L = [].concat(g.message).map(JP(g, a)))
                      : l.error &&
                        (L = [l.error(g, Wi(l.messages.required, g.field))]),
                    x(L)
                  );
                var A = {};
                g.defaultField &&
                  Object.keys(S.value).map(function (B) {
                    A[B] = g.defaultField;
                  }),
                  (A = uc({}, A, S.rule.fields));
                var P = {};
                Object.keys(A).forEach(function (B) {
                  var $ = A[B],
                    D = Array.isArray($) ? $ : [$];
                  P[B] = D.map(_.bind(null, B));
                });
                var k = new t(P);
                k.messages(l.messages),
                  S.rule.options &&
                    ((S.rule.options.messages = l.messages),
                    (S.rule.options.error = l.error)),
                  k.validate(S.value, S.rule.options || l, function (B) {
                    var $ = [];
                    L && L.length && $.push.apply($, L),
                      B && B.length && $.push.apply($, B),
                      x($.length ? $ : null);
                  });
              }
            }
            var T;
            if (g.asyncValidator)
              T = g.asyncValidator(g, S.value, b, S.source, l);
            else if (g.validator) {
              try {
                T = g.validator(g, S.value, b, S.source, l);
              } catch (M) {
                console.error == null || console.error(M),
                  l.suppressValidatorError ||
                    setTimeout(function () {
                      throw M;
                    }, 0),
                  b(M.message);
              }
              T === !0
                ? b()
                : T === !1
                ? b(
                    typeof g.message == "function"
                      ? g.message(g.fullField || g.field)
                      : g.message || (g.fullField || g.field) + " fails"
                  )
                : T instanceof Array
                ? b(T)
                : T instanceof Error && b(T.message);
            }
            T &&
              T.then &&
              T.then(
                function () {
                  return b();
                },
                function (M) {
                  return b(M);
                }
              );
          },
          function (S) {
            u(S);
          },
          a
        );
      }),
      (e.getType = function (r) {
        if (
          (r.type === void 0 &&
            r.pattern instanceof RegExp &&
            (r.type = "pattern"),
          typeof r.validator != "function" &&
            r.type &&
            !ph.hasOwnProperty(r.type))
        )
          throw new Error(Wi("Unknown rule type %s", r.type));
        return r.type || "string";
      }),
      (e.getValidationMethod = function (r) {
        if (typeof r.validator == "function") return r.validator;
        var i = Object.keys(r),
          o = i.indexOf("message");
        return (
          o !== -1 && i.splice(o, 1),
          i.length === 1 && i[0] === "required"
            ? ph.required
            : ph[this.getType(r)] || void 0
        );
      }),
      t
    );
  })();
Np.register = function (e, n) {
  if (typeof n != "function")
    throw new Error(
      "Cannot register a validator by type, validator is not a function"
    );
  ph[e] = n;
};
Np.warning = VZ;
Np.messages = Eb;
Np.validators = ph;
var Di = "'${name}' is not a valid ${type}",
  wU = {
    default: "Validation error on field '${name}'",
    required: "'${name}' is required",
    enum: "'${name}' must be one of [${enum}]",
    whitespace: "'${name}' cannot be empty",
    date: {
      format: "'${name}' is invalid for format date",
      parse: "'${name}' could not be parsed as date",
      invalid: "'${name}' is invalid date",
    },
    types: {
      string: Di,
      method: Di,
      array: Di,
      object: Di,
      number: Di,
      date: Di,
      boolean: Di,
      integer: Di,
      float: Di,
      regexp: Di,
      email: Di,
      url: Di,
      hex: Di,
    },
    string: {
      len: "'${name}' must be exactly ${len} characters",
      min: "'${name}' must be at least ${min} characters",
      max: "'${name}' cannot be longer than ${max} characters",
      range: "'${name}' must be between ${min} and ${max} characters",
    },
    number: {
      len: "'${name}' must equal ${len}",
      min: "'${name}' cannot be less than ${min}",
      max: "'${name}' cannot be greater than ${max}",
      range: "'${name}' must be between ${min} and ${max}",
    },
    array: {
      len: "'${name}' must be exactly ${len} in length",
      min: "'${name}' cannot be less than ${min} in length",
      max: "'${name}' cannot be greater than ${max} in length",
      range: "'${name}' must be between ${min} and ${max} in length",
    },
    pattern: { mismatch: "'${name}' does not match pattern ${pattern}" },
  },
  n3 = Np;
function gQ(t, e) {
  return t.replace(/\$\{\w+\}/g, function (n) {
    var r = n.slice(2, -1);
    return e[r];
  });
}
var r3 = "CODE_LOGIC_ERROR";
function Mb(t, e, n, r, i) {
  return Cb.apply(this, arguments);
}
function Cb() {
  return (
    (Cb = Wc(
      oi().mark(function t(e, n, r, i, o) {
        var s, a, l, c, u, h, p, m, v;
        return oi().wrap(
          function (x) {
            for (;;)
              switch ((x.prev = x.next)) {
                case 0:
                  return (
                    (s = We({}, r)),
                    delete s.ruleIndex,
                    (n3.warning = function () {}),
                    s.validator &&
                      ((a = s.validator),
                      (s.validator = function () {
                        try {
                          return a.apply(void 0, arguments);
                        } catch (g) {
                          return console.error(g), Promise.reject(r3);
                        }
                      })),
                    (l = null),
                    s &&
                      s.type === "array" &&
                      s.defaultField &&
                      ((l = s.defaultField), delete s.defaultField),
                    (c = new n3(Me({}, e, [s]))),
                    (u = of(wU, i.validateMessages)),
                    c.messages(u),
                    (h = []),
                    (x.prev = 10),
                    (x.next = 13),
                    Promise.resolve(c.validate(Me({}, e, n), We({}, i)))
                  );
                case 13:
                  x.next = 18;
                  break;
                case 15:
                  (x.prev = 15),
                    (x.t0 = x.catch(10)),
                    x.t0.errors &&
                      (h = x.t0.errors.map(function (g, y) {
                        var _ = g.message,
                          b = _ === r3 ? u.default : _;
                        return z.isValidElement(b)
                          ? z.cloneElement(b, { key: "error_".concat(y) })
                          : b;
                      }));
                case 18:
                  if (!(!h.length && l)) {
                    x.next = 23;
                    break;
                  }
                  return (
                    (x.next = 21),
                    Promise.all(
                      n.map(function (g, y) {
                        return Mb("".concat(e, ".").concat(y), g, l, i, o);
                      })
                    )
                  );
                case 21:
                  return (
                    (p = x.sent),
                    x.abrupt(
                      "return",
                      p.reduce(function (g, y) {
                        return [].concat(Nt(g), Nt(y));
                      }, [])
                    )
                  );
                case 23:
                  return (
                    (m = We(
                      We({}, r),
                      {},
                      { name: e, enum: (r.enum || []).join(", ") },
                      o
                    )),
                    (v = h.map(function (g) {
                      return typeof g == "string" ? gQ(g, m) : g;
                    })),
                    x.abrupt("return", v)
                  );
                case 26:
                case "end":
                  return x.stop();
              }
          },
          t,
          null,
          [[10, 15]]
        );
      })
    )),
    Cb.apply(this, arguments)
  );
}
function vQ(t, e, n, r, i, o) {
  var s = t.join("."),
    a = n
      .map(function (u, h) {
        var p = u.validator,
          m = We(We({}, u), {}, { ruleIndex: h });
        return (
          p &&
            (m.validator = function (v, S, x) {
              var g = !1,
                y = function () {
                  for (
                    var T = arguments.length, M = new Array(T), C = 0;
                    C < T;
                    C++
                  )
                    M[C] = arguments[C];
                  Promise.resolve().then(function () {
                    qi(
                      !g,
                      "Your validator function has already return a promise. `callback` will be ignored."
                    ),
                      g || x.apply(void 0, M);
                  });
                },
                _ = p(v, S, y);
              (g =
                _ &&
                typeof _.then == "function" &&
                typeof _.catch == "function"),
                qi(
                  g,
                  "`callback` is deprecated. Please return a promise instead."
                ),
                g &&
                  _.then(function () {
                    x();
                  }).catch(function (b) {
                    x(b || " ");
                  });
            }),
          m
        );
      })
      .sort(function (u, h) {
        var p = u.warningOnly,
          m = u.ruleIndex,
          v = h.warningOnly,
          S = h.ruleIndex;
        return !!p == !!v ? m - S : p ? 1 : -1;
      }),
    l;
  if (i === !0)
    l = new Promise(
      (function () {
        var u = Wc(
          oi().mark(function h(p, m) {
            var v, S, x;
            return oi().wrap(function (y) {
              for (;;)
                switch ((y.prev = y.next)) {
                  case 0:
                    v = 0;
                  case 1:
                    if (!(v < a.length)) {
                      y.next = 12;
                      break;
                    }
                    return (S = a[v]), (y.next = 5), Mb(s, e, S, r, o);
                  case 5:
                    if (((x = y.sent), !x.length)) {
                      y.next = 9;
                      break;
                    }
                    return m([{ errors: x, rule: S }]), y.abrupt("return");
                  case 9:
                    (v += 1), (y.next = 1);
                    break;
                  case 12:
                    p([]);
                  case 13:
                  case "end":
                    return y.stop();
                }
            }, h);
          })
        );
        return function (h, p) {
          return u.apply(this, arguments);
        };
      })()
    );
  else {
    var c = a.map(function (u) {
      return Mb(s, e, u, r, o).then(function (h) {
        return { errors: h, rule: u };
      });
    });
    l = (i ? xQ(c) : yQ(c)).then(function (u) {
      return Promise.reject(u);
    });
  }
  return (
    l.catch(function (u) {
      return u;
    }),
    l
  );
}
function yQ(t) {
  return Tb.apply(this, arguments);
}
function Tb() {
  return (
    (Tb = Wc(
      oi().mark(function t(e) {
        return oi().wrap(function (r) {
          for (;;)
            switch ((r.prev = r.next)) {
              case 0:
                return r.abrupt(
                  "return",
                  Promise.all(e).then(function (i) {
                    var o,
                      s = (o = []).concat.apply(o, Nt(i));
                    return s;
                  })
                );
              case 1:
              case "end":
                return r.stop();
            }
        }, t);
      })
    )),
    Tb.apply(this, arguments)
  );
}
function xQ(t) {
  return Ab.apply(this, arguments);
}
function Ab() {
  return (
    (Ab = Wc(
      oi().mark(function t(e) {
        var n;
        return oi().wrap(function (i) {
          for (;;)
            switch ((i.prev = i.next)) {
              case 0:
                return (
                  (n = 0),
                  i.abrupt(
                    "return",
                    new Promise(function (o) {
                      e.forEach(function (s) {
                        s.then(function (a) {
                          a.errors.length && o([a]),
                            (n += 1),
                            n === e.length && o([]);
                        });
                      });
                    })
                  )
                );
              case 2:
              case "end":
                return i.stop();
            }
        }, t);
      })
    )),
    Ab.apply(this, arguments)
  );
}
function jn(t) {
  return xb(t);
}
function i3(t, e) {
  var n = {};
  return (
    e.forEach(function (r) {
      var i = ms(t, r);
      n = Uo(n, r, i);
    }),
    n
  );
}
function gf(t, e) {
  var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
  return (
    t &&
    t.some(function (r) {
      return bU(e, r, n);
    })
  );
}
function bU(t, e) {
  var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
  return !t || !e || (!n && t.length !== e.length)
    ? !1
    : e.every(function (r, i) {
        return t[i] === r;
      });
}
function _Q(t, e) {
  if (t === e) return !0;
  if (
    (!t && e) ||
    (t && !e) ||
    !t ||
    !e ||
    Qt(t) !== "object" ||
    Qt(e) !== "object"
  )
    return !1;
  var n = Object.keys(t),
    r = Object.keys(e),
    i = new Set([].concat(n, r));
  return Nt(i).every(function (o) {
    var s = t[o],
      a = e[o];
    return typeof s == "function" && typeof a == "function" ? !0 : s === a;
  });
}
function SQ(t) {
  var e = arguments.length <= 1 ? void 0 : arguments[1];
  return e && e.target && Qt(e.target) === "object" && t in e.target
    ? e.target[t]
    : e;
}
function o3(t, e, n) {
  var r = t.length;
  if (e < 0 || e >= r || n < 0 || n >= r) return t;
  var i = t[e],
    o = e - n;
  return o > 0
    ? [].concat(
        Nt(t.slice(0, n)),
        [i],
        Nt(t.slice(n, e)),
        Nt(t.slice(e + 1, r))
      )
    : o < 0
    ? [].concat(
        Nt(t.slice(0, e)),
        Nt(t.slice(e + 1, n + 1)),
        [i],
        Nt(t.slice(n + 1, r))
      )
    : t;
}
var wQ = ["name"],
  uo = [];
function s3(t, e, n, r, i, o) {
  return typeof t == "function"
    ? t(e, n, "source" in o ? { source: o.source } : {})
    : r !== i;
}
var QM = (function (t) {
  jf(n, t);
  var e = jy(n);
  function n(r) {
    var i;
    if (
      (bo(this, n),
      (i = e.call(this, r)),
      Me(Wt(i), "state", { resetCount: 0 }),
      Me(Wt(i), "cancelRegisterFunc", null),
      Me(Wt(i), "mounted", !1),
      Me(Wt(i), "touched", !1),
      Me(Wt(i), "dirty", !1),
      Me(Wt(i), "validatePromise", void 0),
      Me(Wt(i), "prevValidating", void 0),
      Me(Wt(i), "errors", uo),
      Me(Wt(i), "warnings", uo),
      Me(Wt(i), "cancelRegister", function () {
        var l = i.props,
          c = l.preserve,
          u = l.isListField,
          h = l.name;
        i.cancelRegisterFunc && i.cancelRegisterFunc(u, c, jn(h)),
          (i.cancelRegisterFunc = null);
      }),
      Me(Wt(i), "getNamePath", function () {
        var l = i.props,
          c = l.name,
          u = l.fieldContext,
          h = u.prefixName,
          p = h === void 0 ? [] : h;
        return c !== void 0 ? [].concat(Nt(p), Nt(c)) : [];
      }),
      Me(Wt(i), "getRules", function () {
        var l = i.props,
          c = l.rules,
          u = c === void 0 ? [] : c,
          h = l.fieldContext;
        return u.map(function (p) {
          return typeof p == "function" ? p(h) : p;
        });
      }),
      Me(Wt(i), "refresh", function () {
        i.mounted &&
          i.setState(function (l) {
            var c = l.resetCount;
            return { resetCount: c + 1 };
          });
      }),
      Me(Wt(i), "metaCache", null),
      Me(Wt(i), "triggerMetaEvent", function (l) {
        var c = i.props.onMetaChange;
        if (c) {
          var u = We(We({}, i.getMeta()), {}, { destroy: l });
          fD(i.metaCache, u) || c(u), (i.metaCache = u);
        } else i.metaCache = null;
      }),
      Me(Wt(i), "onStoreChange", function (l, c, u) {
        var h = i.props,
          p = h.shouldUpdate,
          m = h.dependencies,
          v = m === void 0 ? [] : m,
          S = h.onReset,
          x = u.store,
          g = i.getNamePath(),
          y = i.getValue(l),
          _ = i.getValue(x),
          b = c && gf(c, g);
        switch (
          (u.type === "valueUpdate" &&
            u.source === "external" &&
            y !== _ &&
            ((i.touched = !0),
            (i.dirty = !0),
            (i.validatePromise = null),
            (i.errors = uo),
            (i.warnings = uo),
            i.triggerMetaEvent()),
          u.type)
        ) {
          case "reset":
            if (!c || b) {
              (i.touched = !1),
                (i.dirty = !1),
                (i.validatePromise = void 0),
                (i.errors = uo),
                (i.warnings = uo),
                i.triggerMetaEvent(),
                S == null || S(),
                i.refresh();
              return;
            }
            break;
          case "remove": {
            if (p) {
              i.reRender();
              return;
            }
            break;
          }
          case "setField": {
            var T = u.data;
            if (b) {
              "touched" in T && (i.touched = T.touched),
                "validating" in T &&
                  !("originRCField" in T) &&
                  (i.validatePromise = T.validating
                    ? Promise.resolve([])
                    : null),
                "errors" in T && (i.errors = T.errors || uo),
                "warnings" in T && (i.warnings = T.warnings || uo),
                (i.dirty = !0),
                i.triggerMetaEvent(),
                i.reRender();
              return;
            } else if ("value" in T && gf(c, g, !0)) {
              i.reRender();
              return;
            }
            if (p && !g.length && s3(p, l, x, y, _, u)) {
              i.reRender();
              return;
            }
            break;
          }
          case "dependenciesUpdate": {
            var M = v.map(jn);
            if (
              M.some(function (C) {
                return gf(u.relatedFields, C);
              })
            ) {
              i.reRender();
              return;
            }
            break;
          }
          default:
            if (b || ((!v.length || g.length || p) && s3(p, l, x, y, _, u))) {
              i.reRender();
              return;
            }
            break;
        }
        p === !0 && i.reRender();
      }),
      Me(Wt(i), "validateRules", function (l) {
        var c = i.getNamePath(),
          u = i.getValue(),
          h = l || {},
          p = h.triggerName,
          m = h.validateOnly,
          v = m === void 0 ? !1 : m,
          S = Promise.resolve().then(
            Wc(
              oi().mark(function x() {
                var g, y, _, b, T, M, C;
                return oi().wrap(function (A) {
                  for (;;)
                    switch ((A.prev = A.next)) {
                      case 0:
                        if (i.mounted) {
                          A.next = 2;
                          break;
                        }
                        return A.abrupt("return", []);
                      case 2:
                        if (
                          ((g = i.props),
                          (y = g.validateFirst),
                          (_ = y === void 0 ? !1 : y),
                          (b = g.messageVariables),
                          (T = g.validateDebounce),
                          (M = i.getRules()),
                          p &&
                            (M = M.filter(function (P) {
                              return P;
                            }).filter(function (P) {
                              var k = P.validateTrigger;
                              if (!k) return !0;
                              var B = xb(k);
                              return B.includes(p);
                            })),
                          !(T && p))
                        ) {
                          A.next = 10;
                          break;
                        }
                        return (
                          (A.next = 8),
                          new Promise(function (P) {
                            setTimeout(P, T);
                          })
                        );
                      case 8:
                        if (i.validatePromise === S) {
                          A.next = 10;
                          break;
                        }
                        return A.abrupt("return", []);
                      case 10:
                        return (
                          (C = vQ(c, u, M, l, _, b)),
                          C.catch(function (P) {
                            return P;
                          }).then(function () {
                            var P =
                              arguments.length > 0 && arguments[0] !== void 0
                                ? arguments[0]
                                : uo;
                            if (i.validatePromise === S) {
                              var k;
                              i.validatePromise = null;
                              var B = [],
                                $ = [];
                              (k = P.forEach) === null ||
                                k === void 0 ||
                                k.call(P, function (D) {
                                  var X = D.rule.warningOnly,
                                    j = D.errors,
                                    Y = j === void 0 ? uo : j;
                                  X
                                    ? $.push.apply($, Nt(Y))
                                    : B.push.apply(B, Nt(Y));
                                }),
                                (i.errors = B),
                                (i.warnings = $),
                                i.triggerMetaEvent(),
                                i.reRender();
                            }
                          }),
                          A.abrupt("return", C)
                        );
                      case 13:
                      case "end":
                        return A.stop();
                    }
                }, x);
              })
            )
          );
        return (
          v ||
            ((i.validatePromise = S),
            (i.dirty = !0),
            (i.errors = uo),
            (i.warnings = uo),
            i.triggerMetaEvent(),
            i.reRender()),
          S
        );
      }),
      Me(Wt(i), "isFieldValidating", function () {
        return !!i.validatePromise;
      }),
      Me(Wt(i), "isFieldTouched", function () {
        return i.touched;
      }),
      Me(Wt(i), "isFieldDirty", function () {
        if (i.dirty || i.props.initialValue !== void 0) return !0;
        var l = i.props.fieldContext,
          c = l.getInternalHooks(cc),
          u = c.getInitialValue;
        return u(i.getNamePath()) !== void 0;
      }),
      Me(Wt(i), "getErrors", function () {
        return i.errors;
      }),
      Me(Wt(i), "getWarnings", function () {
        return i.warnings;
      }),
      Me(Wt(i), "isListField", function () {
        return i.props.isListField;
      }),
      Me(Wt(i), "isList", function () {
        return i.props.isList;
      }),
      Me(Wt(i), "isPreserve", function () {
        return i.props.preserve;
      }),
      Me(Wt(i), "getMeta", function () {
        i.prevValidating = i.isFieldValidating();
        var l = {
          touched: i.isFieldTouched(),
          validating: i.prevValidating,
          errors: i.errors,
          warnings: i.warnings,
          name: i.getNamePath(),
          validated: i.validatePromise === null,
        };
        return l;
      }),
      Me(Wt(i), "getOnlyChild", function (l) {
        if (typeof l == "function") {
          var c = i.getMeta();
          return We(
            We(
              {},
              i.getOnlyChild(l(i.getControlled(), c, i.props.fieldContext))
            ),
            {},
            { isFunction: !0 }
          );
        }
        var u = b0(l);
        return u.length !== 1 || !z.isValidElement(u[0])
          ? { child: u, isFunction: !1 }
          : { child: u[0], isFunction: !1 };
      }),
      Me(Wt(i), "getValue", function (l) {
        var c = i.props.fieldContext.getFieldsValue,
          u = i.getNamePath();
        return ms(l || c(!0), u);
      }),
      Me(Wt(i), "getControlled", function () {
        var l =
            arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
          c = i.props,
          u = c.trigger,
          h = c.validateTrigger,
          p = c.getValueFromEvent,
          m = c.normalize,
          v = c.valuePropName,
          S = c.getValueProps,
          x = c.fieldContext,
          g = h !== void 0 ? h : x.validateTrigger,
          y = i.getNamePath(),
          _ = x.getInternalHooks,
          b = x.getFieldsValue,
          T = _(cc),
          M = T.dispatch,
          C = i.getValue(),
          L =
            S ||
            function (B) {
              return Me({}, v, B);
            },
          A = l[u],
          P = We(We({}, l), L(C));
        P[u] = function () {
          (i.touched = !0), (i.dirty = !0), i.triggerMetaEvent();
          for (var B, $ = arguments.length, D = new Array($), X = 0; X < $; X++)
            D[X] = arguments[X];
          p ? (B = p.apply(void 0, D)) : (B = SQ.apply(void 0, [v].concat(D))),
            m && (B = m(B, C, b(!0))),
            M({ type: "updateValue", namePath: y, value: B }),
            A && A.apply(void 0, D);
        };
        var k = xb(g || []);
        return (
          k.forEach(function (B) {
            var $ = P[B];
            P[B] = function () {
              $ && $.apply(void 0, arguments);
              var D = i.props.rules;
              D &&
                D.length &&
                M({ type: "validateField", namePath: y, triggerName: B });
            };
          }),
          P
        );
      }),
      r.fieldContext)
    ) {
      var o = r.fieldContext.getInternalHooks,
        s = o(cc),
        a = s.initEntityValue;
      a(Wt(i));
    }
    return i;
  }
  return (
    Eo(n, [
      {
        key: "componentDidMount",
        value: function () {
          var i = this.props,
            o = i.shouldUpdate,
            s = i.fieldContext;
          if (((this.mounted = !0), s)) {
            var a = s.getInternalHooks,
              l = a(cc),
              c = l.registerField;
            this.cancelRegisterFunc = c(this);
          }
          o === !0 && this.reRender();
        },
      },
      {
        key: "componentWillUnmount",
        value: function () {
          this.cancelRegister(), this.triggerMetaEvent(!0), (this.mounted = !1);
        },
      },
      {
        key: "reRender",
        value: function () {
          this.mounted && this.forceUpdate();
        },
      },
      {
        key: "render",
        value: function () {
          var i = this.state.resetCount,
            o = this.props.children,
            s = this.getOnlyChild(o),
            a = s.child,
            l = s.isFunction,
            c;
          return (
            l
              ? (c = a)
              : z.isValidElement(a)
              ? (c = z.cloneElement(a, this.getControlled(a.props)))
              : (qi(!a, "`children` of Field is not validate ReactElement."),
                (c = a)),
            z.createElement(z.Fragment, { key: i }, c)
          );
        },
      },
    ]),
    n
  );
})(z.Component);
Me(QM, "contextType", Nf);
Me(QM, "defaultProps", { trigger: "onChange", valuePropName: "value" });
function EU(t) {
  var e = t.name,
    n = Qi(t, wQ),
    r = z.useContext(Nf),
    i = z.useContext(I0),
    o = e !== void 0 ? jn(e) : void 0,
    s = "keep";
  return (
    n.isListField || (s = "_".concat((o || []).join("_"))),
    z.createElement(
      QM,
      mn({ key: s, name: o, isListField: !!i }, n, { fieldContext: r })
    )
  );
}
function bQ(t) {
  var e = t.name,
    n = t.initialValue,
    r = t.children,
    i = t.rules,
    o = t.validateTrigger,
    s = t.isListField,
    a = z.useContext(Nf),
    l = z.useContext(I0),
    c = z.useRef({ keys: [], id: 0 }),
    u = c.current,
    h = z.useMemo(
      function () {
        var S = jn(a.prefixName) || [];
        return [].concat(Nt(S), Nt(jn(e)));
      },
      [a.prefixName, e]
    ),
    p = z.useMemo(
      function () {
        return We(We({}, a), {}, { prefixName: h });
      },
      [a, h]
    ),
    m = z.useMemo(
      function () {
        return {
          getKey: function (x) {
            var g = h.length,
              y = x[g];
            return [u.keys[y], x.slice(g + 1)];
          },
        };
      },
      [h]
    );
  if (typeof r != "function")
    return qi(!1, "Form.List only accepts function as children."), null;
  var v = function (x, g, y) {
    var _ = y.source;
    return _ === "internal" ? !1 : x !== g;
  };
  return z.createElement(
    I0.Provider,
    { value: m },
    z.createElement(
      Nf.Provider,
      { value: p },
      z.createElement(
        EU,
        {
          name: [],
          shouldUpdate: v,
          rules: i,
          validateTrigger: o,
          initialValue: n,
          isList: !0,
          isListField: s ?? !!l,
        },
        function (S, x) {
          var g = S.value,
            y = g === void 0 ? [] : g,
            _ = S.onChange,
            b = a.getFieldValue,
            T = function () {
              var A = b(h || []);
              return A || [];
            },
            M = {
              add: function (A, P) {
                var k = T();
                P >= 0 && P <= k.length
                  ? ((u.keys = [].concat(
                      Nt(u.keys.slice(0, P)),
                      [u.id],
                      Nt(u.keys.slice(P))
                    )),
                    _([].concat(Nt(k.slice(0, P)), [A], Nt(k.slice(P)))))
                  : ((u.keys = [].concat(Nt(u.keys), [u.id])),
                    _([].concat(Nt(k), [A]))),
                  (u.id += 1);
              },
              remove: function (A) {
                var P = T(),
                  k = new Set(Array.isArray(A) ? A : [A]);
                k.size <= 0 ||
                  ((u.keys = u.keys.filter(function (B, $) {
                    return !k.has($);
                  })),
                  _(
                    P.filter(function (B, $) {
                      return !k.has($);
                    })
                  ));
              },
              move: function (A, P) {
                if (A !== P) {
                  var k = T();
                  A < 0 ||
                    A >= k.length ||
                    P < 0 ||
                    P >= k.length ||
                    ((u.keys = o3(u.keys, A, P)), _(o3(k, A, P)));
                }
              },
            },
            C = y || [];
          return (
            Array.isArray(C) || (C = []),
            r(
              C.map(function (L, A) {
                var P = u.keys[A];
                return (
                  P === void 0 &&
                    ((u.keys[A] = u.id), (P = u.keys[A]), (u.id += 1)),
                  { name: A, key: P, isListField: !0 }
                );
              }),
              M,
              x
            )
          );
        }
      )
    )
  );
}
function EQ(t) {
  var e = !1,
    n = t.length,
    r = [];
  return t.length
    ? new Promise(function (i, o) {
        t.forEach(function (s, a) {
          s.catch(function (l) {
            return (e = !0), l;
          }).then(function (l) {
            (n -= 1), (r[a] = l), !(n > 0) && (e && o(r), i(r));
          });
        });
      })
    : Promise.resolve([]);
}
var MU = "__@field_split__";
function H_(t) {
  return t
    .map(function (e) {
      return "".concat(Qt(e), ":").concat(e);
    })
    .join(MU);
}
var Nu = (function () {
    function t() {
      bo(this, t), Me(this, "kvs", new Map());
    }
    return (
      Eo(t, [
        {
          key: "set",
          value: function (n, r) {
            this.kvs.set(H_(n), r);
          },
        },
        {
          key: "get",
          value: function (n) {
            return this.kvs.get(H_(n));
          },
        },
        {
          key: "update",
          value: function (n, r) {
            var i = this.get(n),
              o = r(i);
            o ? this.set(n, o) : this.delete(n);
          },
        },
        {
          key: "delete",
          value: function (n) {
            this.kvs.delete(H_(n));
          },
        },
        {
          key: "map",
          value: function (n) {
            return Nt(this.kvs.entries()).map(function (r) {
              var i = yt(r, 2),
                o = i[0],
                s = i[1],
                a = o.split(MU);
              return n({
                key: a.map(function (l) {
                  var c = l.match(/^([^:]*):(.*)$/),
                    u = yt(c, 3),
                    h = u[1],
                    p = u[2];
                  return h === "number" ? Number(p) : p;
                }),
                value: s,
              });
            });
          },
        },
        {
          key: "toJSON",
          value: function () {
            var n = {};
            return (
              this.map(function (r) {
                var i = r.key,
                  o = r.value;
                return (n[i.join(".")] = o), null;
              }),
              n
            );
          },
        },
      ]),
      t
    );
  })(),
  MQ = ["name"],
  CQ = Eo(function t(e) {
    var n = this;
    bo(this, t),
      Me(this, "formHooked", !1),
      Me(this, "forceRootUpdate", void 0),
      Me(this, "subscribable", !0),
      Me(this, "store", {}),
      Me(this, "fieldEntities", []),
      Me(this, "initialValues", {}),
      Me(this, "callbacks", {}),
      Me(this, "validateMessages", null),
      Me(this, "preserve", null),
      Me(this, "lastValidatePromise", null),
      Me(this, "getForm", function () {
        return {
          getFieldValue: n.getFieldValue,
          getFieldsValue: n.getFieldsValue,
          getFieldError: n.getFieldError,
          getFieldWarning: n.getFieldWarning,
          getFieldsError: n.getFieldsError,
          isFieldsTouched: n.isFieldsTouched,
          isFieldTouched: n.isFieldTouched,
          isFieldValidating: n.isFieldValidating,
          isFieldsValidating: n.isFieldsValidating,
          resetFields: n.resetFields,
          setFields: n.setFields,
          setFieldValue: n.setFieldValue,
          setFieldsValue: n.setFieldsValue,
          validateFields: n.validateFields,
          submit: n.submit,
          _init: !0,
          getInternalHooks: n.getInternalHooks,
        };
      }),
      Me(this, "getInternalHooks", function (r) {
        return r === cc
          ? ((n.formHooked = !0),
            {
              dispatch: n.dispatch,
              initEntityValue: n.initEntityValue,
              registerField: n.registerField,
              useSubscribe: n.useSubscribe,
              setInitialValues: n.setInitialValues,
              destroyForm: n.destroyForm,
              setCallbacks: n.setCallbacks,
              setValidateMessages: n.setValidateMessages,
              getFields: n.getFields,
              setPreserve: n.setPreserve,
              getInitialValue: n.getInitialValue,
              registerWatch: n.registerWatch,
            })
          : (qi(
              !1,
              "`getInternalHooks` is internal usage. Should not call directly."
            ),
            null);
      }),
      Me(this, "useSubscribe", function (r) {
        n.subscribable = r;
      }),
      Me(this, "prevWithoutPreserves", null),
      Me(this, "setInitialValues", function (r, i) {
        if (((n.initialValues = r || {}), i)) {
          var o,
            s = of(r, n.store);
          (o = n.prevWithoutPreserves) === null ||
            o === void 0 ||
            o.map(function (a) {
              var l = a.key;
              s = Uo(s, l, ms(r, l));
            }),
            (n.prevWithoutPreserves = null),
            n.updateStore(s);
        }
      }),
      Me(this, "destroyForm", function () {
        var r = new Nu();
        n.getFieldEntities(!0).forEach(function (i) {
          n.isMergedPreserve(i.isPreserve()) || r.set(i.getNamePath(), !0);
        }),
          (n.prevWithoutPreserves = r);
      }),
      Me(this, "getInitialValue", function (r) {
        var i = ms(n.initialValues, r);
        return r.length ? of(i) : i;
      }),
      Me(this, "setCallbacks", function (r) {
        n.callbacks = r;
      }),
      Me(this, "setValidateMessages", function (r) {
        n.validateMessages = r;
      }),
      Me(this, "setPreserve", function (r) {
        n.preserve = r;
      }),
      Me(this, "watchList", []),
      Me(this, "registerWatch", function (r) {
        return (
          n.watchList.push(r),
          function () {
            n.watchList = n.watchList.filter(function (i) {
              return i !== r;
            });
          }
        );
      }),
      Me(this, "notifyWatch", function () {
        var r =
          arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
        if (n.watchList.length) {
          var i = n.getFieldsValue(),
            o = n.getFieldsValue(!0);
          n.watchList.forEach(function (s) {
            s(i, o, r);
          });
        }
      }),
      Me(this, "timeoutId", null),
      Me(this, "warningUnhooked", function () {}),
      Me(this, "updateStore", function (r) {
        n.store = r;
      }),
      Me(this, "getFieldEntities", function () {
        var r =
          arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
        return r
          ? n.fieldEntities.filter(function (i) {
              return i.getNamePath().length;
            })
          : n.fieldEntities;
      }),
      Me(this, "getFieldsMap", function () {
        var r =
            arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1,
          i = new Nu();
        return (
          n.getFieldEntities(r).forEach(function (o) {
            var s = o.getNamePath();
            i.set(s, o);
          }),
          i
        );
      }),
      Me(this, "getFieldEntitiesForNamePathList", function (r) {
        if (!r) return n.getFieldEntities(!0);
        var i = n.getFieldsMap(!0);
        return r.map(function (o) {
          var s = jn(o);
          return i.get(s) || { INVALIDATE_NAME_PATH: jn(o) };
        });
      }),
      Me(this, "getFieldsValue", function (r, i) {
        n.warningUnhooked();
        var o, s, a;
        if (
          (r === !0 || Array.isArray(r)
            ? ((o = r), (s = i))
            : r && Qt(r) === "object" && ((a = r.strict), (s = r.filter)),
          o === !0 && !s)
        )
          return n.store;
        var l = n.getFieldEntitiesForNamePathList(Array.isArray(o) ? o : null),
          c = [];
        return (
          l.forEach(function (u) {
            var h,
              p,
              m =
                "INVALIDATE_NAME_PATH" in u
                  ? u.INVALIDATE_NAME_PATH
                  : u.getNamePath();
            if (a) {
              var v, S;
              if ((v = (S = u).isList) !== null && v !== void 0 && v.call(S))
                return;
            } else if (!o && (h = (p = u).isListField) !== null && h !== void 0 && h.call(p)) return;
            if (!s) c.push(m);
            else {
              var x = "getMeta" in u ? u.getMeta() : null;
              s(x) && c.push(m);
            }
          }),
          i3(n.store, c.map(jn))
        );
      }),
      Me(this, "getFieldValue", function (r) {
        n.warningUnhooked();
        var i = jn(r);
        return ms(n.store, i);
      }),
      Me(this, "getFieldsError", function (r) {
        n.warningUnhooked();
        var i = n.getFieldEntitiesForNamePathList(r);
        return i.map(function (o, s) {
          return o && !("INVALIDATE_NAME_PATH" in o)
            ? {
                name: o.getNamePath(),
                errors: o.getErrors(),
                warnings: o.getWarnings(),
              }
            : { name: jn(r[s]), errors: [], warnings: [] };
        });
      }),
      Me(this, "getFieldError", function (r) {
        n.warningUnhooked();
        var i = jn(r),
          o = n.getFieldsError([i])[0];
        return o.errors;
      }),
      Me(this, "getFieldWarning", function (r) {
        n.warningUnhooked();
        var i = jn(r),
          o = n.getFieldsError([i])[0];
        return o.warnings;
      }),
      Me(this, "isFieldsTouched", function () {
        n.warningUnhooked();
        for (var r = arguments.length, i = new Array(r), o = 0; o < r; o++)
          i[o] = arguments[o];
        var s = i[0],
          a = i[1],
          l,
          c = !1;
        i.length === 0
          ? (l = null)
          : i.length === 1
          ? Array.isArray(s)
            ? ((l = s.map(jn)), (c = !1))
            : ((l = null), (c = s))
          : ((l = s.map(jn)), (c = a));
        var u = n.getFieldEntities(!0),
          h = function (x) {
            return x.isFieldTouched();
          };
        if (!l) return c ? u.every(h) : u.some(h);
        var p = new Nu();
        l.forEach(function (S) {
          p.set(S, []);
        }),
          u.forEach(function (S) {
            var x = S.getNamePath();
            l.forEach(function (g) {
              g.every(function (y, _) {
                return x[_] === y;
              }) &&
                p.update(g, function (y) {
                  return [].concat(Nt(y), [S]);
                });
            });
          });
        var m = function (x) {
            return x.some(h);
          },
          v = p.map(function (S) {
            var x = S.value;
            return x;
          });
        return c ? v.every(m) : v.some(m);
      }),
      Me(this, "isFieldTouched", function (r) {
        return n.warningUnhooked(), n.isFieldsTouched([r]);
      }),
      Me(this, "isFieldsValidating", function (r) {
        n.warningUnhooked();
        var i = n.getFieldEntities();
        if (!r)
          return i.some(function (s) {
            return s.isFieldValidating();
          });
        var o = r.map(jn);
        return i.some(function (s) {
          var a = s.getNamePath();
          return gf(o, a) && s.isFieldValidating();
        });
      }),
      Me(this, "isFieldValidating", function (r) {
        return n.warningUnhooked(), n.isFieldsValidating([r]);
      }),
      Me(this, "resetWithFieldInitialValue", function () {
        var r =
            arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
          i = new Nu(),
          o = n.getFieldEntities(!0);
        o.forEach(function (l) {
          var c = l.props.initialValue,
            u = l.getNamePath();
          if (c !== void 0) {
            var h = i.get(u) || new Set();
            h.add({ entity: l, value: c }), i.set(u, h);
          }
        });
        var s = function (c) {
            c.forEach(function (u) {
              var h = u.props.initialValue;
              if (h !== void 0) {
                var p = u.getNamePath(),
                  m = n.getInitialValue(p);
                if (m !== void 0)
                  qi(
                    !1,
                    "Form already set 'initialValues' with path '".concat(
                      p.join("."),
                      "'. Field can not overwrite it."
                    )
                  );
                else {
                  var v = i.get(p);
                  if (v && v.size > 1)
                    qi(
                      !1,
                      "Multiple Field with path '".concat(
                        p.join("."),
                        "' set 'initialValue'. Can not decide which one to pick."
                      )
                    );
                  else if (v) {
                    var S = n.getFieldValue(p),
                      x = u.isListField();
                    !x &&
                      (!r.skipExist || S === void 0) &&
                      n.updateStore(Uo(n.store, p, Nt(v)[0].value));
                  }
                }
              }
            });
          },
          a;
        r.entities
          ? (a = r.entities)
          : r.namePathList
          ? ((a = []),
            r.namePathList.forEach(function (l) {
              var c = i.get(l);
              if (c) {
                var u;
                (u = a).push.apply(
                  u,
                  Nt(
                    Nt(c).map(function (h) {
                      return h.entity;
                    })
                  )
                );
              }
            }))
          : (a = o),
          s(a);
      }),
      Me(this, "resetFields", function (r) {
        n.warningUnhooked();
        var i = n.store;
        if (!r) {
          n.updateStore(of(n.initialValues)),
            n.resetWithFieldInitialValue(),
            n.notifyObservers(i, null, { type: "reset" }),
            n.notifyWatch();
          return;
        }
        var o = r.map(jn);
        o.forEach(function (s) {
          var a = n.getInitialValue(s);
          n.updateStore(Uo(n.store, s, a));
        }),
          n.resetWithFieldInitialValue({ namePathList: o }),
          n.notifyObservers(i, o, { type: "reset" }),
          n.notifyWatch(o);
      }),
      Me(this, "setFields", function (r) {
        n.warningUnhooked();
        var i = n.store,
          o = [];
        r.forEach(function (s) {
          var a = s.name,
            l = Qi(s, MQ),
            c = jn(a);
          o.push(c),
            "value" in l && n.updateStore(Uo(n.store, c, l.value)),
            n.notifyObservers(i, [c], { type: "setField", data: s });
        }),
          n.notifyWatch(o);
      }),
      Me(this, "getFields", function () {
        var r = n.getFieldEntities(!0),
          i = r.map(function (o) {
            var s = o.getNamePath(),
              a = o.getMeta(),
              l = We(We({}, a), {}, { name: s, value: n.getFieldValue(s) });
            return Object.defineProperty(l, "originRCField", { value: !0 }), l;
          });
        return i;
      }),
      Me(this, "initEntityValue", function (r) {
        var i = r.props.initialValue;
        if (i !== void 0) {
          var o = r.getNamePath(),
            s = ms(n.store, o);
          s === void 0 && n.updateStore(Uo(n.store, o, i));
        }
      }),
      Me(this, "isMergedPreserve", function (r) {
        var i = r !== void 0 ? r : n.preserve;
        return i ?? !0;
      }),
      Me(this, "registerField", function (r) {
        n.fieldEntities.push(r);
        var i = r.getNamePath();
        if ((n.notifyWatch([i]), r.props.initialValue !== void 0)) {
          var o = n.store;
          n.resetWithFieldInitialValue({ entities: [r], skipExist: !0 }),
            n.notifyObservers(o, [r.getNamePath()], {
              type: "valueUpdate",
              source: "internal",
            });
        }
        return function (s, a) {
          var l =
            arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
          if (
            ((n.fieldEntities = n.fieldEntities.filter(function (h) {
              return h !== r;
            })),
            !n.isMergedPreserve(a) && (!s || l.length > 1))
          ) {
            var c = s ? void 0 : n.getInitialValue(i);
            if (
              i.length &&
              n.getFieldValue(i) !== c &&
              n.fieldEntities.every(function (h) {
                return !bU(h.getNamePath(), i);
              })
            ) {
              var u = n.store;
              n.updateStore(Uo(u, i, c, !0)),
                n.notifyObservers(u, [i], { type: "remove" }),
                n.triggerDependenciesUpdate(u, i);
            }
          }
          n.notifyWatch([i]);
        };
      }),
      Me(this, "dispatch", function (r) {
        switch (r.type) {
          case "updateValue": {
            var i = r.namePath,
              o = r.value;
            n.updateValue(i, o);
            break;
          }
          case "validateField": {
            var s = r.namePath,
              a = r.triggerName;
            n.validateFields([s], { triggerName: a });
            break;
          }
        }
      }),
      Me(this, "notifyObservers", function (r, i, o) {
        if (n.subscribable) {
          var s = We(We({}, o), {}, { store: n.getFieldsValue(!0) });
          n.getFieldEntities().forEach(function (a) {
            var l = a.onStoreChange;
            l(r, i, s);
          });
        } else n.forceRootUpdate();
      }),
      Me(this, "triggerDependenciesUpdate", function (r, i) {
        var o = n.getDependencyChildrenFields(i);
        return (
          o.length && n.validateFields(o),
          n.notifyObservers(r, o, {
            type: "dependenciesUpdate",
            relatedFields: [i].concat(Nt(o)),
          }),
          o
        );
      }),
      Me(this, "updateValue", function (r, i) {
        var o = jn(r),
          s = n.store;
        n.updateStore(Uo(n.store, o, i)),
          n.notifyObservers(s, [o], {
            type: "valueUpdate",
            source: "internal",
          }),
          n.notifyWatch([o]);
        var a = n.triggerDependenciesUpdate(s, o),
          l = n.callbacks.onValuesChange;
        if (l) {
          var c = i3(n.store, [o]);
          l(c, n.getFieldsValue());
        }
        n.triggerOnFieldsChange([o].concat(Nt(a)));
      }),
      Me(this, "setFieldsValue", function (r) {
        n.warningUnhooked();
        var i = n.store;
        if (r) {
          var o = of(n.store, r);
          n.updateStore(o);
        }
        n.notifyObservers(i, null, { type: "valueUpdate", source: "external" }),
          n.notifyWatch();
      }),
      Me(this, "setFieldValue", function (r, i) {
        n.setFields([{ name: r, value: i }]);
      }),
      Me(this, "getDependencyChildrenFields", function (r) {
        var i = new Set(),
          o = [],
          s = new Nu();
        n.getFieldEntities().forEach(function (l) {
          var c = l.props.dependencies;
          (c || []).forEach(function (u) {
            var h = jn(u);
            s.update(h, function () {
              var p =
                arguments.length > 0 && arguments[0] !== void 0
                  ? arguments[0]
                  : new Set();
              return p.add(l), p;
            });
          });
        });
        var a = function l(c) {
          var u = s.get(c) || new Set();
          u.forEach(function (h) {
            if (!i.has(h)) {
              i.add(h);
              var p = h.getNamePath();
              h.isFieldDirty() && p.length && (o.push(p), l(p));
            }
          });
        };
        return a(r), o;
      }),
      Me(this, "triggerOnFieldsChange", function (r, i) {
        var o = n.callbacks.onFieldsChange;
        if (o) {
          var s = n.getFields();
          if (i) {
            var a = new Nu();
            i.forEach(function (c) {
              var u = c.name,
                h = c.errors;
              a.set(u, h);
            }),
              s.forEach(function (c) {
                c.errors = a.get(c.name) || c.errors;
              });
          }
          var l = s.filter(function (c) {
            var u = c.name;
            return gf(r, u);
          });
          l.length && o(l, s);
        }
      }),
      Me(this, "validateFields", function (r, i) {
        n.warningUnhooked();
        var o, s;
        Array.isArray(r) || typeof r == "string" || typeof i == "string"
          ? ((o = r), (s = i))
          : (s = r);
        var a = !!o,
          l = a ? o.map(jn) : [],
          c = [],
          u = String(Date.now()),
          h = new Set(),
          p = s || {},
          m = p.recursive,
          v = p.dirty;
        n.getFieldEntities(!0).forEach(function (y) {
          if (
            (a || l.push(y.getNamePath()),
            !(!y.props.rules || !y.props.rules.length) &&
              !(v && !y.isFieldDirty()))
          ) {
            var _ = y.getNamePath();
            if ((h.add(_.join(u)), !a || gf(l, _, m))) {
              var b = y.validateRules(
                We({ validateMessages: We(We({}, wU), n.validateMessages) }, s)
              );
              c.push(
                b
                  .then(function () {
                    return { name: _, errors: [], warnings: [] };
                  })
                  .catch(function (T) {
                    var M,
                      C = [],
                      L = [];
                    return (
                      (M = T.forEach) === null ||
                        M === void 0 ||
                        M.call(T, function (A) {
                          var P = A.rule.warningOnly,
                            k = A.errors;
                          P ? L.push.apply(L, Nt(k)) : C.push.apply(C, Nt(k));
                        }),
                      C.length
                        ? Promise.reject({ name: _, errors: C, warnings: L })
                        : { name: _, errors: C, warnings: L }
                    );
                  })
              );
            }
          }
        });
        var S = EQ(c);
        (n.lastValidatePromise = S),
          S.catch(function (y) {
            return y;
          }).then(function (y) {
            var _ = y.map(function (b) {
              var T = b.name;
              return T;
            });
            n.notifyObservers(n.store, _, { type: "validateFinish" }),
              n.triggerOnFieldsChange(_, y);
          });
        var x = S.then(function () {
          return n.lastValidatePromise === S
            ? Promise.resolve(n.getFieldsValue(l))
            : Promise.reject([]);
        }).catch(function (y) {
          var _ = y.filter(function (b) {
            return b && b.errors.length;
          });
          return Promise.reject({
            values: n.getFieldsValue(l),
            errorFields: _,
            outOfDate: n.lastValidatePromise !== S,
          });
        });
        x.catch(function (y) {
          return y;
        });
        var g = l.filter(function (y) {
          return h.has(y.join(u));
        });
        return n.triggerOnFieldsChange(g), x;
      }),
      Me(this, "submit", function () {
        n.warningUnhooked(),
          n
            .validateFields()
            .then(function (r) {
              var i = n.callbacks.onFinish;
              if (i)
                try {
                  i(r);
                } catch (o) {
                  console.error(o);
                }
            })
            .catch(function (r) {
              var i = n.callbacks.onFinishFailed;
              i && i(r);
            });
      }),
      (this.forceRootUpdate = e);
  });
function CU(t) {
  var e = z.useRef(),
    n = z.useState({}),
    r = yt(n, 2),
    i = r[1];
  if (!e.current)
    if (t) e.current = t;
    else {
      var o = function () {
          i({});
        },
        s = new CQ(o);
      e.current = s.getForm();
    }
  return [e.current];
}
var Rb = z.createContext({
    triggerFormChange: function () {},
    triggerFormFinish: function () {},
    registerForm: function () {},
    unregisterForm: function () {},
  }),
  TQ = function (e) {
    var n = e.validateMessages,
      r = e.onFormChange,
      i = e.onFormFinish,
      o = e.children,
      s = z.useContext(Rb),
      a = z.useRef({});
    return z.createElement(
      Rb.Provider,
      {
        value: We(
          We({}, s),
          {},
          {
            validateMessages: We(We({}, s.validateMessages), n),
            triggerFormChange: function (c, u) {
              r && r(c, { changedFields: u, forms: a.current }),
                s.triggerFormChange(c, u);
            },
            triggerFormFinish: function (c, u) {
              i && i(c, { values: u, forms: a.current }),
                s.triggerFormFinish(c, u);
            },
            registerForm: function (c, u) {
              c && (a.current = We(We({}, a.current), {}, Me({}, c, u))),
                s.registerForm(c, u);
            },
            unregisterForm: function (c) {
              var u = We({}, a.current);
              delete u[c], (a.current = u), s.unregisterForm(c);
            },
          }
        ),
      },
      o
    );
  },
  AQ = [
    "name",
    "initialValues",
    "fields",
    "form",
    "preserve",
    "children",
    "component",
    "validateMessages",
    "validateTrigger",
    "onValuesChange",
    "onFieldsChange",
    "onFinish",
    "onFinishFailed",
  ],
  RQ = function (e, n) {
    var r = e.name,
      i = e.initialValues,
      o = e.fields,
      s = e.form,
      a = e.preserve,
      l = e.children,
      c = e.component,
      u = c === void 0 ? "form" : c,
      h = e.validateMessages,
      p = e.validateTrigger,
      m = p === void 0 ? "onChange" : p,
      v = e.onValuesChange,
      S = e.onFieldsChange,
      x = e.onFinish,
      g = e.onFinishFailed,
      y = Qi(e, AQ),
      _ = z.useContext(Rb),
      b = CU(s),
      T = yt(b, 1),
      M = T[0],
      C = M.getInternalHooks(cc),
      L = C.useSubscribe,
      A = C.setInitialValues,
      P = C.setCallbacks,
      k = C.setValidateMessages,
      B = C.setPreserve,
      $ = C.destroyForm;
    z.useImperativeHandle(n, function () {
      return M;
    }),
      z.useEffect(
        function () {
          return (
            _.registerForm(r, M),
            function () {
              _.unregisterForm(r);
            }
          );
        },
        [_, M, r]
      ),
      k(We(We({}, _.validateMessages), h)),
      P({
        onValuesChange: v,
        onFieldsChange: function (Z) {
          if ((_.triggerFormChange(r, Z), S)) {
            for (
              var Q = arguments.length,
                te = new Array(Q > 1 ? Q - 1 : 0),
                re = 1;
              re < Q;
              re++
            )
              te[re - 1] = arguments[re];
            S.apply(void 0, [Z].concat(te));
          }
        },
        onFinish: function (Z) {
          _.triggerFormFinish(r, Z), x && x(Z);
        },
        onFinishFailed: g,
      }),
      B(a);
    var D = z.useRef(null);
    A(i, !D.current),
      D.current || (D.current = !0),
      z.useEffect(function () {
        return $;
      }, []);
    var X,
      j = typeof l == "function";
    if (j) {
      var Y = M.getFieldsValue(!0);
      X = l(Y, M);
    } else X = l;
    L(!j);
    var N = z.useRef();
    z.useEffect(
      function () {
        _Q(N.current || [], o || []) || M.setFields(o || []), (N.current = o);
      },
      [o, M]
    );
    var V = z.useMemo(
        function () {
          return We(We({}, M), {}, { validateTrigger: m });
        },
        [M, m]
      ),
      G = z.createElement(
        I0.Provider,
        { value: null },
        z.createElement(Nf.Provider, { value: V }, X)
      );
    return u === !1
      ? G
      : z.createElement(
          u,
          mn({}, y, {
            onSubmit: function (Z) {
              Z.preventDefault(), Z.stopPropagation(), M.submit();
            },
            onReset: function (Z) {
              var Q;
              Z.preventDefault(),
                M.resetFields(),
                (Q = y.onReset) === null || Q === void 0 || Q.call(y, Z);
            },
          }),
          G
        );
  };
function a3(t) {
  try {
    return JSON.stringify(t);
  } catch {
    return Math.random();
  }
}
function PQ() {
  for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
    e[n] = arguments[n];
  var r = e[0],
    i = e[1],
    o = i === void 0 ? {} : i,
    s = UZ(o) ? { form: o } : o,
    a = s.form,
    l = z.useState(),
    c = yt(l, 2),
    u = c[0],
    h = c[1],
    p = z.useMemo(
      function () {
        return a3(u);
      },
      [u]
    ),
    m = z.useRef(p);
  m.current = p;
  var v = z.useContext(Nf),
    S = a || v,
    x = S && S._init,
    g = jn(r),
    y = z.useRef(g);
  return (
    (y.current = g),
    z.useEffect(
      function () {
        if (x) {
          var _ = S.getFieldsValue,
            b = S.getInternalHooks,
            T = b(cc),
            M = T.registerWatch,
            C = function (k, B) {
              var $ = s.preserve ? B : k;
              return typeof r == "function" ? r($) : ms($, y.current);
            },
            L = M(function (P, k) {
              var B = C(P, k),
                $ = a3(B);
              m.current !== $ && ((m.current = $), h(B));
            }),
            A = C(_(), _(!0));
          return u !== A && h(A), L;
        }
      },
      [x]
    ),
    u
  );
}
var LQ = z.forwardRef(RQ),
  Dp = LQ;
Dp.FormProvider = TQ;
Dp.Field = EU;
Dp.List = bQ;
Dp.useForm = CU;
Dp.useWatch = PQ;
const Fc = z.createContext({}),
  l3 = (t) => {
    let { children: e, status: n, override: r } = t;
    const i = z.useContext(Fc),
      o = z.useMemo(() => {
        const s = Object.assign({}, i);
        return (
          r && delete s.isFormItemInput,
          n && (delete s.status, delete s.hasFeedback, delete s.feedbackIcon),
          s
        );
      }, [n, r, i]);
    return z.createElement(Fc.Provider, { value: o }, e);
  },
  IQ = z.createContext(void 0);
function Pb(t, e, n) {
  return Ct({
    [`${t}-status-success`]: e === "success",
    [`${t}-status-warning`]: e === "warning",
    [`${t}-status-error`]: e === "error",
    [`${t}-status-validating`]: e === "validating",
    [`${t}-has-feedback`]: n,
  });
}
const TU = (t, e) => e || t,
  OQ = ["outlined", "borderless", "filled"],
  AU = function (t) {
    let e =
      arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : void 0;
    const n = z.useContext(IQ);
    let r;
    typeof t < "u"
      ? (r = t)
      : e === !1
      ? (r = "borderless")
      : (r = n ?? "outlined");
    const i = OQ.includes(r);
    return [r, i];
  };
var FQ = {
  icon: {
    tag: "svg",
    attrs: { viewBox: "64 64 896 896", focusable: "false" },
    children: [
      {
        tag: "path",
        attrs: {
          d: "M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z",
        },
      },
    ],
  },
  name: "search",
  theme: "outlined",
};
const NQ = FQ;
var DQ = function (e, n) {
  return z.createElement(Ip, mn({}, e, { ref: n, icon: NQ }));
};
const UQ = z.forwardRef(DQ),
  RU = z.createContext(null),
  zQ = RU.Provider,
  PU = z.createContext(null),
  kQ = PU.Provider;
var BQ = [
    "prefixCls",
    "className",
    "style",
    "checked",
    "disabled",
    "defaultChecked",
    "type",
    "title",
    "onChange",
  ],
  HQ = z.forwardRef(function (t, e) {
    var n,
      r = t.prefixCls,
      i = r === void 0 ? "rc-checkbox" : r,
      o = t.className,
      s = t.style,
      a = t.checked,
      l = t.disabled,
      c = t.defaultChecked,
      u = c === void 0 ? !1 : c,
      h = t.type,
      p = h === void 0 ? "checkbox" : h,
      m = t.title,
      v = t.onChange,
      S = Qi(t, BQ),
      x = z.useRef(null),
      g = Pp(u, { value: a }),
      y = yt(g, 2),
      _ = y[0],
      b = y[1];
    z.useImperativeHandle(e, function () {
      return {
        focus: function () {
          var L;
          (L = x.current) === null || L === void 0 || L.focus();
        },
        blur: function () {
          var L;
          (L = x.current) === null || L === void 0 || L.blur();
        },
        input: x.current,
      };
    });
    var T = Ct(
        i,
        o,
        ((n = {}),
        Me(n, "".concat(i, "-checked"), _),
        Me(n, "".concat(i, "-disabled"), l),
        n)
      ),
      M = function (L) {
        l ||
          ("checked" in t || b(L.target.checked),
          v == null ||
            v({
              target: We(We({}, t), {}, { type: p, checked: L.target.checked }),
              stopPropagation: function () {
                L.stopPropagation();
              },
              preventDefault: function () {
                L.preventDefault();
              },
              nativeEvent: L.nativeEvent,
            }));
      };
    return z.createElement(
      "span",
      { className: T, title: m, style: s },
      z.createElement(
        "input",
        mn({}, S, {
          className: "".concat(i, "-input"),
          ref: x,
          onChange: M,
          disabled: l,
          checked: !!_,
          type: p,
        })
      ),
      z.createElement("span", { className: "".concat(i, "-inner") })
    );
  });
const VQ = (t) => {
    const { componentCls: e, antCls: n } = t,
      r = `${e}-group`;
    return {
      [r]: Object.assign(Object.assign({}, sp(t)), {
        display: "inline-block",
        fontSize: 0,
        [`&${r}-rtl`]: { direction: "rtl" },
        [`${n}-badge ${n}-badge-count`]: { zIndex: 1 },
        [`> ${n}-badge:not(:first-child) > ${n}-button-wrapper`]: {
          borderInlineStart: "none",
        },
      }),
    };
  },
  GQ = (t) => {
    const {
        componentCls: e,
        wrapperMarginInlineEnd: n,
        colorPrimary: r,
        radioSize: i,
        motionDurationSlow: o,
        motionDurationMid: s,
        motionEaseInOutCirc: a,
        colorBgContainer: l,
        colorBorder: c,
        lineWidth: u,
        colorBgContainerDisabled: h,
        colorTextDisabled: p,
        paddingXS: m,
        dotColorDisabled: v,
        lineType: S,
        radioColor: x,
        radioBgColor: g,
        calc: y,
      } = t,
      _ = `${e}-inner`,
      T = y(i).sub(y(4).mul(2)),
      M = y(1).mul(i).equal();
    return {
      [`${e}-wrapper`]: Object.assign(Object.assign({}, sp(t)), {
        display: "inline-flex",
        alignItems: "baseline",
        marginInlineStart: 0,
        marginInlineEnd: n,
        cursor: "pointer",
        [`&${e}-wrapper-rtl`]: { direction: "rtl" },
        "&-disabled": { cursor: "not-allowed", color: t.colorTextDisabled },
        "&::after": {
          display: "inline-block",
          width: 0,
          overflow: "hidden",
          content: '"\\a0"',
        },
        [`${e}-checked::after`]: {
          position: "absolute",
          insetBlockStart: 0,
          insetInlineStart: 0,
          width: "100%",
          height: "100%",
          border: `${Bt(u)} ${S} ${r}`,
          borderRadius: "50%",
          visibility: "hidden",
          content: '""',
        },
        [e]: Object.assign(Object.assign({}, sp(t)), {
          position: "relative",
          display: "inline-block",
          outline: "none",
          cursor: "pointer",
          alignSelf: "center",
          borderRadius: "50%",
        }),
        [`${e}-wrapper:hover &,
        &:hover ${_}`]: { borderColor: r },
        [`${e}-input:focus-visible + ${_}`]: Object.assign({}, BM(t)),
        [`${e}:hover::after, ${e}-wrapper:hover &::after`]: {
          visibility: "visible",
        },
        [`${e}-inner`]: {
          "&::after": {
            boxSizing: "border-box",
            position: "absolute",
            insetBlockStart: "50%",
            insetInlineStart: "50%",
            display: "block",
            width: M,
            height: M,
            marginBlockStart: y(1).mul(i).div(-2).equal(),
            marginInlineStart: y(1).mul(i).div(-2).equal(),
            backgroundColor: x,
            borderBlockStart: 0,
            borderInlineStart: 0,
            borderRadius: M,
            transform: "scale(0)",
            opacity: 0,
            transition: `all ${o} ${a}`,
            content: '""',
          },
          boxSizing: "border-box",
          position: "relative",
          insetBlockStart: 0,
          insetInlineStart: 0,
          display: "block",
          width: M,
          height: M,
          backgroundColor: l,
          borderColor: c,
          borderStyle: "solid",
          borderWidth: u,
          borderRadius: "50%",
          transition: `all ${s}`,
        },
        [`${e}-input`]: {
          position: "absolute",
          inset: 0,
          zIndex: 1,
          cursor: "pointer",
          opacity: 0,
        },
        [`${e}-checked`]: {
          [_]: {
            borderColor: r,
            backgroundColor: g,
            "&::after": {
              transform: `scale(${t.calc(t.dotSize).div(i).equal()})`,
              opacity: 1,
              transition: `all ${o} ${a}`,
            },
          },
        },
        [`${e}-disabled`]: {
          cursor: "not-allowed",
          [_]: {
            backgroundColor: h,
            borderColor: c,
            cursor: "not-allowed",
            "&::after": { backgroundColor: v },
          },
          [`${e}-input`]: { cursor: "not-allowed" },
          [`${e}-disabled + span`]: { color: p, cursor: "not-allowed" },
          [`&${e}-checked`]: {
            [_]: {
              "&::after": {
                transform: `scale(${y(T).div(i).equal({ unit: !1 })})`,
              },
            },
          },
        },
        [`span${e} + *`]: { paddingInlineStart: m, paddingInlineEnd: m },
      }),
    };
  },
  jQ = (t) => {
    const {
      buttonColor: e,
      controlHeight: n,
      componentCls: r,
      lineWidth: i,
      lineType: o,
      colorBorder: s,
      motionDurationSlow: a,
      motionDurationMid: l,
      buttonPaddingInline: c,
      fontSize: u,
      buttonBg: h,
      fontSizeLG: p,
      controlHeightLG: m,
      controlHeightSM: v,
      paddingXS: S,
      borderRadius: x,
      borderRadiusSM: g,
      borderRadiusLG: y,
      buttonCheckedBg: _,
      buttonSolidCheckedColor: b,
      colorTextDisabled: T,
      colorBgContainerDisabled: M,
      buttonCheckedBgDisabled: C,
      buttonCheckedColorDisabled: L,
      colorPrimary: A,
      colorPrimaryHover: P,
      colorPrimaryActive: k,
      buttonSolidCheckedBg: B,
      buttonSolidCheckedHoverBg: $,
      buttonSolidCheckedActiveBg: D,
      calc: X,
    } = t;
    return {
      [`${r}-button-wrapper`]: {
        position: "relative",
        display: "inline-block",
        height: n,
        margin: 0,
        paddingInline: c,
        paddingBlock: 0,
        color: e,
        fontSize: u,
        lineHeight: Bt(X(n).sub(X(i).mul(2)).equal()),
        background: h,
        border: `${Bt(i)} ${o} ${s}`,
        borderBlockStartWidth: X(i).add(0.02).equal(),
        borderInlineStartWidth: 0,
        borderInlineEndWidth: i,
        cursor: "pointer",
        transition: [`color ${l}`, `background ${l}`, `box-shadow ${l}`].join(
          ","
        ),
        a: { color: e },
        [`> ${r}-button`]: {
          position: "absolute",
          insetBlockStart: 0,
          insetInlineStart: 0,
          zIndex: -1,
          width: "100%",
          height: "100%",
        },
        "&:not(:first-child)": {
          "&::before": {
            position: "absolute",
            insetBlockStart: X(i).mul(-1).equal(),
            insetInlineStart: X(i).mul(-1).equal(),
            display: "block",
            boxSizing: "content-box",
            width: 1,
            height: "100%",
            paddingBlock: i,
            paddingInline: 0,
            backgroundColor: s,
            transition: `background-color ${a}`,
            content: '""',
          },
        },
        "&:first-child": {
          borderInlineStart: `${Bt(i)} ${o} ${s}`,
          borderStartStartRadius: x,
          borderEndStartRadius: x,
        },
        "&:last-child": { borderStartEndRadius: x, borderEndEndRadius: x },
        "&:first-child:last-child": { borderRadius: x },
        [`${r}-group-large &`]: {
          height: m,
          fontSize: p,
          lineHeight: Bt(X(m).sub(X(i).mul(2)).equal()),
          "&:first-child": {
            borderStartStartRadius: y,
            borderEndStartRadius: y,
          },
          "&:last-child": { borderStartEndRadius: y, borderEndEndRadius: y },
        },
        [`${r}-group-small &`]: {
          height: v,
          paddingInline: X(S).sub(i).equal(),
          paddingBlock: 0,
          lineHeight: Bt(X(v).sub(X(i).mul(2)).equal()),
          "&:first-child": {
            borderStartStartRadius: g,
            borderEndStartRadius: g,
          },
          "&:last-child": { borderStartEndRadius: g, borderEndEndRadius: g },
        },
        "&:hover": { position: "relative", color: A },
        "&:has(:focus-visible)": Object.assign({}, BM(t)),
        [`${r}-inner, input[type='checkbox'], input[type='radio']`]: {
          width: 0,
          height: 0,
          opacity: 0,
          pointerEvents: "none",
        },
        [`&-checked:not(${r}-button-wrapper-disabled)`]: {
          zIndex: 1,
          color: A,
          background: _,
          borderColor: A,
          "&::before": { backgroundColor: A },
          "&:first-child": { borderColor: A },
          "&:hover": {
            color: P,
            borderColor: P,
            "&::before": { backgroundColor: P },
          },
          "&:active": {
            color: k,
            borderColor: k,
            "&::before": { backgroundColor: k },
          },
        },
        [`${r}-group-solid &-checked:not(${r}-button-wrapper-disabled)`]: {
          color: b,
          background: B,
          borderColor: B,
          "&:hover": { color: b, background: $, borderColor: $ },
          "&:active": { color: b, background: D, borderColor: D },
        },
        "&-disabled": {
          color: T,
          backgroundColor: M,
          borderColor: s,
          cursor: "not-allowed",
          "&:first-child, &:hover": {
            color: T,
            backgroundColor: M,
            borderColor: s,
          },
        },
        [`&-disabled${r}-button-wrapper-checked`]: {
          color: L,
          backgroundColor: C,
          borderColor: s,
          boxShadow: "none",
        },
      },
    };
  },
  WQ = (t) => {
    const {
        wireframe: e,
        padding: n,
        marginXS: r,
        lineWidth: i,
        fontSizeLG: o,
        colorText: s,
        colorBgContainer: a,
        colorTextDisabled: l,
        controlItemBgActiveDisabled: c,
        colorTextLightSolid: u,
        colorPrimary: h,
        colorPrimaryHover: p,
        colorPrimaryActive: m,
        colorWhite: v,
      } = t,
      S = 4,
      x = o,
      g = e ? x - S * 2 : x - (S + i) * 2;
    return {
      radioSize: x,
      dotSize: g,
      dotColorDisabled: l,
      buttonSolidCheckedColor: u,
      buttonSolidCheckedBg: h,
      buttonSolidCheckedHoverBg: p,
      buttonSolidCheckedActiveBg: m,
      buttonBg: a,
      buttonCheckedBg: a,
      buttonColor: s,
      buttonCheckedBgDisabled: c,
      buttonCheckedColorDisabled: l,
      buttonPaddingInline: n - i,
      wrapperMarginInlineEnd: r,
      radioColor: e ? h : v,
      radioBgColor: e ? a : h,
    };
  },
  LU = VM(
    "Radio",
    (t) => {
      const { controlOutline: e, controlOutlineWidth: n } = t,
        r = `0 0 0 ${Bt(n)} ${e}`,
        o = Cs(t, { radioFocusShadow: r, radioButtonFocusShadow: r });
      return [VQ(o), GQ(o), jQ(o)];
    },
    WQ,
    { unitless: { radioSize: !0, dotSize: !0 } }
  );
var $Q = function (t, e) {
  var n = {};
  for (var r in t)
    Object.prototype.hasOwnProperty.call(t, r) &&
      e.indexOf(r) < 0 &&
      (n[r] = t[r]);
  if (t != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(t); i < r.length; i++)
      e.indexOf(r[i]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(t, r[i]) &&
        (n[r[i]] = t[r[i]]);
  return n;
};
const XQ = (t, e) => {
    var n, r;
    const i = z.useContext(RU),
      o = z.useContext(PU),
      { getPrefixCls: s, direction: a, radio: l } = z.useContext(Wr),
      c = z.useRef(null),
      u = jc(e, c),
      { isFormItemInput: h } = z.useContext(Fc),
      p = (D) => {
        var X, j;
        (X = t.onChange) === null || X === void 0 || X.call(t, D),
          (j = i == null ? void 0 : i.onChange) === null ||
            j === void 0 ||
            j.call(i, D);
      },
      {
        prefixCls: m,
        className: v,
        rootClassName: S,
        children: x,
        style: g,
        title: y,
      } = t,
      _ = $Q(t, [
        "prefixCls",
        "className",
        "rootClassName",
        "children",
        "style",
        "title",
      ]),
      b = s("radio", m),
      T = ((i == null ? void 0 : i.optionType) || o) === "button",
      M = T ? `${b}-button` : b,
      C = Jy(b),
      [L, A, P] = LU(b, C),
      k = Object.assign({}, _),
      B = z.useContext(Rp);
    i &&
      ((k.name = i.name),
      (k.onChange = p),
      (k.checked = t.value === i.value),
      (k.disabled =
        (n = k.disabled) !== null && n !== void 0 ? n : i.disabled)),
      (k.disabled = (r = k.disabled) !== null && r !== void 0 ? r : B);
    const $ = Ct(
      `${M}-wrapper`,
      {
        [`${M}-wrapper-checked`]: k.checked,
        [`${M}-wrapper-disabled`]: k.disabled,
        [`${M}-wrapper-rtl`]: a === "rtl",
        [`${M}-wrapper-in-form-item`]: h,
      },
      l == null ? void 0 : l.className,
      v,
      S,
      A,
      P,
      C
    );
    return L(
      z.createElement(
        dU,
        { component: "Radio", disabled: k.disabled },
        z.createElement(
          "label",
          {
            className: $,
            style: Object.assign(
              Object.assign({}, l == null ? void 0 : l.style),
              g
            ),
            onMouseEnter: t.onMouseEnter,
            onMouseLeave: t.onMouseLeave,
            title: y,
          },
          z.createElement(
            HQ,
            Object.assign({}, k, {
              className: Ct(k.className, !T && XM),
              type: "radio",
              prefixCls: M,
              ref: u,
            })
          ),
          x !== void 0 ? z.createElement("span", null, x) : null
        )
      )
    );
  },
  qQ = z.forwardRef(XQ),
  O0 = qQ,
  YQ = z.forwardRef((t, e) => {
    const { getPrefixCls: n, direction: r } = z.useContext(Wr),
      [i, o] = Pp(t.defaultValue, { value: t.value }),
      s = (D) => {
        const X = i,
          j = D.target.value;
        "value" in t || o(j);
        const { onChange: Y } = t;
        Y && j !== X && Y(D);
      },
      {
        prefixCls: a,
        className: l,
        rootClassName: c,
        options: u,
        buttonStyle: h = "outline",
        disabled: p,
        children: m,
        size: v,
        style: S,
        id: x,
        onMouseEnter: g,
        onMouseLeave: y,
        onFocus: _,
        onBlur: b,
      } = t,
      T = n("radio", a),
      M = `${T}-group`,
      C = Jy(T),
      [L, A, P] = LU(T, C);
    let k = m;
    u &&
      u.length > 0 &&
      (k = u.map((D) =>
        typeof D == "string" || typeof D == "number"
          ? z.createElement(
              O0,
              {
                key: D.toString(),
                prefixCls: T,
                disabled: p,
                value: D,
                checked: i === D,
              },
              D
            )
          : z.createElement(
              O0,
              {
                key: `radio-group-value-options-${D.value}`,
                prefixCls: T,
                disabled: D.disabled || p,
                value: D.value,
                checked: i === D.value,
                title: D.title,
                style: D.style,
                id: D.id,
                required: D.required,
              },
              D.label
            )
      ));
    const B = Fp(v),
      $ = Ct(
        M,
        `${M}-${h}`,
        { [`${M}-${B}`]: B, [`${M}-rtl`]: r === "rtl" },
        l,
        c,
        A,
        P,
        C
      );
    return L(
      z.createElement(
        "div",
        Object.assign({}, PK(t, { aria: !0, data: !0 }), {
          className: $,
          style: S,
          onMouseEnter: g,
          onMouseLeave: y,
          onFocus: _,
          onBlur: b,
          id: x,
          ref: e,
        }),
        z.createElement(
          zQ,
          {
            value: {
              onChange: s,
              value: i,
              disabled: t.disabled,
              name: t.name,
              optionType: t.optionType,
            },
          },
          k
        )
      )
    );
  }),
  KQ = z.memo(YQ);
var ZQ = function (t, e) {
  var n = {};
  for (var r in t)
    Object.prototype.hasOwnProperty.call(t, r) &&
      e.indexOf(r) < 0 &&
      (n[r] = t[r]);
  if (t != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(t); i < r.length; i++)
      e.indexOf(r[i]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(t, r[i]) &&
        (n[r[i]] = t[r[i]]);
  return n;
};
const QQ = (t, e) => {
    const { getPrefixCls: n } = z.useContext(Wr),
      { prefixCls: r } = t,
      i = ZQ(t, ["prefixCls"]),
      o = n("radio", r);
    return z.createElement(
      kQ,
      { value: "button" },
      z.createElement(
        O0,
        Object.assign({ prefixCls: o }, i, { type: "radio", ref: e })
      )
    );
  },
  JQ = z.forwardRef(QQ),
  tx = O0;
tx.Button = JQ;
tx.Group = KQ;
tx.__ANT_RADIO = !0;
const cv = tx;
function eJ(t) {
  return Cs(t, { inputAffixPadding: t.paddingXXS });
}
const tJ = (t) => {
    const {
      controlHeight: e,
      fontSize: n,
      lineHeight: r,
      lineWidth: i,
      controlHeightSM: o,
      controlHeightLG: s,
      fontSizeLG: a,
      lineHeightLG: l,
      paddingSM: c,
      controlPaddingHorizontalSM: u,
      controlPaddingHorizontal: h,
      colorFillAlter: p,
      colorPrimaryHover: m,
      colorPrimary: v,
      controlOutlineWidth: S,
      controlOutline: x,
      colorErrorOutline: g,
      colorWarningOutline: y,
      colorBgContainer: _,
    } = t;
    return {
      paddingBlock: Math.max(Math.round(((e - n * r) / 2) * 10) / 10 - i, 0),
      paddingBlockSM: Math.max(Math.round(((o - n * r) / 2) * 10) / 10 - i, 0),
      paddingBlockLG: Math.ceil(((s - a * l) / 2) * 10) / 10 - i,
      paddingInline: c - i,
      paddingInlineSM: u - i,
      paddingInlineLG: h - i,
      addonBg: p,
      activeBorderColor: v,
      hoverBorderColor: m,
      activeShadow: `0 0 0 ${S}px ${x}`,
      errorActiveShadow: `0 0 0 ${S}px ${g}`,
      warningActiveShadow: `0 0 0 ${S}px ${y}`,
      hoverBg: _,
      activeBg: _,
      inputFontSize: n,
      inputFontSizeLG: a,
      inputFontSizeSM: n,
    };
  },
  nJ = (t) => ({ borderColor: t.hoverBorderColor, backgroundColor: t.hoverBg }),
  JM = (t) => ({
    color: t.colorTextDisabled,
    backgroundColor: t.colorBgContainerDisabled,
    borderColor: t.colorBorder,
    boxShadow: "none",
    cursor: "not-allowed",
    opacity: 1,
    "&:hover:not([disabled])": Object.assign(
      {},
      nJ(
        Cs(t, {
          hoverBorderColor: t.colorBorder,
          hoverBg: t.colorBgContainerDisabled,
        })
      )
    ),
  }),
  IU = (t, e) => ({
    background: t.colorBgContainer,
    borderWidth: t.lineWidth,
    borderStyle: t.lineType,
    borderColor: e.borderColor,
    "&:hover": { borderColor: e.hoverBorderColor, backgroundColor: t.hoverBg },
    "&:focus, &:focus-within": {
      borderColor: e.activeBorderColor,
      boxShadow: e.activeShadow,
      outline: 0,
      backgroundColor: t.activeBg,
    },
  }),
  c3 = (t, e) => ({
    [`&${t.componentCls}-status-${e.status}:not(${t.componentCls}-disabled)`]:
      Object.assign(Object.assign({}, IU(t, e)), {
        [`${t.componentCls}-prefix, ${t.componentCls}-suffix`]: {
          color: e.affixColor,
        },
      }),
  }),
  rJ = (t, e) => ({
    "&-outlined": Object.assign(
      Object.assign(
        Object.assign(
          Object.assign(
            Object.assign(
              {},
              IU(t, {
                borderColor: t.colorBorder,
                hoverBorderColor: t.colorPrimaryHover,
                activeBorderColor: t.colorPrimary,
                activeShadow: t.activeShadow,
              })
            ),
            {
              [`&${t.componentCls}-disabled, &[disabled]`]: Object.assign(
                {},
                JM(t)
              ),
            }
          ),
          c3(t, {
            status: "error",
            borderColor: t.colorError,
            hoverBorderColor: t.colorErrorBorderHover,
            activeBorderColor: t.colorError,
            activeShadow: t.errorActiveShadow,
            affixColor: t.colorError,
          })
        ),
        c3(t, {
          status: "warning",
          borderColor: t.colorWarning,
          hoverBorderColor: t.colorWarningBorderHover,
          activeBorderColor: t.colorWarning,
          activeShadow: t.warningActiveShadow,
          affixColor: t.colorWarning,
        })
      ),
      e
    ),
  }),
  u3 = (t, e) => ({
    [`&${t.componentCls}-group-wrapper-status-${e.status}`]: {
      [`${t.componentCls}-group-addon`]: {
        borderColor: e.addonBorderColor,
        color: e.addonColor,
      },
    },
  }),
  iJ = (t) => ({
    "&-outlined": Object.assign(
      Object.assign(
        Object.assign(
          {
            [`${t.componentCls}-group`]: {
              "&-addon": {
                background: t.addonBg,
                border: `${Bt(t.lineWidth)} ${t.lineType} ${t.colorBorder}`,
              },
              "&-addon:first-child": { borderInlineEnd: 0 },
              "&-addon:last-child": { borderInlineStart: 0 },
            },
          },
          u3(t, {
            status: "error",
            addonBorderColor: t.colorError,
            addonColor: t.colorErrorText,
          })
        ),
        u3(t, {
          status: "warning",
          addonBorderColor: t.colorWarning,
          addonColor: t.colorWarningText,
        })
      ),
      {
        [`&${t.componentCls}-group-wrapper-disabled`]: {
          [`${t.componentCls}-group-addon`]: Object.assign({}, JM(t)),
        },
      }
    ),
  }),
  oJ = (t, e) => ({
    "&-borderless": Object.assign(
      {
        background: "transparent",
        border: "none",
        "&:focus, &:focus-within": { outline: "none" },
        [`&${t.componentCls}-disabled, &[disabled]`]: {
          color: t.colorTextDisabled,
        },
      },
      e
    ),
  }),
  OU = (t, e) => ({
    background: e.bg,
    borderWidth: t.lineWidth,
    borderStyle: t.lineType,
    borderColor: "transparent",
    "input&, & input, textarea&, & textarea": {
      color: e == null ? void 0 : e.inputColor,
    },
    "&:hover": { background: e.hoverBg },
    "&:focus, &:focus-within": {
      outline: 0,
      borderColor: e.activeBorderColor,
      backgroundColor: t.activeBg,
    },
  }),
  f3 = (t, e) => ({
    [`&${t.componentCls}-status-${e.status}:not(${t.componentCls}-disabled)`]:
      Object.assign(Object.assign({}, OU(t, e)), {
        [`${t.componentCls}-prefix, ${t.componentCls}-suffix`]: {
          color: e.affixColor,
        },
      }),
  }),
  sJ = (t, e) => ({
    "&-filled": Object.assign(
      Object.assign(
        Object.assign(
          Object.assign(
            Object.assign(
              {},
              OU(t, {
                bg: t.colorFillTertiary,
                hoverBg: t.colorFillSecondary,
                activeBorderColor: t.colorPrimary,
              })
            ),
            {
              [`&${t.componentCls}-disabled, &[disabled]`]: Object.assign(
                {},
                JM(t)
              ),
            }
          ),
          f3(t, {
            status: "error",
            bg: t.colorErrorBg,
            hoverBg: t.colorErrorBgHover,
            activeBorderColor: t.colorError,
            inputColor: t.colorErrorText,
            affixColor: t.colorError,
          })
        ),
        f3(t, {
          status: "warning",
          bg: t.colorWarningBg,
          hoverBg: t.colorWarningBgHover,
          activeBorderColor: t.colorWarning,
          inputColor: t.colorWarningText,
          affixColor: t.colorWarning,
        })
      ),
      e
    ),
  }),
  d3 = (t, e) => ({
    [`&${t.componentCls}-group-wrapper-status-${e.status}`]: {
      [`${t.componentCls}-group-addon`]: {
        background: e.addonBg,
        color: e.addonColor,
      },
    },
  }),
  aJ = (t) => ({
    "&-filled": Object.assign(
      Object.assign(
        Object.assign(
          {
            [`${t.componentCls}-group`]: {
              "&-addon": { background: t.colorFillTertiary },
              [`${t.componentCls}-filled:not(:focus):not(:focus-within)`]: {
                "&:not(:first-child)": {
                  borderInlineStart: `${Bt(t.lineWidth)} ${t.lineType} ${
                    t.colorSplit
                  }`,
                },
                "&:not(:last-child)": {
                  borderInlineEnd: `${Bt(t.lineWidth)} ${t.lineType} ${
                    t.colorSplit
                  }`,
                },
              },
            },
          },
          d3(t, {
            status: "error",
            addonBg: t.colorErrorBg,
            addonColor: t.colorErrorText,
          })
        ),
        d3(t, {
          status: "warning",
          addonBg: t.colorWarningBg,
          addonColor: t.colorWarningText,
        })
      ),
      {
        [`&${t.componentCls}-group-wrapper-disabled`]: {
          [`${t.componentCls}-group`]: {
            "&-addon": {
              background: t.colorFillTertiary,
              color: t.colorTextDisabled,
            },
            "&-addon:first-child": {
              borderInlineStart: `${Bt(t.lineWidth)} ${t.lineType} ${
                t.colorBorder
              }`,
              borderTop: `${Bt(t.lineWidth)} ${t.lineType} ${t.colorBorder}`,
              borderBottom: `${Bt(t.lineWidth)} ${t.lineType} ${t.colorBorder}`,
            },
            "&-addon:last-child": {
              borderInlineEnd: `${Bt(t.lineWidth)} ${t.lineType} ${
                t.colorBorder
              }`,
              borderTop: `${Bt(t.lineWidth)} ${t.lineType} ${t.colorBorder}`,
              borderBottom: `${Bt(t.lineWidth)} ${t.lineType} ${t.colorBorder}`,
            },
          },
        },
      }
    ),
  }),
  lJ = (t) => ({
    "&::-moz-placeholder": { opacity: 1 },
    "&::placeholder": { color: t, userSelect: "none" },
    "&:placeholder-shown": { textOverflow: "ellipsis" },
  }),
  FU = (t) => {
    const {
      paddingBlockLG: e,
      lineHeightLG: n,
      borderRadiusLG: r,
      paddingInlineLG: i,
    } = t;
    return {
      padding: `${Bt(e)} ${Bt(i)}`,
      fontSize: t.inputFontSizeLG,
      lineHeight: n,
      borderRadius: r,
    };
  },
  NU = (t) => ({
    padding: `${Bt(t.paddingBlockSM)} ${Bt(t.paddingInlineSM)}`,
    fontSize: t.inputFontSizeSM,
    borderRadius: t.borderRadiusSM,
  }),
  DU = (t) =>
    Object.assign(
      Object.assign(
        {
          position: "relative",
          display: "inline-block",
          width: "100%",
          minWidth: 0,
          padding: `${Bt(t.paddingBlock)} ${Bt(t.paddingInline)}`,
          color: t.colorText,
          fontSize: t.inputFontSize,
          lineHeight: t.lineHeight,
          borderRadius: t.borderRadius,
          transition: `all ${t.motionDurationMid}`,
        },
        lJ(t.colorTextPlaceholder)
      ),
      {
        "textarea&": {
          maxWidth: "100%",
          height: "auto",
          minHeight: t.controlHeight,
          lineHeight: t.lineHeight,
          verticalAlign: "bottom",
          transition: `all ${t.motionDurationSlow}, height 0s`,
          resize: "vertical",
        },
        "&-lg": Object.assign({}, FU(t)),
        "&-sm": Object.assign({}, NU(t)),
        "&-rtl": { direction: "rtl" },
        "&-textarea-rtl": { direction: "rtl" },
      }
    ),
  cJ = (t) => {
    const { componentCls: e, antCls: n } = t;
    return {
      position: "relative",
      display: "table",
      width: "100%",
      borderCollapse: "separate",
      borderSpacing: 0,
      "&[class*='col-']": {
        paddingInlineEnd: t.paddingXS,
        "&:last-child": { paddingInlineEnd: 0 },
      },
      [`&-lg ${e}, &-lg > ${e}-group-addon`]: Object.assign({}, FU(t)),
      [`&-sm ${e}, &-sm > ${e}-group-addon`]: Object.assign({}, NU(t)),
      [`&-lg ${n}-select-single ${n}-select-selector`]: {
        height: t.controlHeightLG,
      },
      [`&-sm ${n}-select-single ${n}-select-selector`]: {
        height: t.controlHeightSM,
      },
      [`> ${e}`]: {
        display: "table-cell",
        "&:not(:first-child):not(:last-child)": { borderRadius: 0 },
      },
      [`${e}-group`]: {
        "&-addon, &-wrap": {
          display: "table-cell",
          width: 1,
          whiteSpace: "nowrap",
          verticalAlign: "middle",
          "&:not(:first-child):not(:last-child)": { borderRadius: 0 },
        },
        "&-wrap > *": { display: "block !important" },
        "&-addon": {
          position: "relative",
          padding: `0 ${Bt(t.paddingInline)}`,
          color: t.colorText,
          fontWeight: "normal",
          fontSize: t.inputFontSize,
          textAlign: "center",
          borderRadius: t.borderRadius,
          transition: `all ${t.motionDurationSlow}`,
          lineHeight: 1,
          [`${n}-select`]: {
            margin: `${Bt(t.calc(t.paddingBlock).add(1).mul(-1).equal())} ${Bt(
              t.calc(t.paddingInline).mul(-1).equal()
            )}`,
            [`&${n}-select-single:not(${n}-select-customize-input):not(${n}-pagination-size-changer)`]:
              {
                [`${n}-select-selector`]: {
                  backgroundColor: "inherit",
                  border: `${Bt(t.lineWidth)} ${t.lineType} transparent`,
                  boxShadow: "none",
                },
              },
            "&-open, &-focused": {
              [`${n}-select-selector`]: { color: t.colorPrimary },
            },
          },
          [`${n}-cascader-picker`]: {
            margin: `-9px ${Bt(t.calc(t.paddingInline).mul(-1).equal())}`,
            backgroundColor: "transparent",
            [`${n}-cascader-input`]: {
              textAlign: "start",
              border: 0,
              boxShadow: "none",
            },
          },
        },
      },
      [`${e}`]: {
        width: "100%",
        marginBottom: 0,
        textAlign: "inherit",
        "&:focus": { zIndex: 1, borderInlineEndWidth: 1 },
        "&:hover": {
          zIndex: 1,
          borderInlineEndWidth: 1,
          [`${e}-search-with-button &`]: { zIndex: 0 },
        },
      },
      [`> ${e}:first-child, ${e}-group-addon:first-child`]: {
        borderStartEndRadius: 0,
        borderEndEndRadius: 0,
        [`${n}-select ${n}-select-selector`]: {
          borderStartEndRadius: 0,
          borderEndEndRadius: 0,
        },
      },
      [`> ${e}-affix-wrapper`]: {
        [`&:not(:first-child) ${e}`]: {
          borderStartStartRadius: 0,
          borderEndStartRadius: 0,
        },
        [`&:not(:last-child) ${e}`]: {
          borderStartEndRadius: 0,
          borderEndEndRadius: 0,
        },
      },
      [`> ${e}:last-child, ${e}-group-addon:last-child`]: {
        borderStartStartRadius: 0,
        borderEndStartRadius: 0,
        [`${n}-select ${n}-select-selector`]: {
          borderStartStartRadius: 0,
          borderEndStartRadius: 0,
        },
      },
      [`${e}-affix-wrapper`]: {
        "&:not(:last-child)": {
          borderStartEndRadius: 0,
          borderEndEndRadius: 0,
          [`${e}-search &`]: {
            borderStartStartRadius: t.borderRadius,
            borderEndStartRadius: t.borderRadius,
          },
        },
        [`&:not(:first-child), ${e}-search &:not(:first-child)`]: {
          borderStartStartRadius: 0,
          borderEndStartRadius: 0,
        },
      },
      [`&${e}-group-compact`]: Object.assign(
        Object.assign({ display: "block" }, gY()),
        {
          [`${e}-group-addon, ${e}-group-wrap, > ${e}`]: {
            "&:not(:first-child):not(:last-child)": {
              borderInlineEndWidth: t.lineWidth,
              "&:hover": { zIndex: 1 },
              "&:focus": { zIndex: 1 },
            },
          },
          "& > *": {
            display: "inline-block",
            float: "none",
            verticalAlign: "top",
            borderRadius: 0,
          },
          [`
        & > ${e}-affix-wrapper,
        & > ${e}-number-affix-wrapper,
        & > ${n}-picker-range
      `]: { display: "inline-flex" },
          "& > *:not(:last-child)": {
            marginInlineEnd: t.calc(t.lineWidth).mul(-1).equal(),
            borderInlineEndWidth: t.lineWidth,
          },
          [`${e}`]: { float: "none" },
          [`& > ${n}-select > ${n}-select-selector,
      & > ${n}-select-auto-complete ${e},
      & > ${n}-cascader-picker ${e},
      & > ${e}-group-wrapper ${e}`]: {
            borderInlineEndWidth: t.lineWidth,
            borderRadius: 0,
            "&:hover": { zIndex: 1 },
            "&:focus": { zIndex: 1 },
          },
          [`& > ${n}-select-focused`]: { zIndex: 1 },
          [`& > ${n}-select > ${n}-select-arrow`]: { zIndex: 1 },
          [`& > *:first-child,
      & > ${n}-select:first-child > ${n}-select-selector,
      & > ${n}-select-auto-complete:first-child ${e},
      & > ${n}-cascader-picker:first-child ${e}`]: {
            borderStartStartRadius: t.borderRadius,
            borderEndStartRadius: t.borderRadius,
          },
          [`& > *:last-child,
      & > ${n}-select:last-child > ${n}-select-selector,
      & > ${n}-cascader-picker:last-child ${e},
      & > ${n}-cascader-picker-focused:last-child ${e}`]: {
            borderInlineEndWidth: t.lineWidth,
            borderStartEndRadius: t.borderRadius,
            borderEndEndRadius: t.borderRadius,
          },
          [`& > ${n}-select-auto-complete ${e}`]: { verticalAlign: "top" },
          [`${e}-group-wrapper + ${e}-group-wrapper`]: {
            marginInlineStart: t.calc(t.lineWidth).mul(-1).equal(),
            [`${e}-affix-wrapper`]: { borderRadius: 0 },
          },
          [`${e}-group-wrapper:not(:last-child)`]: {
            [`&${e}-search > ${e}-group`]: {
              [`& > ${e}-group-addon > ${e}-search-button`]: {
                borderRadius: 0,
              },
              [`& > ${e}`]: {
                borderStartStartRadius: t.borderRadius,
                borderStartEndRadius: 0,
                borderEndEndRadius: 0,
                borderEndStartRadius: t.borderRadius,
              },
            },
          },
        }
      ),
    };
  },
  uJ = (t) => {
    const { componentCls: e, controlHeightSM: n, lineWidth: r, calc: i } = t,
      s = i(n).sub(i(r).mul(2)).sub(16).div(2).equal();
    return {
      [e]: Object.assign(
        Object.assign(
          Object.assign(
            Object.assign(
              Object.assign(Object.assign({}, sp(t)), DU(t)),
              rJ(t)
            ),
            sJ(t)
          ),
          oJ(t)
        ),
        {
          '&[type="color"]': {
            height: t.controlHeight,
            [`&${e}-lg`]: { height: t.controlHeightLG },
            [`&${e}-sm`]: { height: n, paddingTop: s, paddingBottom: s },
          },
          '&[type="search"]::-webkit-search-cancel-button, &[type="search"]::-webkit-search-decoration':
            { "-webkit-appearance": "none" },
        }
      ),
    };
  },
  fJ = (t) => {
    const { componentCls: e } = t;
    return {
      [`${e}-clear-icon`]: {
        margin: 0,
        color: t.colorTextQuaternary,
        fontSize: t.fontSizeIcon,
        verticalAlign: -1,
        cursor: "pointer",
        transition: `color ${t.motionDurationSlow}`,
        "&:hover": { color: t.colorTextTertiary },
        "&:active": { color: t.colorText },
        "&-hidden": { visibility: "hidden" },
        "&-has-suffix": { margin: `0 ${Bt(t.inputAffixPadding)}` },
      },
    };
  },
  dJ = (t) => {
    const {
      componentCls: e,
      inputAffixPadding: n,
      colorTextDescription: r,
      motionDurationSlow: i,
      colorIcon: o,
      colorIconHover: s,
      iconCls: a,
    } = t;
    return {
      [`${e}-affix-wrapper`]: Object.assign(
        Object.assign(
          Object.assign(Object.assign({}, DU(t)), {
            display: "inline-flex",
            [`&:not(${e}-disabled):hover`]: {
              zIndex: 1,
              [`${e}-search-with-button &`]: { zIndex: 0 },
            },
            "&-focused, &:focus": { zIndex: 1 },
            [`> input${e}`]: {
              padding: 0,
              fontSize: "inherit",
              border: "none",
              borderRadius: 0,
              outline: "none",
              background: "transparent",
              color: "inherit",
              "&::-ms-reveal": { display: "none" },
              "&:focus": { boxShadow: "none !important" },
            },
            "&::before": {
              display: "inline-block",
              width: 0,
              visibility: "hidden",
              content: '"\\a0"',
            },
            [`${e}`]: {
              "&-prefix, &-suffix": {
                display: "flex",
                flex: "none",
                alignItems: "center",
                "> *:not(:last-child)": { marginInlineEnd: t.paddingXS },
              },
              "&-show-count-suffix": { color: r },
              "&-show-count-has-suffix": { marginInlineEnd: t.paddingXXS },
              "&-prefix": { marginInlineEnd: n },
              "&-suffix": { marginInlineStart: n },
            },
          }),
          fJ(t)
        ),
        {
          [`${a}${e}-password-icon`]: {
            color: o,
            cursor: "pointer",
            transition: `all ${i}`,
            "&:hover": { color: s },
          },
        }
      ),
    };
  },
  hJ = (t) => {
    const { componentCls: e, borderRadiusLG: n, borderRadiusSM: r } = t;
    return {
      [`${e}-group`]: Object.assign(
        Object.assign(Object.assign({}, sp(t)), cJ(t)),
        {
          "&-rtl": { direction: "rtl" },
          "&-wrapper": Object.assign(
            Object.assign(
              Object.assign(
                {
                  display: "inline-block",
                  width: "100%",
                  textAlign: "start",
                  verticalAlign: "top",
                  "&-rtl": { direction: "rtl" },
                  "&-lg": {
                    [`${e}-group-addon`]: {
                      borderRadius: n,
                      fontSize: t.inputFontSizeLG,
                    },
                  },
                  "&-sm": { [`${e}-group-addon`]: { borderRadius: r } },
                },
                iJ(t)
              ),
              aJ(t)
            ),
            {
              [`&:not(${e}-compact-first-item):not(${e}-compact-last-item)${e}-compact-item`]:
                { [`${e}, ${e}-group-addon`]: { borderRadius: 0 } },
              [`&:not(${e}-compact-last-item)${e}-compact-first-item`]: {
                [`${e}, ${e}-group-addon`]: {
                  borderStartEndRadius: 0,
                  borderEndEndRadius: 0,
                },
              },
              [`&:not(${e}-compact-first-item)${e}-compact-last-item`]: {
                [`${e}, ${e}-group-addon`]: {
                  borderStartStartRadius: 0,
                  borderEndStartRadius: 0,
                },
              },
              [`&:not(${e}-compact-last-item)${e}-compact-item`]: {
                [`${e}-affix-wrapper`]: {
                  borderStartEndRadius: 0,
                  borderEndEndRadius: 0,
                },
              },
            }
          ),
        }
      ),
    };
  },
  pJ = (t) => {
    const { componentCls: e, antCls: n } = t,
      r = `${e}-search`;
    return {
      [r]: {
        [`${e}`]: {
          "&:hover, &:focus": {
            borderColor: t.colorPrimaryHover,
            [`+ ${e}-group-addon ${r}-button:not(${n}-btn-primary)`]: {
              borderInlineStartColor: t.colorPrimaryHover,
            },
          },
        },
        [`${e}-affix-wrapper`]: { borderRadius: 0 },
        [`${e}-lg`]: {
          lineHeight: t.calc(t.lineHeightLG).sub(2e-4).equal({ unit: !1 }),
        },
        [`> ${e}-group`]: {
          [`> ${e}-group-addon:last-child`]: {
            insetInlineStart: -1,
            padding: 0,
            border: 0,
            [`${r}-button`]: {
              marginInlineEnd: -1,
              paddingTop: 0,
              paddingBottom: 0,
              borderStartStartRadius: 0,
              borderStartEndRadius: t.borderRadius,
              borderEndEndRadius: t.borderRadius,
              borderEndStartRadius: 0,
              boxShadow: "none",
            },
            [`${r}-button:not(${n}-btn-primary)`]: {
              color: t.colorTextDescription,
              "&:hover": { color: t.colorPrimaryHover },
              "&:active": { color: t.colorPrimaryActive },
              [`&${n}-btn-loading::before`]: {
                insetInlineStart: 0,
                insetInlineEnd: 0,
                insetBlockStart: 0,
                insetBlockEnd: 0,
              },
            },
          },
        },
        [`${r}-button`]: {
          height: t.controlHeight,
          "&:hover, &:focus": { zIndex: 1 },
        },
        [`&-large ${r}-button`]: { height: t.controlHeightLG },
        [`&-small ${r}-button`]: { height: t.controlHeightSM },
        "&-rtl": { direction: "rtl" },
        [`&${e}-compact-item`]: {
          [`&:not(${e}-compact-last-item)`]: {
            [`${e}-group-addon`]: {
              [`${e}-search-button`]: {
                marginInlineEnd: t.calc(t.lineWidth).mul(-1).equal(),
                borderRadius: 0,
              },
            },
          },
          [`&:not(${e}-compact-first-item)`]: {
            [`${e},${e}-affix-wrapper`]: { borderRadius: 0 },
          },
          [`> ${e}-group-addon ${e}-search-button,
        > ${e},
        ${e}-affix-wrapper`]: { "&:hover,&:focus,&:active": { zIndex: 2 } },
          [`> ${e}-affix-wrapper-focused`]: { zIndex: 2 },
        },
      },
    };
  },
  mJ = (t) => {
    const { componentCls: e, paddingLG: n } = t,
      r = `${e}-textarea`;
    return {
      [r]: {
        position: "relative",
        "&-show-count": {
          [`> ${e}`]: { height: "100%" },
          [`${e}-data-count`]: {
            position: "absolute",
            bottom: t.calc(t.fontSize).mul(t.lineHeight).mul(-1).equal(),
            insetInlineEnd: 0,
            color: t.colorTextDescription,
            whiteSpace: "nowrap",
            pointerEvents: "none",
          },
        },
        "&-allow-clear": { [`> ${e}`]: { paddingInlineEnd: n } },
        [`&-affix-wrapper${r}-has-feedback`]: {
          [`${e}`]: { paddingInlineEnd: n },
        },
        [`&-affix-wrapper${e}-affix-wrapper`]: {
          padding: 0,
          [`> textarea${e}`]: {
            fontSize: "inherit",
            border: "none",
            outline: "none",
            background: "transparent",
            "&:focus": { boxShadow: "none !important" },
          },
          [`${e}-suffix`]: {
            margin: 0,
            "> *:not(:last-child)": { marginInline: 0 },
            [`${e}-clear-icon`]: {
              position: "absolute",
              insetInlineEnd: t.paddingXS,
              insetBlockStart: t.paddingXS,
            },
            [`${r}-suffix`]: {
              position: "absolute",
              top: 0,
              insetInlineEnd: t.paddingInline,
              bottom: 0,
              zIndex: 1,
              display: "inline-flex",
              alignItems: "center",
              margin: "auto",
              pointerEvents: "none",
            },
          },
        },
      },
    };
  },
  gJ = (t) => {
    const { componentCls: e } = t;
    return {
      [`${e}-out-of-range`]: {
        [`&, & input, & textarea, ${e}-show-count-suffix, ${e}-data-count`]: {
          color: t.colorError,
        },
      },
    };
  },
  e2 = VM(
    "Input",
    (t) => {
      const e = Cs(t, eJ(t));
      return [uJ(e), mJ(e), dJ(e), hJ(e), pJ(e), gJ(e), _U(e)];
    },
    tJ
  );
function vJ(t) {
  return !!(t.addonBefore || t.addonAfter);
}
function yJ(t) {
  return !!(t.prefix || t.suffix || t.allowClear);
}
function F0(t, e, n, r) {
  if (n) {
    var i = e;
    if (e.type === "click") {
      var o = t.cloneNode(!0);
      (i = Object.create(e, {
        target: { value: o },
        currentTarget: { value: o },
      })),
        (o.value = ""),
        n(i);
      return;
    }
    if (t.type !== "file" && r !== void 0) {
      var s = t.cloneNode(!0);
      (i = Object.create(e, {
        target: { value: s },
        currentTarget: { value: s },
      })),
        (s.value = r),
        n(i);
      return;
    }
    n(i);
  }
}
function xJ(t, e) {
  if (t) {
    t.focus(e);
    var n = e || {},
      r = n.cursor;
    if (r) {
      var i = t.value.length;
      switch (r) {
        case "start":
          t.setSelectionRange(0, 0);
          break;
        case "end":
          t.setSelectionRange(i, i);
          break;
        default:
          t.setSelectionRange(0, i);
      }
    }
  }
}
var UU = function (e) {
    var n,
      r,
      i = e.inputElement,
      o = e.children,
      s = e.prefixCls,
      a = e.prefix,
      l = e.suffix,
      c = e.addonBefore,
      u = e.addonAfter,
      h = e.className,
      p = e.style,
      m = e.disabled,
      v = e.readOnly,
      S = e.focused,
      x = e.triggerFocus,
      g = e.allowClear,
      y = e.value,
      _ = e.handleReset,
      b = e.hidden,
      T = e.classes,
      M = e.classNames,
      C = e.dataAttrs,
      L = e.styles,
      A = e.components,
      P = o ?? i,
      k = (A == null ? void 0 : A.affixWrapper) || "span",
      B = (A == null ? void 0 : A.groupWrapper) || "span",
      $ = (A == null ? void 0 : A.wrapper) || "span",
      D = (A == null ? void 0 : A.groupAddon) || "span",
      X = z.useRef(null),
      j = function (he) {
        var me;
        (me = X.current) !== null &&
          me !== void 0 &&
          me.contains(he.target) &&
          (x == null || x());
      },
      Y = yJ(e),
      N = z.cloneElement(P, {
        value: y,
        className:
          Ct(P.props.className, !Y && (M == null ? void 0 : M.variant)) || null,
      });
    if (Y) {
      var V,
        G = null;
      if (g) {
        var U,
          Z = !m && !v && y,
          Q = "".concat(s, "-clear-icon"),
          te =
            Qt(g) === "object" && g !== null && g !== void 0 && g.clearIcon
              ? g.clearIcon
              : "✖";
        G = at.createElement(
          "span",
          {
            onClick: _,
            onMouseDown: function (he) {
              return he.preventDefault();
            },
            className: Ct(
              Q,
              ((U = {}),
              Me(U, "".concat(Q, "-hidden"), !Z),
              Me(U, "".concat(Q, "-has-suffix"), !!l),
              U)
            ),
            role: "button",
            tabIndex: -1,
          },
          te
        );
      }
      var re = "".concat(s, "-affix-wrapper"),
        le = Ct(
          re,
          ((V = {}),
          Me(V, "".concat(s, "-disabled"), m),
          Me(V, "".concat(re, "-disabled"), m),
          Me(V, "".concat(re, "-focused"), S),
          Me(V, "".concat(re, "-readonly"), v),
          Me(V, "".concat(re, "-input-with-clear-btn"), l && g && y),
          V),
          T == null ? void 0 : T.affixWrapper,
          M == null ? void 0 : M.affixWrapper,
          M == null ? void 0 : M.variant
        ),
        oe =
          (l || g) &&
          at.createElement(
            "span",
            {
              className: Ct(
                "".concat(s, "-suffix"),
                M == null ? void 0 : M.suffix
              ),
              style: L == null ? void 0 : L.suffix,
            },
            G,
            l
          );
      N = at.createElement(
        k,
        mn(
          {
            className: le,
            style: L == null ? void 0 : L.affixWrapper,
            onClick: j,
          },
          C == null ? void 0 : C.affixWrapper,
          { ref: X }
        ),
        a &&
          at.createElement(
            "span",
            {
              className: Ct(
                "".concat(s, "-prefix"),
                M == null ? void 0 : M.prefix
              ),
              style: L == null ? void 0 : L.prefix,
            },
            a
          ),
        N,
        oe
      );
    }
    if (vJ(e)) {
      var ve = "".concat(s, "-group"),
        Ae = "".concat(ve, "-addon"),
        Re = "".concat(ve, "-wrapper"),
        ye = Ct(
          "".concat(s, "-wrapper"),
          ve,
          T == null ? void 0 : T.wrapper,
          M == null ? void 0 : M.wrapper
        ),
        q = Ct(
          Re,
          Me({}, "".concat(Re, "-disabled"), m),
          T == null ? void 0 : T.group,
          M == null ? void 0 : M.groupWrapper
        );
      N = at.createElement(
        B,
        { className: q },
        at.createElement(
          $,
          { className: ye },
          c && at.createElement(D, { className: Ae }, c),
          N,
          u && at.createElement(D, { className: Ae }, u)
        )
      );
    }
    return at.cloneElement(N, {
      className:
        Ct((n = N.props) === null || n === void 0 ? void 0 : n.className, h) ||
        null,
      style: We(
        We({}, (r = N.props) === null || r === void 0 ? void 0 : r.style),
        p
      ),
      hidden: b,
    });
  },
  _J = ["show"];
function zU(t, e) {
  return z.useMemo(
    function () {
      var n = {};
      e && (n.show = Qt(e) === "object" && e.formatter ? e.formatter : !!e),
        (n = We(We({}, n), t));
      var r = n,
        i = r.show,
        o = Qi(r, _J);
      return We(
        We({}, o),
        {},
        {
          show: !!i,
          showFormatter: typeof i == "function" ? i : void 0,
          strategy:
            o.strategy ||
            function (s) {
              return s.length;
            },
        }
      );
    },
    [t, e]
  );
}
var SJ = [
    "autoComplete",
    "onChange",
    "onFocus",
    "onBlur",
    "onPressEnter",
    "onKeyDown",
    "prefixCls",
    "disabled",
    "htmlSize",
    "className",
    "maxLength",
    "suffix",
    "showCount",
    "count",
    "type",
    "classes",
    "classNames",
    "styles",
    "onCompositionStart",
    "onCompositionEnd",
  ],
  wJ = z.forwardRef(function (t, e) {
    var n = t.autoComplete,
      r = t.onChange,
      i = t.onFocus,
      o = t.onBlur,
      s = t.onPressEnter,
      a = t.onKeyDown,
      l = t.prefixCls,
      c = l === void 0 ? "rc-input" : l,
      u = t.disabled,
      h = t.htmlSize,
      p = t.className,
      m = t.maxLength,
      v = t.suffix,
      S = t.showCount,
      x = t.count,
      g = t.type,
      y = g === void 0 ? "text" : g,
      _ = t.classes,
      b = t.classNames,
      T = t.styles,
      M = t.onCompositionStart,
      C = t.onCompositionEnd,
      L = Qi(t, SJ),
      A = z.useState(!1),
      P = yt(A, 2),
      k = P[0],
      B = P[1],
      $ = z.useRef(!1),
      D = z.useRef(null),
      X = function (F) {
        D.current && xJ(D.current, F);
      },
      j = Pp(t.defaultValue, { value: t.value }),
      Y = yt(j, 2),
      N = Y[0],
      V = Y[1],
      G = N == null ? "" : String(N),
      U = z.useState(null),
      Z = yt(U, 2),
      Q = Z[0],
      te = Z[1],
      re = zU(x, S),
      le = re.max || m,
      oe = re.strategy(G),
      ve = !!le && oe > le;
    z.useImperativeHandle(e, function () {
      return {
        focus: X,
        blur: function () {
          var F;
          (F = D.current) === null || F === void 0 || F.blur();
        },
        setSelectionRange: function (F, K, ae) {
          var se;
          (se = D.current) === null ||
            se === void 0 ||
            se.setSelectionRange(F, K, ae);
        },
        select: function () {
          var F;
          (F = D.current) === null || F === void 0 || F.select();
        },
        input: D.current,
      };
    }),
      z.useEffect(
        function () {
          B(function (H) {
            return H && u ? !1 : H;
          });
        },
        [u]
      );
    var Ae = function (F, K, ae) {
      var se = K;
      if (
        !$.current &&
        re.exceedFormatter &&
        re.max &&
        re.strategy(K) > re.max
      ) {
        if (((se = re.exceedFormatter(K, { max: re.max })), K !== se)) {
          var de, Pe;
          te([
            ((de = D.current) === null || de === void 0
              ? void 0
              : de.selectionStart) || 0,
            ((Pe = D.current) === null || Pe === void 0
              ? void 0
              : Pe.selectionEnd) || 0,
          ]);
        }
      } else if (ae.source === "compositionEnd") return;
      V(se), D.current && F0(D.current, F, r, se);
    };
    z.useEffect(
      function () {
        if (Q) {
          var H;
          (H = D.current) === null ||
            H === void 0 ||
            H.setSelectionRange.apply(H, Nt(Q));
        }
      },
      [Q]
    );
    var Re = function (F) {
        Ae(F, F.target.value, { source: "change" });
      },
      ye = function (F) {
        ($.current = !1),
          Ae(F, F.currentTarget.value, { source: "compositionEnd" }),
          C == null || C(F);
      },
      q = function (F) {
        s && F.key === "Enter" && s(F), a == null || a(F);
      },
      xe = function (F) {
        B(!0), i == null || i(F);
      },
      he = function (F) {
        B(!1), o == null || o(F);
      },
      me = function (F) {
        V(""), X(), D.current && F0(D.current, F, r);
      },
      fe = ve && "".concat(c, "-out-of-range"),
      Ve = function () {
        var F = LM(t, [
          "prefixCls",
          "onPressEnter",
          "addonBefore",
          "addonAfter",
          "prefix",
          "suffix",
          "allowClear",
          "defaultValue",
          "showCount",
          "count",
          "classes",
          "htmlSize",
          "styles",
          "classNames",
        ]);
        return at.createElement(
          "input",
          mn({ autoComplete: n }, F, {
            onChange: Re,
            onFocus: xe,
            onBlur: he,
            onKeyDown: q,
            className: Ct(
              c,
              Me({}, "".concat(c, "-disabled"), u),
              b == null ? void 0 : b.input
            ),
            style: T == null ? void 0 : T.input,
            ref: D,
            size: h,
            type: y,
            onCompositionStart: function (ae) {
              ($.current = !0), M == null || M(ae);
            },
            onCompositionEnd: ye,
          })
        );
      },
      ge = function () {
        var F = Number(le) > 0;
        if (v || re.show) {
          var K = re.showFormatter
            ? re.showFormatter({ value: G, count: oe, maxLength: le })
            : "".concat(oe).concat(F ? " / ".concat(le) : "");
          return at.createElement(
            at.Fragment,
            null,
            re.show &&
              at.createElement(
                "span",
                {
                  className: Ct(
                    "".concat(c, "-show-count-suffix"),
                    Me({}, "".concat(c, "-show-count-has-suffix"), !!v),
                    b == null ? void 0 : b.count
                  ),
                  style: We({}, T == null ? void 0 : T.count),
                },
                K
              ),
            v
          );
        }
        return null;
      };
    return at.createElement(
      UU,
      mn({}, L, {
        prefixCls: c,
        className: Ct(p, fe),
        handleReset: me,
        value: G,
        focused: k,
        triggerFocus: X,
        suffix: ge(),
        disabled: u,
        classes: _,
        classNames: b,
        styles: T,
      }),
      Ve()
    );
  });
const bJ = (t) => {
    const { getPrefixCls: e, direction: n } = z.useContext(Wr),
      { prefixCls: r, className: i } = t,
      o = e("input-group", r),
      s = e("input"),
      [a, l] = e2(s),
      c = Ct(
        o,
        {
          [`${o}-lg`]: t.size === "large",
          [`${o}-sm`]: t.size === "small",
          [`${o}-compact`]: t.compact,
          [`${o}-rtl`]: n === "rtl",
        },
        l,
        i
      ),
      u = z.useContext(Fc),
      h = z.useMemo(
        () => Object.assign(Object.assign({}, u), { isFormItemInput: !1 }),
        [u]
      );
    return a(
      z.createElement(
        "span",
        {
          className: c,
          style: t.style,
          onMouseEnter: t.onMouseEnter,
          onMouseLeave: t.onMouseLeave,
          onFocus: t.onFocus,
          onBlur: t.onBlur,
        },
        z.createElement(Fc.Provider, { value: h }, t.children)
      )
    );
  },
  EJ = bJ;
function kU(t, e) {
  const n = z.useRef([]),
    r = () => {
      n.current.push(
        setTimeout(() => {
          var i, o, s, a;
          !((i = t.current) === null || i === void 0) &&
            i.input &&
            ((o = t.current) === null || o === void 0
              ? void 0
              : o.input.getAttribute("type")) === "password" &&
            !((s = t.current) === null || s === void 0) &&
            s.input.hasAttribute("value") &&
            ((a = t.current) === null ||
              a === void 0 ||
              a.input.removeAttribute("value"));
        })
      );
    };
  return (
    z.useEffect(
      () => (
        e && r(),
        () =>
          n.current.forEach((i) => {
            i && clearTimeout(i);
          })
      ),
      []
    ),
    r
  );
}
function MJ(t) {
  return !!(t.prefix || t.suffix || t.allowClear || t.showCount);
}
const CJ = (t) => {
  let e;
  return (
    typeof t == "object" && t != null && t.clearIcon
      ? (e = t)
      : t && (e = { clearIcon: at.createElement($M, null) }),
    e
  );
};
var TJ = function (t, e) {
  var n = {};
  for (var r in t)
    Object.prototype.hasOwnProperty.call(t, r) &&
      e.indexOf(r) < 0 &&
      (n[r] = t[r]);
  if (t != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(t); i < r.length; i++)
      e.indexOf(r[i]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(t, r[i]) &&
        (n[r[i]] = t[r[i]]);
  return n;
};
function AJ(t, e) {
  if (!t) return;
  t.focus(e);
  const { cursor: n } = e || {};
  if (n) {
    const r = t.value.length;
    switch (n) {
      case "start":
        t.setSelectionRange(0, 0);
        break;
      case "end":
        t.setSelectionRange(r, r);
        break;
      default:
        t.setSelectionRange(0, r);
        break;
    }
  }
}
const RJ = z.forwardRef((t, e) => {
    var n;
    const {
        prefixCls: r,
        bordered: i = !0,
        status: o,
        size: s,
        disabled: a,
        onBlur: l,
        onFocus: c,
        suffix: u,
        allowClear: h,
        addonAfter: p,
        addonBefore: m,
        className: v,
        style: S,
        styles: x,
        rootClassName: g,
        onChange: y,
        classNames: _,
        variant: b,
      } = t,
      T = TJ(t, [
        "prefixCls",
        "bordered",
        "status",
        "size",
        "disabled",
        "onBlur",
        "onFocus",
        "suffix",
        "allowClear",
        "addonAfter",
        "addonBefore",
        "className",
        "style",
        "styles",
        "rootClassName",
        "onChange",
        "classNames",
        "variant",
      ]),
      { getPrefixCls: M, direction: C, input: L } = at.useContext(Wr),
      A = M("input", r),
      P = z.useRef(null),
      k = Jy(A),
      [B, $, D] = e2(A, k),
      { compactSize: X, compactItemClassnames: j } = qM(A, C),
      Y = Fp((xe) => {
        var he;
        return (he = s ?? X) !== null && he !== void 0 ? he : xe;
      }),
      N = at.useContext(Rp),
      V = a ?? N,
      { status: G, hasFeedback: U, feedbackIcon: Z } = z.useContext(Fc),
      Q = TU(G, o),
      te = MJ(t) || !!U;
    z.useRef(te);
    const re = kU(P, !0),
      le = (xe) => {
        re(), l == null || l(xe);
      },
      oe = (xe) => {
        re(), c == null || c(xe);
      },
      ve = (xe) => {
        re(), y == null || y(xe);
      },
      Ae = (U || u) && at.createElement(at.Fragment, null, u, U && Z),
      Re = CJ(h),
      [ye, q] = AU(b, i);
    return B(
      at.createElement(
        wJ,
        Object.assign(
          {
            ref: jc(e, P),
            prefixCls: A,
            autoComplete: L == null ? void 0 : L.autoComplete,
          },
          T,
          {
            disabled: V,
            onBlur: le,
            onFocus: oe,
            style: Object.assign(
              Object.assign({}, L == null ? void 0 : L.style),
              S
            ),
            styles: Object.assign(
              Object.assign({}, L == null ? void 0 : L.styles),
              x
            ),
            suffix: Ae,
            allowClear: Re,
            className: Ct(v, g, D, k, j, L == null ? void 0 : L.className),
            onChange: ve,
            addonAfter:
              p &&
              at.createElement(
                $P,
                null,
                at.createElement(l3, { override: !0, status: !0 }, p)
              ),
            addonBefore:
              m &&
              at.createElement(
                $P,
                null,
                at.createElement(l3, { override: !0, status: !0 }, m)
              ),
            classNames: Object.assign(
              Object.assign(
                Object.assign({}, _),
                L == null ? void 0 : L.classNames
              ),
              {
                input: Ct(
                  {
                    [`${A}-sm`]: Y === "small",
                    [`${A}-lg`]: Y === "large",
                    [`${A}-rtl`]: C === "rtl",
                  },
                  _ == null ? void 0 : _.input,
                  (n = L == null ? void 0 : L.classNames) === null ||
                    n === void 0
                    ? void 0
                    : n.input,
                  $
                ),
                variant: Ct({ [`${A}-${ye}`]: q }, Pb(A, Q)),
                affixWrapper: Ct(
                  {
                    [`${A}-affix-wrapper-sm`]: Y === "small",
                    [`${A}-affix-wrapper-lg`]: Y === "large",
                    [`${A}-affix-wrapper-rtl`]: C === "rtl",
                  },
                  $
                ),
                wrapper: Ct({ [`${A}-group-rtl`]: C === "rtl" }, $),
                groupWrapper: Ct(
                  {
                    [`${A}-group-wrapper-sm`]: Y === "small",
                    [`${A}-group-wrapper-lg`]: Y === "large",
                    [`${A}-group-wrapper-rtl`]: C === "rtl",
                    [`${A}-group-wrapper-${ye}`]: q,
                  },
                  Pb(`${A}-group-wrapper`, Q, U),
                  $
                ),
              }
            ),
          }
        )
      )
    );
  }),
  t2 = RJ;
var PJ = {
  icon: {
    tag: "svg",
    attrs: { viewBox: "64 64 896 896", focusable: "false" },
    children: [
      {
        tag: "path",
        attrs: {
          d: "M942.2 486.2Q889.47 375.11 816.7 305l-50.88 50.88C807.31 395.53 843.45 447.4 874.7 512 791.5 684.2 673.4 766 512 766q-72.67 0-133.87-22.38L323 798.75Q408 838 512 838q288.3 0 430.2-300.3a60.29 60.29 0 000-51.5zm-63.57-320.64L836 122.88a8 8 0 00-11.32 0L715.31 232.2Q624.86 186 512 186q-288.3 0-430.2 300.3a60.3 60.3 0 000 51.5q56.69 119.4 136.5 191.41L112.48 835a8 8 0 000 11.31L155.17 889a8 8 0 0011.31 0l712.15-712.12a8 8 0 000-11.32zM149.3 512C232.6 339.8 350.7 258 512 258c54.54 0 104.13 9.36 149.12 28.39l-70.3 70.3a176 176 0 00-238.13 238.13l-83.42 83.42C223.1 637.49 183.3 582.28 149.3 512zm246.7 0a112.11 112.11 0 01146.2-106.69L401.31 546.2A112 112 0 01396 512z",
        },
      },
      {
        tag: "path",
        attrs: {
          d: "M508 624c-3.46 0-6.87-.16-10.25-.47l-52.82 52.82a176.09 176.09 0 00227.42-227.42l-52.82 52.82c.31 3.38.47 6.79.47 10.25a111.94 111.94 0 01-112 112z",
        },
      },
    ],
  },
  name: "eye-invisible",
  theme: "outlined",
};
const LJ = PJ;
var IJ = function (e, n) {
  return z.createElement(Ip, mn({}, e, { ref: n, icon: LJ }));
};
const OJ = z.forwardRef(IJ);
var FJ = {
  icon: {
    tag: "svg",
    attrs: { viewBox: "64 64 896 896", focusable: "false" },
    children: [
      {
        tag: "path",
        attrs: {
          d: "M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z",
        },
      },
    ],
  },
  name: "eye",
  theme: "outlined",
};
const NJ = FJ;
var DJ = function (e, n) {
  return z.createElement(Ip, mn({}, e, { ref: n, icon: NJ }));
};
const UJ = z.forwardRef(DJ);
var zJ = function (t, e) {
  var n = {};
  for (var r in t)
    Object.prototype.hasOwnProperty.call(t, r) &&
      e.indexOf(r) < 0 &&
      (n[r] = t[r]);
  if (t != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(t); i < r.length; i++)
      e.indexOf(r[i]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(t, r[i]) &&
        (n[r[i]] = t[r[i]]);
  return n;
};
const kJ = (t) => (t ? z.createElement(UJ, null) : z.createElement(OJ, null)),
  BJ = { click: "onClick", hover: "onMouseOver" },
  HJ = z.forwardRef((t, e) => {
    const { visibilityToggle: n = !0 } = t,
      r = typeof n == "object" && n.visible !== void 0,
      [i, o] = z.useState(() => (r ? n.visible : !1)),
      s = z.useRef(null);
    z.useEffect(() => {
      r && o(n.visible);
    }, [r, n]);
    const a = kU(s),
      l = () => {
        const { disabled: T } = t;
        T ||
          (i && a(),
          o((M) => {
            var C;
            const L = !M;
            return (
              typeof n == "object" &&
                ((C = n.onVisibleChange) === null ||
                  C === void 0 ||
                  C.call(n, L)),
              L
            );
          }));
      },
      c = (T) => {
        const { action: M = "click", iconRender: C = kJ } = t,
          L = BJ[M] || "",
          A = C(i),
          P = {
            [L]: l,
            className: `${T}-icon`,
            key: "passwordIcon",
            onMouseDown: (k) => {
              k.preventDefault();
            },
            onMouseUp: (k) => {
              k.preventDefault();
            },
          };
        return z.cloneElement(
          z.isValidElement(A) ? A : z.createElement("span", null, A),
          P
        );
      },
      { className: u, prefixCls: h, inputPrefixCls: p, size: m } = t,
      v = zJ(t, ["className", "prefixCls", "inputPrefixCls", "size"]),
      { getPrefixCls: S } = z.useContext(Wr),
      x = S("input", p),
      g = S("input-password", h),
      y = n && c(g),
      _ = Ct(g, u, { [`${g}-${m}`]: !!m }),
      b = Object.assign(
        Object.assign({}, LM(v, ["suffix", "iconRender", "visibilityToggle"])),
        { type: i ? "text" : "password", className: _, prefixCls: x, suffix: y }
      );
    return (
      m && (b.size = m),
      z.createElement(t2, Object.assign({ ref: jc(e, s) }, b))
    );
  }),
  VJ = HJ;
var GJ = function (t, e) {
  var n = {};
  for (var r in t)
    Object.prototype.hasOwnProperty.call(t, r) &&
      e.indexOf(r) < 0 &&
      (n[r] = t[r]);
  if (t != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(t); i < r.length; i++)
      e.indexOf(r[i]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(t, r[i]) &&
        (n[r[i]] = t[r[i]]);
  return n;
};
const jJ = z.forwardRef((t, e) => {
    const {
        prefixCls: n,
        inputPrefixCls: r,
        className: i,
        size: o,
        suffix: s,
        enterButton: a = !1,
        addonAfter: l,
        loading: c,
        disabled: u,
        onSearch: h,
        onChange: p,
        onCompositionStart: m,
        onCompositionEnd: v,
      } = t,
      S = GJ(t, [
        "prefixCls",
        "inputPrefixCls",
        "className",
        "size",
        "suffix",
        "enterButton",
        "addonAfter",
        "loading",
        "disabled",
        "onSearch",
        "onChange",
        "onCompositionStart",
        "onCompositionEnd",
      ]),
      { getPrefixCls: x, direction: g } = z.useContext(Wr),
      y = z.useRef(!1),
      _ = x("input-search", n),
      b = x("input", r),
      { compactSize: T } = qM(_, g),
      M = Fp((G) => {
        var U;
        return (U = o ?? T) !== null && U !== void 0 ? U : G;
      }),
      C = z.useRef(null),
      L = (G) => {
        G &&
          G.target &&
          G.type === "click" &&
          h &&
          h(G.target.value, G, { source: "clear" }),
          p && p(G);
      },
      A = (G) => {
        var U;
        document.activeElement ===
          ((U = C.current) === null || U === void 0 ? void 0 : U.input) &&
          G.preventDefault();
      },
      P = (G) => {
        var U, Z;
        h &&
          h(
            (Z =
              (U = C.current) === null || U === void 0 ? void 0 : U.input) ===
              null || Z === void 0
              ? void 0
              : Z.value,
            G,
            { source: "input" }
          );
      },
      k = (G) => {
        y.current || c || P(G);
      },
      B = typeof a == "boolean" ? z.createElement(UQ, null) : null,
      $ = `${_}-button`;
    let D;
    const X = a || {},
      j = X.type && X.type.__ANT_BUTTON === !0;
    j || X.type === "button"
      ? (D = R0(
          X,
          Object.assign(
            {
              onMouseDown: A,
              onClick: (G) => {
                var U, Z;
                (Z =
                  (U = X == null ? void 0 : X.props) === null || U === void 0
                    ? void 0
                    : U.onClick) === null ||
                  Z === void 0 ||
                  Z.call(U, G),
                  P(G);
              },
              key: "enterButton",
            },
            j ? { className: $, size: M } : {}
          )
        ))
      : (D = z.createElement(
          Oo,
          {
            className: $,
            type: a ? "primary" : void 0,
            size: M,
            disabled: u,
            key: "enterButton",
            onMouseDown: A,
            onClick: P,
            loading: c,
            icon: B,
          },
          a
        )),
      l && (D = [D, R0(l, { key: "addonAfter" })]);
    const Y = Ct(
        _,
        {
          [`${_}-rtl`]: g === "rtl",
          [`${_}-${M}`]: !!M,
          [`${_}-with-button`]: !!a,
        },
        i
      ),
      N = (G) => {
        (y.current = !0), m == null || m(G);
      },
      V = (G) => {
        (y.current = !1), v == null || v(G);
      };
    return z.createElement(
      t2,
      Object.assign({ ref: jc(C, e), onPressEnter: k }, S, {
        size: M,
        onCompositionStart: N,
        onCompositionEnd: V,
        prefixCls: b,
        addonAfter: D,
        suffix: s,
        onChange: L,
        className: Y,
        disabled: u,
      })
    );
  }),
  WJ = jJ;
var $J = `
  min-height:0 !important;
  max-height:none !important;
  height:0 !important;
  visibility:hidden !important;
  overflow:hidden !important;
  position:absolute !important;
  z-index:-1000 !important;
  top:0 !important;
  right:0 !important;
  pointer-events: none !important;
`,
  XJ = [
    "letter-spacing",
    "line-height",
    "padding-top",
    "padding-bottom",
    "font-family",
    "font-weight",
    "font-size",
    "font-variant",
    "text-rendering",
    "text-transform",
    "width",
    "text-indent",
    "padding-left",
    "padding-right",
    "border-width",
    "box-sizing",
    "word-break",
    "white-space",
  ],
  V_ = {},
  fo;
function qJ(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1,
    n =
      t.getAttribute("id") ||
      t.getAttribute("data-reactid") ||
      t.getAttribute("name");
  if (e && V_[n]) return V_[n];
  var r = window.getComputedStyle(t),
    i =
      r.getPropertyValue("box-sizing") ||
      r.getPropertyValue("-moz-box-sizing") ||
      r.getPropertyValue("-webkit-box-sizing"),
    o =
      parseFloat(r.getPropertyValue("padding-bottom")) +
      parseFloat(r.getPropertyValue("padding-top")),
    s =
      parseFloat(r.getPropertyValue("border-bottom-width")) +
      parseFloat(r.getPropertyValue("border-top-width")),
    a = XJ.map(function (c) {
      return "".concat(c, ":").concat(r.getPropertyValue(c));
    }).join(";"),
    l = { sizingStyle: a, paddingSize: o, borderSize: s, boxSizing: i };
  return e && n && (V_[n] = l), l;
}
function YJ(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1,
    n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null,
    r = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
  fo ||
    ((fo = document.createElement("textarea")),
    fo.setAttribute("tab-index", "-1"),
    fo.setAttribute("aria-hidden", "true"),
    document.body.appendChild(fo)),
    t.getAttribute("wrap")
      ? fo.setAttribute("wrap", t.getAttribute("wrap"))
      : fo.removeAttribute("wrap");
  var i = qJ(t, e),
    o = i.paddingSize,
    s = i.borderSize,
    a = i.boxSizing,
    l = i.sizingStyle;
  fo.setAttribute("style", "".concat(l, ";").concat($J)),
    (fo.value = t.value || t.placeholder || "");
  var c = void 0,
    u = void 0,
    h,
    p = fo.scrollHeight;
  if (
    (a === "border-box" ? (p += s) : a === "content-box" && (p -= o),
    n !== null || r !== null)
  ) {
    fo.value = " ";
    var m = fo.scrollHeight - o;
    n !== null &&
      ((c = m * n),
      a === "border-box" && (c = c + o + s),
      (p = Math.max(c, p))),
      r !== null &&
        ((u = m * r),
        a === "border-box" && (u = u + o + s),
        (h = p > u ? "" : "hidden"),
        (p = Math.min(u, p)));
  }
  var v = { height: p, overflowY: h, resize: "none" };
  return c && (v.minHeight = c), u && (v.maxHeight = u), v;
}
var KJ = [
    "prefixCls",
    "onPressEnter",
    "defaultValue",
    "value",
    "autoSize",
    "onResize",
    "className",
    "style",
    "disabled",
    "onChange",
    "onInternalAutoSize",
  ],
  G_ = 0,
  j_ = 1,
  W_ = 2,
  ZJ = z.forwardRef(function (t, e) {
    var n = t,
      r = n.prefixCls;
    n.onPressEnter;
    var i = n.defaultValue,
      o = n.value,
      s = n.autoSize,
      a = n.onResize,
      l = n.className,
      c = n.style,
      u = n.disabled,
      h = n.onChange;
    n.onInternalAutoSize;
    var p = Qi(n, KJ),
      m = Pp(i, {
        value: o,
        postState: function (te) {
          return te ?? "";
        },
      }),
      v = yt(m, 2),
      S = v[0],
      x = v[1],
      g = function (te) {
        x(te.target.value), h == null || h(te);
      },
      y = z.useRef();
    z.useImperativeHandle(e, function () {
      return { textArea: y.current };
    });
    var _ = z.useMemo(
        function () {
          return s && Qt(s) === "object" ? [s.minRows, s.maxRows] : [];
        },
        [s]
      ),
      b = yt(_, 2),
      T = b[0],
      M = b[1],
      C = !!s,
      L = function () {
        try {
          if (document.activeElement === y.current) {
            var te = y.current,
              re = te.selectionStart,
              le = te.selectionEnd,
              oe = te.scrollTop;
            y.current.setSelectionRange(re, le), (y.current.scrollTop = oe);
          }
        } catch {}
      },
      A = z.useState(W_),
      P = yt(A, 2),
      k = P[0],
      B = P[1],
      $ = z.useState(),
      D = yt($, 2),
      X = D[0],
      j = D[1],
      Y = function () {
        B(G_);
      };
    A0(
      function () {
        C && Y();
      },
      [o, T, M, C]
    ),
      A0(
        function () {
          if (k === G_) B(j_);
          else if (k === j_) {
            var Q = YJ(y.current, !1, T, M);
            B(W_), j(Q);
          } else L();
        },
        [k]
      );
    var N = z.useRef(),
      V = function () {
        fa.cancel(N.current);
      },
      G = function (te) {
        k === W_ &&
          (a == null || a(te),
          s &&
            (V(),
            (N.current = fa(function () {
              Y();
            }))));
      };
    z.useEffect(function () {
      return V;
    }, []);
    var U = C ? X : null,
      Z = We(We({}, c), U);
    return (
      (k === G_ || k === j_) &&
        ((Z.overflowY = "hidden"), (Z.overflowX = "hidden")),
      z.createElement(
        eD,
        { onResize: G, disabled: !(s || a) },
        z.createElement(
          "textarea",
          mn({}, p, {
            ref: y,
            style: Z,
            className: Ct(r, l, Me({}, "".concat(r, "-disabled"), u)),
            disabled: u,
            value: S,
            onChange: g,
          })
        )
      )
    );
  }),
  QJ = [
    "defaultValue",
    "value",
    "onFocus",
    "onBlur",
    "onChange",
    "allowClear",
    "maxLength",
    "onCompositionStart",
    "onCompositionEnd",
    "suffix",
    "prefixCls",
    "showCount",
    "count",
    "className",
    "style",
    "disabled",
    "hidden",
    "classNames",
    "styles",
    "onResize",
  ],
  JJ = at.forwardRef(function (t, e) {
    var n,
      r,
      i = t.defaultValue,
      o = t.value,
      s = t.onFocus,
      a = t.onBlur,
      l = t.onChange,
      c = t.allowClear,
      u = t.maxLength,
      h = t.onCompositionStart,
      p = t.onCompositionEnd,
      m = t.suffix,
      v = t.prefixCls,
      S = v === void 0 ? "rc-textarea" : v,
      x = t.showCount,
      g = t.count,
      y = t.className,
      _ = t.style,
      b = t.disabled,
      T = t.hidden,
      M = t.classNames,
      C = t.styles,
      L = t.onResize,
      A = Qi(t, QJ),
      P = Pp(i, { value: o, defaultValue: i }),
      k = yt(P, 2),
      B = k[0],
      $ = k[1],
      D = B == null ? "" : String(B),
      X = at.useState(!1),
      j = yt(X, 2),
      Y = j[0],
      N = j[1],
      V = at.useRef(!1),
      G = at.useState(null),
      U = yt(G, 2),
      Z = U[0],
      Q = U[1],
      te = z.useRef(null),
      re = function () {
        var ze;
        return (ze = te.current) === null || ze === void 0
          ? void 0
          : ze.textArea;
      },
      le = function () {
        re().focus();
      };
    z.useImperativeHandle(e, function () {
      return {
        resizableTextArea: te.current,
        focus: le,
        blur: function () {
          re().blur();
        },
      };
    }),
      z.useEffect(
        function () {
          N(function (Ne) {
            return !b && Ne;
          });
        },
        [b]
      );
    var oe = at.useState(null),
      ve = yt(oe, 2),
      Ae = ve[0],
      Re = ve[1];
    at.useEffect(
      function () {
        if (Ae) {
          var Ne;
          (Ne = re()).setSelectionRange.apply(Ne, Nt(Ae));
        }
      },
      [Ae]
    );
    var ye = zU(g, x),
      q = (n = ye.max) !== null && n !== void 0 ? n : u,
      xe = Number(q) > 0,
      he = ye.strategy(D),
      me = !!q && he > q,
      fe = function (ze, Ee) {
        var Je = Ee;
        !V.current &&
          ye.exceedFormatter &&
          ye.max &&
          ye.strategy(Ee) > ye.max &&
          ((Je = ye.exceedFormatter(Ee, { max: ye.max })),
          Ee !== Je && Re([re().selectionStart || 0, re().selectionEnd || 0])),
          $(Je),
          F0(ze.currentTarget, ze, l, Je);
      },
      Ve = function (ze) {
        (V.current = !0), h == null || h(ze);
      },
      ge = function (ze) {
        (V.current = !1), fe(ze, ze.currentTarget.value), p == null || p(ze);
      },
      H = function (ze) {
        fe(ze, ze.target.value);
      },
      F = function (ze) {
        var Ee = A.onPressEnter,
          Je = A.onKeyDown;
        ze.key === "Enter" && Ee && Ee(ze), Je == null || Je(ze);
      },
      K = function (ze) {
        N(!0), s == null || s(ze);
      },
      ae = function (ze) {
        N(!1), a == null || a(ze);
      },
      se = function (ze) {
        $(""), le(), F0(re(), ze, l);
      },
      de = m,
      Pe;
    ye.show &&
      (ye.showFormatter
        ? (Pe = ye.showFormatter({ value: D, count: he, maxLength: q }))
        : (Pe = "".concat(he).concat(xe ? " / ".concat(q) : "")),
      (de = at.createElement(
        at.Fragment,
        null,
        de,
        at.createElement(
          "span",
          {
            className: Ct(
              "".concat(S, "-data-count"),
              M == null ? void 0 : M.count
            ),
            style: C == null ? void 0 : C.count,
          },
          Pe
        )
      )));
    var ke = function (ze) {
        var Ee;
        L == null || L(ze),
          (Ee = re()) !== null && Ee !== void 0 && Ee.style.height && Q(!0);
      },
      Be = !A.autoSize && !x && !c;
    return at.createElement(
      UU,
      {
        value: D,
        allowClear: c,
        handleReset: se,
        suffix: de,
        prefixCls: S,
        classNames: We(
          We({}, M),
          {},
          {
            affixWrapper: Ct(
              M == null ? void 0 : M.affixWrapper,
              ((r = {}),
              Me(r, "".concat(S, "-show-count"), x),
              Me(r, "".concat(S, "-textarea-allow-clear"), c),
              r)
            ),
          }
        ),
        disabled: b,
        focused: Y,
        className: Ct(y, me && "".concat(S, "-out-of-range")),
        style: We(We({}, _), Z && !Be ? { height: "auto" } : {}),
        dataAttrs: {
          affixWrapper: { "data-count": typeof Pe == "string" ? Pe : void 0 },
        },
        hidden: T,
      },
      at.createElement(
        ZJ,
        mn({}, A, {
          maxLength: u,
          onKeyDown: F,
          onChange: H,
          onFocus: K,
          onBlur: ae,
          onCompositionStart: Ve,
          onCompositionEnd: ge,
          className: Ct(M == null ? void 0 : M.textarea),
          style: We(
            We({}, C == null ? void 0 : C.textarea),
            {},
            { resize: _ == null ? void 0 : _.resize }
          ),
          disabled: b,
          prefixCls: S,
          onResize: ke,
          ref: te,
        })
      )
    );
  }),
  eee = function (t, e) {
    var n = {};
    for (var r in t)
      Object.prototype.hasOwnProperty.call(t, r) &&
        e.indexOf(r) < 0 &&
        (n[r] = t[r]);
    if (t != null && typeof Object.getOwnPropertySymbols == "function")
      for (var i = 0, r = Object.getOwnPropertySymbols(t); i < r.length; i++)
        e.indexOf(r[i]) < 0 &&
          Object.prototype.propertyIsEnumerable.call(t, r[i]) &&
          (n[r[i]] = t[r[i]]);
    return n;
  };
const tee = z.forwardRef((t, e) => {
    var n;
    const {
        prefixCls: r,
        bordered: i = !0,
        size: o,
        disabled: s,
        status: a,
        allowClear: l,
        classNames: c,
        rootClassName: u,
        className: h,
        variant: p,
      } = t,
      m = eee(t, [
        "prefixCls",
        "bordered",
        "size",
        "disabled",
        "status",
        "allowClear",
        "classNames",
        "rootClassName",
        "className",
        "variant",
      ]),
      { getPrefixCls: v, direction: S } = z.useContext(Wr),
      x = Fp(o),
      g = z.useContext(Rp),
      y = s ?? g,
      { status: _, hasFeedback: b, feedbackIcon: T } = z.useContext(Fc),
      M = TU(_, a),
      C = z.useRef(null);
    z.useImperativeHandle(e, () => {
      var j;
      return {
        resizableTextArea:
          (j = C.current) === null || j === void 0
            ? void 0
            : j.resizableTextArea,
        focus: (Y) => {
          var N, V;
          AJ(
            (V =
              (N = C.current) === null || N === void 0
                ? void 0
                : N.resizableTextArea) === null || V === void 0
              ? void 0
              : V.textArea,
            Y
          );
        },
        blur: () => {
          var Y;
          return (Y = C.current) === null || Y === void 0 ? void 0 : Y.blur();
        },
      };
    });
    const L = v("input", r);
    let A;
    typeof l == "object" && l != null && l.clearIcon
      ? (A = l)
      : l && (A = { clearIcon: z.createElement($M, null) });
    const P = Jy(L),
      [k, B, $] = e2(L, P),
      [D, X] = AU(p, i);
    return k(
      z.createElement(
        JJ,
        Object.assign({}, m, {
          disabled: y,
          allowClear: A,
          className: Ct($, P, h, u),
          classNames: Object.assign(Object.assign({}, c), {
            textarea: Ct(
              { [`${L}-sm`]: x === "small", [`${L}-lg`]: x === "large" },
              B,
              c == null ? void 0 : c.textarea
            ),
            variant: Ct({ [`${L}-${D}`]: X }, Pb(L, M)),
            affixWrapper: Ct(
              `${L}-textarea-affix-wrapper`,
              {
                [`${L}-affix-wrapper-rtl`]: S === "rtl",
                [`${L}-affix-wrapper-sm`]: x === "small",
                [`${L}-affix-wrapper-lg`]: x === "large",
                [`${L}-textarea-show-count`]:
                  t.showCount ||
                  ((n = t.count) === null || n === void 0 ? void 0 : n.show),
              },
              B
            ),
          }),
          prefixCls: L,
          suffix:
            b &&
            z.createElement("span", { className: `${L}-textarea-suffix` }, T),
          ref: C,
        })
      )
    );
  }),
  nee = tee,
  Up = t2;
Up.Group = EJ;
Up.Search = WJ;
Up.TextArea = nee;
Up.Password = VJ;
const ree = Up,
  iee = "images/correct-LGGHlV9_.mp3",
  oee = () => {
    const {
        isConverted: t,
        REvalue: e,
        clickedStep: n,
        progressSteps: r,
        firstRe: i,
        secondRe: o,
        task: s,
        isInfo: a,
        thirdRe: l,
        fourthRe: c,
      } = Jo(($) => $.NFA),
      u = Vc(),
      [h, p] = z.useState([]),
      [m, v] = z.useState(null),
      [S, x] = z.useState(!1),
      [g, y] = z.useState(!1),
      _ = new Audio(iee),
      b = ($) => {
        const { value: D } = $.target;
        u(S_()),
          u(
            Lu({
              val: D,
              task:
                D === "(a|b)*"
                  ? 1
                  : D === "(ab)*"
                  ? 2
                  : D === "(a|b)*abb"
                  ? 3
                  : D === "a|b"
                  ? 4
                  : D === "a*b"
                  ? 5
                  : D === "ab"
                  ? 6
                  : 0,
            })
          );
      },
      T = ($) => {
        const D = { ...n, [$]: !n[$] };
        u(t$(D));
      },
      M = ($) => {
        if (!h.includes($)) {
          const D = [...h, $];
          if ((p(D), D.length === 2 && m)) {
            const X = m === "." ? "ab" : `a${m}b`;
            u(S_()),
              u(
                Lu({
                  val: X,
                  task: X === "a|b" ? 4 : X === "a*b" ? 5 : X === "ab" ? 6 : 0,
                })
              );
          }
        }
      },
      C = ($) => {
        if ((v($), h.length === 2)) {
          const D = $ === "." ? "ab" : `a${$}b`;
          u(S_()),
            u(
              Lu({
                val: D,
                task: D === "a|b" ? 4 : D === "a*b" ? 5 : D === "ab" ? 6 : 0,
              })
            );
        }
      },
      L = () => {
        e === "(a|b)*" ||
        e === "(ab)*" ||
        e === "(a|b)*abb" ||
        e === "a|b" ||
        e === "a*b" ||
        e === "ab"
          ? (u(e$(!0)), u(Oa([1])), console.log("Updated progressSteps:", [1]))
          : alert("Please enter correct Regular Expression");
      },
      A = ($) => {
        if (
          e === "(a|b)*" ||
          e === "(ab)*" ||
          e === "(a|b)*abb" ||
          e === "a|b" ||
          e === "a*b" ||
          e === "ab"
        )
          if ((_.play(), $ === "a" || $ === "Add a"))
            u(Kg({ ...l, a: !0 })),
              u(qg({ ...i, a: !0 })),
              u(Yg({ ...o, a: !0 })),
              g && u(Zg({ ...c, a: !0 })),
              !r.includes(2) && s === 5
                ? u(Oa([...r, 2]))
                : r.includes(2) || u(Oa([...r, 2])),
              u(Iu("State created for 'a'"));
          else if ($ === "b" || $ === "Add b")
            console.log("Add b clicked, progressSteps before:", r),
              u(qg({ ...i, b: !0 })),
              u(Yg({ ...o, b: !0 })),
              u(Kg({ ...l, b: !0 })),
              g && u(Zg({ ...c, b: !0 })),
              r.includes(3) ||
                (u(Oa([...r, 3])),
                console.log("progressSteps after:", [...r, 3])),
              u(Iu("State created for 'b'"));
          else if ($ === "Add union")
            u(qg({ ...i, union: !0 })),
              u(Kg({ ...l, union: !0 })),
              r.includes(3) || u(Oa([...r, 3])),
              u(Iu("Union operation applied"));
          else if ($ === "Add Kleene star")
            u(qg({ ...i, kleene: !0 })),
              u(Yg({ ...o, kleene: !0 })),
              u(Kg({ ...l, kleene: !0 })),
              s === 3 && (y(!0), u(Lu({ val: e, task: 4 }))),
              !r.includes(3) && s === 5
                ? u(Oa([...r, 3]))
                : r.includes(4) || u(Oa([...r, 4])),
              u(Iu("Kleene star operation applied"));
          else if ($ === "Add Concat" || $ === "concat") {
            if (s === 5 && !r.includes(3)) {
              alert("Please create the 'b' state first (Step 3)");
              return;
            }
            u(Yg({ ...o, concat: !0 })),
              g && u(Zg({ ...c, concat: !0 })),
              r.includes(4) || u(Oa([...r, 4])),
              u(J7(!0)),
              u(Iu("Concatenation operation applied"));
          } else
            $ === "b1" &&
              (u(Zg({ ...c, b1: !0 })),
              u(Iu("Additional state created for 'b'")));
        else alert("Please enter correct Regular Expression");
      },
      P = [0, i, o, l, c, o, o],
      k = ($) => {
        switch ($) {
          case "1":
            u(Lu({ val: e, task: 3 }));
            break;
          case "2":
            u(Lu({ val: e, task: 4 }));
            break;
        }
      },
      B = () => {
        switch (s) {
          case 1:
            return ki[1];
          case 2:
            return ki[2];
          case 3:
            return ki[3];
          case 4:
            return e === "a|b" ? ki[5] : ki[4];
          case 5:
            return ki[6];
          case 6:
            return ki[7];
          default:
            return ki[0];
        }
      };
    return I.jsxs("div", {
      style: {
        width: "100%",
        minWidth: "100%",
        maxWidth: "100%",
        height: "100%",
        backgroundColor: "#e9edf3",
        borderTopLeftRadius: 50,
        borderBottomLeftRadius: 50,
        display: "flex",
        flexDirection: "column",
        padding: 20,
        boxSizing: "border-box",
        overflowX: "hidden",
      },
      children: [
        I.jsx("h4", {
          style: { textAlign: "center", marginBottom: 20 },
          children: "CONVERT RE TO NFA",
        }),
        I.jsxs("div", {
          style: {
            backgroundColor: "white",
            borderRadius: 20,
            padding: 15,
            marginBottom: 20,
            width: "100%",
            boxSizing: "border-box",
          },
          children: [
            I.jsx("h5", {
              style: { textAlign: "center", color: "black", marginBottom: 15 },
              children: "Build Regular Expression",
            }),
            I.jsxs("div", {
              style: {
                display: "flex",
                alignItems: "center",
                gap: 20,
                marginBottom: 15,
              },
              children: [
                I.jsxs("div", {
                  children: [
                    I.jsx("h6", {
                      style: { color: "black", marginBottom: 5 },
                      children: "Choose Variables:",
                    }),
                    I.jsxs("div", {
                      style: { display: "flex", gap: 10 },
                      children: [
                        I.jsx(Oo, {
                          onClick: () => M("a"),
                          disabled: h.includes("a"),
                          type: h.includes("a") ? "primary" : "default",
                          children: "a",
                        }),
                        I.jsx(Oo, {
                          onClick: () => M("b"),
                          disabled: h.includes("b"),
                          type: h.includes("b") ? "primary" : "default",
                          children: "b",
                        }),
                      ],
                    }),
                  ],
                }),
                h.length === 2 &&
                  I.jsxs("div", {
                    children: [
                      I.jsx("h6", {
                        style: { color: "black", marginBottom: 5 },
                        children: "Choose Operation:",
                      }),
                      I.jsxs("div", {
                        style: { display: "flex", gap: 10 },
                        children: [
                          I.jsx(Oo, {
                            onClick: () => C("*"),
                            type: m === "*" ? "primary" : "default",
                            children: "*",
                          }),
                          I.jsx(Oo, {
                            onClick: () => C("|"),
                            type: m === "|" ? "primary" : "default",
                            children: "|",
                          }),
                          I.jsx(Oo, {
                            onClick: () => C("."),
                            type: m === "." ? "primary" : "default",
                            children: ".",
                          }),
                        ],
                      }),
                    ],
                  }),
              ],
            }),
            h.length === 2 &&
              m &&
              I.jsx("div", {
                style: {
                  textAlign: "center",
                  color: "black",
                  marginBottom: 15,
                },
              }),
            I.jsx(Oo, {
              style: { width: "100%" },
              onClick: () => x(!S),
              children: S ? "Hide Advanced" : "Show Advanced",
            }),
            S &&
              I.jsxs(cv.Group, {
                style: {
                  display: "flex",
                  flexDirection: "column",
                  marginTop: 15,
                },
                onChange: b,
                value: e,
                children: [
                  I.jsx(cv, {
                    style: { margin: 5 },
                    value: "(a|b)*",
                    children: "(a|b)*",
                  }),
                  I.jsx(cv, {
                    style: { margin: 5 },
                    value: "(ab)*",
                    children: "(ab)*",
                  }),
                  I.jsx(cv, {
                    style: { margin: 5 },
                    value: "(a|b)*abb",
                    children: "(a|b)*abb",
                  }),
                ],
              }),
          ],
        }),
        I.jsxs("div", {
          style: {
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
            marginBottom: 20,
            width: "100%",
            boxSizing: "border-box",
          },
          children: [
            I.jsx(ree, {
              style: { width: 250, color: "green", fontWeight: 800 },
              placeholder: "Enter RE",
              value: e,
              disabled: !0,
            }),
            I.jsx(Oo, {
              style: { marginLeft: 10 },
              onClick: L,
              children: "Convert",
            }),
          ],
        }),
        t &&
          I.jsxs("div", {
            style: {
              backgroundColor: "white",
              borderRadius: 20,
              padding: 15,
              maxHeight: "50%",
              overflowY: "auto",
              flexShrink: 0,
              width: "100%",
              boxSizing: "border-box",
            },
            children: [
              I.jsxs("div", {
                style: {
                  display: "flex",
                  justifyContent: "space-between",
                  alignItems: "center",
                },
                children: [
                  I.jsx("h5", {
                    style: { color: "green", textDecoration: "underline" },
                    children: "Steps:",
                  }),
                  I.jsxs("div", {
                    children: [
                      s === 3 &&
                        I.jsx(Oo, {
                          style: {
                            marginInline: 3,
                            outline: "none",
                            background: s === 3 ? "#8E8AFF" : "none",
                            color: s === 3 ? "white" : "black",
                          },
                          onClick: () => k("1"),
                          children: "(a|b)*",
                        }),
                      s === 3 &&
                        g &&
                        I.jsx(Oo, {
                          style: {
                            marginInline: 3,
                            outline: "none",
                            background: s === 4 ? "#8E8AFF" : "none",
                            color: s === 4 ? "white" : "black",
                          },
                          onClick: () => k("2"),
                          children: "abb",
                        }),
                    ],
                  }),
                ],
              }),
              s === 3 &&
                I.jsx("p", {
                  style: { fontSize: 15 },
                  children:
                    "The * (asterisk) operator has higher precedence than concatenation. Therefore, the (a|b) part is applied first.",
                }),
              I.jsx("ul", {
                id: "style-1",
                style: { margin: 0, padding: 5 },
                children: B().map(($, D) => {
                  const X = r.includes($.id),
                    j = !X && $.id === Math.max(0, ...r) + 1 && r.length > 0;
                  return I.jsx(
                    "div",
                    {
                      style: { display: "flex", flexDirection: "row" },
                      children:
                        (X || j) &&
                        I.jsxs(I.Fragment, {
                          children: [
                            I.jsxs("span", {
                              style: { marginTop: 19, marginRight: 2 },
                              children: [$.id, "."],
                            }),
                            I.jsxs("li", {
                              style: {
                                display: "flex",
                                flexDirection: "column",
                              },
                              children: [
                                $.flow,
                                I.jsx("div", {
                                  children: I.jsx(Oo, {
                                    style: {
                                      width: "130px",
                                      marginLeft: 15,
                                      marginTop: 5,
                                      marginRight: 15,
                                    },
                                    onClick: () => {
                                      A($.btn), u(Gc(!0)), u(Gf($.info));
                                    },
                                    disabled: P[s] && P[s][$.name] === !0,
                                    children: $.btn,
                                  }),
                                }),
                              ],
                            }),
                          ],
                        }),
                    },
                    D
                  );
                }),
              }),
              I.jsx("div", {
                style: { marginTop: 20 },
                children: I.jsxs("ul", {
                  children: [
                    (e === "(a|b)*" ||
                      e === "(a|b)*abb" ||
                      e === "a|b" ||
                      e === "a*b" ||
                      e === "ab") &&
                      I.jsxs("li", {
                        style: {
                          listStyle: "none",
                          display: "flex",
                          alignItems: "center",
                          color: n.character ? "black" : "grey",
                          fontSize: 12,
                          marginBlock: 5,
                          cursor: "pointer",
                          fontWeight: 700,
                        },
                        onClick: () => T("character"),
                        children: [
                          I.jsx("div", {
                            style: {
                              width: 25,
                              height: 5,
                              background: "black",
                              marginRight: 5,
                            },
                          }),
                          "Character",
                        ],
                      }),
                    (e === "(a|b)*" || e === "(a|b)*abb" || e === "a|b") &&
                      I.jsxs("li", {
                        style: {
                          listStyle: "none",
                          display: "flex",
                          alignItems: "center",
                          color: n.union ? "black" : "grey",
                          fontSize: 12,
                          marginBlock: 5,
                          cursor: "pointer",
                          fontWeight: 700,
                        },
                        onClick: () => T("union"),
                        children: [
                          I.jsx("div", {
                            style: {
                              width: 25,
                              height: 5,
                              background: "#00DFFF",
                              marginRight: 5,
                            },
                          }),
                          "Union",
                        ],
                      }),
                    (e === "(ab)*" || e === "(a|b)*abb" || e === "ab") &&
                      I.jsxs("li", {
                        style: {
                          listStyle: "none",
                          display: "flex",
                          alignItems: "center",
                          color: n.concatenation ? "black" : "grey",
                          fontSize: 12,
                          marginBlock: 5,
                          cursor: "pointer",
                          fontWeight: 700,
                        },
                        onClick: () => T("concatenation"),
                        children: [
                          I.jsx("div", {
                            style: {
                              width: 25,
                              height: 5,
                              background: "#FF00D1",
                              marginRight: 5,
                            },
                          }),
                          "Concatenation",
                        ],
                      }),
                    (e === "(a|b)*" ||
                      e === "(ab)*" ||
                      e === "(a|b)*abb" ||
                      e === "a*b") &&
                      I.jsxs("li", {
                        style: {
                          listStyle: "none",
                          display: "flex",
                          alignItems: "center",
                          color: n["Kleene star"] ? "black" : "grey",
                          fontSize: 12,
                          marginBlock: 5,
                          cursor: "pointer",
                          fontWeight: 700,
                        },
                        onClick: () => T("Kleene star"),
                        children: [
                          I.jsx("div", {
                            style: {
                              width: 25,
                              height: 5,
                              background: "#FFA305",
                              marginRight: 5,
                            },
                          }),
                          "Kleene star",
                        ],
                      }),
                  ],
                }),
              }),
            ],
          }),
      ],
    });
  },
  see = () => {
    const t = Vc(),
      { isInfo: e, infoCom: n } = Jo((r) => r.NFA);
    return (
      e &&
      I.jsxs("div", {
        style: {
          width: "100%",
          height: "90%",
          background: "#E9EDF3",
          borderTopRightRadius: 50,
          borderBottomRightRadius: 50,
          display: "flex",
          flex: 1,
          flexDirection: "column",
        },
        children: [
          I.jsxs("div", {
            style: {
              display: "flex",
              justifyContent: "space-between",
              alignItems: "center",
              flex: 0.1,
            },
            children: [
              I.jsx("h4", {
                style: {
                  marginLeft: 10,
                  color: "green",
                  textTransform: "uppercase",
                },
                children: "Operations :",
              }),
              I.jsx($M, {
                onClick: () => t(Gc(!1)),
                style: { color: "#0c0f21", fontSize: 30, marginRight: 20 },
              }),
            ],
          }),
          I.jsx("div", {
            style: {
              display: "flex",
              flex: 0.8,
              paddingInline: 25,
              overflow: "auto",
              background: "white",
              color: "black",
            },
            id: "style-1",
            children: n,
          }),
        ],
      })
    );
  },
  aee = () => {
    const { isInfo: t } = Jo((r) => r.NFA),
      [e, n] = z.useState(!1);
    return I.jsxs("div", {
      style: {
        display: "flex",
        height: "100vh",
        width: "100vw",
        position: "relative",
        background: "#0c0f21",
        overflow: "hidden",
      },
      id: "style-1",
      children: [
        I.jsx("div", {
          style: {
            width: e ? "25%" : "auto",
            minWidth: e ? "25%" : "auto",
            maxWidth: e ? "25%" : "auto",
            height: "100%",
            overflowY: "auto",
            display: "flex",
            alignItems: "center",
            transition: "width 0.3s ease",
          },
          children: e
            ? I.jsx(I.Fragment, { children: t && I.jsx(see, {}) })
            : I.jsx("button", {
                onClick: () => n(!0),
                style: {
                  padding: "10px 20px",
                  height: "fit-content",
                  background: "#1a1f35",
                  color: "white",
                  border: "none",
                  cursor: "pointer",
                  writingMode: "vertical-rl",
                  textOrientation: "mixed",
                },
                children: "Show Operations",
              }),
        }),
        I.jsx("div", {
          style: {
            flex: 1,
            height: "100%",
            overflow: "hidden",
            maxWidth: e ? "50%" : "75%",
            transition: "max-width 0.3s ease",
          },
          children: I.jsx(_$, {}),
        }),
        I.jsx("div", {
          style: {
            width: "25%",
            minWidth: "25%",
            maxWidth: "25%",
            height: "100%",
            overflowY: "auto",
            display: "flex",
            alignItems: "center",
            position: "sticky",
            top: 0,
          },
          children: I.jsx(oee, {}),
        }),
      ],
    });
  },
  lee = I7({ reducer: { NFA: n$ } });
function cee() {
  return I.jsx(GW, {
    store: lee,
    children: I.jsx("div", {
      style: { width: "100%", height: "100vh" },
      children: I.jsx(aee, {}),
    }),
  });
}
$_.createRoot(document.getElementById("root")).render(
  I.jsx(at.StrictMode, { children: I.jsx(cee, {}) })
);
